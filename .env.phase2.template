# PHASE 2 & 3 OPTIMIZATION FEATURE FLAGS - CONSOLIDATED
# Task 2.2: Reduced feature flag complexity - Copy to .env.local to enable
# Batch operations and query caching are now auto-enabled with optimized queries

# Phase 2: Query Optimization (Consolidated - includes batch operations and caching)
NEXT_PUBLIC_USE_OPTIMIZED_QUERIES=false

# Phase 3: Prefetching Feature Flags
NEXT_PUBLIC_USE_PREFETCHING=false
NEXT_PUBLIC_PREFETCH_RATE_LIMIT=15
NEXT_PUBLIC_PREFETCH_CACHE_TTL=300000
NEXT_PUBLIC_ENABLE_BEHAVIOR_PREDICTION=true

# Development Testing
NEXT_PUBLIC_ENABLE_PHASE2_TESTING=false
NEXT_PUBLIC_ENABLE_PHASE3_TESTING=false
NEXT_PUBLIC_LOG_QUERY_PERFORMANCE=false
NEXT_PUBLIC_LOG_PREFETCH_PERFORMANCE=false

# Safety Settings (recommended during rollout)
NEXT_PUBLIC_OPTIMIZATION_FALLBACK_ENABLED=true
NEXT_PUBLIC_MAX_QUERY_TIMEOUT=5000
NEXT_PUBLIC_CACHE_TTL=300000
NEXT_PUBLIC_PREFETCH_TIMEOUT=3000

# Performance Monitoring
NEXT_PUBLIC_TRACK_OPTIMIZATION_METRICS=true
NEXT_PUBLIC_TRACK_PREFETCH_METRICS=true
NEXT_PUBLIC_ALERT_ON_SLOW_QUERIES=true

# CONSOLIDATED PHASE 2 & 3 ROLLOUT INSTRUCTIONS:

# Phase 2 (Query Optimization) - SIMPLIFIED:
# 1. Enable: NEXT_PUBLIC_USE_OPTIMIZED_QUERIES=true
#    This automatically enables batch operations and query caching
# 2. Monitor performance with /api/phase2-optimization-test
# 3. No need to manage separate batch/caching flags

# Phase 3 (Prefetching):
# 1. After Phase 2 is stable, enable: NEXT_PUBLIC_USE_PREFETCHING=true
# 2. Monitor with /api/phase3-prefetch-test
# 3. Adjust NEXT_PUBLIC_PREFETCH_RATE_LIMIT if needed (10-20 requests/min)

# Rollback Plan:
# Set NEXT_PUBLIC_USE_OPTIMIZED_QUERIES=false and NEXT_PUBLIC_USE_PREFETCHING=false
# to immediately rollback to baseline implementation

# Benefits of Consolidation:
# - Reduced maintenance burden (2 main flags vs 6+ flags)
# - Simplified rollout process
# - Automatic feature cohesion (batch ops + caching work together)
# - Cleaner configuration management