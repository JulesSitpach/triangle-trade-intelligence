# PHASE 2 & 3 OPTIMIZATION FEATURE FLAGS
# Copy these to your .env.local to enable optimizations

# Phase 2: Query Optimization Feature Flags
NEXT_PUBLIC_USE_OPTIMIZED_QUERIES=false
NEXT_PUBLIC_USE_BATCH_OPERATIONS=false  
NEXT_PUBLIC_USE_QUERY_CACHING=false

# Phase 3: Prefetching Feature Flags
NEXT_PUBLIC_USE_PREFETCHING=false
NEXT_PUBLIC_PREFETCH_RATE_LIMIT=15
NEXT_PUBLIC_PREFETCH_CACHE_TTL=300000
NEXT_PUBLIC_ENABLE_BEHAVIOR_PREDICTION=true

# Development Testing
NEXT_PUBLIC_ENABLE_PHASE2_TESTING=false
NEXT_PUBLIC_ENABLE_PHASE3_TESTING=false
NEXT_PUBLIC_LOG_QUERY_PERFORMANCE=false
NEXT_PUBLIC_LOG_PREFETCH_PERFORMANCE=false

# Safety Settings (recommended during rollout)
NEXT_PUBLIC_OPTIMIZATION_FALLBACK_ENABLED=true
NEXT_PUBLIC_MAX_QUERY_TIMEOUT=5000
NEXT_PUBLIC_CACHE_TTL=300000
NEXT_PUBLIC_PREFETCH_TIMEOUT=3000

# Performance Monitoring
NEXT_PUBLIC_TRACK_OPTIMIZATION_METRICS=true
NEXT_PUBLIC_TRACK_PREFETCH_METRICS=true
NEXT_PUBLIC_ALERT_ON_SLOW_QUERIES=true

# PHASE 2 & 3 ROLLOUT INSTRUCTIONS:

# Phase 2 (Query Optimization):
# 1. First enable: NEXT_PUBLIC_USE_QUERY_CACHING=true
# 2. Test and verify, then enable: NEXT_PUBLIC_USE_BATCH_OPERATIONS=true  
# 3. Finally enable: NEXT_PUBLIC_USE_OPTIMIZED_QUERIES=true
# 4. Monitor performance with /api/phase2-optimization-test

# Phase 3 (Prefetching):
# 1. After Phase 2 is stable, enable: NEXT_PUBLIC_USE_PREFETCHING=true
# 2. Monitor with /api/phase3-prefetch-test
# 3. Adjust NEXT_PUBLIC_PREFETCH_RATE_LIMIT if needed (10-20 requests/min)

# Rollback Plan:
# Set all flags to 'false' to immediately rollback to Phase 1 implementation