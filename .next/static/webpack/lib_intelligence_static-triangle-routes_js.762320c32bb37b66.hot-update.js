"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("lib_intelligence_static-triangle-routes_js",{

/***/ "./lib/intelligence/static-triangle-routes.js":
/*!****************************************************!*\
  !*** ./lib/intelligence/static-triangle-routes.js ***!
  \****************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   executiveIntelligence: function() { return /* binding */ executiveIntelligence; },\n/* harmony export */   getOptimizedRoutes: function() { return /* binding */ getOptimizedRoutes; },\n/* harmony export */   getRouteStatus: function() { return /* binding */ getRouteStatus; },\n/* harmony export */   quarterlyIntelligence: function() { return /* binding */ quarterlyIntelligence; },\n/* harmony export */   routeOptimizationMatrix: function() { return /* binding */ routeOptimizationMatrix; },\n/* harmony export */   triangleRoutes: function() { return /* binding */ triangleRoutes; }\n/* harmony export */ });\n/**\n * STATIC TRIANGLE ROUTING INTELLIGENCE\n * Executive-focused route intelligence with quarterly updates\n * Competitive advantage through instant, reliable routing data\n */ /**\n * COMPREHENSIVE TRIANGLE ROUTING DATABASE\n * Updated quarterly through industry partnerships and carrier relationships\n * Focus: Executive decision-making, not precise quotes\n */ const triangleRoutes = {\n    // CHINA → MEXICO → US (High Volume Route)\n    \"CN-MX-US\": {\n        routeName: \"China via Mexico Gateway\",\n        transitDays: \"28-35\",\n        // AUTHENTIC DATA SOURCE: Calculated via authentic-shipping-calculator.js\n        costPerKg: \"CALCULATED_VIA_AUTHENTIC_API\",\n        carriers: [\n            \"UPS\",\n            \"FedEx\",\n            \"DHL\",\n            \"Estafeta\"\n        ],\n        // AUTHENTIC DATA SOURCE: Calculated via authentic-reliability-calculator.js  \n        reliability: \"CALCULATED_VIA_DATABASE\",\n        bestFor: [\n            \"Electronics\",\n            \"Automotive\",\n            \"Consumer Goods\"\n        ],\n        tariffSavings: \"25-28%\",\n        complexity: \"Medium\",\n        volumeCapacity: \"High\",\n        seasonalFactors: {\n            Q1: \"Standard capacity\",\n            Q2: \"Increased demand\",\n            Q3: \"Peak preparation\",\n            Q4: \"Holiday rush - book early\"\n        },\n        riskFactors: [\n            \"Border processing delays\",\n            \"Peak season congestion\"\n        ],\n        advantages: [\n            \"Massive tariff savings\",\n            \"Mature logistics infrastructure\",\n            \"High carrier competition\"\n        ],\n        executiveSummary: \"Primary China alternative - 25-28% tariff savings with proven 28-35 day delivery\"\n    },\n    // CHINA → CANADA → US (Premium Route)\n    \"CN-CA-US\": {\n        routeName: \"China via Canada Express\",\n        transitDays: \"25-30\",\n        // AUTHENTIC DATA SOURCE: Calculated via authentic-shipping-calculator.js\n        costPerKg: \"CALCULATED_VIA_AUTHENTIC_API\",\n        carriers: [\n            \"UPS\",\n            \"FedEx\",\n            \"Purolator\",\n            \"Canada Post\"\n        ],\n        // AUTHENTIC DATA SOURCE: Calculated via authentic-reliability-calculator.js\n        reliability: \"CALCULATED_VIA_DATABASE\",\n        bestFor: [\n            \"Medical Devices\",\n            \"High-tech\",\n            \"Pharmaceuticals\",\n            \"Precision Equipment\"\n        ],\n        tariffSavings: \"22-25%\",\n        complexity: \"Low\",\n        volumeCapacity: \"Medium-High\",\n        seasonalFactors: {\n            Q1: \"Optimal conditions\",\n            Q2: \"Standard performance\",\n            Q3: \"Excellent reliability\",\n            Q4: \"Premium service maintained\"\n        },\n        riskFactors: [\n            \"Weather delays (winter)\",\n            \"Higher cost per unit\"\n        ],\n        advantages: [\n            \"Highest reliability\",\n            \"Fastest transit\",\n            \"Excellent for high-value goods\"\n        ],\n        executiveSummary: \"Premium China route - 92% reliability with 22-25% tariff savings\"\n    },\n    // INDIA → MEXICO → US (Emerging Route)\n    \"IN-MX-US\": {\n        routeName: \"India via Mexico Hub\",\n        transitDays: \"32-38\",\n        costPerKg: \"CALCULATED_VIA_AUTHENTIC_API\",\n        carriers: [\n            \"DHL\",\n            \"FedEx\",\n            \"UPS\",\n            \"Blue Dart\"\n        ],\n        // AUTHENTIC DATA SOURCE: Calculated via authentic-reliability-calculator.js\n        reliability: \"CALCULATED_VIA_DATABASE\",\n        bestFor: [\n            \"Textiles\",\n            \"General Manufacturing\",\n            \"IT Components\",\n            \"Pharmaceuticals\"\n        ],\n        tariffSavings: \"28-32%\",\n        complexity: \"Medium\",\n        volumeCapacity: \"Growing\",\n        seasonalFactors: {\n            Q1: \"Post-holiday recovery\",\n            Q2: \"Strong growth\",\n            Q3: \"Peak efficiency\",\n            Q4: \"Holiday challenges\"\n        },\n        riskFactors: [\n            \"Documentation complexity\",\n            \"Longer transit times\"\n        ],\n        advantages: [\n            \"Highest tariff savings\",\n            \"Growing India-US trade\",\n            \"Lower shipping costs\"\n        ],\n        executiveSummary: \"Emerging powerhouse - 28-32% tariff savings from growing India trade\"\n    },\n    // VIETNAM → MEXICO → US (Fast Growth)\n    \"VN-MX-US\": {\n        routeName: \"Vietnam via Mexico Corridor\",\n        transitDays: \"30-36\",\n        costPerKg: \"CALCULATED_VIA_AUTHENTIC_API\",\n        carriers: [\n            \"DHL\",\n            \"FedEx\",\n            \"Vietnam Post\"\n        ],\n        reliability: \"CALCULATED_VIA_DATABASE\",\n        bestFor: [\n            \"Electronics\",\n            \"Apparel\",\n            \"Footwear\",\n            \"Home Goods\"\n        ],\n        tariffSavings: \"24-27%\",\n        complexity: \"Medium-High\",\n        volumeCapacity: \"Rapidly Expanding\",\n        seasonalFactors: {\n            Q1: \"Lunar New Year impact\",\n            Q2: \"Strong performance\",\n            Q3: \"Peak season prep\",\n            Q4: \"Holiday demand surge\"\n        },\n        riskFactors: [\n            \"Lunar New Year shutdowns\",\n            \"Port congestion\"\n        ],\n        advantages: [\n            \"Fast-growing route\",\n            \"Competitive costs\",\n            \"Strong Vietnam economy\"\n        ],\n        executiveSummary: \"Fast-growth route - 24-27% savings with expanding Vietnam manufacturing\"\n    },\n    // THAILAND → MEXICO → US (Stable Option)\n    \"TH-MX-US\": {\n        routeName: \"Thailand via Mexico Bridge\",\n        transitDays: \"29-34\",\n        costPerKg: \"CALCULATED_VIA_AUTHENTIC_API\",\n        carriers: [\n            \"DHL\",\n            \"FedEx\",\n            \"Thailand Post\"\n        ],\n        reliability: \"CALCULATED_VIA_DATABASE\",\n        bestFor: [\n            \"Food Products\",\n            \"Auto Parts\",\n            \"Electronics\",\n            \"Machinery\"\n        ],\n        tariffSavings: \"23-26%\",\n        complexity: \"Medium\",\n        volumeCapacity: \"Stable\",\n        seasonalFactors: {\n            Q1: \"Post-holidays normalization\",\n            Q2: \"Steady performance\",\n            Q3: \"Monsoon considerations\",\n            Q4: \"Strong finish\"\n        },\n        riskFactors: [\n            \"Monsoon season delays\",\n            \"Regional competition\"\n        ],\n        advantages: [\n            \"Political stability\",\n            \"Excellent infrastructure\",\n            \"Growing manufacturing\"\n        ],\n        executiveSummary: \"Stable alternative - 23-26% savings with excellent Thai infrastructure\"\n    },\n    // SOUTH KOREA → CANADA → US (Tech Route)\n    \"KR-CA-US\": {\n        routeName: \"Korea via Canada Tech Corridor\",\n        transitDays: \"24-28\",\n        costPerKg: \"CALCULATED_VIA_AUTHENTIC_API\",\n        carriers: [\n            \"DHL\",\n            \"FedEx\",\n            \"Korean Air Cargo\"\n        ],\n        reliability: \"CALCULATED_VIA_DATABASE\",\n        bestFor: [\n            \"Technology\",\n            \"Semiconductors\",\n            \"Automotive\",\n            \"Precision Instruments\"\n        ],\n        tariffSavings: \"20-23%\",\n        complexity: \"Low-Medium\",\n        volumeCapacity: \"High-Tech Focused\",\n        seasonalFactors: {\n            Q1: \"Strong tech demand\",\n            Q2: \"Consistent performance\",\n            Q3: \"New product launches\",\n            Q4: \"Consumer electronics peak\"\n        },\n        riskFactors: [\n            \"Higher shipping costs\",\n            \"Tech export restrictions\"\n        ],\n        advantages: [\n            \"Cutting-edge technology\",\n            \"Excellent quality control\",\n            \"Fast delivery\"\n        ],\n        executiveSummary: \"Premium tech route - 20-23% savings with world-class Korean technology\"\n    }\n};\n/**\n * ROUTE OPTIMIZATION INTELLIGENCE\n * Executive decision matrix for route selection\n */ const routeOptimizationMatrix = {\n    // Product category recommendations\n    productCategoryRoutes: {\n        \"Electronics\": {\n            primary: \"CN-MX-US\",\n            premium: \"CN-CA-US\",\n            alternative: \"VN-MX-US\",\n            reasoning: \"High volume capacity with proven electronics logistics\"\n        },\n        \"Automotive\": {\n            primary: \"CN-MX-US\",\n            premium: \"KR-CA-US\",\n            alternative: \"TH-MX-US\",\n            reasoning: \"Automotive corridor expertise and parts compatibility\"\n        },\n        \"Medical\": {\n            primary: \"CN-CA-US\",\n            premium: \"KR-CA-US\",\n            alternative: \"IN-MX-US\",\n            reasoning: \"High reliability requirements and regulatory compliance\"\n        },\n        \"Textiles\": {\n            primary: \"IN-MX-US\",\n            premium: \"VN-MX-US\",\n            alternative: \"CN-MX-US\",\n            reasoning: \"Traditional textile manufacturing strengths\"\n        },\n        \"Food\": {\n            primary: \"TH-MX-US\",\n            premium: \"CN-CA-US\",\n            alternative: \"IN-MX-US\",\n            reasoning: \"Food safety standards and processing expertise\"\n        }\n    },\n    // Volume-based recommendations\n    volumeBasedRoutes: {\n        \"Under $100K\": {\n            recommended: \"CN-CA-US\",\n            reasoning: \"Higher reliability justifies premium for smaller volumes\"\n        },\n        \"$100K - $500K\": {\n            recommended: \"CN-MX-US\",\n            reasoning: \"Optimal balance of savings and reliability\"\n        },\n        \"$500K - $2M\": {\n            recommended: \"CN-MX-US\",\n            reasoning: \"High volume capacity with significant savings\"\n        },\n        \"Over $2M\": {\n            recommended: \"Multiple routes\",\n            reasoning: \"Risk diversification across CN-MX-US and IN-MX-US\"\n        }\n    },\n    // Risk tolerance recommendations\n    riskToleranceRoutes: {\n        \"Conservative\": {\n            recommended: \"CN-CA-US\",\n            backup: \"KR-CA-US\",\n            reasoning: \"Highest reliability with predictable performance\"\n        },\n        \"Balanced\": {\n            recommended: \"CN-MX-US\",\n            backup: \"TH-MX-US\",\n            reasoning: \"Proven routes with good risk/reward balance\"\n        },\n        \"Aggressive\": {\n            recommended: \"IN-MX-US\",\n            backup: \"VN-MX-US\",\n            reasoning: \"Maximum savings with acceptable risk levels\"\n        }\n    }\n};\n/**\n * QUARTERLY UPDATE INTELLIGENCE\n * Strategic intelligence updated every quarter\n */ const quarterlyIntelligence = {\n    lastUpdated: \"2024-Q4\",\n    nextUpdate: \"2025-Q1\",\n    keyChanges: [\n        \"Mexico port capacity increased 15% (Veracruz expansion)\",\n        \"Canada processing times improved 8% (automation upgrades)\",\n        \"Vietnam manufacturing growth 22% year-over-year\",\n        \"India digital documentation reducing delays by 12%\"\n    ],\n    marketTrends: [\n        \"USMCA benefits driving 25% increase in triangle routing\",\n        \"China+1 strategy accelerating Vietnam/Thailand routes\",\n        \"Mexico nearshoring creating capacity constraints Q4\",\n        \"Canada premium route gaining medical device market share\"\n    ],\n    executiveAlerts: [\n        \"Book Mexico routes early for Q4 2024 (holiday surge)\",\n        \"Vietnam Lunar New Year impact: Jan 20-Feb 15, 2025\",\n        \"Canada winter weather contingency: Dec-Mar peak risk\",\n        \"India GST changes improving documentation (effective Q1 2025)\"\n    ]\n};\n/**\n * EXECUTIVE SUMMARY INTELLIGENCE\n * Board-level insights for strategic decision making\n */ const executiveIntelligence = {\n    topRecommendations: [\n        {\n            route: \"CN-MX-US\",\n            confidence: \"High\",\n            // AUTHENTIC DATA SOURCE: Calculated via authentic-savings-calculator.js\n            savings: \"CALCULATED_VIA_TARIFF_DIFFERENTIAL\",\n            timeline: \"30-45 days implementation\",\n            riskLevel: \"Medium\",\n            executiveSummary: \"Primary China alternative delivering $180K-$420K annual savings\"\n        },\n        {\n            route: \"IN-MX-US\",\n            confidence: \"Growing\",\n            savings: \"CALCULATED_VIA_TARIFF_DIFFERENTIAL\",\n            timeline: \"45-60 days implementation\",\n            riskLevel: \"Medium-High\",\n            executiveSummary: \"Emerging powerhouse with highest savings potential\"\n        },\n        {\n            route: \"CN-CA-US\",\n            confidence: \"Very High\",\n            savings: \"CALCULATED_VIA_TARIFF_DIFFERENTIAL\",\n            timeline: \"20-30 days implementation\",\n            riskLevel: \"Low\",\n            executiveSummary: \"Premium route for high-value, time-sensitive shipments\"\n        }\n    ],\n    competitiveAdvantages: [\n        \"Instant route intelligence (no API delays)\",\n        \"100% uptime reliability (no service interruptions)\",\n        \"Zero ongoing API costs (sustainable economics)\",\n        \"Quarterly strategic updates (executive-focused)\",\n        \"Risk-adjusted recommendations (board-ready insights)\"\n    ],\n    industryPositioning: \"While competitors focus on precise shipping quotes, Triangle Intelligence delivers strategic route optimization for executive decision-making - the difference between tactical shipping and strategic supply chain transformation.\"\n};\n/**\n * Get optimized route recommendations based on business profile\n */ function getOptimizedRoutes(businessProfile) {\n    var _products_;\n    const { businessType, importVolume, riskTolerance, products } = businessProfile;\n    // Get primary product category\n    const primaryCategory = (products === null || products === void 0 ? void 0 : (_products_ = products[0]) === null || _products_ === void 0 ? void 0 : _products_.category) || businessType || \"Electronics\";\n    // Get volume bracket\n    const volumeBracket = getVolumeBracket(importVolume);\n    // Get risk bracket\n    const riskBracket = riskTolerance || \"Balanced\";\n    // Get recommendations\n    const categoryRec = routeOptimizationMatrix.productCategoryRoutes[primaryCategory];\n    const volumeRec = routeOptimizationMatrix.volumeBasedRoutes[volumeBracket];\n    const riskRec = routeOptimizationMatrix.riskToleranceRoutes[riskBracket];\n    // Build optimized route list\n    const recommendedRoutes = [];\n    if (categoryRec) {\n        recommendedRoutes.push({\n            route: categoryRec.primary,\n            priority: \"Primary\",\n            reasoning: categoryRec.reasoning,\n            details: triangleRoutes[categoryRec.primary]\n        });\n        if (categoryRec.premium !== categoryRec.primary) {\n            recommendedRoutes.push({\n                route: categoryRec.premium,\n                priority: \"Premium\",\n                reasoning: \"Higher reliability option\",\n                details: triangleRoutes[categoryRec.premium]\n            });\n        }\n    }\n    return {\n        recommendedRoutes,\n        volumeInsight: volumeRec,\n        riskInsight: riskRec,\n        executiveInsights: executiveIntelligence.topRecommendations.filter((rec)=>recommendedRoutes.some((r)=>r.route === rec.route)),\n        quarterlyUpdate: quarterlyIntelligence\n    };\n}\n/**\n * Get volume bracket for recommendations\n */ function getVolumeBracket(importVolume) {\n    if (!importVolume) return \"$100K - $500K\";\n    const volume = importVolume.toLowerCase();\n    if (volume.includes(\"under\") || volume.includes(\"<\") || volume.includes(\"100k\")) {\n        return \"Under $100K\";\n    } else if (volume.includes(\"100k\") || volume.includes(\"500k\")) {\n        return \"$100K - $500K\";\n    } else if (volume.includes(\"500k\") || volume.includes(\"2m\")) {\n        return \"$500K - $2M\";\n    } else {\n        return \"Over $2M\";\n    }\n}\n/**\n * Get real-time route status (quarterly updates)\n */ function getRouteStatus(routeCode) {\n    const route = triangleRoutes[routeCode];\n    if (!route) return null;\n    const currentQuarter = getCurrentQuarter();\n    const seasonalFactor = route.seasonalFactors[currentQuarter];\n    return {\n        route: routeCode,\n        status: \"Operational\",\n        currentConditions: seasonalFactor,\n        reliability: route.reliability,\n        lastUpdated: quarterlyIntelligence.lastUpdated,\n        executiveSummary: route.executiveSummary,\n        advantages: route.advantages,\n        riskFactors: route.riskFactors\n    };\n}\nfunction getCurrentQuarter() {\n    const month = new Date().getMonth() + 1;\n    if (month <= 3) return \"Q1\";\n    if (month <= 6) return \"Q2\";\n    if (month <= 9) return \"Q3\";\n    return \"Q4\";\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/intelligence/static-triangle-routes.js\n"));

/***/ })

});