/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/_app"],{

/***/ "./node_modules/@supabase/auth-js/dist/module/AuthAdminApi.js":
/*!********************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/AuthAdminApi.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _GoTrueAdminApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GoTrueAdminApi */ \"./node_modules/@supabase/auth-js/dist/module/GoTrueAdminApi.js\");\n\nconst AuthAdminApi = _GoTrueAdminApi__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n/* harmony default export */ __webpack_exports__[\"default\"] = (AuthAdminApi);\n//# sourceMappingURL=AuthAdminApi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2F1dGgtanMvZGlzdC9tb2R1bGUvQXV0aEFkbWluQXBpLmpzIiwibWFwcGluZ3MiOiI7O0FBQThDO0FBQzlDLHFCQUFxQix1REFBYztBQUNuQywrREFBZSxZQUFZLEVBQUM7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9hdXRoLWpzL2Rpc3QvbW9kdWxlL0F1dGhBZG1pbkFwaS5qcz8yMDYxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBHb1RydWVBZG1pbkFwaSBmcm9tICcuL0dvVHJ1ZUFkbWluQXBpJztcbmNvbnN0IEF1dGhBZG1pbkFwaSA9IEdvVHJ1ZUFkbWluQXBpO1xuZXhwb3J0IGRlZmF1bHQgQXV0aEFkbWluQXBpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QXV0aEFkbWluQXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@supabase/auth-js/dist/module/AuthAdminApi.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/auth-js/dist/module/AuthClient.js":
/*!******************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/AuthClient.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _GoTrueClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GoTrueClient */ \"./node_modules/@supabase/auth-js/dist/module/GoTrueClient.js\");\n\nconst AuthClient = _GoTrueClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n/* harmony default export */ __webpack_exports__[\"default\"] = (AuthClient);\n//# sourceMappingURL=AuthClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2F1dGgtanMvZGlzdC9tb2R1bGUvQXV0aENsaWVudC5qcyIsIm1hcHBpbmdzIjoiOztBQUEwQztBQUMxQyxtQkFBbUIscURBQVk7QUFDL0IsK0RBQWUsVUFBVSxFQUFDO0FBQzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9BdXRoQ2xpZW50LmpzPzRmOGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdvVHJ1ZUNsaWVudCBmcm9tICcuL0dvVHJ1ZUNsaWVudCc7XG5jb25zdCBBdXRoQ2xpZW50ID0gR29UcnVlQ2xpZW50O1xuZXhwb3J0IGRlZmF1bHQgQXV0aENsaWVudDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUF1dGhDbGllbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@supabase/auth-js/dist/module/AuthClient.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/auth-js/dist/module/GoTrueAdminApi.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/GoTrueAdminApi.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ GoTrueAdminApi; }\n/* harmony export */ });\n/* harmony import */ var _lib_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/fetch */ \"./node_modules/@supabase/auth-js/dist/module/lib/fetch.js\");\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/helpers */ \"./node_modules/@supabase/auth-js/dist/module/lib/helpers.js\");\n/* harmony import */ var _lib_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/types */ \"./node_modules/@supabase/auth-js/dist/module/lib/types.js\");\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/errors */ \"./node_modules/@supabase/auth-js/dist/module/lib/errors.js\");\nvar __rest = (undefined && undefined.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n\n\n\n\nclass GoTrueAdminApi {\n    constructor({ url = '', headers = {}, fetch, }) {\n        this.url = url;\n        this.headers = headers;\n        this.fetch = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.resolveFetch)(fetch);\n        this.mfa = {\n            listFactors: this._listFactors.bind(this),\n            deleteFactor: this._deleteFactor.bind(this),\n        };\n    }\n    /**\n     * Removes a logged-in session.\n     * @param jwt A valid, logged-in JWT.\n     * @param scope The logout sope.\n     */\n    async signOut(jwt, scope = _lib_types__WEBPACK_IMPORTED_MODULE_2__.SIGN_OUT_SCOPES[0]) {\n        if (_lib_types__WEBPACK_IMPORTED_MODULE_2__.SIGN_OUT_SCOPES.indexOf(scope) < 0) {\n            throw new Error(`@supabase/auth-js: Parameter scope must be one of ${_lib_types__WEBPACK_IMPORTED_MODULE_2__.SIGN_OUT_SCOPES.join(', ')}`);\n        }\n        try {\n            await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'POST', `${this.url}/logout?scope=${scope}`, {\n                headers: this.headers,\n                jwt,\n                noResolveJson: true,\n            });\n            return { data: null, error: null };\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isAuthError)(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param options Additional options to be included when inviting.\n     */\n    async inviteUserByEmail(email, options = {}) {\n        try {\n            return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'POST', `${this.url}/invite`, {\n                body: { email, data: options.data },\n                headers: this.headers,\n                redirectTo: options.redirectTo,\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._userResponse,\n            });\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isAuthError)(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Generates email links and OTPs to be sent via a custom email provider.\n     * @param email The user's email.\n     * @param options.password User password. For signup only.\n     * @param options.data Optional user metadata. For signup only.\n     * @param options.redirectTo The redirect url which should be appended to the generated link\n     */\n    async generateLink(params) {\n        try {\n            const { options } = params, rest = __rest(params, [\"options\"]);\n            const body = Object.assign(Object.assign({}, rest), options);\n            if ('newEmail' in rest) {\n                // replace newEmail with new_email in request body\n                body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;\n                delete body['newEmail'];\n            }\n            return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\n                body: body,\n                headers: this.headers,\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._generateLinkResponse,\n                redirectTo: options === null || options === void 0 ? void 0 : options.redirectTo,\n            });\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isAuthError)(error)) {\n                return {\n                    data: {\n                        properties: null,\n                        user: null,\n                    },\n                    error,\n                };\n            }\n            throw error;\n        }\n    }\n    // User Admin API\n    /**\n     * Creates a new user.\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async createUser(attributes) {\n        try {\n            return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'POST', `${this.url}/admin/users`, {\n                body: attributes,\n                headers: this.headers,\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._userResponse,\n            });\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isAuthError)(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Get a list of users.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n     */\n    async listUsers(params) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        try {\n            const pagination = { nextPage: null, lastPage: 0, total: 0 };\n            const response = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'GET', `${this.url}/admin/users`, {\n                headers: this.headers,\n                noResolveJson: true,\n                query: {\n                    page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '',\n                    per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : '',\n                },\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._noResolveJsonResponse,\n            });\n            if (response.error)\n                throw response.error;\n            const users = await response.json();\n            const total = (_e = response.headers.get('x-total-count')) !== null && _e !== void 0 ? _e : 0;\n            const links = (_g = (_f = response.headers.get('link')) === null || _f === void 0 ? void 0 : _f.split(',')) !== null && _g !== void 0 ? _g : [];\n            if (links.length > 0) {\n                links.forEach((link) => {\n                    const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1));\n                    const rel = JSON.parse(link.split(';')[1].split('=')[1]);\n                    pagination[`${rel}Page`] = page;\n                });\n                pagination.total = parseInt(total);\n            }\n            return { data: Object.assign(Object.assign({}, users), pagination), error: null };\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isAuthError)(error)) {\n                return { data: { users: [] }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Get user by id.\n     *\n     * @param uid The user's unique identifier\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async getUserById(uid) {\n        (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.validateUUID)(uid);\n        try {\n            return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\n                headers: this.headers,\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._userResponse,\n            });\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isAuthError)(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Updates the user data.\n     *\n     * @param attributes The data you want to update.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async updateUserById(uid, attributes) {\n        (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.validateUUID)(uid);\n        try {\n            return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\n                body: attributes,\n                headers: this.headers,\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._userResponse,\n            });\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isAuthError)(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Delete a user. Requires a `service_role` key.\n     *\n     * @param id The user id you want to remove.\n     * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema. Soft deletion allows user identification from the hashed user ID but is not reversible.\n     * Defaults to false for backward compatibility.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async deleteUser(id, shouldSoftDelete = false) {\n        (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.validateUUID)(id);\n        try {\n            return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\n                headers: this.headers,\n                body: {\n                    should_soft_delete: shouldSoftDelete,\n                },\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._userResponse,\n            });\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isAuthError)(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    async _listFactors(params) {\n        (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.validateUUID)(params.userId);\n        try {\n            const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'GET', `${this.url}/admin/users/${params.userId}/factors`, {\n                headers: this.headers,\n                xform: (factors) => {\n                    return { data: { factors }, error: null };\n                },\n            });\n            return { data, error };\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isAuthError)(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    async _deleteFactor(params) {\n        (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.validateUUID)(params.userId);\n        (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.validateUUID)(params.id);\n        try {\n            const data = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, 'DELETE', `${this.url}/admin/users/${params.userId}/factors/${params.id}`, {\n                headers: this.headers,\n            });\n            return { data, error: null };\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isAuthError)(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n}\n//# sourceMappingURL=GoTrueAdminApi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/auth-js/dist/module/GoTrueAdminApi.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/auth-js/dist/module/GoTrueClient.js":
/*!********************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/GoTrueClient.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ GoTrueClient; }\n/* harmony export */ });\n/* harmony import */ var _GoTrueAdminApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GoTrueAdminApi */ \"./node_modules/@supabase/auth-js/dist/module/GoTrueAdminApi.js\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/constants */ \"./node_modules/@supabase/auth-js/dist/module/lib/constants.js\");\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/errors */ \"./node_modules/@supabase/auth-js/dist/module/lib/errors.js\");\n/* harmony import */ var _lib_fetch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/fetch */ \"./node_modules/@supabase/auth-js/dist/module/lib/fetch.js\");\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/helpers */ \"./node_modules/@supabase/auth-js/dist/module/lib/helpers.js\");\n/* harmony import */ var _lib_local_storage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/local-storage */ \"./node_modules/@supabase/auth-js/dist/module/lib/local-storage.js\");\n/* harmony import */ var _lib_polyfills__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lib/polyfills */ \"./node_modules/@supabase/auth-js/dist/module/lib/polyfills.js\");\n/* harmony import */ var _lib_version__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./lib/version */ \"./node_modules/@supabase/auth-js/dist/module/lib/version.js\");\n/* harmony import */ var _lib_locks__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./lib/locks */ \"./node_modules/@supabase/auth-js/dist/module/lib/locks.js\");\n/* harmony import */ var _lib_base64url__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./lib/base64url */ \"./node_modules/@supabase/auth-js/dist/module/lib/base64url.js\");\n\n\n\n\n\n\n\n\n\n\n\n(0,_lib_polyfills__WEBPACK_IMPORTED_MODULE_6__.polyfillGlobalThis)(); // Make \"globalThis\" available\nconst DEFAULT_OPTIONS = {\n    url: _lib_constants__WEBPACK_IMPORTED_MODULE_1__.GOTRUE_URL,\n    storageKey: _lib_constants__WEBPACK_IMPORTED_MODULE_1__.STORAGE_KEY,\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    headers: _lib_constants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_HEADERS,\n    flowType: 'implicit',\n    debug: false,\n    hasCustomAuthorizationHeader: false,\n};\nasync function lockNoOp(name, acquireTimeout, fn) {\n    return await fn();\n}\n/**\n * Caches JWKS values for all clients created in the same environment. This is\n * especially useful for shared-memory execution environments such as Vercel's\n * Fluid Compute, AWS Lambda or Supabase's Edge Functions. Regardless of how\n * many clients are created, if they share the same storage key they will use\n * the same JWKS cache, significantly speeding up getClaims() with asymmetric\n * JWTs.\n */\nconst GLOBAL_JWKS = {};\nclass GoTrueClient {\n    /**\n     * Create a new client for use in the browser.\n     */\n    constructor(options) {\n        var _a, _b;\n        /**\n         * @experimental\n         */\n        this.userStorage = null;\n        this.memoryStorage = null;\n        this.stateChangeEmitters = new Map();\n        this.autoRefreshTicker = null;\n        this.visibilityChangedCallback = null;\n        this.refreshingDeferred = null;\n        /**\n         * Keeps track of the async client initialization.\n         * When null or not yet resolved the auth state is `unknown`\n         * Once resolved the the auth state is known and it's save to call any further client methods.\n         * Keep extra care to never reject or throw uncaught errors\n         */\n        this.initializePromise = null;\n        this.detectSessionInUrl = true;\n        this.hasCustomAuthorizationHeader = false;\n        this.suppressGetSessionWarning = false;\n        this.lockAcquired = false;\n        this.pendingInLock = [];\n        /**\n         * Used to broadcast state change events to other tabs listening.\n         */\n        this.broadcastChannel = null;\n        this.logger = console.log;\n        this.instanceID = GoTrueClient.nextInstanceID;\n        GoTrueClient.nextInstanceID += 1;\n        if (this.instanceID > 0 && (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)()) {\n            console.warn('Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.');\n        }\n        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n        this.logDebugMessages = !!settings.debug;\n        if (typeof settings.debug === 'function') {\n            this.logger = settings.debug;\n        }\n        this.persistSession = settings.persistSession;\n        this.storageKey = settings.storageKey;\n        this.autoRefreshToken = settings.autoRefreshToken;\n        this.admin = new _GoTrueAdminApi__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n            url: settings.url,\n            headers: settings.headers,\n            fetch: settings.fetch,\n        });\n        this.url = settings.url;\n        this.headers = settings.headers;\n        this.fetch = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.resolveFetch)(settings.fetch);\n        this.lock = settings.lock || lockNoOp;\n        this.detectSessionInUrl = settings.detectSessionInUrl;\n        this.flowType = settings.flowType;\n        this.hasCustomAuthorizationHeader = settings.hasCustomAuthorizationHeader;\n        if (settings.lock) {\n            this.lock = settings.lock;\n        }\n        else if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() && ((_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.navigator) === null || _a === void 0 ? void 0 : _a.locks)) {\n            this.lock = _lib_locks__WEBPACK_IMPORTED_MODULE_8__.navigatorLock;\n        }\n        else {\n            this.lock = lockNoOp;\n        }\n        if (!this.jwks) {\n            this.jwks = { keys: [] };\n            this.jwks_cached_at = Number.MIN_SAFE_INTEGER;\n        }\n        this.mfa = {\n            verify: this._verify.bind(this),\n            enroll: this._enroll.bind(this),\n            unenroll: this._unenroll.bind(this),\n            challenge: this._challenge.bind(this),\n            listFactors: this._listFactors.bind(this),\n            challengeAndVerify: this._challengeAndVerify.bind(this),\n            getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this),\n        };\n        if (this.persistSession) {\n            if (settings.storage) {\n                this.storage = settings.storage;\n            }\n            else {\n                if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.supportsLocalStorage)()) {\n                    this.storage = globalThis.localStorage;\n                }\n                else {\n                    this.memoryStorage = {};\n                    this.storage = (0,_lib_local_storage__WEBPACK_IMPORTED_MODULE_5__.memoryLocalStorageAdapter)(this.memoryStorage);\n                }\n            }\n            if (settings.userStorage) {\n                this.userStorage = settings.userStorage;\n            }\n        }\n        else {\n            this.memoryStorage = {};\n            this.storage = (0,_lib_local_storage__WEBPACK_IMPORTED_MODULE_5__.memoryLocalStorageAdapter)(this.memoryStorage);\n        }\n        if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\n            try {\n                this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey);\n            }\n            catch (e) {\n                console.error('Failed to create a new BroadcastChannel, multi-tab state changes will not be available', e);\n            }\n            (_b = this.broadcastChannel) === null || _b === void 0 ? void 0 : _b.addEventListener('message', async (event) => {\n                this._debug('received broadcast notification from other tab or client', event);\n                await this._notifyAllSubscribers(event.data.event, event.data.session, false); // broadcast = false so we don't get an endless loop of messages\n            });\n        }\n        this.initialize();\n    }\n    /**\n     * The JWKS used for verifying asymmetric JWTs\n     */\n    get jwks() {\n        var _a, _b;\n        return (_b = (_a = GLOBAL_JWKS[this.storageKey]) === null || _a === void 0 ? void 0 : _a.jwks) !== null && _b !== void 0 ? _b : { keys: [] };\n    }\n    set jwks(value) {\n        GLOBAL_JWKS[this.storageKey] = Object.assign(Object.assign({}, GLOBAL_JWKS[this.storageKey]), { jwks: value });\n    }\n    get jwks_cached_at() {\n        var _a, _b;\n        return (_b = (_a = GLOBAL_JWKS[this.storageKey]) === null || _a === void 0 ? void 0 : _a.cachedAt) !== null && _b !== void 0 ? _b : Number.MIN_SAFE_INTEGER;\n    }\n    set jwks_cached_at(value) {\n        GLOBAL_JWKS[this.storageKey] = Object.assign(Object.assign({}, GLOBAL_JWKS[this.storageKey]), { cachedAt: value });\n    }\n    _debug(...args) {\n        if (this.logDebugMessages) {\n            this.logger(`GoTrueClient@${this.instanceID} (${_lib_version__WEBPACK_IMPORTED_MODULE_7__.version}) ${new Date().toISOString()}`, ...args);\n        }\n        return this;\n    }\n    /**\n     * Initializes the client session either from the url or from storage.\n     * This method is automatically called when instantiating the client, but should also be called\n     * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n     */\n    async initialize() {\n        if (this.initializePromise) {\n            return await this.initializePromise;\n        }\n        this.initializePromise = (async () => {\n            return await this._acquireLock(-1, async () => {\n                return await this._initialize();\n            });\n        })();\n        return await this.initializePromise;\n    }\n    /**\n     * IMPORTANT:\n     * 1. Never throw in this method, as it is called from the constructor\n     * 2. Never return a session from this method as it would be cached over\n     *    the whole lifetime of the client\n     */\n    async _initialize() {\n        var _a;\n        try {\n            const params = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.parseParametersFromURL)(window.location.href);\n            let callbackUrlType = 'none';\n            if (this._isImplicitGrantCallback(params)) {\n                callbackUrlType = 'implicit';\n            }\n            else if (await this._isPKCECallback(params)) {\n                callbackUrlType = 'pkce';\n            }\n            /**\n             * Attempt to get the session from the URL only if these conditions are fulfilled\n             *\n             * Note: If the URL isn't one of the callback url types (implicit or pkce),\n             * then there could be an existing session so we don't want to prematurely remove it\n             */\n            if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() && this.detectSessionInUrl && callbackUrlType !== 'none') {\n                const { data, error } = await this._getSessionFromURL(params, callbackUrlType);\n                if (error) {\n                    this._debug('#_initialize()', 'error detecting session from URL', error);\n                    if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthImplicitGrantRedirectError)(error)) {\n                        const errorCode = (_a = error.details) === null || _a === void 0 ? void 0 : _a.code;\n                        if (errorCode === 'identity_already_exists' ||\n                            errorCode === 'identity_not_found' ||\n                            errorCode === 'single_identity_not_deletable') {\n                            return { error };\n                        }\n                    }\n                    // failed login attempt via url,\n                    // remove old session as in verifyOtp, signUp and signInWith*\n                    await this._removeSession();\n                    return { error };\n                }\n                const { session, redirectType } = data;\n                this._debug('#_initialize()', 'detected session in URL', session, 'redirect type', redirectType);\n                await this._saveSession(session);\n                setTimeout(async () => {\n                    if (redirectType === 'recovery') {\n                        await this._notifyAllSubscribers('PASSWORD_RECOVERY', session);\n                    }\n                    else {\n                        await this._notifyAllSubscribers('SIGNED_IN', session);\n                    }\n                }, 0);\n                return { error: null };\n            }\n            // no login attempt via callback url try to recover session from storage\n            await this._recoverAndRefresh();\n            return { error: null };\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return { error };\n            }\n            return {\n                error: new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthUnknownError('Unexpected error during initialization', error),\n            };\n        }\n        finally {\n            await this._handleVisibilityChange();\n            this._debug('#_initialize()', 'end');\n        }\n    }\n    /**\n     * Creates a new anonymous user.\n     *\n     * @returns A session where the is_anonymous claim in the access token JWT set to true\n     */\n    async signInAnonymously(credentials) {\n        var _a, _b, _c;\n        try {\n            const res = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/signup`, {\n                headers: this.headers,\n                body: {\n                    data: (_b = (_a = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _a === void 0 ? void 0 : _a.data) !== null && _b !== void 0 ? _b : {},\n                    gotrue_meta_security: { captcha_token: (_c = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _c === void 0 ? void 0 : _c.captchaToken },\n                },\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse,\n            });\n            const { data, error } = res;\n            if (error || !data) {\n                return { data: { user: null, session: null }, error: error };\n            }\n            const session = data.session;\n            const user = data.user;\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return { data: { user, session }, error: null };\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Creates a new user.\n     *\n     * Be aware that if a user account exists in the system you may get back an\n     * error message that attempts to hide this information from the user.\n     * This method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n     *\n     * @returns A logged-in session if the server has \"autoconfirm\" ON\n     * @returns A user if the server has \"autoconfirm\" OFF\n     */\n    async signUp(credentials) {\n        var _a, _b, _c;\n        try {\n            let res;\n            if ('email' in credentials) {\n                const { email, password, options } = credentials;\n                let codeChallenge = null;\n                let codeChallengeMethod = null;\n                if (this.flowType === 'pkce') {\n                    ;\n                    [codeChallenge, codeChallengeMethod] = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n                }\n                res = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/signup`, {\n                    headers: this.headers,\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                    body: {\n                        email,\n                        password,\n                        data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        code_challenge: codeChallenge,\n                        code_challenge_method: codeChallengeMethod,\n                    },\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse,\n                });\n            }\n            else if ('phone' in credentials) {\n                const { phone, password, options } = credentials;\n                res = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/signup`, {\n                    headers: this.headers,\n                    body: {\n                        phone,\n                        password,\n                        data: (_b = options === null || options === void 0 ? void 0 : options.data) !== null && _b !== void 0 ? _b : {},\n                        channel: (_c = options === null || options === void 0 ? void 0 : options.channel) !== null && _c !== void 0 ? _c : 'sms',\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                    },\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse,\n                });\n            }\n            else {\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n            }\n            const { data, error } = res;\n            if (error || !data) {\n                return { data: { user: null, session: null }, error: error };\n            }\n            const session = data.session;\n            const user = data.user;\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return { data: { user, session }, error: null };\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Log in an existing user with an email and password or phone and password.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or that the\n     * email/phone and password combination is wrong or that the account can only\n     * be accessed via social login.\n     */\n    async signInWithPassword(credentials) {\n        try {\n            let res;\n            if ('email' in credentials) {\n                const { email, password, options } = credentials;\n                res = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                    headers: this.headers,\n                    body: {\n                        email,\n                        password,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                    },\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponsePassword,\n                });\n            }\n            else if ('phone' in credentials) {\n                const { phone, password, options } = credentials;\n                res = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                    headers: this.headers,\n                    body: {\n                        phone,\n                        password,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                    },\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponsePassword,\n                });\n            }\n            else {\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n            }\n            const { data, error } = res;\n            if (error) {\n                return { data: { user: null, session: null }, error };\n            }\n            else if (!data || !data.session || !data.user) {\n                return { data: { user: null, session: null }, error: new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidTokenResponseError() };\n            }\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return {\n                data: Object.assign({ user: data.user, session: data.session }, (data.weak_password ? { weakPassword: data.weak_password } : null)),\n                error,\n            };\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Log in an existing user via a third-party provider.\n     * This method supports the PKCE flow.\n     */\n    async signInWithOAuth(credentials) {\n        var _a, _b, _c, _d;\n        return await this._handleProviderSignIn(credentials.provider, {\n            redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n            scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n            queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n            skipBrowserRedirect: (_d = credentials.options) === null || _d === void 0 ? void 0 : _d.skipBrowserRedirect,\n        });\n    }\n    /**\n     * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.\n     */\n    async exchangeCodeForSession(authCode) {\n        await this.initializePromise;\n        return this._acquireLock(-1, async () => {\n            return this._exchangeCodeForSession(authCode);\n        });\n    }\n    /**\n     * Signs in a user by verifying a message signed by the user's private key.\n     * Only Solana supported at this time, using the Sign in with Solana standard.\n     */\n    async signInWithWeb3(credentials) {\n        const { chain } = credentials;\n        if (chain === 'solana') {\n            return await this.signInWithSolana(credentials);\n        }\n        throw new Error(`@supabase/auth-js: Unsupported chain \"${chain}\"`);\n    }\n    async signInWithSolana(credentials) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n        let message;\n        let signature;\n        if ('message' in credentials) {\n            message = credentials.message;\n            signature = credentials.signature;\n        }\n        else {\n            const { chain, wallet, statement, options } = credentials;\n            let resolvedWallet;\n            if (!(0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)()) {\n                if (typeof wallet !== 'object' || !(options === null || options === void 0 ? void 0 : options.url)) {\n                    throw new Error('@supabase/auth-js: Both wallet and url must be specified in non-browser environments.');\n                }\n                resolvedWallet = wallet;\n            }\n            else if (typeof wallet === 'object') {\n                resolvedWallet = wallet;\n            }\n            else {\n                const windowAny = window;\n                if ('solana' in windowAny &&\n                    typeof windowAny.solana === 'object' &&\n                    (('signIn' in windowAny.solana && typeof windowAny.solana.signIn === 'function') ||\n                        ('signMessage' in windowAny.solana &&\n                            typeof windowAny.solana.signMessage === 'function'))) {\n                    resolvedWallet = windowAny.solana;\n                }\n                else {\n                    throw new Error(`@supabase/auth-js: No compatible Solana wallet interface on the window object (window.solana) detected. Make sure the user already has a wallet installed and connected for this app. Prefer passing the wallet interface object directly to signInWithWeb3({ chain: 'solana', wallet: resolvedUserWallet }) instead.`);\n                }\n            }\n            const url = new URL((_a = options === null || options === void 0 ? void 0 : options.url) !== null && _a !== void 0 ? _a : window.location.href);\n            if ('signIn' in resolvedWallet && resolvedWallet.signIn) {\n                const output = await resolvedWallet.signIn(Object.assign(Object.assign(Object.assign({ issuedAt: new Date().toISOString() }, options === null || options === void 0 ? void 0 : options.signInWithSolana), { \n                    // non-overridable properties\n                    version: '1', domain: url.host, uri: url.href }), (statement ? { statement } : null)));\n                let outputToProcess;\n                if (Array.isArray(output) && output[0] && typeof output[0] === 'object') {\n                    outputToProcess = output[0];\n                }\n                else if (output &&\n                    typeof output === 'object' &&\n                    'signedMessage' in output &&\n                    'signature' in output) {\n                    outputToProcess = output;\n                }\n                else {\n                    throw new Error('@supabase/auth-js: Wallet method signIn() returned unrecognized value');\n                }\n                if ('signedMessage' in outputToProcess &&\n                    'signature' in outputToProcess &&\n                    (typeof outputToProcess.signedMessage === 'string' ||\n                        outputToProcess.signedMessage instanceof Uint8Array) &&\n                    outputToProcess.signature instanceof Uint8Array) {\n                    message =\n                        typeof outputToProcess.signedMessage === 'string'\n                            ? outputToProcess.signedMessage\n                            : new TextDecoder().decode(outputToProcess.signedMessage);\n                    signature = outputToProcess.signature;\n                }\n                else {\n                    throw new Error('@supabase/auth-js: Wallet method signIn() API returned object without signedMessage and signature fields');\n                }\n            }\n            else {\n                if (!('signMessage' in resolvedWallet) ||\n                    typeof resolvedWallet.signMessage !== 'function' ||\n                    !('publicKey' in resolvedWallet) ||\n                    typeof resolvedWallet !== 'object' ||\n                    !resolvedWallet.publicKey ||\n                    !('toBase58' in resolvedWallet.publicKey) ||\n                    typeof resolvedWallet.publicKey.toBase58 !== 'function') {\n                    throw new Error('@supabase/auth-js: Wallet does not have a compatible signMessage() and publicKey.toBase58() API');\n                }\n                message = [\n                    `${url.host} wants you to sign in with your Solana account:`,\n                    resolvedWallet.publicKey.toBase58(),\n                    ...(statement ? ['', statement, ''] : ['']),\n                    'Version: 1',\n                    `URI: ${url.href}`,\n                    `Issued At: ${(_c = (_b = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _b === void 0 ? void 0 : _b.issuedAt) !== null && _c !== void 0 ? _c : new Date().toISOString()}`,\n                    ...(((_d = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _d === void 0 ? void 0 : _d.notBefore)\n                        ? [`Not Before: ${options.signInWithSolana.notBefore}`]\n                        : []),\n                    ...(((_e = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _e === void 0 ? void 0 : _e.expirationTime)\n                        ? [`Expiration Time: ${options.signInWithSolana.expirationTime}`]\n                        : []),\n                    ...(((_f = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _f === void 0 ? void 0 : _f.chainId)\n                        ? [`Chain ID: ${options.signInWithSolana.chainId}`]\n                        : []),\n                    ...(((_g = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _g === void 0 ? void 0 : _g.nonce) ? [`Nonce: ${options.signInWithSolana.nonce}`] : []),\n                    ...(((_h = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _h === void 0 ? void 0 : _h.requestId)\n                        ? [`Request ID: ${options.signInWithSolana.requestId}`]\n                        : []),\n                    ...(((_k = (_j = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _j === void 0 ? void 0 : _j.resources) === null || _k === void 0 ? void 0 : _k.length)\n                        ? [\n                            'Resources',\n                            ...options.signInWithSolana.resources.map((resource) => `- ${resource}`),\n                        ]\n                        : []),\n                ].join('\\n');\n                const maybeSignature = await resolvedWallet.signMessage(new TextEncoder().encode(message), 'utf8');\n                if (!maybeSignature || !(maybeSignature instanceof Uint8Array)) {\n                    throw new Error('@supabase/auth-js: Wallet signMessage() API returned an recognized value');\n                }\n                signature = maybeSignature;\n            }\n        }\n        try {\n            const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/token?grant_type=web3`, {\n                headers: this.headers,\n                body: Object.assign({ chain: 'solana', message, signature: (0,_lib_base64url__WEBPACK_IMPORTED_MODULE_9__.bytesToBase64URL)(signature) }, (((_l = credentials.options) === null || _l === void 0 ? void 0 : _l.captchaToken)\n                    ? { gotrue_meta_security: { captcha_token: (_m = credentials.options) === null || _m === void 0 ? void 0 : _m.captchaToken } }\n                    : null)),\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse,\n            });\n            if (error) {\n                throw error;\n            }\n            if (!data || !data.session || !data.user) {\n                return {\n                    data: { user: null, session: null },\n                    error: new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidTokenResponseError(),\n                };\n            }\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return { data: Object.assign({}, data), error };\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    async _exchangeCodeForSession(authCode) {\n        const storageItem = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n        const [codeVerifier, redirectType] = (storageItem !== null && storageItem !== void 0 ? storageItem : '').split('/');\n        try {\n            const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/token?grant_type=pkce`, {\n                headers: this.headers,\n                body: {\n                    auth_code: authCode,\n                    code_verifier: codeVerifier,\n                },\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse,\n            });\n            await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n            if (error) {\n                throw error;\n            }\n            if (!data || !data.session || !data.user) {\n                return {\n                    data: { user: null, session: null, redirectType: null },\n                    error: new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidTokenResponseError(),\n                };\n            }\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return { data: Object.assign(Object.assign({}, data), { redirectType: redirectType !== null && redirectType !== void 0 ? redirectType : null }), error };\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return { data: { user: null, session: null, redirectType: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Allows signing in with an OIDC ID token. The authentication provider used\n     * should be enabled and configured.\n     */\n    async signInWithIdToken(credentials) {\n        try {\n            const { options, provider, token, access_token, nonce } = credentials;\n            const res = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\n                headers: this.headers,\n                body: {\n                    provider,\n                    id_token: token,\n                    access_token,\n                    nonce,\n                    gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                },\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse,\n            });\n            const { data, error } = res;\n            if (error) {\n                return { data: { user: null, session: null }, error };\n            }\n            else if (!data || !data.session || !data.user) {\n                return {\n                    data: { user: null, session: null },\n                    error: new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidTokenResponseError(),\n                };\n            }\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return { data, error };\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Log in a user using magiclink or a one-time password (OTP).\n     *\n     * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n     * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n     * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or, that the account\n     * can only be accessed via social login.\n     *\n     * Do note that you will need to configure a Whatsapp sender on Twilio\n     * if you are using phone sign in with the 'whatsapp' channel. The whatsapp\n     * channel is not supported on other providers\n     * at this time.\n     * This method supports PKCE when an email is passed.\n     */\n    async signInWithOtp(credentials) {\n        var _a, _b, _c, _d, _e;\n        try {\n            if ('email' in credentials) {\n                const { email, options } = credentials;\n                let codeChallenge = null;\n                let codeChallengeMethod = null;\n                if (this.flowType === 'pkce') {\n                    ;\n                    [codeChallenge, codeChallengeMethod] = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n                }\n                const { error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/otp`, {\n                    headers: this.headers,\n                    body: {\n                        email,\n                        data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                        create_user: (_b = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _b !== void 0 ? _b : true,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        code_challenge: codeChallenge,\n                        code_challenge_method: codeChallengeMethod,\n                    },\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                });\n                return { data: { user: null, session: null }, error };\n            }\n            if ('phone' in credentials) {\n                const { phone, options } = credentials;\n                const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/otp`, {\n                    headers: this.headers,\n                    body: {\n                        phone,\n                        data: (_c = options === null || options === void 0 ? void 0 : options.data) !== null && _c !== void 0 ? _c : {},\n                        create_user: (_d = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _d !== void 0 ? _d : true,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        channel: (_e = options === null || options === void 0 ? void 0 : options.channel) !== null && _e !== void 0 ? _e : 'sms',\n                    },\n                });\n                return { data: { user: null, session: null, messageId: data === null || data === void 0 ? void 0 : data.message_id }, error };\n            }\n            throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidCredentialsError('You must provide either an email or phone number.');\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Log in a user given a User supplied OTP or TokenHash received through mobile or email.\n     */\n    async verifyOtp(params) {\n        var _a, _b;\n        try {\n            let redirectTo = undefined;\n            let captchaToken = undefined;\n            if ('options' in params) {\n                redirectTo = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo;\n                captchaToken = (_b = params.options) === null || _b === void 0 ? void 0 : _b.captchaToken;\n            }\n            const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/verify`, {\n                headers: this.headers,\n                body: Object.assign(Object.assign({}, params), { gotrue_meta_security: { captcha_token: captchaToken } }),\n                redirectTo,\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse,\n            });\n            if (error) {\n                throw error;\n            }\n            if (!data) {\n                throw new Error('An error occurred on token verification.');\n            }\n            const session = data.session;\n            const user = data.user;\n            if (session === null || session === void 0 ? void 0 : session.access_token) {\n                await this._saveSession(session);\n                await this._notifyAllSubscribers(params.type == 'recovery' ? 'PASSWORD_RECOVERY' : 'SIGNED_IN', session);\n            }\n            return { data: { user, session }, error: null };\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Attempts a single-sign on using an enterprise Identity Provider. A\n     * successful SSO attempt will redirect the current page to the identity\n     * provider authorization page. The redirect URL is implementation and SSO\n     * protocol specific.\n     *\n     * You can use it by providing a SSO domain. Typically you can extract this\n     * domain by asking users for their email address. If this domain is\n     * registered on the Auth instance the redirect will use that organization's\n     * currently active SSO Identity Provider for the login.\n     *\n     * If you have built an organization-specific login page, you can use the\n     * organization's SSO Identity Provider UUID directly instead.\n     */\n    async signInWithSSO(params) {\n        var _a, _b, _c;\n        try {\n            let codeChallenge = null;\n            let codeChallengeMethod = null;\n            if (this.flowType === 'pkce') {\n                ;\n                [codeChallenge, codeChallengeMethod] = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n            }\n            return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/sso`, {\n                body: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, ('providerId' in params ? { provider_id: params.providerId } : null)), ('domain' in params ? { domain: params.domain } : null)), { redirect_to: (_b = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo) !== null && _b !== void 0 ? _b : undefined }), (((_c = params === null || params === void 0 ? void 0 : params.options) === null || _c === void 0 ? void 0 : _c.captchaToken)\n                    ? { gotrue_meta_security: { captcha_token: params.options.captchaToken } }\n                    : null)), { skip_http_redirect: true, code_challenge: codeChallenge, code_challenge_method: codeChallengeMethod }),\n                headers: this.headers,\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._ssoResponse,\n            });\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Sends a reauthentication OTP to the user's email or phone number.\n     * Requires the user to be signed-in.\n     */\n    async reauthenticate() {\n        await this.initializePromise;\n        return await this._acquireLock(-1, async () => {\n            return await this._reauthenticate();\n        });\n    }\n    async _reauthenticate() {\n        try {\n            return await this._useSession(async (result) => {\n                const { data: { session }, error: sessionError, } = result;\n                if (sessionError)\n                    throw sessionError;\n                if (!session)\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\n                const { error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'GET', `${this.url}/reauthenticate`, {\n                    headers: this.headers,\n                    jwt: session.access_token,\n                });\n                return { data: { user: null, session: null }, error };\n            });\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.\n     */\n    async resend(credentials) {\n        try {\n            const endpoint = `${this.url}/resend`;\n            if ('email' in credentials) {\n                const { email, type, options } = credentials;\n                const { error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', endpoint, {\n                    headers: this.headers,\n                    body: {\n                        email,\n                        type,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                    },\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                });\n                return { data: { user: null, session: null }, error };\n            }\n            else if ('phone' in credentials) {\n                const { phone, type, options } = credentials;\n                const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', endpoint, {\n                    headers: this.headers,\n                    body: {\n                        phone,\n                        type,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                    },\n                });\n                return { data: { user: null, session: null, messageId: data === null || data === void 0 ? void 0 : data.message_id }, error };\n            }\n            throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidCredentialsError('You must provide either an email or phone number and a type');\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Returns the session, refreshing it if necessary.\n     *\n     * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n     *\n     * **IMPORTANT:** This method loads values directly from the storage attached\n     * to the client. If that storage is based on request cookies for example,\n     * the values in it may not be authentic and therefore it's strongly advised\n     * against using this method and its results in such circumstances. A warning\n     * will be emitted if this is detected. Use {@link #getUser()} instead.\n     */\n    async getSession() {\n        await this.initializePromise;\n        const result = await this._acquireLock(-1, async () => {\n            return this._useSession(async (result) => {\n                return result;\n            });\n        });\n        return result;\n    }\n    /**\n     * Acquires a global lock based on the storage key.\n     */\n    async _acquireLock(acquireTimeout, fn) {\n        this._debug('#_acquireLock', 'begin', acquireTimeout);\n        try {\n            if (this.lockAcquired) {\n                const last = this.pendingInLock.length\n                    ? this.pendingInLock[this.pendingInLock.length - 1]\n                    : Promise.resolve();\n                const result = (async () => {\n                    await last;\n                    return await fn();\n                })();\n                this.pendingInLock.push((async () => {\n                    try {\n                        await result;\n                    }\n                    catch (e) {\n                        // we just care if it finished\n                    }\n                })());\n                return result;\n            }\n            return await this.lock(`lock:${this.storageKey}`, acquireTimeout, async () => {\n                this._debug('#_acquireLock', 'lock acquired for storage key', this.storageKey);\n                try {\n                    this.lockAcquired = true;\n                    const result = fn();\n                    this.pendingInLock.push((async () => {\n                        try {\n                            await result;\n                        }\n                        catch (e) {\n                            // we just care if it finished\n                        }\n                    })());\n                    await result;\n                    // keep draining the queue until there's nothing to wait on\n                    while (this.pendingInLock.length) {\n                        const waitOn = [...this.pendingInLock];\n                        await Promise.all(waitOn);\n                        this.pendingInLock.splice(0, waitOn.length);\n                    }\n                    return await result;\n                }\n                finally {\n                    this._debug('#_acquireLock', 'lock released for storage key', this.storageKey);\n                    this.lockAcquired = false;\n                }\n            });\n        }\n        finally {\n            this._debug('#_acquireLock', 'end');\n        }\n    }\n    /**\n     * Use instead of {@link #getSession} inside the library. It is\n     * semantically usually what you want, as getting a session involves some\n     * processing afterwards that requires only one client operating on the\n     * session at once across multiple tabs or processes.\n     */\n    async _useSession(fn) {\n        this._debug('#_useSession', 'begin');\n        try {\n            // the use of __loadSession here is the only correct use of the function!\n            const result = await this.__loadSession();\n            return await fn(result);\n        }\n        finally {\n            this._debug('#_useSession', 'end');\n        }\n    }\n    /**\n     * NEVER USE DIRECTLY!\n     *\n     * Always use {@link #_useSession}.\n     */\n    async __loadSession() {\n        this._debug('#__loadSession()', 'begin');\n        if (!this.lockAcquired) {\n            this._debug('#__loadSession()', 'used outside of an acquired lock!', new Error().stack);\n        }\n        try {\n            let currentSession = null;\n            const maybeSession = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getItemAsync)(this.storage, this.storageKey);\n            this._debug('#getSession()', 'session from storage', maybeSession);\n            if (maybeSession !== null) {\n                if (this._isValidSession(maybeSession)) {\n                    currentSession = maybeSession;\n                }\n                else {\n                    this._debug('#getSession()', 'session from storage is not valid');\n                    await this._removeSession();\n                }\n            }\n            if (!currentSession) {\n                return { data: { session: null }, error: null };\n            }\n            // A session is considered expired before the access token _actually_\n            // expires. When the autoRefreshToken option is off (or when the tab is\n            // in the background), very eager users of getSession() -- like\n            // realtime-js -- might send a valid JWT which will expire by the time it\n            // reaches the server.\n            const hasExpired = currentSession.expires_at\n                ? currentSession.expires_at * 1000 - Date.now() < _lib_constants__WEBPACK_IMPORTED_MODULE_1__.EXPIRY_MARGIN_MS\n                : false;\n            this._debug('#__loadSession()', `session has${hasExpired ? '' : ' not'} expired`, 'expires_at', currentSession.expires_at);\n            if (!hasExpired) {\n                if (this.userStorage) {\n                    const maybeUser = (await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getItemAsync)(this.userStorage, this.storageKey + '-user'));\n                    if (maybeUser === null || maybeUser === void 0 ? void 0 : maybeUser.user) {\n                        currentSession.user = maybeUser.user;\n                    }\n                    else {\n                        currentSession.user = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.userNotAvailableProxy)();\n                    }\n                }\n                if (this.storage.isServer && currentSession.user) {\n                    let suppressWarning = this.suppressGetSessionWarning;\n                    const proxySession = new Proxy(currentSession, {\n                        get: (target, prop, receiver) => {\n                            if (!suppressWarning && prop === 'user') {\n                                // only show warning when the user object is being accessed from the server\n                                console.warn('Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and may not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server.');\n                                suppressWarning = true; // keeps this proxy instance from logging additional warnings\n                                this.suppressGetSessionWarning = true; // keeps this client's future proxy instances from warning\n                            }\n                            return Reflect.get(target, prop, receiver);\n                        },\n                    });\n                    currentSession = proxySession;\n                }\n                return { data: { session: currentSession }, error: null };\n            }\n            const { session, error } = await this._callRefreshToken(currentSession.refresh_token);\n            if (error) {\n                return { data: { session: null }, error };\n            }\n            return { data: { session }, error: null };\n        }\n        finally {\n            this._debug('#__loadSession()', 'end');\n        }\n    }\n    /**\n     * Gets the current user details if there is an existing session. This method\n     * performs a network request to the Supabase Auth server, so the returned\n     * value is authentic and can be used to base authorization rules on.\n     *\n     * @param jwt Takes in an optional access token JWT. If no JWT is provided, the JWT from the current session is used.\n     */\n    async getUser(jwt) {\n        if (jwt) {\n            return await this._getUser(jwt);\n        }\n        await this.initializePromise;\n        const result = await this._acquireLock(-1, async () => {\n            return await this._getUser();\n        });\n        return result;\n    }\n    async _getUser(jwt) {\n        try {\n            if (jwt) {\n                return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'GET', `${this.url}/user`, {\n                    headers: this.headers,\n                    jwt: jwt,\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._userResponse,\n                });\n            }\n            return await this._useSession(async (result) => {\n                var _a, _b, _c;\n                const { data, error } = result;\n                if (error) {\n                    throw error;\n                }\n                // returns an error if there is no access_token or custom authorization header\n                if (!((_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) && !this.hasCustomAuthorizationHeader) {\n                    return { data: { user: null }, error: new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError() };\n                }\n                return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'GET', `${this.url}/user`, {\n                    headers: this.headers,\n                    jwt: (_c = (_b = data.session) === null || _b === void 0 ? void 0 : _b.access_token) !== null && _c !== void 0 ? _c : undefined,\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._userResponse,\n                });\n            });\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthSessionMissingError)(error)) {\n                    // JWT contains a `session_id` which does not correspond to an active\n                    // session in the database, indicating the user is signed out.\n                    await this._removeSession();\n                    await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n                }\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Updates user data for a logged in user.\n     */\n    async updateUser(attributes, options = {}) {\n        await this.initializePromise;\n        return await this._acquireLock(-1, async () => {\n            return await this._updateUser(attributes, options);\n        });\n    }\n    async _updateUser(attributes, options = {}) {\n        try {\n            return await this._useSession(async (result) => {\n                const { data: sessionData, error: sessionError } = result;\n                if (sessionError) {\n                    throw sessionError;\n                }\n                if (!sessionData.session) {\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\n                }\n                const session = sessionData.session;\n                let codeChallenge = null;\n                let codeChallengeMethod = null;\n                if (this.flowType === 'pkce' && attributes.email != null) {\n                    ;\n                    [codeChallenge, codeChallengeMethod] = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n                }\n                const { data, error: userError } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'PUT', `${this.url}/user`, {\n                    headers: this.headers,\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                    body: Object.assign(Object.assign({}, attributes), { code_challenge: codeChallenge, code_challenge_method: codeChallengeMethod }),\n                    jwt: session.access_token,\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._userResponse,\n                });\n                if (userError)\n                    throw userError;\n                session.user = data.user;\n                await this._saveSession(session);\n                await this._notifyAllSubscribers('USER_UPDATED', session);\n                return { data: { user: session.user }, error: null };\n            });\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n     * If the refresh token or access token in the current session is invalid, an error will be thrown.\n     * @param currentSession The current session that minimally contains an access token and refresh token.\n     */\n    async setSession(currentSession) {\n        await this.initializePromise;\n        return await this._acquireLock(-1, async () => {\n            return await this._setSession(currentSession);\n        });\n    }\n    async _setSession(currentSession) {\n        try {\n            if (!currentSession.access_token || !currentSession.refresh_token) {\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\n            }\n            const timeNow = Date.now() / 1000;\n            let expiresAt = timeNow;\n            let hasExpired = true;\n            let session = null;\n            const { payload } = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.decodeJWT)(currentSession.access_token);\n            if (payload.exp) {\n                expiresAt = payload.exp;\n                hasExpired = expiresAt <= timeNow;\n            }\n            if (hasExpired) {\n                const { session: refreshedSession, error } = await this._callRefreshToken(currentSession.refresh_token);\n                if (error) {\n                    return { data: { user: null, session: null }, error: error };\n                }\n                if (!refreshedSession) {\n                    return { data: { user: null, session: null }, error: null };\n                }\n                session = refreshedSession;\n            }\n            else {\n                const { data, error } = await this._getUser(currentSession.access_token);\n                if (error) {\n                    throw error;\n                }\n                session = {\n                    access_token: currentSession.access_token,\n                    refresh_token: currentSession.refresh_token,\n                    user: data.user,\n                    token_type: 'bearer',\n                    expires_in: expiresAt - timeNow,\n                    expires_at: expiresAt,\n                };\n                await this._saveSession(session);\n                await this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return { data: { user: session.user, session }, error: null };\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return { data: { session: null, user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Returns a new session, regardless of expiry status.\n     * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n     * If the current session's refresh token is invalid, an error will be thrown.\n     * @param currentSession The current session. If passed in, it must contain a refresh token.\n     */\n    async refreshSession(currentSession) {\n        await this.initializePromise;\n        return await this._acquireLock(-1, async () => {\n            return await this._refreshSession(currentSession);\n        });\n    }\n    async _refreshSession(currentSession) {\n        try {\n            return await this._useSession(async (result) => {\n                var _a;\n                if (!currentSession) {\n                    const { data, error } = result;\n                    if (error) {\n                        throw error;\n                    }\n                    currentSession = (_a = data.session) !== null && _a !== void 0 ? _a : undefined;\n                }\n                if (!(currentSession === null || currentSession === void 0 ? void 0 : currentSession.refresh_token)) {\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\n                }\n                const { session, error } = await this._callRefreshToken(currentSession.refresh_token);\n                if (error) {\n                    return { data: { user: null, session: null }, error: error };\n                }\n                if (!session) {\n                    return { data: { user: null, session: null }, error: null };\n                }\n                return { data: { user: session.user, session }, error: null };\n            });\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return { data: { user: null, session: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Gets the session data from a URL string\n     */\n    async _getSessionFromURL(params, callbackUrlType) {\n        try {\n            if (!(0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)())\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthImplicitGrantRedirectError('No browser detected.');\n            // If there's an error in the URL, it doesn't matter what flow it is, we just return the error.\n            if (params.error || params.error_description || params.error_code) {\n                // The error class returned implies that the redirect is from an implicit grant flow\n                // but it could also be from a redirect error from a PKCE flow.\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthImplicitGrantRedirectError(params.error_description || 'Error in URL with unspecified error_description', {\n                    error: params.error || 'unspecified_error',\n                    code: params.error_code || 'unspecified_code',\n                });\n            }\n            // Checks for mismatches between the flowType initialised in the client and the URL parameters\n            switch (callbackUrlType) {\n                case 'implicit':\n                    if (this.flowType === 'pkce') {\n                        throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthPKCEGrantCodeExchangeError('Not a valid PKCE flow url.');\n                    }\n                    break;\n                case 'pkce':\n                    if (this.flowType === 'implicit') {\n                        throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.');\n                    }\n                    break;\n                default:\n                // there's no mismatch so we continue\n            }\n            // Since this is a redirect for PKCE, we attempt to retrieve the code from the URL for the code exchange\n            if (callbackUrlType === 'pkce') {\n                this._debug('#_initialize()', 'begin', 'is PKCE flow', true);\n                if (!params.code)\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthPKCEGrantCodeExchangeError('No code detected.');\n                const { data, error } = await this._exchangeCodeForSession(params.code);\n                if (error)\n                    throw error;\n                const url = new URL(window.location.href);\n                url.searchParams.delete('code');\n                window.history.replaceState(window.history.state, '', url.toString());\n                return { data: { session: data.session, redirectType: null }, error: null };\n            }\n            const { provider_token, provider_refresh_token, access_token, refresh_token, expires_in, expires_at, token_type, } = params;\n            if (!access_token || !expires_in || !refresh_token || !token_type) {\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthImplicitGrantRedirectError('No session defined in URL');\n            }\n            const timeNow = Math.round(Date.now() / 1000);\n            const expiresIn = parseInt(expires_in);\n            let expiresAt = timeNow + expiresIn;\n            if (expires_at) {\n                expiresAt = parseInt(expires_at);\n            }\n            const actuallyExpiresIn = expiresAt - timeNow;\n            if (actuallyExpiresIn * 1000 <= _lib_constants__WEBPACK_IMPORTED_MODULE_1__.AUTO_REFRESH_TICK_DURATION_MS) {\n                console.warn(`@supabase/gotrue-js: Session as retrieved from URL expires in ${actuallyExpiresIn}s, should have been closer to ${expiresIn}s`);\n            }\n            const issuedAt = expiresAt - expiresIn;\n            if (timeNow - issuedAt >= 120) {\n                console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued over 120s ago, URL could be stale', issuedAt, expiresAt, timeNow);\n            }\n            else if (timeNow - issuedAt < 0) {\n                console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued in the future? Check the device clock for skew', issuedAt, expiresAt, timeNow);\n            }\n            const { data, error } = await this._getUser(access_token);\n            if (error)\n                throw error;\n            const session = {\n                provider_token,\n                provider_refresh_token,\n                access_token,\n                expires_in: expiresIn,\n                expires_at: expiresAt,\n                refresh_token,\n                token_type,\n                user: data.user,\n            };\n            // Remove tokens from URL\n            window.location.hash = '';\n            this._debug('#_getSessionFromURL()', 'clearing window.location.hash');\n            return { data: { session, redirectType: params.type }, error: null };\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return { data: { session: null, redirectType: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n     */\n    _isImplicitGrantCallback(params) {\n        return Boolean(params.access_token || params.error_description);\n    }\n    /**\n     * Checks if the current URL and backing storage contain parameters given by a PKCE flow\n     */\n    async _isPKCECallback(params) {\n        const currentStorageContent = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n        return !!(params.code && currentStorageContent);\n    }\n    /**\n     * Inside a browser context, `signOut()` will remove the logged in user from the browser session and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n     *\n     * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n     * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n     *\n     * If using `others` scope, no `SIGNED_OUT` event is fired!\n     */\n    async signOut(options = { scope: 'global' }) {\n        await this.initializePromise;\n        return await this._acquireLock(-1, async () => {\n            return await this._signOut(options);\n        });\n    }\n    async _signOut({ scope } = { scope: 'global' }) {\n        return await this._useSession(async (result) => {\n            var _a;\n            const { data, error: sessionError } = result;\n            if (sessionError) {\n                return { error: sessionError };\n            }\n            const accessToken = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token;\n            if (accessToken) {\n                const { error } = await this.admin.signOut(accessToken, scope);\n                if (error) {\n                    // ignore 404s since user might not exist anymore\n                    // ignore 401s since an invalid or expired JWT should sign out the current session\n                    if (!((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthApiError)(error) &&\n                        (error.status === 404 || error.status === 401 || error.status === 403))) {\n                        return { error };\n                    }\n                }\n            }\n            if (scope !== 'others') {\n                await this._removeSession();\n                await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n            }\n            return { error: null };\n        });\n    }\n    /**\n     * Receive a notification every time an auth event happens.\n     * @param callback A callback function to be invoked when an auth event happens.\n     */\n    onAuthStateChange(callback) {\n        const id = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.uuid)();\n        const subscription = {\n            id,\n            callback,\n            unsubscribe: () => {\n                this._debug('#unsubscribe()', 'state change callback with id removed', id);\n                this.stateChangeEmitters.delete(id);\n            },\n        };\n        this._debug('#onAuthStateChange()', 'registered callback with id', id);\n        this.stateChangeEmitters.set(id, subscription);\n        (async () => {\n            await this.initializePromise;\n            await this._acquireLock(-1, async () => {\n                this._emitInitialSession(id);\n            });\n        })();\n        return { data: { subscription } };\n    }\n    async _emitInitialSession(id) {\n        return await this._useSession(async (result) => {\n            var _a, _b;\n            try {\n                const { data: { session }, error, } = result;\n                if (error)\n                    throw error;\n                await ((_a = this.stateChangeEmitters.get(id)) === null || _a === void 0 ? void 0 : _a.callback('INITIAL_SESSION', session));\n                this._debug('INITIAL_SESSION', 'callback id', id, 'session', session);\n            }\n            catch (err) {\n                await ((_b = this.stateChangeEmitters.get(id)) === null || _b === void 0 ? void 0 : _b.callback('INITIAL_SESSION', null));\n                this._debug('INITIAL_SESSION', 'callback id', id, 'error', err);\n                console.error(err);\n            }\n        });\n    }\n    /**\n     * Sends a password reset request to an email address. This method supports the PKCE flow.\n     *\n     * @param email The email address of the user.\n     * @param options.redirectTo The URL to send the user to after they click the password reset link.\n     * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n     */\n    async resetPasswordForEmail(email, options = {}) {\n        let codeChallenge = null;\n        let codeChallengeMethod = null;\n        if (this.flowType === 'pkce') {\n            ;\n            [codeChallenge, codeChallengeMethod] = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getCodeChallengeAndMethod)(this.storage, this.storageKey, true // isPasswordRecovery\n            );\n        }\n        try {\n            return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/recover`, {\n                body: {\n                    email,\n                    code_challenge: codeChallenge,\n                    code_challenge_method: codeChallengeMethod,\n                    gotrue_meta_security: { captcha_token: options.captchaToken },\n                },\n                headers: this.headers,\n                redirectTo: options.redirectTo,\n            });\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Gets all the identities linked to a user.\n     */\n    async getUserIdentities() {\n        var _a;\n        try {\n            const { data, error } = await this.getUser();\n            if (error)\n                throw error;\n            return { data: { identities: (_a = data.user.identities) !== null && _a !== void 0 ? _a : [] }, error: null };\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Links an oauth identity to an existing user.\n     * This method supports the PKCE flow.\n     */\n    async linkIdentity(credentials) {\n        var _a;\n        try {\n            const { data, error } = await this._useSession(async (result) => {\n                var _a, _b, _c, _d, _e;\n                const { data, error } = result;\n                if (error)\n                    throw error;\n                const url = await this._getUrlForProvider(`${this.url}/user/identities/authorize`, credentials.provider, {\n                    redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n                    scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n                    queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n                    skipBrowserRedirect: true,\n                });\n                return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'GET', url, {\n                    headers: this.headers,\n                    jwt: (_e = (_d = data.session) === null || _d === void 0 ? void 0 : _d.access_token) !== null && _e !== void 0 ? _e : undefined,\n                });\n            });\n            if (error)\n                throw error;\n            if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() && !((_a = credentials.options) === null || _a === void 0 ? void 0 : _a.skipBrowserRedirect)) {\n                window.location.assign(data === null || data === void 0 ? void 0 : data.url);\n            }\n            return { data: { provider: credentials.provider, url: data === null || data === void 0 ? void 0 : data.url }, error: null };\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return { data: { provider: credentials.provider, url: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Unlinks an identity from a user by deleting it. The user will no longer be able to sign in with that identity once it's unlinked.\n     */\n    async unlinkIdentity(identity) {\n        try {\n            return await this._useSession(async (result) => {\n                var _a, _b;\n                const { data, error } = result;\n                if (error) {\n                    throw error;\n                }\n                return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'DELETE', `${this.url}/user/identities/${identity.identity_id}`, {\n                    headers: this.headers,\n                    jwt: (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined,\n                });\n            });\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Generates a new JWT.\n     * @param refreshToken A valid refresh token that was returned on login.\n     */\n    async _refreshAccessToken(refreshToken) {\n        const debugName = `#_refreshAccessToken(${refreshToken.substring(0, 5)}...)`;\n        this._debug(debugName, 'begin');\n        try {\n            const startedAt = Date.now();\n            // will attempt to refresh the token with exponential backoff\n            return await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.retryable)(async (attempt) => {\n                if (attempt > 0) {\n                    await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.sleep)(200 * Math.pow(2, attempt - 1)); // 200, 400, 800, ...\n                }\n                this._debug(debugName, 'refreshing attempt', attempt);\n                return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/token?grant_type=refresh_token`, {\n                    body: { refresh_token: refreshToken },\n                    headers: this.headers,\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse,\n                });\n            }, (attempt, error) => {\n                const nextBackOffInterval = 200 * Math.pow(2, attempt);\n                return (error &&\n                    (0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthRetryableFetchError)(error) &&\n                    // retryable only if the request can be sent before the backoff overflows the tick duration\n                    Date.now() + nextBackOffInterval - startedAt < _lib_constants__WEBPACK_IMPORTED_MODULE_1__.AUTO_REFRESH_TICK_DURATION_MS);\n            });\n        }\n        catch (error) {\n            this._debug(debugName, 'error', error);\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return { data: { session: null, user: null }, error };\n            }\n            throw error;\n        }\n        finally {\n            this._debug(debugName, 'end');\n        }\n    }\n    _isValidSession(maybeSession) {\n        const isValidSession = typeof maybeSession === 'object' &&\n            maybeSession !== null &&\n            'access_token' in maybeSession &&\n            'refresh_token' in maybeSession &&\n            'expires_at' in maybeSession;\n        return isValidSession;\n    }\n    async _handleProviderSignIn(provider, options) {\n        const url = await this._getUrlForProvider(`${this.url}/authorize`, provider, {\n            redirectTo: options.redirectTo,\n            scopes: options.scopes,\n            queryParams: options.queryParams,\n        });\n        this._debug('#_handleProviderSignIn()', 'provider', provider, 'options', options, 'url', url);\n        // try to open on the browser\n        if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() && !options.skipBrowserRedirect) {\n            window.location.assign(url);\n        }\n        return { data: { provider, url }, error: null };\n    }\n    /**\n     * Recovers the session from LocalStorage and refreshes the token\n     * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n     */\n    async _recoverAndRefresh() {\n        var _a, _b;\n        const debugName = '#_recoverAndRefresh()';\n        this._debug(debugName, 'begin');\n        try {\n            const currentSession = (await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getItemAsync)(this.storage, this.storageKey));\n            if (currentSession && this.userStorage) {\n                let maybeUser = (await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getItemAsync)(this.userStorage, this.storageKey + '-user'));\n                if (!this.storage.isServer && Object.is(this.storage, this.userStorage) && !maybeUser) {\n                    // storage and userStorage are the same storage medium, for example\n                    // window.localStorage if userStorage does not have the user from\n                    // storage stored, store it first thereby migrating the user object\n                    // from storage -> userStorage\n                    maybeUser = { user: currentSession.user };\n                    await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.setItemAsync)(this.userStorage, this.storageKey + '-user', maybeUser);\n                }\n                currentSession.user = (_a = maybeUser === null || maybeUser === void 0 ? void 0 : maybeUser.user) !== null && _a !== void 0 ? _a : (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.userNotAvailableProxy)();\n            }\n            else if (currentSession && !currentSession.user) {\n                // user storage is not set, let's check if it was previously enabled so\n                // we bring back the storage as it should be\n                if (!currentSession.user) {\n                    // test if userStorage was previously enabled and the storage medium was the same, to move the user back under the same key\n                    const separateUser = (await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getItemAsync)(this.storage, this.storageKey + '-user'));\n                    if (separateUser && (separateUser === null || separateUser === void 0 ? void 0 : separateUser.user)) {\n                        currentSession.user = separateUser.user;\n                        await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.removeItemAsync)(this.storage, this.storageKey + '-user');\n                        await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.setItemAsync)(this.storage, this.storageKey, currentSession);\n                    }\n                    else {\n                        currentSession.user = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.userNotAvailableProxy)();\n                    }\n                }\n            }\n            this._debug(debugName, 'session from storage', currentSession);\n            if (!this._isValidSession(currentSession)) {\n                this._debug(debugName, 'session is not valid');\n                if (currentSession !== null) {\n                    await this._removeSession();\n                }\n                return;\n            }\n            const expiresWithMargin = ((_b = currentSession.expires_at) !== null && _b !== void 0 ? _b : Infinity) * 1000 - Date.now() < _lib_constants__WEBPACK_IMPORTED_MODULE_1__.EXPIRY_MARGIN_MS;\n            this._debug(debugName, `session has${expiresWithMargin ? '' : ' not'} expired with margin of ${_lib_constants__WEBPACK_IMPORTED_MODULE_1__.EXPIRY_MARGIN_MS}s`);\n            if (expiresWithMargin) {\n                if (this.autoRefreshToken && currentSession.refresh_token) {\n                    const { error } = await this._callRefreshToken(currentSession.refresh_token);\n                    if (error) {\n                        console.error(error);\n                        if (!(0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthRetryableFetchError)(error)) {\n                            this._debug(debugName, 'refresh failed with a non-retryable error, removing the session', error);\n                            await this._removeSession();\n                        }\n                    }\n                }\n            }\n            else if (currentSession.user &&\n                currentSession.user.__isUserNotAvailableProxy === true) {\n                // If we have a proxy user, try to get the real user data\n                try {\n                    const { data, error: userError } = await this._getUser(currentSession.access_token);\n                    if (!userError && (data === null || data === void 0 ? void 0 : data.user)) {\n                        currentSession.user = data.user;\n                        await this._saveSession(currentSession);\n                        await this._notifyAllSubscribers('SIGNED_IN', currentSession);\n                    }\n                    else {\n                        this._debug(debugName, 'could not get user data, skipping SIGNED_IN notification');\n                    }\n                }\n                catch (getUserError) {\n                    console.error('Error getting user data:', getUserError);\n                    this._debug(debugName, 'error getting user data, skipping SIGNED_IN notification', getUserError);\n                }\n            }\n            else {\n                // no need to persist currentSession again, as we just loaded it from\n                // local storage; persisting it again may overwrite a value saved by\n                // another client with access to the same local storage\n                await this._notifyAllSubscribers('SIGNED_IN', currentSession);\n            }\n        }\n        catch (err) {\n            this._debug(debugName, 'error', err);\n            console.error(err);\n            return;\n        }\n        finally {\n            this._debug(debugName, 'end');\n        }\n    }\n    async _callRefreshToken(refreshToken) {\n        var _a, _b;\n        if (!refreshToken) {\n            throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\n        }\n        // refreshing is already in progress\n        if (this.refreshingDeferred) {\n            return this.refreshingDeferred.promise;\n        }\n        const debugName = `#_callRefreshToken(${refreshToken.substring(0, 5)}...)`;\n        this._debug(debugName, 'begin');\n        try {\n            this.refreshingDeferred = new _lib_helpers__WEBPACK_IMPORTED_MODULE_4__.Deferred();\n            const { data, error } = await this._refreshAccessToken(refreshToken);\n            if (error)\n                throw error;\n            if (!data.session)\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\n            await this._saveSession(data.session);\n            await this._notifyAllSubscribers('TOKEN_REFRESHED', data.session);\n            const result = { session: data.session, error: null };\n            this.refreshingDeferred.resolve(result);\n            return result;\n        }\n        catch (error) {\n            this._debug(debugName, 'error', error);\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                const result = { session: null, error };\n                if (!(0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthRetryableFetchError)(error)) {\n                    await this._removeSession();\n                }\n                (_a = this.refreshingDeferred) === null || _a === void 0 ? void 0 : _a.resolve(result);\n                return result;\n            }\n            (_b = this.refreshingDeferred) === null || _b === void 0 ? void 0 : _b.reject(error);\n            throw error;\n        }\n        finally {\n            this.refreshingDeferred = null;\n            this._debug(debugName, 'end');\n        }\n    }\n    async _notifyAllSubscribers(event, session, broadcast = true) {\n        const debugName = `#_notifyAllSubscribers(${event})`;\n        this._debug(debugName, 'begin', session, `broadcast = ${broadcast}`);\n        try {\n            if (this.broadcastChannel && broadcast) {\n                this.broadcastChannel.postMessage({ event, session });\n            }\n            const errors = [];\n            const promises = Array.from(this.stateChangeEmitters.values()).map(async (x) => {\n                try {\n                    await x.callback(event, session);\n                }\n                catch (e) {\n                    errors.push(e);\n                }\n            });\n            await Promise.all(promises);\n            if (errors.length > 0) {\n                for (let i = 0; i < errors.length; i += 1) {\n                    console.error(errors[i]);\n                }\n                throw errors[0];\n            }\n        }\n        finally {\n            this._debug(debugName, 'end');\n        }\n    }\n    /**\n     * set currentSession and currentUser\n     * process to _startAutoRefreshToken if possible\n     */\n    async _saveSession(session) {\n        this._debug('#_saveSession()', session);\n        // _saveSession is always called whenever a new session has been acquired\n        // so we can safely suppress the warning returned by future getSession calls\n        this.suppressGetSessionWarning = true;\n        // Create a shallow copy to work with, to avoid mutating the original session object if it's used elsewhere\n        const sessionToProcess = Object.assign({}, session);\n        const userIsProxy = sessionToProcess.user && sessionToProcess.user.__isUserNotAvailableProxy === true;\n        if (this.userStorage) {\n            if (!userIsProxy && sessionToProcess.user) {\n                // If it's a real user object, save it to userStorage.\n                await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.setItemAsync)(this.userStorage, this.storageKey + '-user', {\n                    user: sessionToProcess.user,\n                });\n            }\n            else if (userIsProxy) {\n                // If it's the proxy, it means user was not found in userStorage.\n                // We should ensure no stale user data for this key exists in userStorage if we were to save null,\n                // or simply not save the proxy. For now, we don't save the proxy here.\n                // If there's a need to clear userStorage if user becomes proxy, that logic would go here.\n            }\n            // Prepare the main session data for primary storage: remove the user property before cloning\n            // This is important because the original session.user might be the proxy\n            const mainSessionData = Object.assign({}, sessionToProcess);\n            delete mainSessionData.user; // Remove user (real or proxy) before cloning for main storage\n            const clonedMainSessionData = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.deepClone)(mainSessionData);\n            await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.setItemAsync)(this.storage, this.storageKey, clonedMainSessionData);\n        }\n        else {\n            // No userStorage is configured.\n            // In this case, session.user should ideally not be a proxy.\n            // If it were, structuredClone would fail. This implies an issue elsewhere if user is a proxy here\n            const clonedSession = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.deepClone)(sessionToProcess); // sessionToProcess still has its original user property\n            await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.setItemAsync)(this.storage, this.storageKey, clonedSession);\n        }\n    }\n    async _removeSession() {\n        this._debug('#_removeSession()');\n        await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.removeItemAsync)(this.storage, this.storageKey);\n        await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.removeItemAsync)(this.storage, this.storageKey + '-code-verifier');\n        await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.removeItemAsync)(this.storage, this.storageKey + '-user');\n        if (this.userStorage) {\n            await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.removeItemAsync)(this.userStorage, this.storageKey + '-user');\n        }\n        await this._notifyAllSubscribers('SIGNED_OUT', null);\n    }\n    /**\n     * Removes any registered visibilitychange callback.\n     *\n     * {@see #startAutoRefresh}\n     * {@see #stopAutoRefresh}\n     */\n    _removeVisibilityChangedCallback() {\n        this._debug('#_removeVisibilityChangedCallback()');\n        const callback = this.visibilityChangedCallback;\n        this.visibilityChangedCallback = null;\n        try {\n            if (callback && (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() && (window === null || window === void 0 ? void 0 : window.removeEventListener)) {\n                window.removeEventListener('visibilitychange', callback);\n            }\n        }\n        catch (e) {\n            console.error('removing visibilitychange callback failed', e);\n        }\n    }\n    /**\n     * This is the private implementation of {@link #startAutoRefresh}. Use this\n     * within the library.\n     */\n    async _startAutoRefresh() {\n        await this._stopAutoRefresh();\n        this._debug('#_startAutoRefresh()');\n        const ticker = setInterval(() => this._autoRefreshTokenTick(), _lib_constants__WEBPACK_IMPORTED_MODULE_1__.AUTO_REFRESH_TICK_DURATION_MS);\n        this.autoRefreshTicker = ticker;\n        if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\n            // ticker is a NodeJS Timeout object that has an `unref` method\n            // https://nodejs.org/api/timers.html#timeoutunref\n            // When auto refresh is used in NodeJS (like for testing) the\n            // `setInterval` is preventing the process from being marked as\n            // finished and tests run endlessly. This can be prevented by calling\n            // `unref()` on the returned object.\n            ticker.unref();\n            // @ts-expect-error TS has no context of Deno\n        }\n        else if (typeof Deno !== 'undefined' && typeof Deno.unrefTimer === 'function') {\n            // similar like for NodeJS, but with the Deno API\n            // https://deno.land/api@latest?unstable&s=Deno.unrefTimer\n            // @ts-expect-error TS has no context of Deno\n            Deno.unrefTimer(ticker);\n        }\n        // run the tick immediately, but in the next pass of the event loop so that\n        // #_initialize can be allowed to complete without recursively waiting on\n        // itself\n        setTimeout(async () => {\n            await this.initializePromise;\n            await this._autoRefreshTokenTick();\n        }, 0);\n    }\n    /**\n     * This is the private implementation of {@link #stopAutoRefresh}. Use this\n     * within the library.\n     */\n    async _stopAutoRefresh() {\n        this._debug('#_stopAutoRefresh()');\n        const ticker = this.autoRefreshTicker;\n        this.autoRefreshTicker = null;\n        if (ticker) {\n            clearInterval(ticker);\n        }\n    }\n    /**\n     * Starts an auto-refresh process in the background. The session is checked\n     * every few seconds. Close to the time of expiration a process is started to\n     * refresh the session. If refreshing fails it will be retried for as long as\n     * necessary.\n     *\n     * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\n     * to call this function, it will be called for you.\n     *\n     * On browsers the refresh process works only when the tab/window is in the\n     * foreground to conserve resources as well as prevent race conditions and\n     * flooding auth with requests. If you call this method any managed\n     * visibility change callback will be removed and you must manage visibility\n     * changes on your own.\n     *\n     * On non-browser platforms the refresh process works *continuously* in the\n     * background, which may not be desirable. You should hook into your\n     * platform's foreground indication mechanism and call these methods\n     * appropriately to conserve resources.\n     *\n     * {@see #stopAutoRefresh}\n     */\n    async startAutoRefresh() {\n        this._removeVisibilityChangedCallback();\n        await this._startAutoRefresh();\n    }\n    /**\n     * Stops an active auto refresh process running in the background (if any).\n     *\n     * If you call this method any managed visibility change callback will be\n     * removed and you must manage visibility changes on your own.\n     *\n     * See {@link #startAutoRefresh} for more details.\n     */\n    async stopAutoRefresh() {\n        this._removeVisibilityChangedCallback();\n        await this._stopAutoRefresh();\n    }\n    /**\n     * Runs the auto refresh token tick.\n     */\n    async _autoRefreshTokenTick() {\n        this._debug('#_autoRefreshTokenTick()', 'begin');\n        try {\n            await this._acquireLock(0, async () => {\n                try {\n                    const now = Date.now();\n                    try {\n                        return await this._useSession(async (result) => {\n                            const { data: { session }, } = result;\n                            if (!session || !session.refresh_token || !session.expires_at) {\n                                this._debug('#_autoRefreshTokenTick()', 'no session');\n                                return;\n                            }\n                            // session will expire in this many ticks (or has already expired if <= 0)\n                            const expiresInTicks = Math.floor((session.expires_at * 1000 - now) / _lib_constants__WEBPACK_IMPORTED_MODULE_1__.AUTO_REFRESH_TICK_DURATION_MS);\n                            this._debug('#_autoRefreshTokenTick()', `access token expires in ${expiresInTicks} ticks, a tick lasts ${_lib_constants__WEBPACK_IMPORTED_MODULE_1__.AUTO_REFRESH_TICK_DURATION_MS}ms, refresh threshold is ${_lib_constants__WEBPACK_IMPORTED_MODULE_1__.AUTO_REFRESH_TICK_THRESHOLD} ticks`);\n                            if (expiresInTicks <= _lib_constants__WEBPACK_IMPORTED_MODULE_1__.AUTO_REFRESH_TICK_THRESHOLD) {\n                                await this._callRefreshToken(session.refresh_token);\n                            }\n                        });\n                    }\n                    catch (e) {\n                        console.error('Auto refresh tick failed with error. This is likely a transient error.', e);\n                    }\n                }\n                finally {\n                    this._debug('#_autoRefreshTokenTick()', 'end');\n                }\n            });\n        }\n        catch (e) {\n            if (e.isAcquireTimeout || e instanceof _lib_locks__WEBPACK_IMPORTED_MODULE_8__.LockAcquireTimeoutError) {\n                this._debug('auto refresh token tick lock not available');\n            }\n            else {\n                throw e;\n            }\n        }\n    }\n    /**\n     * Registers callbacks on the browser / platform, which in-turn run\n     * algorithms when the browser window/tab are in foreground. On non-browser\n     * platforms it assumes always foreground.\n     */\n    async _handleVisibilityChange() {\n        this._debug('#_handleVisibilityChange()');\n        if (!(0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n            if (this.autoRefreshToken) {\n                // in non-browser environments the refresh token ticker runs always\n                this.startAutoRefresh();\n            }\n            return false;\n        }\n        try {\n            this.visibilityChangedCallback = async () => await this._onVisibilityChanged(false);\n            window === null || window === void 0 ? void 0 : window.addEventListener('visibilitychange', this.visibilityChangedCallback);\n            // now immediately call the visbility changed callback to setup with the\n            // current visbility state\n            await this._onVisibilityChanged(true); // initial call\n        }\n        catch (error) {\n            console.error('_handleVisibilityChange', error);\n        }\n    }\n    /**\n     * Callback registered with `window.addEventListener('visibilitychange')`.\n     */\n    async _onVisibilityChanged(calledFromInitialize) {\n        const methodName = `#_onVisibilityChanged(${calledFromInitialize})`;\n        this._debug(methodName, 'visibilityState', document.visibilityState);\n        if (document.visibilityState === 'visible') {\n            if (this.autoRefreshToken) {\n                // in browser environments the refresh token ticker runs only on focused tabs\n                // which prevents race conditions\n                this._startAutoRefresh();\n            }\n            if (!calledFromInitialize) {\n                // called when the visibility has changed, i.e. the browser\n                // transitioned from hidden -> visible so we need to see if the session\n                // should be recovered immediately... but to do that we need to acquire\n                // the lock first asynchronously\n                await this.initializePromise;\n                await this._acquireLock(-1, async () => {\n                    if (document.visibilityState !== 'visible') {\n                        this._debug(methodName, 'acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting');\n                        // visibility has changed while waiting for the lock, abort\n                        return;\n                    }\n                    // recover the session\n                    await this._recoverAndRefresh();\n                });\n            }\n        }\n        else if (document.visibilityState === 'hidden') {\n            if (this.autoRefreshToken) {\n                this._stopAutoRefresh();\n            }\n        }\n    }\n    /**\n     * Generates the relevant login URL for a third-party provider.\n     * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n     * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n     */\n    async _getUrlForProvider(url, provider, options) {\n        const urlParams = [`provider=${encodeURIComponent(provider)}`];\n        if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n            urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);\n        }\n        if (options === null || options === void 0 ? void 0 : options.scopes) {\n            urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`);\n        }\n        if (this.flowType === 'pkce') {\n            const [codeChallenge, codeChallengeMethod] = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n            const flowParams = new URLSearchParams({\n                code_challenge: `${encodeURIComponent(codeChallenge)}`,\n                code_challenge_method: `${encodeURIComponent(codeChallengeMethod)}`,\n            });\n            urlParams.push(flowParams.toString());\n        }\n        if (options === null || options === void 0 ? void 0 : options.queryParams) {\n            const query = new URLSearchParams(options.queryParams);\n            urlParams.push(query.toString());\n        }\n        if (options === null || options === void 0 ? void 0 : options.skipBrowserRedirect) {\n            urlParams.push(`skip_http_redirect=${options.skipBrowserRedirect}`);\n        }\n        return `${url}?${urlParams.join('&')}`;\n    }\n    async _unenroll(params) {\n        try {\n            return await this._useSession(async (result) => {\n                var _a;\n                const { data: sessionData, error: sessionError } = result;\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'DELETE', `${this.url}/factors/${params.factorId}`, {\n                    headers: this.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                });\n            });\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    async _enroll(params) {\n        try {\n            return await this._useSession(async (result) => {\n                var _a, _b;\n                const { data: sessionData, error: sessionError } = result;\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                const body = Object.assign({ friendly_name: params.friendlyName, factor_type: params.factorType }, (params.factorType === 'phone' ? { phone: params.phone } : { issuer: params.issuer }));\n                const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/factors`, {\n                    body,\n                    headers: this.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                });\n                if (error) {\n                    return { data: null, error };\n                }\n                if (params.factorType === 'totp' && ((_b = data === null || data === void 0 ? void 0 : data.totp) === null || _b === void 0 ? void 0 : _b.qr_code)) {\n                    data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`;\n                }\n                return { data, error: null };\n            });\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * {@see GoTrueMFAApi#verify}\n     */\n    async _verify(params) {\n        return this._acquireLock(-1, async () => {\n            try {\n                return await this._useSession(async (result) => {\n                    var _a;\n                    const { data: sessionData, error: sessionError } = result;\n                    if (sessionError) {\n                        return { data: null, error: sessionError };\n                    }\n                    const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/verify`, {\n                        body: { code: params.code, challenge_id: params.challengeId },\n                        headers: this.headers,\n                        jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                    });\n                    if (error) {\n                        return { data: null, error };\n                    }\n                    await this._saveSession(Object.assign({ expires_at: Math.round(Date.now() / 1000) + data.expires_in }, data));\n                    await this._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data);\n                    return { data, error };\n                });\n            }\n            catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#challenge}\n     */\n    async _challenge(params) {\n        return this._acquireLock(-1, async () => {\n            try {\n                return await this._useSession(async (result) => {\n                    var _a;\n                    const { data: sessionData, error: sessionError } = result;\n                    if (sessionError) {\n                        return { data: null, error: sessionError };\n                    }\n                    return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/challenge`, {\n                        body: { channel: params.channel },\n                        headers: this.headers,\n                        jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                    });\n                });\n            }\n            catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#challengeAndVerify}\n     */\n    async _challengeAndVerify(params) {\n        // both _challenge and _verify independently acquire the lock, so no need\n        // to acquire it here\n        const { data: challengeData, error: challengeError } = await this._challenge({\n            factorId: params.factorId,\n        });\n        if (challengeError) {\n            return { data: null, error: challengeError };\n        }\n        return await this._verify({\n            factorId: params.factorId,\n            challengeId: challengeData.id,\n            code: params.code,\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#listFactors}\n     */\n    async _listFactors() {\n        // use #getUser instead of #_getUser as the former acquires a lock\n        const { data: { user }, error: userError, } = await this.getUser();\n        if (userError) {\n            return { data: null, error: userError };\n        }\n        const factors = (user === null || user === void 0 ? void 0 : user.factors) || [];\n        const totp = factors.filter((factor) => factor.factor_type === 'totp' && factor.status === 'verified');\n        const phone = factors.filter((factor) => factor.factor_type === 'phone' && factor.status === 'verified');\n        return {\n            data: {\n                all: factors,\n                totp,\n                phone,\n            },\n            error: null,\n        };\n    }\n    /**\n     * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n     */\n    async _getAuthenticatorAssuranceLevel() {\n        return this._acquireLock(-1, async () => {\n            return await this._useSession(async (result) => {\n                var _a, _b;\n                const { data: { session }, error: sessionError, } = result;\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                if (!session) {\n                    return {\n                        data: { currentLevel: null, nextLevel: null, currentAuthenticationMethods: [] },\n                        error: null,\n                    };\n                }\n                const { payload } = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.decodeJWT)(session.access_token);\n                let currentLevel = null;\n                if (payload.aal) {\n                    currentLevel = payload.aal;\n                }\n                let nextLevel = currentLevel;\n                const verifiedFactors = (_b = (_a = session.user.factors) === null || _a === void 0 ? void 0 : _a.filter((factor) => factor.status === 'verified')) !== null && _b !== void 0 ? _b : [];\n                if (verifiedFactors.length > 0) {\n                    nextLevel = 'aal2';\n                }\n                const currentAuthenticationMethods = payload.amr || [];\n                return { data: { currentLevel, nextLevel, currentAuthenticationMethods }, error: null };\n            });\n        });\n    }\n    async fetchJwk(kid, jwks = { keys: [] }) {\n        // try fetching from the supplied jwks\n        let jwk = jwks.keys.find((key) => key.kid === kid);\n        if (jwk) {\n            return jwk;\n        }\n        const now = Date.now();\n        // try fetching from cache\n        jwk = this.jwks.keys.find((key) => key.kid === kid);\n        // jwk exists and jwks isn't stale\n        if (jwk && this.jwks_cached_at + _lib_constants__WEBPACK_IMPORTED_MODULE_1__.JWKS_TTL > now) {\n            return jwk;\n        }\n        // jwk isn't cached in memory so we need to fetch it from the well-known endpoint\n        const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, 'GET', `${this.url}/.well-known/jwks.json`, {\n            headers: this.headers,\n        });\n        if (error) {\n            throw error;\n        }\n        if (!data.keys || data.keys.length === 0) {\n            return null;\n        }\n        this.jwks = data;\n        this.jwks_cached_at = now;\n        // Find the signing key\n        jwk = data.keys.find((key) => key.kid === kid);\n        if (!jwk) {\n            return null;\n        }\n        return jwk;\n    }\n    /**\n     * Extracts the JWT claims present in the access token by first verifying the\n     * JWT against the server's JSON Web Key Set endpoint\n     * `/.well-known/jwks.json` which is often cached, resulting in significantly\n     * faster responses. Prefer this method over {@link #getUser} which always\n     * sends a request to the Auth server for each JWT.\n     *\n     * If the project is not using an asymmetric JWT signing key (like ECC or\n     * RSA) it always sends a request to the Auth server (similar to {@link\n     * #getUser}) to verify the JWT.\n     *\n     * @param jwt An optional specific JWT you wish to verify, not the one you\n     *            can obtain from {@link #getSession}.\n     * @param options Various additional options that allow you to customize the\n     *                behavior of this method.\n     */\n    async getClaims(jwt, options = {}) {\n        try {\n            let token = jwt;\n            if (!token) {\n                const { data, error } = await this.getSession();\n                if (error || !data.session) {\n                    return { data: null, error };\n                }\n                token = data.session.access_token;\n            }\n            const { header, payload, signature, raw: { header: rawHeader, payload: rawPayload }, } = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.decodeJWT)(token);\n            if (!(options === null || options === void 0 ? void 0 : options.allowExpired)) {\n                // Reject expired JWTs should only happen if jwt argument was passed\n                (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.validateExp)(payload.exp);\n            }\n            const signingKey = !header.alg ||\n                header.alg.startsWith('HS') ||\n                !header.kid ||\n                !('crypto' in globalThis && 'subtle' in globalThis.crypto)\n                ? null\n                : await this.fetchJwk(header.kid, (options === null || options === void 0 ? void 0 : options.keys) ? { keys: options.keys } : options === null || options === void 0 ? void 0 : options.jwks);\n            // If symmetric algorithm or WebCrypto API is unavailable, fallback to getUser()\n            if (!signingKey) {\n                const { error } = await this.getUser(token);\n                if (error) {\n                    throw error;\n                }\n                // getUser succeeds so the claims in the JWT can be trusted\n                return {\n                    data: {\n                        claims: payload,\n                        header,\n                        signature,\n                    },\n                    error: null,\n                };\n            }\n            const algorithm = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getAlgorithm)(header.alg);\n            // Convert JWK to CryptoKey\n            const publicKey = await crypto.subtle.importKey('jwk', signingKey, algorithm, true, [\n                'verify',\n            ]);\n            // Verify the signature\n            const isValid = await crypto.subtle.verify(algorithm, publicKey, signature, (0,_lib_base64url__WEBPACK_IMPORTED_MODULE_9__.stringToUint8Array)(`${rawHeader}.${rawPayload}`));\n            if (!isValid) {\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidJwtError('Invalid JWT signature');\n            }\n            // If verification succeeds, decode and return claims\n            return {\n                data: {\n                    claims: payload,\n                    header,\n                    signature,\n                },\n                error: null,\n            };\n        }\n        catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n}\nGoTrueClient.nextInstanceID = 0;\n//# sourceMappingURL=GoTrueClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/auth-js/dist/module/GoTrueClient.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/auth-js/dist/module/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/index.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthAdminApi: function() { return /* reexport safe */ _AuthAdminApi__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; },\n/* harmony export */   AuthClient: function() { return /* reexport safe */ _AuthClient__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; },\n/* harmony export */   GoTrueAdminApi: function() { return /* reexport safe */ _GoTrueAdminApi__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; },\n/* harmony export */   GoTrueClient: function() { return /* reexport safe */ _GoTrueClient__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; },\n/* harmony export */   NavigatorLockAcquireTimeoutError: function() { return /* reexport safe */ _lib_locks__WEBPACK_IMPORTED_MODULE_6__.NavigatorLockAcquireTimeoutError; },\n/* harmony export */   lockInternals: function() { return /* reexport safe */ _lib_locks__WEBPACK_IMPORTED_MODULE_6__.internals; },\n/* harmony export */   navigatorLock: function() { return /* reexport safe */ _lib_locks__WEBPACK_IMPORTED_MODULE_6__.navigatorLock; },\n/* harmony export */   processLock: function() { return /* reexport safe */ _lib_locks__WEBPACK_IMPORTED_MODULE_6__.processLock; }\n/* harmony export */ });\n/* harmony import */ var _GoTrueAdminApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GoTrueAdminApi */ \"./node_modules/@supabase/auth-js/dist/module/GoTrueAdminApi.js\");\n/* harmony import */ var _GoTrueClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GoTrueClient */ \"./node_modules/@supabase/auth-js/dist/module/GoTrueClient.js\");\n/* harmony import */ var _AuthAdminApi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AuthAdminApi */ \"./node_modules/@supabase/auth-js/dist/module/AuthAdminApi.js\");\n/* harmony import */ var _AuthClient__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./AuthClient */ \"./node_modules/@supabase/auth-js/dist/module/AuthClient.js\");\n/* harmony import */ var _lib_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/types */ \"./node_modules/@supabase/auth-js/dist/module/lib/types.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _lib_types__WEBPACK_IMPORTED_MODULE_4__) if([\"default\",\"GoTrueAdminApi\",\"GoTrueClient\",\"AuthAdminApi\",\"AuthClient\",\"navigatorLock\",\"NavigatorLockAcquireTimeoutError\",\"lockInternals\",\"processLock\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _lib_types__WEBPACK_IMPORTED_MODULE_4__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/errors */ \"./node_modules/@supabase/auth-js/dist/module/lib/errors.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _lib_errors__WEBPACK_IMPORTED_MODULE_5__) if([\"default\",\"GoTrueAdminApi\",\"GoTrueClient\",\"AuthAdminApi\",\"AuthClient\",\"navigatorLock\",\"NavigatorLockAcquireTimeoutError\",\"lockInternals\",\"processLock\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _lib_errors__WEBPACK_IMPORTED_MODULE_5__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _lib_locks__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lib/locks */ \"./node_modules/@supabase/auth-js/dist/module/lib/locks.js\");\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2F1dGgtanMvZGlzdC9tb2R1bGUvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQThDO0FBQ0o7QUFDQTtBQUNKO0FBQzRCO0FBQ3RDO0FBQ0M7QUFDMkY7QUFDeEgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9hdXRoLWpzL2Rpc3QvbW9kdWxlL2luZGV4LmpzPzU1MDgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdvVHJ1ZUFkbWluQXBpIGZyb20gJy4vR29UcnVlQWRtaW5BcGknO1xuaW1wb3J0IEdvVHJ1ZUNsaWVudCBmcm9tICcuL0dvVHJ1ZUNsaWVudCc7XG5pbXBvcnQgQXV0aEFkbWluQXBpIGZyb20gJy4vQXV0aEFkbWluQXBpJztcbmltcG9ydCBBdXRoQ2xpZW50IGZyb20gJy4vQXV0aENsaWVudCc7XG5leHBvcnQgeyBHb1RydWVBZG1pbkFwaSwgR29UcnVlQ2xpZW50LCBBdXRoQWRtaW5BcGksIEF1dGhDbGllbnQgfTtcbmV4cG9ydCAqIGZyb20gJy4vbGliL3R5cGVzJztcbmV4cG9ydCAqIGZyb20gJy4vbGliL2Vycm9ycyc7XG5leHBvcnQgeyBuYXZpZ2F0b3JMb2NrLCBOYXZpZ2F0b3JMb2NrQWNxdWlyZVRpbWVvdXRFcnJvciwgaW50ZXJuYWxzIGFzIGxvY2tJbnRlcm5hbHMsIHByb2Nlc3NMb2NrLCB9IGZyb20gJy4vbGliL2xvY2tzJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@supabase/auth-js/dist/module/index.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/auth-js/dist/module/lib/base64url.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/base64url.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64UrlToUint8Array: function() { return /* binding */ base64UrlToUint8Array; },\n/* harmony export */   byteFromBase64URL: function() { return /* binding */ byteFromBase64URL; },\n/* harmony export */   byteToBase64URL: function() { return /* binding */ byteToBase64URL; },\n/* harmony export */   bytesToBase64URL: function() { return /* binding */ bytesToBase64URL; },\n/* harmony export */   codepointToUTF8: function() { return /* binding */ codepointToUTF8; },\n/* harmony export */   stringFromBase64URL: function() { return /* binding */ stringFromBase64URL; },\n/* harmony export */   stringFromUTF8: function() { return /* binding */ stringFromUTF8; },\n/* harmony export */   stringToBase64URL: function() { return /* binding */ stringToBase64URL; },\n/* harmony export */   stringToUTF8: function() { return /* binding */ stringToUTF8; },\n/* harmony export */   stringToUint8Array: function() { return /* binding */ stringToUint8Array; }\n/* harmony export */ });\n/**\n * Avoid modifying this file. It's part of\n * https://github.com/supabase-community/base64url-js.  Submit all fixes on\n * that repo!\n */\n/**\n * An array of characters that encode 6 bits into a Base64-URL alphabet\n * character.\n */\nconst TO_BASE64URL = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'.split('');\n/**\n * An array of characters that can appear in a Base64-URL encoded string but\n * should be ignored.\n */\nconst IGNORE_BASE64URL = ' \\t\\n\\r='.split('');\n/**\n * An array of 128 numbers that map a Base64-URL character to 6 bits, or if -2\n * used to skip the character, or if -1 used to error out.\n */\nconst FROM_BASE64URL = (() => {\n    const charMap = new Array(128);\n    for (let i = 0; i < charMap.length; i += 1) {\n        charMap[i] = -1;\n    }\n    for (let i = 0; i < IGNORE_BASE64URL.length; i += 1) {\n        charMap[IGNORE_BASE64URL[i].charCodeAt(0)] = -2;\n    }\n    for (let i = 0; i < TO_BASE64URL.length; i += 1) {\n        charMap[TO_BASE64URL[i].charCodeAt(0)] = i;\n    }\n    return charMap;\n})();\n/**\n * Converts a byte to a Base64-URL string.\n *\n * @param byte The byte to convert, or null to flush at the end of the byte sequence.\n * @param state The Base64 conversion state. Pass an initial value of `{ queue: 0, queuedBits: 0 }`.\n * @param emit A function called with the next Base64 character when ready.\n */\nfunction byteToBase64URL(byte, state, emit) {\n    if (byte !== null) {\n        state.queue = (state.queue << 8) | byte;\n        state.queuedBits += 8;\n        while (state.queuedBits >= 6) {\n            const pos = (state.queue >> (state.queuedBits - 6)) & 63;\n            emit(TO_BASE64URL[pos]);\n            state.queuedBits -= 6;\n        }\n    }\n    else if (state.queuedBits > 0) {\n        state.queue = state.queue << (6 - state.queuedBits);\n        state.queuedBits = 6;\n        while (state.queuedBits >= 6) {\n            const pos = (state.queue >> (state.queuedBits - 6)) & 63;\n            emit(TO_BASE64URL[pos]);\n            state.queuedBits -= 6;\n        }\n    }\n}\n/**\n * Converts a String char code (extracted using `string.charCodeAt(position)`) to a sequence of Base64-URL characters.\n *\n * @param charCode The char code of the JavaScript string.\n * @param state The Base64 state. Pass an initial value of `{ queue: 0, queuedBits: 0 }`.\n * @param emit A function called with the next byte.\n */\nfunction byteFromBase64URL(charCode, state, emit) {\n    const bits = FROM_BASE64URL[charCode];\n    if (bits > -1) {\n        // valid Base64-URL character\n        state.queue = (state.queue << 6) | bits;\n        state.queuedBits += 6;\n        while (state.queuedBits >= 8) {\n            emit((state.queue >> (state.queuedBits - 8)) & 0xff);\n            state.queuedBits -= 8;\n        }\n    }\n    else if (bits === -2) {\n        // ignore spaces, tabs, newlines, =\n        return;\n    }\n    else {\n        throw new Error(`Invalid Base64-URL character \"${String.fromCharCode(charCode)}\"`);\n    }\n}\n/**\n * Converts a JavaScript string (which may include any valid character) into a\n * Base64-URL encoded string. The string is first encoded in UTF-8 which is\n * then encoded as Base64-URL.\n *\n * @param str The string to convert.\n */\nfunction stringToBase64URL(str) {\n    const base64 = [];\n    const emitter = (char) => {\n        base64.push(char);\n    };\n    const state = { queue: 0, queuedBits: 0 };\n    stringToUTF8(str, (byte) => {\n        byteToBase64URL(byte, state, emitter);\n    });\n    byteToBase64URL(null, state, emitter);\n    return base64.join('');\n}\n/**\n * Converts a Base64-URL encoded string into a JavaScript string. It is assumed\n * that the underlying string has been encoded as UTF-8.\n *\n * @param str The Base64-URL encoded string.\n */\nfunction stringFromBase64URL(str) {\n    const conv = [];\n    const utf8Emit = (codepoint) => {\n        conv.push(String.fromCodePoint(codepoint));\n    };\n    const utf8State = {\n        utf8seq: 0,\n        codepoint: 0,\n    };\n    const b64State = { queue: 0, queuedBits: 0 };\n    const byteEmit = (byte) => {\n        stringFromUTF8(byte, utf8State, utf8Emit);\n    };\n    for (let i = 0; i < str.length; i += 1) {\n        byteFromBase64URL(str.charCodeAt(i), b64State, byteEmit);\n    }\n    return conv.join('');\n}\n/**\n * Converts a Unicode codepoint to a multi-byte UTF-8 sequence.\n *\n * @param codepoint The Unicode codepoint.\n * @param emit      Function which will be called for each UTF-8 byte that represents the codepoint.\n */\nfunction codepointToUTF8(codepoint, emit) {\n    if (codepoint <= 0x7f) {\n        emit(codepoint);\n        return;\n    }\n    else if (codepoint <= 0x7ff) {\n        emit(0xc0 | (codepoint >> 6));\n        emit(0x80 | (codepoint & 0x3f));\n        return;\n    }\n    else if (codepoint <= 0xffff) {\n        emit(0xe0 | (codepoint >> 12));\n        emit(0x80 | ((codepoint >> 6) & 0x3f));\n        emit(0x80 | (codepoint & 0x3f));\n        return;\n    }\n    else if (codepoint <= 0x10ffff) {\n        emit(0xf0 | (codepoint >> 18));\n        emit(0x80 | ((codepoint >> 12) & 0x3f));\n        emit(0x80 | ((codepoint >> 6) & 0x3f));\n        emit(0x80 | (codepoint & 0x3f));\n        return;\n    }\n    throw new Error(`Unrecognized Unicode codepoint: ${codepoint.toString(16)}`);\n}\n/**\n * Converts a JavaScript string to a sequence of UTF-8 bytes.\n *\n * @param str  The string to convert to UTF-8.\n * @param emit Function which will be called for each UTF-8 byte of the string.\n */\nfunction stringToUTF8(str, emit) {\n    for (let i = 0; i < str.length; i += 1) {\n        let codepoint = str.charCodeAt(i);\n        if (codepoint > 0xd7ff && codepoint <= 0xdbff) {\n            // most UTF-16 codepoints are Unicode codepoints, except values in this\n            // range where the next UTF-16 codepoint needs to be combined with the\n            // current one to get the Unicode codepoint\n            const highSurrogate = ((codepoint - 0xd800) * 0x400) & 0xffff;\n            const lowSurrogate = (str.charCodeAt(i + 1) - 0xdc00) & 0xffff;\n            codepoint = (lowSurrogate | highSurrogate) + 0x10000;\n            i += 1;\n        }\n        codepointToUTF8(codepoint, emit);\n    }\n}\n/**\n * Converts a UTF-8 byte to a Unicode codepoint.\n *\n * @param byte  The UTF-8 byte next in the sequence.\n * @param state The shared state between consecutive UTF-8 bytes in the\n *              sequence, an object with the shape `{ utf8seq: 0, codepoint: 0 }`.\n * @param emit  Function which will be called for each codepoint.\n */\nfunction stringFromUTF8(byte, state, emit) {\n    if (state.utf8seq === 0) {\n        if (byte <= 0x7f) {\n            emit(byte);\n            return;\n        }\n        // count the number of 1 leading bits until you reach 0\n        for (let leadingBit = 1; leadingBit < 6; leadingBit += 1) {\n            if (((byte >> (7 - leadingBit)) & 1) === 0) {\n                state.utf8seq = leadingBit;\n                break;\n            }\n        }\n        if (state.utf8seq === 2) {\n            state.codepoint = byte & 31;\n        }\n        else if (state.utf8seq === 3) {\n            state.codepoint = byte & 15;\n        }\n        else if (state.utf8seq === 4) {\n            state.codepoint = byte & 7;\n        }\n        else {\n            throw new Error('Invalid UTF-8 sequence');\n        }\n        state.utf8seq -= 1;\n    }\n    else if (state.utf8seq > 0) {\n        if (byte <= 0x7f) {\n            throw new Error('Invalid UTF-8 sequence');\n        }\n        state.codepoint = (state.codepoint << 6) | (byte & 63);\n        state.utf8seq -= 1;\n        if (state.utf8seq === 0) {\n            emit(state.codepoint);\n        }\n    }\n}\n/**\n * Helper functions to convert different types of strings to Uint8Array\n */\nfunction base64UrlToUint8Array(str) {\n    const result = [];\n    const state = { queue: 0, queuedBits: 0 };\n    const onByte = (byte) => {\n        result.push(byte);\n    };\n    for (let i = 0; i < str.length; i += 1) {\n        byteFromBase64URL(str.charCodeAt(i), state, onByte);\n    }\n    return new Uint8Array(result);\n}\nfunction stringToUint8Array(str) {\n    const result = [];\n    stringToUTF8(str, (byte) => result.push(byte));\n    return new Uint8Array(result);\n}\nfunction bytesToBase64URL(bytes) {\n    const result = [];\n    const state = { queue: 0, queuedBits: 0 };\n    const onChar = (char) => {\n        result.push(char);\n    };\n    bytes.forEach((byte) => byteToBase64URL(byte, state, onChar));\n    // always call with `null` after processing all bytes\n    byteToBase64URL(null, state, onChar);\n    return result.join('');\n}\n//# sourceMappingURL=base64url.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/auth-js/dist/module/lib/base64url.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/auth-js/dist/module/lib/constants.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/constants.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API_VERSIONS: function() { return /* binding */ API_VERSIONS; },\n/* harmony export */   API_VERSION_HEADER_NAME: function() { return /* binding */ API_VERSION_HEADER_NAME; },\n/* harmony export */   AUDIENCE: function() { return /* binding */ AUDIENCE; },\n/* harmony export */   AUTO_REFRESH_TICK_DURATION_MS: function() { return /* binding */ AUTO_REFRESH_TICK_DURATION_MS; },\n/* harmony export */   AUTO_REFRESH_TICK_THRESHOLD: function() { return /* binding */ AUTO_REFRESH_TICK_THRESHOLD; },\n/* harmony export */   BASE64URL_REGEX: function() { return /* binding */ BASE64URL_REGEX; },\n/* harmony export */   DEFAULT_HEADERS: function() { return /* binding */ DEFAULT_HEADERS; },\n/* harmony export */   EXPIRY_MARGIN_MS: function() { return /* binding */ EXPIRY_MARGIN_MS; },\n/* harmony export */   GOTRUE_URL: function() { return /* binding */ GOTRUE_URL; },\n/* harmony export */   JWKS_TTL: function() { return /* binding */ JWKS_TTL; },\n/* harmony export */   NETWORK_FAILURE: function() { return /* binding */ NETWORK_FAILURE; },\n/* harmony export */   STORAGE_KEY: function() { return /* binding */ STORAGE_KEY; }\n/* harmony export */ });\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version */ \"./node_modules/@supabase/auth-js/dist/module/lib/version.js\");\n\n/** Current session will be checked for refresh at this interval. */\nconst AUTO_REFRESH_TICK_DURATION_MS = 30 * 1000;\n/**\n * A token refresh will be attempted this many ticks before the current session expires. */\nconst AUTO_REFRESH_TICK_THRESHOLD = 3;\n/*\n * Earliest time before an access token expires that the session should be refreshed.\n */\nconst EXPIRY_MARGIN_MS = AUTO_REFRESH_TICK_THRESHOLD * AUTO_REFRESH_TICK_DURATION_MS;\nconst GOTRUE_URL = 'http://localhost:9999';\nconst STORAGE_KEY = 'supabase.auth.token';\nconst AUDIENCE = '';\nconst DEFAULT_HEADERS = { 'X-Client-Info': `gotrue-js/${_version__WEBPACK_IMPORTED_MODULE_0__.version}` };\nconst NETWORK_FAILURE = {\n    MAX_RETRIES: 10,\n    RETRY_INTERVAL: 2, // in deciseconds\n};\nconst API_VERSION_HEADER_NAME = 'X-Supabase-Api-Version';\nconst API_VERSIONS = {\n    '2024-01-01': {\n        timestamp: Date.parse('2024-01-01T00:00:00.0Z'),\n        name: '2024-01-01',\n    },\n};\nconst BASE64URL_REGEX = /^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}$|[a-z0-9_-]{2}$)$/i;\nconst JWKS_TTL = 10 * 60 * 1000; // 10 minutes\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2F1dGgtanMvZGlzdC9tb2R1bGUvbGliL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQW9DO0FBQ3BDO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiw4QkFBOEIsNkNBQU8sQ0FBQztBQUNoRTtBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ0E7QUFDUDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDTyxzQ0FBc0MsRUFBRSxnQkFBZ0IsRUFBRSxhQUFhLEVBQUU7QUFDekUsaUNBQWlDO0FBQ3hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9saWIvY29uc3RhbnRzLmpzP2YwNDgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdmVyc2lvbiB9IGZyb20gJy4vdmVyc2lvbic7XG4vKiogQ3VycmVudCBzZXNzaW9uIHdpbGwgYmUgY2hlY2tlZCBmb3IgcmVmcmVzaCBhdCB0aGlzIGludGVydmFsLiAqL1xuZXhwb3J0IGNvbnN0IEFVVE9fUkVGUkVTSF9USUNLX0RVUkFUSU9OX01TID0gMzAgKiAxMDAwO1xuLyoqXG4gKiBBIHRva2VuIHJlZnJlc2ggd2lsbCBiZSBhdHRlbXB0ZWQgdGhpcyBtYW55IHRpY2tzIGJlZm9yZSB0aGUgY3VycmVudCBzZXNzaW9uIGV4cGlyZXMuICovXG5leHBvcnQgY29uc3QgQVVUT19SRUZSRVNIX1RJQ0tfVEhSRVNIT0xEID0gMztcbi8qXG4gKiBFYXJsaWVzdCB0aW1lIGJlZm9yZSBhbiBhY2Nlc3MgdG9rZW4gZXhwaXJlcyB0aGF0IHRoZSBzZXNzaW9uIHNob3VsZCBiZSByZWZyZXNoZWQuXG4gKi9cbmV4cG9ydCBjb25zdCBFWFBJUllfTUFSR0lOX01TID0gQVVUT19SRUZSRVNIX1RJQ0tfVEhSRVNIT0xEICogQVVUT19SRUZSRVNIX1RJQ0tfRFVSQVRJT05fTVM7XG5leHBvcnQgY29uc3QgR09UUlVFX1VSTCA9ICdodHRwOi8vbG9jYWxob3N0Ojk5OTknO1xuZXhwb3J0IGNvbnN0IFNUT1JBR0VfS0VZID0gJ3N1cGFiYXNlLmF1dGgudG9rZW4nO1xuZXhwb3J0IGNvbnN0IEFVRElFTkNFID0gJyc7XG5leHBvcnQgY29uc3QgREVGQVVMVF9IRUFERVJTID0geyAnWC1DbGllbnQtSW5mbyc6IGBnb3RydWUtanMvJHt2ZXJzaW9ufWAgfTtcbmV4cG9ydCBjb25zdCBORVRXT1JLX0ZBSUxVUkUgPSB7XG4gICAgTUFYX1JFVFJJRVM6IDEwLFxuICAgIFJFVFJZX0lOVEVSVkFMOiAyLCAvLyBpbiBkZWNpc2Vjb25kc1xufTtcbmV4cG9ydCBjb25zdCBBUElfVkVSU0lPTl9IRUFERVJfTkFNRSA9ICdYLVN1cGFiYXNlLUFwaS1WZXJzaW9uJztcbmV4cG9ydCBjb25zdCBBUElfVkVSU0lPTlMgPSB7XG4gICAgJzIwMjQtMDEtMDEnOiB7XG4gICAgICAgIHRpbWVzdGFtcDogRGF0ZS5wYXJzZSgnMjAyNC0wMS0wMVQwMDowMDowMC4wWicpLFxuICAgICAgICBuYW1lOiAnMjAyNC0wMS0wMScsXG4gICAgfSxcbn07XG5leHBvcnQgY29uc3QgQkFTRTY0VVJMX1JFR0VYID0gL14oW2EtejAtOV8tXXs0fSkqKCR8W2EtejAtOV8tXXszfSR8W2EtejAtOV8tXXsyfSQpJC9pO1xuZXhwb3J0IGNvbnN0IEpXS1NfVFRMID0gMTAgKiA2MCAqIDEwMDA7IC8vIDEwIG1pbnV0ZXNcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@supabase/auth-js/dist/module/lib/constants.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/auth-js/dist/module/lib/errors.js":
/*!******************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/errors.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthApiError: function() { return /* binding */ AuthApiError; },\n/* harmony export */   AuthError: function() { return /* binding */ AuthError; },\n/* harmony export */   AuthImplicitGrantRedirectError: function() { return /* binding */ AuthImplicitGrantRedirectError; },\n/* harmony export */   AuthInvalidCredentialsError: function() { return /* binding */ AuthInvalidCredentialsError; },\n/* harmony export */   AuthInvalidJwtError: function() { return /* binding */ AuthInvalidJwtError; },\n/* harmony export */   AuthInvalidTokenResponseError: function() { return /* binding */ AuthInvalidTokenResponseError; },\n/* harmony export */   AuthPKCEGrantCodeExchangeError: function() { return /* binding */ AuthPKCEGrantCodeExchangeError; },\n/* harmony export */   AuthRetryableFetchError: function() { return /* binding */ AuthRetryableFetchError; },\n/* harmony export */   AuthSessionMissingError: function() { return /* binding */ AuthSessionMissingError; },\n/* harmony export */   AuthUnknownError: function() { return /* binding */ AuthUnknownError; },\n/* harmony export */   AuthWeakPasswordError: function() { return /* binding */ AuthWeakPasswordError; },\n/* harmony export */   CustomAuthError: function() { return /* binding */ CustomAuthError; },\n/* harmony export */   isAuthApiError: function() { return /* binding */ isAuthApiError; },\n/* harmony export */   isAuthError: function() { return /* binding */ isAuthError; },\n/* harmony export */   isAuthImplicitGrantRedirectError: function() { return /* binding */ isAuthImplicitGrantRedirectError; },\n/* harmony export */   isAuthRetryableFetchError: function() { return /* binding */ isAuthRetryableFetchError; },\n/* harmony export */   isAuthSessionMissingError: function() { return /* binding */ isAuthSessionMissingError; },\n/* harmony export */   isAuthWeakPasswordError: function() { return /* binding */ isAuthWeakPasswordError; }\n/* harmony export */ });\nclass AuthError extends Error {\n    constructor(message, status, code) {\n        super(message);\n        this.__isAuthError = true;\n        this.name = 'AuthError';\n        this.status = status;\n        this.code = code;\n    }\n}\nfunction isAuthError(error) {\n    return typeof error === 'object' && error !== null && '__isAuthError' in error;\n}\nclass AuthApiError extends AuthError {\n    constructor(message, status, code) {\n        super(message, status, code);\n        this.name = 'AuthApiError';\n        this.status = status;\n        this.code = code;\n    }\n}\nfunction isAuthApiError(error) {\n    return isAuthError(error) && error.name === 'AuthApiError';\n}\nclass AuthUnknownError extends AuthError {\n    constructor(message, originalError) {\n        super(message);\n        this.name = 'AuthUnknownError';\n        this.originalError = originalError;\n    }\n}\nclass CustomAuthError extends AuthError {\n    constructor(message, name, status, code) {\n        super(message, status, code);\n        this.name = name;\n        this.status = status;\n    }\n}\nclass AuthSessionMissingError extends CustomAuthError {\n    constructor() {\n        super('Auth session missing!', 'AuthSessionMissingError', 400, undefined);\n    }\n}\nfunction isAuthSessionMissingError(error) {\n    return isAuthError(error) && error.name === 'AuthSessionMissingError';\n}\nclass AuthInvalidTokenResponseError extends CustomAuthError {\n    constructor() {\n        super('Auth session or user missing', 'AuthInvalidTokenResponseError', 500, undefined);\n    }\n}\nclass AuthInvalidCredentialsError extends CustomAuthError {\n    constructor(message) {\n        super(message, 'AuthInvalidCredentialsError', 400, undefined);\n    }\n}\nclass AuthImplicitGrantRedirectError extends CustomAuthError {\n    constructor(message, details = null) {\n        super(message, 'AuthImplicitGrantRedirectError', 500, undefined);\n        this.details = null;\n        this.details = details;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n            details: this.details,\n        };\n    }\n}\nfunction isAuthImplicitGrantRedirectError(error) {\n    return isAuthError(error) && error.name === 'AuthImplicitGrantRedirectError';\n}\nclass AuthPKCEGrantCodeExchangeError extends CustomAuthError {\n    constructor(message, details = null) {\n        super(message, 'AuthPKCEGrantCodeExchangeError', 500, undefined);\n        this.details = null;\n        this.details = details;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n            details: this.details,\n        };\n    }\n}\nclass AuthRetryableFetchError extends CustomAuthError {\n    constructor(message, status) {\n        super(message, 'AuthRetryableFetchError', status, undefined);\n    }\n}\nfunction isAuthRetryableFetchError(error) {\n    return isAuthError(error) && error.name === 'AuthRetryableFetchError';\n}\n/**\n * This error is thrown on certain methods when the password used is deemed\n * weak. Inspect the reasons to identify what password strength rules are\n * inadequate.\n */\nclass AuthWeakPasswordError extends CustomAuthError {\n    constructor(message, status, reasons) {\n        super(message, 'AuthWeakPasswordError', status, 'weak_password');\n        this.reasons = reasons;\n    }\n}\nfunction isAuthWeakPasswordError(error) {\n    return isAuthError(error) && error.name === 'AuthWeakPasswordError';\n}\nclass AuthInvalidJwtError extends CustomAuthError {\n    constructor(message) {\n        super(message, 'AuthInvalidJwtError', 400, 'invalid_jwt');\n    }\n}\n//# sourceMappingURL=errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2F1dGgtanMvZGlzdC9tb2R1bGUvbGliL2Vycm9ycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9saWIvZXJyb3JzLmpzP2RkZWQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIEF1dGhFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBzdGF0dXMsIGNvZGUpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgICAgIHRoaXMuX19pc0F1dGhFcnJvciA9IHRydWU7XG4gICAgICAgIHRoaXMubmFtZSA9ICdBdXRoRXJyb3InO1xuICAgICAgICB0aGlzLnN0YXR1cyA9IHN0YXR1cztcbiAgICAgICAgdGhpcy5jb2RlID0gY29kZTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gaXNBdXRoRXJyb3IoZXJyb3IpIHtcbiAgICByZXR1cm4gdHlwZW9mIGVycm9yID09PSAnb2JqZWN0JyAmJiBlcnJvciAhPT0gbnVsbCAmJiAnX19pc0F1dGhFcnJvcicgaW4gZXJyb3I7XG59XG5leHBvcnQgY2xhc3MgQXV0aEFwaUVycm9yIGV4dGVuZHMgQXV0aEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBzdGF0dXMsIGNvZGUpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSwgc3RhdHVzLCBjb2RlKTtcbiAgICAgICAgdGhpcy5uYW1lID0gJ0F1dGhBcGlFcnJvcic7XG4gICAgICAgIHRoaXMuc3RhdHVzID0gc3RhdHVzO1xuICAgICAgICB0aGlzLmNvZGUgPSBjb2RlO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0F1dGhBcGlFcnJvcihlcnJvcikge1xuICAgIHJldHVybiBpc0F1dGhFcnJvcihlcnJvcikgJiYgZXJyb3IubmFtZSA9PT0gJ0F1dGhBcGlFcnJvcic7XG59XG5leHBvcnQgY2xhc3MgQXV0aFVua25vd25FcnJvciBleHRlbmRzIEF1dGhFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgb3JpZ2luYWxFcnJvcikge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgdGhpcy5uYW1lID0gJ0F1dGhVbmtub3duRXJyb3InO1xuICAgICAgICB0aGlzLm9yaWdpbmFsRXJyb3IgPSBvcmlnaW5hbEVycm9yO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBDdXN0b21BdXRoRXJyb3IgZXh0ZW5kcyBBdXRoRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIG5hbWUsIHN0YXR1cywgY29kZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlLCBzdGF0dXMsIGNvZGUpO1xuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLnN0YXR1cyA9IHN0YXR1cztcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgQXV0aFNlc3Npb25NaXNzaW5nRXJyb3IgZXh0ZW5kcyBDdXN0b21BdXRoRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcignQXV0aCBzZXNzaW9uIG1pc3NpbmchJywgJ0F1dGhTZXNzaW9uTWlzc2luZ0Vycm9yJywgNDAwLCB1bmRlZmluZWQpO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0F1dGhTZXNzaW9uTWlzc2luZ0Vycm9yKGVycm9yKSB7XG4gICAgcmV0dXJuIGlzQXV0aEVycm9yKGVycm9yKSAmJiBlcnJvci5uYW1lID09PSAnQXV0aFNlc3Npb25NaXNzaW5nRXJyb3InO1xufVxuZXhwb3J0IGNsYXNzIEF1dGhJbnZhbGlkVG9rZW5SZXNwb25zZUVycm9yIGV4dGVuZHMgQ3VzdG9tQXV0aEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoJ0F1dGggc2Vzc2lvbiBvciB1c2VyIG1pc3NpbmcnLCAnQXV0aEludmFsaWRUb2tlblJlc3BvbnNlRXJyb3InLCA1MDAsIHVuZGVmaW5lZCk7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIEF1dGhJbnZhbGlkQ3JlZGVudGlhbHNFcnJvciBleHRlbmRzIEN1c3RvbUF1dGhFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlLCAnQXV0aEludmFsaWRDcmVkZW50aWFsc0Vycm9yJywgNDAwLCB1bmRlZmluZWQpO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBBdXRoSW1wbGljaXRHcmFudFJlZGlyZWN0RXJyb3IgZXh0ZW5kcyBDdXN0b21BdXRoRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIGRldGFpbHMgPSBudWxsKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UsICdBdXRoSW1wbGljaXRHcmFudFJlZGlyZWN0RXJyb3InLCA1MDAsIHVuZGVmaW5lZCk7XG4gICAgICAgIHRoaXMuZGV0YWlscyA9IG51bGw7XG4gICAgICAgIHRoaXMuZGV0YWlscyA9IGRldGFpbHM7XG4gICAgfVxuICAgIHRvSlNPTigpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5hbWU6IHRoaXMubmFtZSxcbiAgICAgICAgICAgIG1lc3NhZ2U6IHRoaXMubWVzc2FnZSxcbiAgICAgICAgICAgIHN0YXR1czogdGhpcy5zdGF0dXMsXG4gICAgICAgICAgICBkZXRhaWxzOiB0aGlzLmRldGFpbHMsXG4gICAgICAgIH07XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGlzQXV0aEltcGxpY2l0R3JhbnRSZWRpcmVjdEVycm9yKGVycm9yKSB7XG4gICAgcmV0dXJuIGlzQXV0aEVycm9yKGVycm9yKSAmJiBlcnJvci5uYW1lID09PSAnQXV0aEltcGxpY2l0R3JhbnRSZWRpcmVjdEVycm9yJztcbn1cbmV4cG9ydCBjbGFzcyBBdXRoUEtDRUdyYW50Q29kZUV4Y2hhbmdlRXJyb3IgZXh0ZW5kcyBDdXN0b21BdXRoRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIGRldGFpbHMgPSBudWxsKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UsICdBdXRoUEtDRUdyYW50Q29kZUV4Y2hhbmdlRXJyb3InLCA1MDAsIHVuZGVmaW5lZCk7XG4gICAgICAgIHRoaXMuZGV0YWlscyA9IG51bGw7XG4gICAgICAgIHRoaXMuZGV0YWlscyA9IGRldGFpbHM7XG4gICAgfVxuICAgIHRvSlNPTigpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5hbWU6IHRoaXMubmFtZSxcbiAgICAgICAgICAgIG1lc3NhZ2U6IHRoaXMubWVzc2FnZSxcbiAgICAgICAgICAgIHN0YXR1czogdGhpcy5zdGF0dXMsXG4gICAgICAgICAgICBkZXRhaWxzOiB0aGlzLmRldGFpbHMsXG4gICAgICAgIH07XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIEF1dGhSZXRyeWFibGVGZXRjaEVycm9yIGV4dGVuZHMgQ3VzdG9tQXV0aEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBzdGF0dXMpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSwgJ0F1dGhSZXRyeWFibGVGZXRjaEVycm9yJywgc3RhdHVzLCB1bmRlZmluZWQpO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0F1dGhSZXRyeWFibGVGZXRjaEVycm9yKGVycm9yKSB7XG4gICAgcmV0dXJuIGlzQXV0aEVycm9yKGVycm9yKSAmJiBlcnJvci5uYW1lID09PSAnQXV0aFJldHJ5YWJsZUZldGNoRXJyb3InO1xufVxuLyoqXG4gKiBUaGlzIGVycm9yIGlzIHRocm93biBvbiBjZXJ0YWluIG1ldGhvZHMgd2hlbiB0aGUgcGFzc3dvcmQgdXNlZCBpcyBkZWVtZWRcbiAqIHdlYWsuIEluc3BlY3QgdGhlIHJlYXNvbnMgdG8gaWRlbnRpZnkgd2hhdCBwYXNzd29yZCBzdHJlbmd0aCBydWxlcyBhcmVcbiAqIGluYWRlcXVhdGUuXG4gKi9cbmV4cG9ydCBjbGFzcyBBdXRoV2Vha1Bhc3N3b3JkRXJyb3IgZXh0ZW5kcyBDdXN0b21BdXRoRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIHN0YXR1cywgcmVhc29ucykge1xuICAgICAgICBzdXBlcihtZXNzYWdlLCAnQXV0aFdlYWtQYXNzd29yZEVycm9yJywgc3RhdHVzLCAnd2Vha19wYXNzd29yZCcpO1xuICAgICAgICB0aGlzLnJlYXNvbnMgPSByZWFzb25zO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0F1dGhXZWFrUGFzc3dvcmRFcnJvcihlcnJvcikge1xuICAgIHJldHVybiBpc0F1dGhFcnJvcihlcnJvcikgJiYgZXJyb3IubmFtZSA9PT0gJ0F1dGhXZWFrUGFzc3dvcmRFcnJvcic7XG59XG5leHBvcnQgY2xhc3MgQXV0aEludmFsaWRKd3RFcnJvciBleHRlbmRzIEN1c3RvbUF1dGhFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlLCAnQXV0aEludmFsaWRKd3RFcnJvcicsIDQwMCwgJ2ludmFsaWRfand0Jyk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3JzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@supabase/auth-js/dist/module/lib/errors.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/auth-js/dist/module/lib/fetch.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/fetch.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _generateLinkResponse: function() { return /* binding */ _generateLinkResponse; },\n/* harmony export */   _noResolveJsonResponse: function() { return /* binding */ _noResolveJsonResponse; },\n/* harmony export */   _request: function() { return /* binding */ _request; },\n/* harmony export */   _sessionResponse: function() { return /* binding */ _sessionResponse; },\n/* harmony export */   _sessionResponsePassword: function() { return /* binding */ _sessionResponsePassword; },\n/* harmony export */   _ssoResponse: function() { return /* binding */ _ssoResponse; },\n/* harmony export */   _userResponse: function() { return /* binding */ _userResponse; },\n/* harmony export */   handleError: function() { return /* binding */ handleError; }\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./node_modules/@supabase/auth-js/dist/module/lib/constants.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers */ \"./node_modules/@supabase/auth-js/dist/module/lib/helpers.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./errors */ \"./node_modules/@supabase/auth-js/dist/module/lib/errors.js\");\nvar __rest = (undefined && undefined.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n\n\n\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst NETWORK_ERROR_CODES = [502, 503, 504];\nasync function handleError(error) {\n    var _a;\n    if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_1__.looksLikeFetchResponse)(error)) {\n        throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthRetryableFetchError(_getErrorMessage(error), 0);\n    }\n    if (NETWORK_ERROR_CODES.includes(error.status)) {\n        // status in 500...599 range - server had an error, request might be retryed.\n        throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthRetryableFetchError(_getErrorMessage(error), error.status);\n    }\n    let data;\n    try {\n        data = await error.json();\n    }\n    catch (e) {\n        throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthUnknownError(_getErrorMessage(e), e);\n    }\n    let errorCode = undefined;\n    const responseAPIVersion = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.parseResponseAPIVersion)(error);\n    if (responseAPIVersion &&\n        responseAPIVersion.getTime() >= _constants__WEBPACK_IMPORTED_MODULE_0__.API_VERSIONS['2024-01-01'].timestamp &&\n        typeof data === 'object' &&\n        data &&\n        typeof data.code === 'string') {\n        errorCode = data.code;\n    }\n    else if (typeof data === 'object' && data && typeof data.error_code === 'string') {\n        errorCode = data.error_code;\n    }\n    if (!errorCode) {\n        // Legacy support for weak password errors, when there were no error codes\n        if (typeof data === 'object' &&\n            data &&\n            typeof data.weak_password === 'object' &&\n            data.weak_password &&\n            Array.isArray(data.weak_password.reasons) &&\n            data.weak_password.reasons.length &&\n            data.weak_password.reasons.reduce((a, i) => a && typeof i === 'string', true)) {\n            throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthWeakPasswordError(_getErrorMessage(data), error.status, data.weak_password.reasons);\n        }\n    }\n    else if (errorCode === 'weak_password') {\n        throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthWeakPasswordError(_getErrorMessage(data), error.status, ((_a = data.weak_password) === null || _a === void 0 ? void 0 : _a.reasons) || []);\n    }\n    else if (errorCode === 'session_not_found') {\n        // The `session_id` inside the JWT does not correspond to a row in the\n        // `sessions` table. This usually means the user has signed out, has been\n        // deleted, or their session has somehow been terminated.\n        throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\n    }\n    throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthApiError(_getErrorMessage(data), error.status || 500, errorCode);\n}\nconst _getRequestParams = (method, options, parameters, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'application/json;charset=UTF-8' }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return Object.assign(Object.assign({}, params), parameters);\n};\nasync function _request(fetcher, method, url, options) {\n    var _a;\n    const headers = Object.assign({}, options === null || options === void 0 ? void 0 : options.headers);\n    if (!headers[_constants__WEBPACK_IMPORTED_MODULE_0__.API_VERSION_HEADER_NAME]) {\n        headers[_constants__WEBPACK_IMPORTED_MODULE_0__.API_VERSION_HEADER_NAME] = _constants__WEBPACK_IMPORTED_MODULE_0__.API_VERSIONS['2024-01-01'].name;\n    }\n    if (options === null || options === void 0 ? void 0 : options.jwt) {\n        headers['Authorization'] = `Bearer ${options.jwt}`;\n    }\n    const qs = (_a = options === null || options === void 0 ? void 0 : options.query) !== null && _a !== void 0 ? _a : {};\n    if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n        qs['redirect_to'] = options.redirectTo;\n    }\n    const queryString = Object.keys(qs).length ? '?' + new URLSearchParams(qs).toString() : '';\n    const data = await _handleRequest(fetcher, method, url + queryString, {\n        headers,\n        noResolveJson: options === null || options === void 0 ? void 0 : options.noResolveJson,\n    }, {}, options === null || options === void 0 ? void 0 : options.body);\n    return (options === null || options === void 0 ? void 0 : options.xform) ? options === null || options === void 0 ? void 0 : options.xform(data) : { data: Object.assign({}, data), error: null };\n}\nasync function _handleRequest(fetcher, method, url, options, parameters, body) {\n    const requestParams = _getRequestParams(method, options, parameters, body);\n    let result;\n    try {\n        result = await fetcher(url, Object.assign({}, requestParams));\n    }\n    catch (e) {\n        console.error(e);\n        // fetch failed, likely due to a network or CORS error\n        throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthRetryableFetchError(_getErrorMessage(e), 0);\n    }\n    if (!result.ok) {\n        await handleError(result);\n    }\n    if (options === null || options === void 0 ? void 0 : options.noResolveJson) {\n        return result;\n    }\n    try {\n        return await result.json();\n    }\n    catch (e) {\n        await handleError(e);\n    }\n}\nfunction _sessionResponse(data) {\n    var _a;\n    let session = null;\n    if (hasSession(data)) {\n        session = Object.assign({}, data);\n        if (!data.expires_at) {\n            session.expires_at = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.expiresAt)(data.expires_in);\n        }\n    }\n    const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\n    return { data: { session, user }, error: null };\n}\nfunction _sessionResponsePassword(data) {\n    const response = _sessionResponse(data);\n    if (!response.error &&\n        data.weak_password &&\n        typeof data.weak_password === 'object' &&\n        Array.isArray(data.weak_password.reasons) &&\n        data.weak_password.reasons.length &&\n        data.weak_password.message &&\n        typeof data.weak_password.message === 'string' &&\n        data.weak_password.reasons.reduce((a, i) => a && typeof i === 'string', true)) {\n        response.data.weak_password = data.weak_password;\n    }\n    return response;\n}\nfunction _userResponse(data) {\n    var _a;\n    const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\n    return { data: { user }, error: null };\n}\nfunction _ssoResponse(data) {\n    return { data, error: null };\n}\nfunction _generateLinkResponse(data) {\n    const { action_link, email_otp, hashed_token, redirect_to, verification_type } = data, rest = __rest(data, [\"action_link\", \"email_otp\", \"hashed_token\", \"redirect_to\", \"verification_type\"]);\n    const properties = {\n        action_link,\n        email_otp,\n        hashed_token,\n        redirect_to,\n        verification_type,\n    };\n    const user = Object.assign({}, rest);\n    return {\n        data: {\n            properties,\n            user,\n        },\n        error: null,\n    };\n}\nfunction _noResolveJsonResponse(data) {\n    return data;\n}\n/**\n * hasSession checks if the response object contains a valid session\n * @param data A response object\n * @returns true if a session is in the response\n */\nfunction hasSession(data) {\n    return data.access_token && data.refresh_token && data.expires_in;\n}\n//# sourceMappingURL=fetch.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/auth-js/dist/module/lib/fetch.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/auth-js/dist/module/lib/helpers.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/helpers.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Deferred: function() { return /* binding */ Deferred; },\n/* harmony export */   decodeJWT: function() { return /* binding */ decodeJWT; },\n/* harmony export */   deepClone: function() { return /* binding */ deepClone; },\n/* harmony export */   expiresAt: function() { return /* binding */ expiresAt; },\n/* harmony export */   generatePKCEChallenge: function() { return /* binding */ generatePKCEChallenge; },\n/* harmony export */   generatePKCEVerifier: function() { return /* binding */ generatePKCEVerifier; },\n/* harmony export */   getAlgorithm: function() { return /* binding */ getAlgorithm; },\n/* harmony export */   getCodeChallengeAndMethod: function() { return /* binding */ getCodeChallengeAndMethod; },\n/* harmony export */   getItemAsync: function() { return /* binding */ getItemAsync; },\n/* harmony export */   isBrowser: function() { return /* binding */ isBrowser; },\n/* harmony export */   looksLikeFetchResponse: function() { return /* binding */ looksLikeFetchResponse; },\n/* harmony export */   parseParametersFromURL: function() { return /* binding */ parseParametersFromURL; },\n/* harmony export */   parseResponseAPIVersion: function() { return /* binding */ parseResponseAPIVersion; },\n/* harmony export */   removeItemAsync: function() { return /* binding */ removeItemAsync; },\n/* harmony export */   resolveFetch: function() { return /* binding */ resolveFetch; },\n/* harmony export */   retryable: function() { return /* binding */ retryable; },\n/* harmony export */   setItemAsync: function() { return /* binding */ setItemAsync; },\n/* harmony export */   sleep: function() { return /* binding */ sleep; },\n/* harmony export */   supportsLocalStorage: function() { return /* binding */ supportsLocalStorage; },\n/* harmony export */   userNotAvailableProxy: function() { return /* binding */ userNotAvailableProxy; },\n/* harmony export */   uuid: function() { return /* binding */ uuid; },\n/* harmony export */   validateExp: function() { return /* binding */ validateExp; },\n/* harmony export */   validateUUID: function() { return /* binding */ validateUUID; }\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./node_modules/@supabase/auth-js/dist/module/lib/constants.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors */ \"./node_modules/@supabase/auth-js/dist/module/lib/errors.js\");\n/* harmony import */ var _base64url__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base64url */ \"./node_modules/@supabase/auth-js/dist/module/lib/base64url.js\");\n\n\n\nfunction expiresAt(expiresIn) {\n    const timeNow = Math.round(Date.now() / 1000);\n    return timeNow + expiresIn;\n}\nfunction uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        const r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nconst isBrowser = () => typeof window !== 'undefined' && typeof document !== 'undefined';\nconst localStorageWriteTests = {\n    tested: false,\n    writable: false,\n};\n/**\n * Checks whether localStorage is supported on this browser.\n */\nconst supportsLocalStorage = () => {\n    if (!isBrowser()) {\n        return false;\n    }\n    try {\n        if (typeof globalThis.localStorage !== 'object') {\n            return false;\n        }\n    }\n    catch (e) {\n        // DOM exception when accessing `localStorage`\n        return false;\n    }\n    if (localStorageWriteTests.tested) {\n        return localStorageWriteTests.writable;\n    }\n    const randomKey = `lswt-${Math.random()}${Math.random()}`;\n    try {\n        globalThis.localStorage.setItem(randomKey, randomKey);\n        globalThis.localStorage.removeItem(randomKey);\n        localStorageWriteTests.tested = true;\n        localStorageWriteTests.writable = true;\n    }\n    catch (e) {\n        // localStorage can't be written to\n        // https://www.chromium.org/for-testers/bug-reporting-guidelines/uncaught-securityerror-failed-to-read-the-localstorage-property-from-window-access-is-denied-for-this-document\n        localStorageWriteTests.tested = true;\n        localStorageWriteTests.writable = false;\n    }\n    return localStorageWriteTests.writable;\n};\n/**\n * Extracts parameters encoded in the URL both in the query and fragment.\n */\nfunction parseParametersFromURL(href) {\n    const result = {};\n    const url = new URL(href);\n    if (url.hash && url.hash[0] === '#') {\n        try {\n            const hashSearchParams = new URLSearchParams(url.hash.substring(1));\n            hashSearchParams.forEach((value, key) => {\n                result[key] = value;\n            });\n        }\n        catch (e) {\n            // hash is not a query string\n        }\n    }\n    // search parameters take precedence over hash parameters\n    url.searchParams.forEach((value, key) => {\n        result[key] = value;\n    });\n    return result;\n}\nconst resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @supabase/node-fetch */ \"./node_modules/@supabase/node-fetch/browser.js\")).then(({ default: fetch }) => fetch(...args));\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\nconst looksLikeFetchResponse = (maybeResponse) => {\n    return (typeof maybeResponse === 'object' &&\n        maybeResponse !== null &&\n        'status' in maybeResponse &&\n        'ok' in maybeResponse &&\n        'json' in maybeResponse &&\n        typeof maybeResponse.json === 'function');\n};\n// Storage helpers\nconst setItemAsync = async (storage, key, data) => {\n    await storage.setItem(key, JSON.stringify(data));\n};\nconst getItemAsync = async (storage, key) => {\n    const value = await storage.getItem(key);\n    if (!value) {\n        return null;\n    }\n    try {\n        return JSON.parse(value);\n    }\n    catch (_a) {\n        return value;\n    }\n};\nconst removeItemAsync = async (storage, key) => {\n    await storage.removeItem(key);\n};\n/**\n * A deferred represents some asynchronous work that is not yet finished, which\n * may or may not culminate in a value.\n * Taken from: https://github.com/mike-north/types/blob/master/src/async.ts\n */\nclass Deferred {\n    constructor() {\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\n        ;\n        this.promise = new Deferred.promiseConstructor((res, rej) => {\n            // eslint-disable-next-line @typescript-eslint/no-extra-semi\n            ;\n            this.resolve = res;\n            this.reject = rej;\n        });\n    }\n}\nDeferred.promiseConstructor = Promise;\nfunction decodeJWT(token) {\n    const parts = token.split('.');\n    if (parts.length !== 3) {\n        throw new _errors__WEBPACK_IMPORTED_MODULE_1__.AuthInvalidJwtError('Invalid JWT structure');\n    }\n    // Regex checks for base64url format\n    for (let i = 0; i < parts.length; i++) {\n        if (!_constants__WEBPACK_IMPORTED_MODULE_0__.BASE64URL_REGEX.test(parts[i])) {\n            throw new _errors__WEBPACK_IMPORTED_MODULE_1__.AuthInvalidJwtError('JWT not in base64url format');\n        }\n    }\n    const data = {\n        // using base64url lib\n        header: JSON.parse((0,_base64url__WEBPACK_IMPORTED_MODULE_2__.stringFromBase64URL)(parts[0])),\n        payload: JSON.parse((0,_base64url__WEBPACK_IMPORTED_MODULE_2__.stringFromBase64URL)(parts[1])),\n        signature: (0,_base64url__WEBPACK_IMPORTED_MODULE_2__.base64UrlToUint8Array)(parts[2]),\n        raw: {\n            header: parts[0],\n            payload: parts[1],\n        },\n    };\n    return data;\n}\n/**\n * Creates a promise that resolves to null after some time.\n */\nasync function sleep(time) {\n    return await new Promise((accept) => {\n        setTimeout(() => accept(null), time);\n    });\n}\n/**\n * Converts the provided async function into a retryable function. Each result\n * or thrown error is sent to the isRetryable function which should return true\n * if the function should run again.\n */\nfunction retryable(fn, isRetryable) {\n    const promise = new Promise((accept, reject) => {\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\n        ;\n        (async () => {\n            for (let attempt = 0; attempt < Infinity; attempt++) {\n                try {\n                    const result = await fn(attempt);\n                    if (!isRetryable(attempt, null, result)) {\n                        accept(result);\n                        return;\n                    }\n                }\n                catch (e) {\n                    if (!isRetryable(attempt, e)) {\n                        reject(e);\n                        return;\n                    }\n                }\n            }\n        })();\n    });\n    return promise;\n}\nfunction dec2hex(dec) {\n    return ('0' + dec.toString(16)).substr(-2);\n}\n// Functions below taken from: https://stackoverflow.com/questions/63309409/creating-a-code-verifier-and-challenge-for-pkce-auth-on-spotify-api-in-reactjs\nfunction generatePKCEVerifier() {\n    const verifierLength = 56;\n    const array = new Uint32Array(verifierLength);\n    if (typeof crypto === 'undefined') {\n        const charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\n        const charSetLen = charSet.length;\n        let verifier = '';\n        for (let i = 0; i < verifierLength; i++) {\n            verifier += charSet.charAt(Math.floor(Math.random() * charSetLen));\n        }\n        return verifier;\n    }\n    crypto.getRandomValues(array);\n    return Array.from(array, dec2hex).join('');\n}\nasync function sha256(randomString) {\n    const encoder = new TextEncoder();\n    const encodedData = encoder.encode(randomString);\n    const hash = await crypto.subtle.digest('SHA-256', encodedData);\n    const bytes = new Uint8Array(hash);\n    return Array.from(bytes)\n        .map((c) => String.fromCharCode(c))\n        .join('');\n}\nasync function generatePKCEChallenge(verifier) {\n    const hasCryptoSupport = typeof crypto !== 'undefined' &&\n        typeof crypto.subtle !== 'undefined' &&\n        typeof TextEncoder !== 'undefined';\n    if (!hasCryptoSupport) {\n        console.warn('WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256.');\n        return verifier;\n    }\n    const hashed = await sha256(verifier);\n    return btoa(hashed).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\nasync function getCodeChallengeAndMethod(storage, storageKey, isPasswordRecovery = false) {\n    const codeVerifier = generatePKCEVerifier();\n    let storedCodeVerifier = codeVerifier;\n    if (isPasswordRecovery) {\n        storedCodeVerifier += '/PASSWORD_RECOVERY';\n    }\n    await setItemAsync(storage, `${storageKey}-code-verifier`, storedCodeVerifier);\n    const codeChallenge = await generatePKCEChallenge(codeVerifier);\n    const codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\n    return [codeChallenge, codeChallengeMethod];\n}\n/** Parses the API version which is 2YYY-MM-DD. */\nconst API_VERSION_REGEX = /^2[0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])$/i;\nfunction parseResponseAPIVersion(response) {\n    const apiVersion = response.headers.get(_constants__WEBPACK_IMPORTED_MODULE_0__.API_VERSION_HEADER_NAME);\n    if (!apiVersion) {\n        return null;\n    }\n    if (!apiVersion.match(API_VERSION_REGEX)) {\n        return null;\n    }\n    try {\n        const date = new Date(`${apiVersion}T00:00:00.0Z`);\n        return date;\n    }\n    catch (e) {\n        return null;\n    }\n}\nfunction validateExp(exp) {\n    if (!exp) {\n        throw new Error('Missing exp claim');\n    }\n    const timeNow = Math.floor(Date.now() / 1000);\n    if (exp <= timeNow) {\n        throw new Error('JWT has expired');\n    }\n}\nfunction getAlgorithm(alg) {\n    switch (alg) {\n        case 'RS256':\n            return {\n                name: 'RSASSA-PKCS1-v1_5',\n                hash: { name: 'SHA-256' },\n            };\n        case 'ES256':\n            return {\n                name: 'ECDSA',\n                namedCurve: 'P-256',\n                hash: { name: 'SHA-256' },\n            };\n        default:\n            throw new Error('Invalid alg claim');\n    }\n}\nconst UUID_REGEX = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/;\nfunction validateUUID(str) {\n    if (!UUID_REGEX.test(str)) {\n        throw new Error('@supabase/auth-js: Expected parameter to be UUID but is not');\n    }\n}\nfunction userNotAvailableProxy() {\n    const proxyTarget = {};\n    return new Proxy(proxyTarget, {\n        get: (target, prop) => {\n            if (prop === '__isUserNotAvailableProxy') {\n                return true;\n            }\n            // Preventative check for common problematic symbols during cloning/inspection\n            // These symbols might be accessed by structuredClone or other internal mechanisms.\n            if (typeof prop === 'symbol') {\n                const sProp = prop.toString();\n                if (sProp === 'Symbol(Symbol.toPrimitive)' ||\n                    sProp === 'Symbol(Symbol.toStringTag)' ||\n                    sProp === 'Symbol(util.inspect.custom)') {\n                    // Node.js util.inspect\n                    return undefined;\n                }\n            }\n            throw new Error(`@supabase/auth-js: client was created with userStorage option and there was no user stored in the user storage. Accessing the \"${prop}\" property of the session object is not supported. Please use getUser() instead.`);\n        },\n        set: (_target, prop) => {\n            throw new Error(`@supabase/auth-js: client was created with userStorage option and there was no user stored in the user storage. Setting the \"${prop}\" property of the session object is not supported. Please use getUser() to fetch a user object you can manipulate.`);\n        },\n        deleteProperty: (_target, prop) => {\n            throw new Error(`@supabase/auth-js: client was created with userStorage option and there was no user stored in the user storage. Deleting the \"${prop}\" property of the session object is not supported. Please use getUser() to fetch a user object you can manipulate.`);\n        },\n    });\n}\n/**\n * Deep clones a JSON-serializable object using JSON.parse(JSON.stringify(obj)).\n * Note: Only works for JSON-safe data.\n */\nfunction deepClone(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\n//# sourceMappingURL=helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/auth-js/dist/module/lib/helpers.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/auth-js/dist/module/lib/local-storage.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/local-storage.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   memoryLocalStorageAdapter: function() { return /* binding */ memoryLocalStorageAdapter; }\n/* harmony export */ });\n/**\n * Returns a localStorage-like object that stores the key-value pairs in\n * memory.\n */\nfunction memoryLocalStorageAdapter(store = {}) {\n    return {\n        getItem: (key) => {\n            return store[key] || null;\n        },\n        setItem: (key, value) => {\n            store[key] = value;\n        },\n        removeItem: (key) => {\n            delete store[key];\n        },\n    };\n}\n//# sourceMappingURL=local-storage.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2F1dGgtanMvZGlzdC9tb2R1bGUvbGliL2xvY2FsLXN0b3JhZ2UuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sNkNBQTZDO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9saWIvbG9jYWwtc3RvcmFnZS5qcz8yM2MyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmV0dXJucyBhIGxvY2FsU3RvcmFnZS1saWtlIG9iamVjdCB0aGF0IHN0b3JlcyB0aGUga2V5LXZhbHVlIHBhaXJzIGluXG4gKiBtZW1vcnkuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtZW1vcnlMb2NhbFN0b3JhZ2VBZGFwdGVyKHN0b3JlID0ge30pIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBnZXRJdGVtOiAoa2V5KSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gc3RvcmVba2V5XSB8fCBudWxsO1xuICAgICAgICB9LFxuICAgICAgICBzZXRJdGVtOiAoa2V5LCB2YWx1ZSkgPT4ge1xuICAgICAgICAgICAgc3RvcmVba2V5XSA9IHZhbHVlO1xuICAgICAgICB9LFxuICAgICAgICByZW1vdmVJdGVtOiAoa2V5KSA9PiB7XG4gICAgICAgICAgICBkZWxldGUgc3RvcmVba2V5XTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9jYWwtc3RvcmFnZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@supabase/auth-js/dist/module/lib/local-storage.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/auth-js/dist/module/lib/locks.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/locks.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LockAcquireTimeoutError: function() { return /* binding */ LockAcquireTimeoutError; },\n/* harmony export */   NavigatorLockAcquireTimeoutError: function() { return /* binding */ NavigatorLockAcquireTimeoutError; },\n/* harmony export */   ProcessLockAcquireTimeoutError: function() { return /* binding */ ProcessLockAcquireTimeoutError; },\n/* harmony export */   internals: function() { return /* binding */ internals; },\n/* harmony export */   navigatorLock: function() { return /* binding */ navigatorLock; },\n/* harmony export */   processLock: function() { return /* binding */ processLock; }\n/* harmony export */ });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers */ \"./node_modules/@supabase/auth-js/dist/module/lib/helpers.js\");\n\n/**\n * @experimental\n */\nconst internals = {\n    /**\n     * @experimental\n     */\n    debug: !!(globalThis &&\n        (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.supportsLocalStorage)() &&\n        globalThis.localStorage &&\n        globalThis.localStorage.getItem('supabase.gotrue-js.locks.debug') === 'true'),\n};\n/**\n * An error thrown when a lock cannot be acquired after some amount of time.\n *\n * Use the {@link #isAcquireTimeout} property instead of checking with `instanceof`.\n */\nclass LockAcquireTimeoutError extends Error {\n    constructor(message) {\n        super(message);\n        this.isAcquireTimeout = true;\n    }\n}\nclass NavigatorLockAcquireTimeoutError extends LockAcquireTimeoutError {\n}\nclass ProcessLockAcquireTimeoutError extends LockAcquireTimeoutError {\n}\n/**\n * Implements a global exclusive lock using the Navigator LockManager API. It\n * is available on all browsers released after 2022-03-15 with Safari being the\n * last one to release support. If the API is not available, this function will\n * throw. Make sure you check availablility before configuring {@link\n * GoTrueClient}.\n *\n * You can turn on debugging by setting the `supabase.gotrue-js.locks.debug`\n * local storage item to `true`.\n *\n * Internals:\n *\n * Since the LockManager API does not preserve stack traces for the async\n * function passed in the `request` method, a trick is used where acquiring the\n * lock releases a previously started promise to run the operation in the `fn`\n * function. The lock waits for that promise to finish (with or without error),\n * while the function will finally wait for the result anyway.\n *\n * @param name Name of the lock to be acquired.\n * @param acquireTimeout If negative, no timeout. If 0 an error is thrown if\n *                       the lock can't be acquired without waiting. If positive, the lock acquire\n *                       will time out after so many milliseconds. An error is\n *                       a timeout if it has `isAcquireTimeout` set to true.\n * @param fn The operation to run once the lock is acquired.\n */\nasync function navigatorLock(name, acquireTimeout, fn) {\n    if (internals.debug) {\n        console.log('@supabase/gotrue-js: navigatorLock: acquire lock', name, acquireTimeout);\n    }\n    const abortController = new globalThis.AbortController();\n    if (acquireTimeout > 0) {\n        setTimeout(() => {\n            abortController.abort();\n            if (internals.debug) {\n                console.log('@supabase/gotrue-js: navigatorLock acquire timed out', name);\n            }\n        }, acquireTimeout);\n    }\n    // MDN article: https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request\n    // Wrapping navigator.locks.request() with a plain Promise is done as some\n    // libraries like zone.js patch the Promise object to track the execution\n    // context. However, it appears that most browsers use an internal promise\n    // implementation when using the navigator.locks.request() API causing them\n    // to lose context and emit confusing log messages or break certain features.\n    // This wrapping is believed to help zone.js track the execution context\n    // better.\n    return await Promise.resolve().then(() => globalThis.navigator.locks.request(name, acquireTimeout === 0\n        ? {\n            mode: 'exclusive',\n            ifAvailable: true,\n        }\n        : {\n            mode: 'exclusive',\n            signal: abortController.signal,\n        }, async (lock) => {\n        if (lock) {\n            if (internals.debug) {\n                console.log('@supabase/gotrue-js: navigatorLock: acquired', name, lock.name);\n            }\n            try {\n                return await fn();\n            }\n            finally {\n                if (internals.debug) {\n                    console.log('@supabase/gotrue-js: navigatorLock: released', name, lock.name);\n                }\n            }\n        }\n        else {\n            if (acquireTimeout === 0) {\n                if (internals.debug) {\n                    console.log('@supabase/gotrue-js: navigatorLock: not immediately available', name);\n                }\n                throw new NavigatorLockAcquireTimeoutError(`Acquiring an exclusive Navigator LockManager lock \"${name}\" immediately failed`);\n            }\n            else {\n                if (internals.debug) {\n                    try {\n                        const result = await globalThis.navigator.locks.query();\n                        console.log('@supabase/gotrue-js: Navigator LockManager state', JSON.stringify(result, null, '  '));\n                    }\n                    catch (e) {\n                        console.warn('@supabase/gotrue-js: Error when querying Navigator LockManager state', e);\n                    }\n                }\n                // Browser is not following the Navigator LockManager spec, it\n                // returned a null lock when we didn't use ifAvailable. So we can\n                // pretend the lock is acquired in the name of backward compatibility\n                // and user experience and just run the function.\n                console.warn('@supabase/gotrue-js: Navigator LockManager returned a null lock when using #request without ifAvailable set to true, it appears this browser is not following the LockManager spec https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request');\n                return await fn();\n            }\n        }\n    }));\n}\nconst PROCESS_LOCKS = {};\n/**\n * Implements a global exclusive lock that works only in the current process.\n * Useful for environments like React Native or other non-browser\n * single-process (i.e. no concept of \"tabs\") environments.\n *\n * Use {@link #navigatorLock} in browser environments.\n *\n * @param name Name of the lock to be acquired.\n * @param acquireTimeout If negative, no timeout. If 0 an error is thrown if\n *                       the lock can't be acquired without waiting. If positive, the lock acquire\n *                       will time out after so many milliseconds. An error is\n *                       a timeout if it has `isAcquireTimeout` set to true.\n * @param fn The operation to run once the lock is acquired.\n */\nasync function processLock(name, acquireTimeout, fn) {\n    var _a;\n    const previousOperation = (_a = PROCESS_LOCKS[name]) !== null && _a !== void 0 ? _a : Promise.resolve();\n    const currentOperation = Promise.race([\n        previousOperation.catch(() => {\n            // ignore error of previous operation that we're waiting to finish\n            return null;\n        }),\n        acquireTimeout >= 0\n            ? new Promise((_, reject) => {\n                setTimeout(() => {\n                    reject(new ProcessLockAcquireTimeoutError(`Acquring process lock with name \"${name}\" timed out`));\n                }, acquireTimeout);\n            })\n            : null,\n    ].filter((x) => x))\n        .catch((e) => {\n        if (e && e.isAcquireTimeout) {\n            throw e;\n        }\n        return null;\n    })\n        .then(async () => {\n        // previous operations finished and we didn't get a race on the acquire\n        // timeout, so the current operation can finally start\n        return await fn();\n    });\n    PROCESS_LOCKS[name] = currentOperation.catch(async (e) => {\n        if (e && e.isAcquireTimeout) {\n            // if the current operation timed out, it doesn't mean that the previous\n            // operation finished, so we need contnue waiting for it to finish\n            await previousOperation;\n            return null;\n        }\n        throw e;\n    });\n    // finally wait for the current operation to finish successfully, with an\n    // error or with an acquire timeout error\n    return await currentOperation;\n}\n//# sourceMappingURL=locks.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/auth-js/dist/module/lib/locks.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/auth-js/dist/module/lib/polyfills.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/polyfills.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   polyfillGlobalThis: function() { return /* binding */ polyfillGlobalThis; }\n/* harmony export */ });\n/**\n * https://mathiasbynens.be/notes/globalthis\n */\nfunction polyfillGlobalThis() {\n    if (typeof globalThis === 'object')\n        return;\n    try {\n        Object.defineProperty(Object.prototype, '__magic__', {\n            get: function () {\n                return this;\n            },\n            configurable: true,\n        });\n        // @ts-expect-error 'Allow access to magic'\n        __magic__.globalThis = __magic__;\n        // @ts-expect-error 'Allow access to magic'\n        delete Object.prototype.__magic__;\n    }\n    catch (e) {\n        if (typeof self !== 'undefined') {\n            // @ts-expect-error 'Allow access to globals'\n            self.globalThis = self;\n        }\n    }\n}\n//# sourceMappingURL=polyfills.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2F1dGgtanMvZGlzdC9tb2R1bGUvbGliL3BvbHlmaWxscy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9hdXRoLWpzL2Rpc3QvbW9kdWxlL2xpYi9wb2x5ZmlsbHMuanM/NjNlNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIGh0dHBzOi8vbWF0aGlhc2J5bmVucy5iZS9ub3Rlcy9nbG9iYWx0aGlzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwb2x5ZmlsbEdsb2JhbFRoaXMoKSB7XG4gICAgaWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JylcbiAgICAgICAgcmV0dXJuO1xuICAgIHRyeSB7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShPYmplY3QucHJvdG90eXBlLCAnX19tYWdpY19fJywge1xuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICB9KTtcbiAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciAnQWxsb3cgYWNjZXNzIHRvIG1hZ2ljJ1xuICAgICAgICBfX21hZ2ljX18uZ2xvYmFsVGhpcyA9IF9fbWFnaWNfXztcbiAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciAnQWxsb3cgYWNjZXNzIHRvIG1hZ2ljJ1xuICAgICAgICBkZWxldGUgT2JqZWN0LnByb3RvdHlwZS5fX21hZ2ljX187XG4gICAgfVxuICAgIGNhdGNoIChlKSB7XG4gICAgICAgIGlmICh0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgJ0FsbG93IGFjY2VzcyB0byBnbG9iYWxzJ1xuICAgICAgICAgICAgc2VsZi5nbG9iYWxUaGlzID0gc2VsZjtcbiAgICAgICAgfVxuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBvbHlmaWxscy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@supabase/auth-js/dist/module/lib/polyfills.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/auth-js/dist/module/lib/types.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/types.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SIGN_OUT_SCOPES: function() { return /* binding */ SIGN_OUT_SCOPES; }\n/* harmony export */ });\nconst SIGN_OUT_SCOPES = ['global', 'local', 'others'];\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2F1dGgtanMvZGlzdC9tb2R1bGUvbGliL3R5cGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9saWIvdHlwZXMuanM/MWY2MSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgU0lHTl9PVVRfU0NPUEVTID0gWydnbG9iYWwnLCAnbG9jYWwnLCAnb3RoZXJzJ107XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@supabase/auth-js/dist/module/lib/types.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/auth-js/dist/module/lib/version.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/version.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: function() { return /* binding */ version; }\n/* harmony export */ });\nconst version = '2.71.1';\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2F1dGgtanMvZGlzdC9tb2R1bGUvbGliL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1AiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9hdXRoLWpzL2Rpc3QvbW9kdWxlL2xpYi92ZXJzaW9uLmpzPzk3N2MiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHZlcnNpb24gPSAnMi43MS4xJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZlcnNpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@supabase/auth-js/dist/module/lib/version.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/functions-js/dist/module/FunctionsClient.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@supabase/functions-js/dist/module/FunctionsClient.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FunctionsClient: function() { return /* binding */ FunctionsClient; }\n/* harmony export */ });\n/* harmony import */ var _helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helper */ \"./node_modules/@supabase/functions-js/dist/module/helper.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types */ \"./node_modules/@supabase/functions-js/dist/module/types.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\nclass FunctionsClient {\n    constructor(url, { headers = {}, customFetch, region = _types__WEBPACK_IMPORTED_MODULE_0__.FunctionRegion.Any, } = {}) {\n        this.url = url;\n        this.headers = headers;\n        this.region = region;\n        this.fetch = (0,_helper__WEBPACK_IMPORTED_MODULE_1__.resolveFetch)(customFetch);\n    }\n    /**\n     * Updates the authorization header\n     * @param token - the new jwt token sent in the authorisation header\n     */\n    setAuth(token) {\n        this.headers.Authorization = `Bearer ${token}`;\n    }\n    /**\n     * Invokes a function\n     * @param functionName - The name of the Function to invoke.\n     * @param options - Options for invoking the Function.\n     */\n    invoke(functionName, options = {}) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { headers, method, body: functionArgs } = options;\n                let _headers = {};\n                let { region } = options;\n                if (!region) {\n                    region = this.region;\n                }\n                // Add region as query parameter using URL API\n                const url = new URL(`${this.url}/${functionName}`);\n                if (region && region !== 'any') {\n                    _headers['x-region'] = region;\n                    url.searchParams.set('forceFunctionRegion', region);\n                }\n                let body;\n                if (functionArgs &&\n                    ((headers && !Object.prototype.hasOwnProperty.call(headers, 'Content-Type')) || !headers)) {\n                    if ((typeof Blob !== 'undefined' && functionArgs instanceof Blob) ||\n                        functionArgs instanceof ArrayBuffer) {\n                        // will work for File as File inherits Blob\n                        // also works for ArrayBuffer as it is the same underlying structure as a Blob\n                        _headers['Content-Type'] = 'application/octet-stream';\n                        body = functionArgs;\n                    }\n                    else if (typeof functionArgs === 'string') {\n                        // plain string\n                        _headers['Content-Type'] = 'text/plain';\n                        body = functionArgs;\n                    }\n                    else if (typeof FormData !== 'undefined' && functionArgs instanceof FormData) {\n                        // don't set content-type headers\n                        // Request will automatically add the right boundary value\n                        body = functionArgs;\n                    }\n                    else {\n                        // default, assume this is JSON\n                        _headers['Content-Type'] = 'application/json';\n                        body = JSON.stringify(functionArgs);\n                    }\n                }\n                const response = yield this.fetch(url.toString(), {\n                    method: method || 'POST',\n                    // headers priority is (high to low):\n                    // 1. invoke-level headers\n                    // 2. client-level headers\n                    // 3. default Content-Type header\n                    headers: Object.assign(Object.assign(Object.assign({}, _headers), this.headers), headers),\n                    body,\n                }).catch((fetchError) => {\n                    throw new _types__WEBPACK_IMPORTED_MODULE_0__.FunctionsFetchError(fetchError);\n                });\n                const isRelayError = response.headers.get('x-relay-error');\n                if (isRelayError && isRelayError === 'true') {\n                    throw new _types__WEBPACK_IMPORTED_MODULE_0__.FunctionsRelayError(response);\n                }\n                if (!response.ok) {\n                    throw new _types__WEBPACK_IMPORTED_MODULE_0__.FunctionsHttpError(response);\n                }\n                let responseType = ((_a = response.headers.get('Content-Type')) !== null && _a !== void 0 ? _a : 'text/plain').split(';')[0].trim();\n                let data;\n                if (responseType === 'application/json') {\n                    data = yield response.json();\n                }\n                else if (responseType === 'application/octet-stream') {\n                    data = yield response.blob();\n                }\n                else if (responseType === 'text/event-stream') {\n                    data = response;\n                }\n                else if (responseType === 'multipart/form-data') {\n                    data = yield response.formData();\n                }\n                else {\n                    // default to text\n                    data = yield response.text();\n                }\n                return { data, error: null, response };\n            }\n            catch (error) {\n                return {\n                    data: null,\n                    error,\n                    response: error instanceof _types__WEBPACK_IMPORTED_MODULE_0__.FunctionsHttpError || error instanceof _types__WEBPACK_IMPORTED_MODULE_0__.FunctionsRelayError\n                        ? error.context\n                        : undefined,\n                };\n            }\n        });\n    }\n}\n//# sourceMappingURL=FunctionsClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2Z1bmN0aW9ucy1qcy9kaXN0L21vZHVsZS9GdW5jdGlvbnNDbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsaUJBQWlCLFNBQUksSUFBSSxTQUFJO0FBQzdCLDRCQUE0QiwrREFBK0QsaUJBQWlCO0FBQzVHO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDO0FBQ2hDO0FBQ0EsS0FBSztBQUNMO0FBQ3dDO0FBQ2dFO0FBQ2pHO0FBQ1AsdUJBQXVCLFlBQVksd0JBQXdCLGtEQUFjLFFBQVEsSUFBSTtBQUNyRjtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIscURBQVk7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLE1BQU07QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixzQ0FBc0M7QUFDOUQ7QUFDQSxzQkFBc0IsU0FBUztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxTQUFTLEdBQUcsYUFBYTtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5RUFBeUU7QUFDekU7QUFDQSxpQkFBaUI7QUFDakIsOEJBQThCLHVEQUFtQjtBQUNqRCxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLDhCQUE4Qix1REFBbUI7QUFDakQ7QUFDQTtBQUNBLDhCQUE4QixzREFBa0I7QUFDaEQ7QUFDQSx1SUFBdUk7QUFDdkk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLHNEQUFrQixxQkFBcUIsdURBQW1CO0FBQ3pHO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2Z1bmN0aW9ucy1qcy9kaXN0L21vZHVsZS9GdW5jdGlvbnNDbGllbnQuanM/NWMzOCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbmltcG9ydCB7IHJlc29sdmVGZXRjaCB9IGZyb20gJy4vaGVscGVyJztcbmltcG9ydCB7IEZ1bmN0aW9uc0ZldGNoRXJyb3IsIEZ1bmN0aW9uc0h0dHBFcnJvciwgRnVuY3Rpb25zUmVsYXlFcnJvciwgRnVuY3Rpb25SZWdpb24sIH0gZnJvbSAnLi90eXBlcyc7XG5leHBvcnQgY2xhc3MgRnVuY3Rpb25zQ2xpZW50IHtcbiAgICBjb25zdHJ1Y3Rvcih1cmwsIHsgaGVhZGVycyA9IHt9LCBjdXN0b21GZXRjaCwgcmVnaW9uID0gRnVuY3Rpb25SZWdpb24uQW55LCB9ID0ge30pIHtcbiAgICAgICAgdGhpcy51cmwgPSB1cmw7XG4gICAgICAgIHRoaXMuaGVhZGVycyA9IGhlYWRlcnM7XG4gICAgICAgIHRoaXMucmVnaW9uID0gcmVnaW9uO1xuICAgICAgICB0aGlzLmZldGNoID0gcmVzb2x2ZUZldGNoKGN1c3RvbUZldGNoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVXBkYXRlcyB0aGUgYXV0aG9yaXphdGlvbiBoZWFkZXJcbiAgICAgKiBAcGFyYW0gdG9rZW4gLSB0aGUgbmV3IGp3dCB0b2tlbiBzZW50IGluIHRoZSBhdXRob3Jpc2F0aW9uIGhlYWRlclxuICAgICAqL1xuICAgIHNldEF1dGgodG9rZW4pIHtcbiAgICAgICAgdGhpcy5oZWFkZXJzLkF1dGhvcml6YXRpb24gPSBgQmVhcmVyICR7dG9rZW59YDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogSW52b2tlcyBhIGZ1bmN0aW9uXG4gICAgICogQHBhcmFtIGZ1bmN0aW9uTmFtZSAtIFRoZSBuYW1lIG9mIHRoZSBGdW5jdGlvbiB0byBpbnZva2UuXG4gICAgICogQHBhcmFtIG9wdGlvbnMgLSBPcHRpb25zIGZvciBpbnZva2luZyB0aGUgRnVuY3Rpb24uXG4gICAgICovXG4gICAgaW52b2tlKGZ1bmN0aW9uTmFtZSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgeyBoZWFkZXJzLCBtZXRob2QsIGJvZHk6IGZ1bmN0aW9uQXJncyB9ID0gb3B0aW9ucztcbiAgICAgICAgICAgICAgICBsZXQgX2hlYWRlcnMgPSB7fTtcbiAgICAgICAgICAgICAgICBsZXQgeyByZWdpb24gfSA9IG9wdGlvbnM7XG4gICAgICAgICAgICAgICAgaWYgKCFyZWdpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgcmVnaW9uID0gdGhpcy5yZWdpb247XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIEFkZCByZWdpb24gYXMgcXVlcnkgcGFyYW1ldGVyIHVzaW5nIFVSTCBBUElcbiAgICAgICAgICAgICAgICBjb25zdCB1cmwgPSBuZXcgVVJMKGAke3RoaXMudXJsfS8ke2Z1bmN0aW9uTmFtZX1gKTtcbiAgICAgICAgICAgICAgICBpZiAocmVnaW9uICYmIHJlZ2lvbiAhPT0gJ2FueScpIHtcbiAgICAgICAgICAgICAgICAgICAgX2hlYWRlcnNbJ3gtcmVnaW9uJ10gPSByZWdpb247XG4gICAgICAgICAgICAgICAgICAgIHVybC5zZWFyY2hQYXJhbXMuc2V0KCdmb3JjZUZ1bmN0aW9uUmVnaW9uJywgcmVnaW9uKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbGV0IGJvZHk7XG4gICAgICAgICAgICAgICAgaWYgKGZ1bmN0aW9uQXJncyAmJlxuICAgICAgICAgICAgICAgICAgICAoKGhlYWRlcnMgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChoZWFkZXJzLCAnQ29udGVudC1UeXBlJykpIHx8ICFoZWFkZXJzKSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoKHR5cGVvZiBCbG9iICE9PSAndW5kZWZpbmVkJyAmJiBmdW5jdGlvbkFyZ3MgaW5zdGFuY2VvZiBCbG9iKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb25BcmdzIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHdpbGwgd29yayBmb3IgRmlsZSBhcyBGaWxlIGluaGVyaXRzIEJsb2JcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGFsc28gd29ya3MgZm9yIEFycmF5QnVmZmVyIGFzIGl0IGlzIHRoZSBzYW1lIHVuZGVybHlpbmcgc3RydWN0dXJlIGFzIGEgQmxvYlxuICAgICAgICAgICAgICAgICAgICAgICAgX2hlYWRlcnNbJ0NvbnRlbnQtVHlwZSddID0gJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbSc7XG4gICAgICAgICAgICAgICAgICAgICAgICBib2R5ID0gZnVuY3Rpb25BcmdzO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKHR5cGVvZiBmdW5jdGlvbkFyZ3MgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBwbGFpbiBzdHJpbmdcbiAgICAgICAgICAgICAgICAgICAgICAgIF9oZWFkZXJzWydDb250ZW50LVR5cGUnXSA9ICd0ZXh0L3BsYWluJztcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvZHkgPSBmdW5jdGlvbkFyZ3M7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAodHlwZW9mIEZvcm1EYXRhICE9PSAndW5kZWZpbmVkJyAmJiBmdW5jdGlvbkFyZ3MgaW5zdGFuY2VvZiBGb3JtRGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gZG9uJ3Qgc2V0IGNvbnRlbnQtdHlwZSBoZWFkZXJzXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBSZXF1ZXN0IHdpbGwgYXV0b21hdGljYWxseSBhZGQgdGhlIHJpZ2h0IGJvdW5kYXJ5IHZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICBib2R5ID0gZnVuY3Rpb25BcmdzO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gZGVmYXVsdCwgYXNzdW1lIHRoaXMgaXMgSlNPTlxuICAgICAgICAgICAgICAgICAgICAgICAgX2hlYWRlcnNbJ0NvbnRlbnQtVHlwZSddID0gJ2FwcGxpY2F0aW9uL2pzb24nO1xuICAgICAgICAgICAgICAgICAgICAgICAgYm9keSA9IEpTT04uc3RyaW5naWZ5KGZ1bmN0aW9uQXJncyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB5aWVsZCB0aGlzLmZldGNoKHVybC50b1N0cmluZygpLCB7XG4gICAgICAgICAgICAgICAgICAgIG1ldGhvZDogbWV0aG9kIHx8ICdQT1NUJyxcbiAgICAgICAgICAgICAgICAgICAgLy8gaGVhZGVycyBwcmlvcml0eSBpcyAoaGlnaCB0byBsb3cpOlxuICAgICAgICAgICAgICAgICAgICAvLyAxLiBpbnZva2UtbGV2ZWwgaGVhZGVyc1xuICAgICAgICAgICAgICAgICAgICAvLyAyLiBjbGllbnQtbGV2ZWwgaGVhZGVyc1xuICAgICAgICAgICAgICAgICAgICAvLyAzLiBkZWZhdWx0IENvbnRlbnQtVHlwZSBoZWFkZXJcbiAgICAgICAgICAgICAgICAgICAgaGVhZGVyczogT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIF9oZWFkZXJzKSwgdGhpcy5oZWFkZXJzKSwgaGVhZGVycyksXG4gICAgICAgICAgICAgICAgICAgIGJvZHksXG4gICAgICAgICAgICAgICAgfSkuY2F0Y2goKGZldGNoRXJyb3IpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEZ1bmN0aW9uc0ZldGNoRXJyb3IoZmV0Y2hFcnJvcik7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgY29uc3QgaXNSZWxheUVycm9yID0gcmVzcG9uc2UuaGVhZGVycy5nZXQoJ3gtcmVsYXktZXJyb3InKTtcbiAgICAgICAgICAgICAgICBpZiAoaXNSZWxheUVycm9yICYmIGlzUmVsYXlFcnJvciA9PT0gJ3RydWUnKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBGdW5jdGlvbnNSZWxheUVycm9yKHJlc3BvbnNlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRnVuY3Rpb25zSHR0cEVycm9yKHJlc3BvbnNlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbGV0IHJlc3BvbnNlVHlwZSA9ICgoX2EgPSByZXNwb25zZS5oZWFkZXJzLmdldCgnQ29udGVudC1UeXBlJykpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6ICd0ZXh0L3BsYWluJykuc3BsaXQoJzsnKVswXS50cmltKCk7XG4gICAgICAgICAgICAgICAgbGV0IGRhdGE7XG4gICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlVHlwZSA9PT0gJ2FwcGxpY2F0aW9uL2pzb24nKSB7XG4gICAgICAgICAgICAgICAgICAgIGRhdGEgPSB5aWVsZCByZXNwb25zZS5qc29uKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHJlc3BvbnNlVHlwZSA9PT0gJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbScpIHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YSA9IHlpZWxkIHJlc3BvbnNlLmJsb2IoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAocmVzcG9uc2VUeXBlID09PSAndGV4dC9ldmVudC1zdHJlYW0nKSB7XG4gICAgICAgICAgICAgICAgICAgIGRhdGEgPSByZXNwb25zZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAocmVzcG9uc2VUeXBlID09PSAnbXVsdGlwYXJ0L2Zvcm0tZGF0YScpIHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YSA9IHlpZWxkIHJlc3BvbnNlLmZvcm1EYXRhKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvLyBkZWZhdWx0IHRvIHRleHRcbiAgICAgICAgICAgICAgICAgICAgZGF0YSA9IHlpZWxkIHJlc3BvbnNlLnRleHQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgZGF0YSwgZXJyb3I6IG51bGwsIHJlc3BvbnNlIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBkYXRhOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBlcnJvcixcbiAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2U6IGVycm9yIGluc3RhbmNlb2YgRnVuY3Rpb25zSHR0cEVycm9yIHx8IGVycm9yIGluc3RhbmNlb2YgRnVuY3Rpb25zUmVsYXlFcnJvclxuICAgICAgICAgICAgICAgICAgICAgICAgPyBlcnJvci5jb250ZXh0XG4gICAgICAgICAgICAgICAgICAgICAgICA6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1GdW5jdGlvbnNDbGllbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@supabase/functions-js/dist/module/FunctionsClient.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/functions-js/dist/module/helper.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@supabase/functions-js/dist/module/helper.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   resolveFetch: function() { return /* binding */ resolveFetch; }\n/* harmony export */ });\nconst resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @supabase/node-fetch */ \"./node_modules/@supabase/node-fetch/browser.js\")).then(({ default: fetch }) => fetch(...args));\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\n//# sourceMappingURL=helper.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2Z1bmN0aW9ucy1qcy9kaXN0L21vZHVsZS9oZWxwZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixrS0FBOEIsU0FBUyxnQkFBZ0I7QUFDckY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9mdW5jdGlvbnMtanMvZGlzdC9tb2R1bGUvaGVscGVyLmpzP2I2OTUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHJlc29sdmVGZXRjaCA9IChjdXN0b21GZXRjaCkgPT4ge1xuICAgIGxldCBfZmV0Y2g7XG4gICAgaWYgKGN1c3RvbUZldGNoKSB7XG4gICAgICAgIF9mZXRjaCA9IGN1c3RvbUZldGNoO1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlb2YgZmV0Y2ggPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIF9mZXRjaCA9ICguLi5hcmdzKSA9PiBpbXBvcnQoJ0BzdXBhYmFzZS9ub2RlLWZldGNoJykudGhlbigoeyBkZWZhdWx0OiBmZXRjaCB9KSA9PiBmZXRjaCguLi5hcmdzKSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBfZmV0Y2ggPSBmZXRjaDtcbiAgICB9XG4gICAgcmV0dXJuICguLi5hcmdzKSA9PiBfZmV0Y2goLi4uYXJncyk7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGVscGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@supabase/functions-js/dist/module/helper.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/functions-js/dist/module/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@supabase/functions-js/dist/module/index.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FunctionRegion: function() { return /* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_1__.FunctionRegion; },\n/* harmony export */   FunctionsClient: function() { return /* reexport safe */ _FunctionsClient__WEBPACK_IMPORTED_MODULE_0__.FunctionsClient; },\n/* harmony export */   FunctionsError: function() { return /* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_1__.FunctionsError; },\n/* harmony export */   FunctionsFetchError: function() { return /* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_1__.FunctionsFetchError; },\n/* harmony export */   FunctionsHttpError: function() { return /* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_1__.FunctionsHttpError; },\n/* harmony export */   FunctionsRelayError: function() { return /* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_1__.FunctionsRelayError; }\n/* harmony export */ });\n/* harmony import */ var _FunctionsClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FunctionsClient */ \"./node_modules/@supabase/functions-js/dist/module/FunctionsClient.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./types */ \"./node_modules/@supabase/functions-js/dist/module/types.js\");\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2Z1bmN0aW9ucy1qcy9kaXN0L21vZHVsZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFvRDtBQUNvRTtBQUN4SCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2Z1bmN0aW9ucy1qcy9kaXN0L21vZHVsZS9pbmRleC5qcz81MjdlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IEZ1bmN0aW9uc0NsaWVudCB9IGZyb20gJy4vRnVuY3Rpb25zQ2xpZW50JztcbmV4cG9ydCB7IEZ1bmN0aW9uc0Vycm9yLCBGdW5jdGlvbnNGZXRjaEVycm9yLCBGdW5jdGlvbnNIdHRwRXJyb3IsIEZ1bmN0aW9uc1JlbGF5RXJyb3IsIEZ1bmN0aW9uUmVnaW9uLCB9IGZyb20gJy4vdHlwZXMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@supabase/functions-js/dist/module/index.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/functions-js/dist/module/types.js":
/*!******************************************************************!*\
  !*** ./node_modules/@supabase/functions-js/dist/module/types.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FunctionRegion: function() { return /* binding */ FunctionRegion; },\n/* harmony export */   FunctionsError: function() { return /* binding */ FunctionsError; },\n/* harmony export */   FunctionsFetchError: function() { return /* binding */ FunctionsFetchError; },\n/* harmony export */   FunctionsHttpError: function() { return /* binding */ FunctionsHttpError; },\n/* harmony export */   FunctionsRelayError: function() { return /* binding */ FunctionsRelayError; }\n/* harmony export */ });\nclass FunctionsError extends Error {\n    constructor(message, name = 'FunctionsError', context) {\n        super(message);\n        this.name = name;\n        this.context = context;\n    }\n}\nclass FunctionsFetchError extends FunctionsError {\n    constructor(context) {\n        super('Failed to send a request to the Edge Function', 'FunctionsFetchError', context);\n    }\n}\nclass FunctionsRelayError extends FunctionsError {\n    constructor(context) {\n        super('Relay Error invoking the Edge Function', 'FunctionsRelayError', context);\n    }\n}\nclass FunctionsHttpError extends FunctionsError {\n    constructor(context) {\n        super('Edge Function returned a non-2xx status code', 'FunctionsHttpError', context);\n    }\n}\n// Define the enum for the 'region' property\nvar FunctionRegion;\n(function (FunctionRegion) {\n    FunctionRegion[\"Any\"] = \"any\";\n    FunctionRegion[\"ApNortheast1\"] = \"ap-northeast-1\";\n    FunctionRegion[\"ApNortheast2\"] = \"ap-northeast-2\";\n    FunctionRegion[\"ApSouth1\"] = \"ap-south-1\";\n    FunctionRegion[\"ApSoutheast1\"] = \"ap-southeast-1\";\n    FunctionRegion[\"ApSoutheast2\"] = \"ap-southeast-2\";\n    FunctionRegion[\"CaCentral1\"] = \"ca-central-1\";\n    FunctionRegion[\"EuCentral1\"] = \"eu-central-1\";\n    FunctionRegion[\"EuWest1\"] = \"eu-west-1\";\n    FunctionRegion[\"EuWest2\"] = \"eu-west-2\";\n    FunctionRegion[\"EuWest3\"] = \"eu-west-3\";\n    FunctionRegion[\"SaEast1\"] = \"sa-east-1\";\n    FunctionRegion[\"UsEast1\"] = \"us-east-1\";\n    FunctionRegion[\"UsWest1\"] = \"us-west-1\";\n    FunctionRegion[\"UsWest2\"] = \"us-west-2\";\n})(FunctionRegion || (FunctionRegion = {}));\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2Z1bmN0aW9ucy1qcy9kaXN0L21vZHVsZS90eXBlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx3Q0FBd0M7QUFDekMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9mdW5jdGlvbnMtanMvZGlzdC9tb2R1bGUvdHlwZXMuanM/Njg4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgRnVuY3Rpb25zRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgbmFtZSA9ICdGdW5jdGlvbnNFcnJvcicsIGNvbnRleHQpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIHRoaXMuY29udGV4dCA9IGNvbnRleHQ7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIEZ1bmN0aW9uc0ZldGNoRXJyb3IgZXh0ZW5kcyBGdW5jdGlvbnNFcnJvciB7XG4gICAgY29uc3RydWN0b3IoY29udGV4dCkge1xuICAgICAgICBzdXBlcignRmFpbGVkIHRvIHNlbmQgYSByZXF1ZXN0IHRvIHRoZSBFZGdlIEZ1bmN0aW9uJywgJ0Z1bmN0aW9uc0ZldGNoRXJyb3InLCBjb250ZXh0KTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgRnVuY3Rpb25zUmVsYXlFcnJvciBleHRlbmRzIEZ1bmN0aW9uc0Vycm9yIHtcbiAgICBjb25zdHJ1Y3Rvcihjb250ZXh0KSB7XG4gICAgICAgIHN1cGVyKCdSZWxheSBFcnJvciBpbnZva2luZyB0aGUgRWRnZSBGdW5jdGlvbicsICdGdW5jdGlvbnNSZWxheUVycm9yJywgY29udGV4dCk7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIEZ1bmN0aW9uc0h0dHBFcnJvciBleHRlbmRzIEZ1bmN0aW9uc0Vycm9yIHtcbiAgICBjb25zdHJ1Y3Rvcihjb250ZXh0KSB7XG4gICAgICAgIHN1cGVyKCdFZGdlIEZ1bmN0aW9uIHJldHVybmVkIGEgbm9uLTJ4eCBzdGF0dXMgY29kZScsICdGdW5jdGlvbnNIdHRwRXJyb3InLCBjb250ZXh0KTtcbiAgICB9XG59XG4vLyBEZWZpbmUgdGhlIGVudW0gZm9yIHRoZSAncmVnaW9uJyBwcm9wZXJ0eVxuZXhwb3J0IHZhciBGdW5jdGlvblJlZ2lvbjtcbihmdW5jdGlvbiAoRnVuY3Rpb25SZWdpb24pIHtcbiAgICBGdW5jdGlvblJlZ2lvbltcIkFueVwiXSA9IFwiYW55XCI7XG4gICAgRnVuY3Rpb25SZWdpb25bXCJBcE5vcnRoZWFzdDFcIl0gPSBcImFwLW5vcnRoZWFzdC0xXCI7XG4gICAgRnVuY3Rpb25SZWdpb25bXCJBcE5vcnRoZWFzdDJcIl0gPSBcImFwLW5vcnRoZWFzdC0yXCI7XG4gICAgRnVuY3Rpb25SZWdpb25bXCJBcFNvdXRoMVwiXSA9IFwiYXAtc291dGgtMVwiO1xuICAgIEZ1bmN0aW9uUmVnaW9uW1wiQXBTb3V0aGVhc3QxXCJdID0gXCJhcC1zb3V0aGVhc3QtMVwiO1xuICAgIEZ1bmN0aW9uUmVnaW9uW1wiQXBTb3V0aGVhc3QyXCJdID0gXCJhcC1zb3V0aGVhc3QtMlwiO1xuICAgIEZ1bmN0aW9uUmVnaW9uW1wiQ2FDZW50cmFsMVwiXSA9IFwiY2EtY2VudHJhbC0xXCI7XG4gICAgRnVuY3Rpb25SZWdpb25bXCJFdUNlbnRyYWwxXCJdID0gXCJldS1jZW50cmFsLTFcIjtcbiAgICBGdW5jdGlvblJlZ2lvbltcIkV1V2VzdDFcIl0gPSBcImV1LXdlc3QtMVwiO1xuICAgIEZ1bmN0aW9uUmVnaW9uW1wiRXVXZXN0MlwiXSA9IFwiZXUtd2VzdC0yXCI7XG4gICAgRnVuY3Rpb25SZWdpb25bXCJFdVdlc3QzXCJdID0gXCJldS13ZXN0LTNcIjtcbiAgICBGdW5jdGlvblJlZ2lvbltcIlNhRWFzdDFcIl0gPSBcInNhLWVhc3QtMVwiO1xuICAgIEZ1bmN0aW9uUmVnaW9uW1wiVXNFYXN0MVwiXSA9IFwidXMtZWFzdC0xXCI7XG4gICAgRnVuY3Rpb25SZWdpb25bXCJVc1dlc3QxXCJdID0gXCJ1cy13ZXN0LTFcIjtcbiAgICBGdW5jdGlvblJlZ2lvbltcIlVzV2VzdDJcIl0gPSBcInVzLXdlc3QtMlwiO1xufSkoRnVuY3Rpb25SZWdpb24gfHwgKEZ1bmN0aW9uUmVnaW9uID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@supabase/functions-js/dist/module/types.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/node-fetch/browser.js":
/*!******************************************************!*\
  !*** ./node_modules/@supabase/node-fetch/browser.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Headers: function() { return /* binding */ Headers; },\n/* harmony export */   Request: function() { return /* binding */ Request; },\n/* harmony export */   Response: function() { return /* binding */ Response; },\n/* harmony export */   fetch: function() { return /* binding */ fetch; }\n/* harmony export */ });\n\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function() {\n    // the only reliable means to get the global object is\n    // `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof self !== 'undefined') { return self; }\n    if (typeof window !== 'undefined') { return window; }\n    if (typeof __webpack_require__.g !== 'undefined') { return __webpack_require__.g; }\n    throw new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nconst fetch = globalObject.fetch;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (globalObject.fetch.bind(globalObject));\n\nconst Headers = globalObject.Headers;\nconst Request = globalObject.Request;\nconst Response = globalObject.Response;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL25vZGUtZmV0Y2gvYnJvd3Nlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QztBQUN2Qyx5Q0FBeUM7QUFDekMsZUFBZSxxQkFBTSxvQkFBb0IsT0FBTyxxQkFBTTtBQUN0RDtBQUNBOztBQUVBOztBQUVPOztBQUVQLCtEQUFlLHFDQUFxQyxFQUFDOztBQUU5QztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9ub2RlLWZldGNoL2Jyb3dzZXIuanM/MjFmZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLy8gcmVmOiBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1nbG9iYWxcbnZhciBnZXRHbG9iYWwgPSBmdW5jdGlvbigpIHtcbiAgICAvLyB0aGUgb25seSByZWxpYWJsZSBtZWFucyB0byBnZXQgdGhlIGdsb2JhbCBvYmplY3QgaXNcbiAgICAvLyBgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKWBcbiAgICAvLyBIb3dldmVyLCB0aGlzIGNhdXNlcyBDU1AgdmlvbGF0aW9ucyBpbiBDaHJvbWUgYXBwcy5cbiAgICBpZiAodHlwZW9mIHNlbGYgIT09ICd1bmRlZmluZWQnKSB7IHJldHVybiBzZWxmOyB9XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7IHJldHVybiB3aW5kb3c7IH1cbiAgICBpZiAodHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcpIHsgcmV0dXJuIGdsb2JhbDsgfVxuICAgIHRocm93IG5ldyBFcnJvcigndW5hYmxlIHRvIGxvY2F0ZSBnbG9iYWwgb2JqZWN0Jyk7XG59XG5cbnZhciBnbG9iYWxPYmplY3QgPSBnZXRHbG9iYWwoKTtcblxuZXhwb3J0IGNvbnN0IGZldGNoID0gZ2xvYmFsT2JqZWN0LmZldGNoO1xuXG5leHBvcnQgZGVmYXVsdCBnbG9iYWxPYmplY3QuZmV0Y2guYmluZChnbG9iYWxPYmplY3QpO1xuXG5leHBvcnQgY29uc3QgSGVhZGVycyA9IGdsb2JhbE9iamVjdC5IZWFkZXJzO1xuZXhwb3J0IGNvbnN0IFJlcXVlc3QgPSBnbG9iYWxPYmplY3QuUmVxdWVzdDtcbmV4cG9ydCBjb25zdCBSZXNwb25zZSA9IGdsb2JhbE9iamVjdC5SZXNwb25zZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@supabase/node-fetch/browser.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestBuilder.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestBuilder.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n// @ts-ignore\nconst node_fetch_1 = __importDefault(__webpack_require__(/*! @supabase/node-fetch */ \"./node_modules/@supabase/node-fetch/browser.js\"));\nconst PostgrestError_1 = __importDefault(__webpack_require__(/*! ./PostgrestError */ \"./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestError.js\"));\nclass PostgrestBuilder {\n    constructor(builder) {\n        this.shouldThrowOnError = false;\n        this.method = builder.method;\n        this.url = builder.url;\n        this.headers = builder.headers;\n        this.schema = builder.schema;\n        this.body = builder.body;\n        this.shouldThrowOnError = builder.shouldThrowOnError;\n        this.signal = builder.signal;\n        this.isMaybeSingle = builder.isMaybeSingle;\n        if (builder.fetch) {\n            this.fetch = builder.fetch;\n        }\n        else if (typeof fetch === 'undefined') {\n            this.fetch = node_fetch_1.default;\n        }\n        else {\n            this.fetch = fetch;\n        }\n    }\n    /**\n     * If there's an error with the query, throwOnError will reject the promise by\n     * throwing the error instead of returning it as part of a successful response.\n     *\n     * {@link https://github.com/supabase/supabase-js/issues/92}\n     */\n    throwOnError() {\n        this.shouldThrowOnError = true;\n        return this;\n    }\n    /**\n     * Set an HTTP header for the request.\n     */\n    setHeader(name, value) {\n        this.headers = Object.assign({}, this.headers);\n        this.headers[name] = value;\n        return this;\n    }\n    then(onfulfilled, onrejected) {\n        // https://postgrest.org/en/stable/api.html#switching-schemas\n        if (this.schema === undefined) {\n            // skip\n        }\n        else if (['GET', 'HEAD'].includes(this.method)) {\n            this.headers['Accept-Profile'] = this.schema;\n        }\n        else {\n            this.headers['Content-Profile'] = this.schema;\n        }\n        if (this.method !== 'GET' && this.method !== 'HEAD') {\n            this.headers['Content-Type'] = 'application/json';\n        }\n        // NOTE: Invoke w/o `this` to avoid illegal invocation error.\n        // https://github.com/supabase/postgrest-js/pull/247\n        const _fetch = this.fetch;\n        let res = _fetch(this.url.toString(), {\n            method: this.method,\n            headers: this.headers,\n            body: JSON.stringify(this.body),\n            signal: this.signal,\n        }).then(async (res) => {\n            var _a, _b, _c;\n            let error = null;\n            let data = null;\n            let count = null;\n            let status = res.status;\n            let statusText = res.statusText;\n            if (res.ok) {\n                if (this.method !== 'HEAD') {\n                    const body = await res.text();\n                    if (body === '') {\n                        // Prefer: return=minimal\n                    }\n                    else if (this.headers['Accept'] === 'text/csv') {\n                        data = body;\n                    }\n                    else if (this.headers['Accept'] &&\n                        this.headers['Accept'].includes('application/vnd.pgrst.plan+text')) {\n                        data = body;\n                    }\n                    else {\n                        data = JSON.parse(body);\n                    }\n                }\n                const countHeader = (_a = this.headers['Prefer']) === null || _a === void 0 ? void 0 : _a.match(/count=(exact|planned|estimated)/);\n                const contentRange = (_b = res.headers.get('content-range')) === null || _b === void 0 ? void 0 : _b.split('/');\n                if (countHeader && contentRange && contentRange.length > 1) {\n                    count = parseInt(contentRange[1]);\n                }\n                // Temporary partial fix for https://github.com/supabase/postgrest-js/issues/361\n                // Issue persists e.g. for `.insert([...]).select().maybeSingle()`\n                if (this.isMaybeSingle && this.method === 'GET' && Array.isArray(data)) {\n                    if (data.length > 1) {\n                        error = {\n                            // https://github.com/PostgREST/postgrest/blob/a867d79c42419af16c18c3fb019eba8df992626f/src/PostgREST/Error.hs#L553\n                            code: 'PGRST116',\n                            details: `Results contain ${data.length} rows, application/vnd.pgrst.object+json requires 1 row`,\n                            hint: null,\n                            message: 'JSON object requested, multiple (or no) rows returned',\n                        };\n                        data = null;\n                        count = null;\n                        status = 406;\n                        statusText = 'Not Acceptable';\n                    }\n                    else if (data.length === 1) {\n                        data = data[0];\n                    }\n                    else {\n                        data = null;\n                    }\n                }\n            }\n            else {\n                const body = await res.text();\n                try {\n                    error = JSON.parse(body);\n                    // Workaround for https://github.com/supabase/postgrest-js/issues/295\n                    if (Array.isArray(error) && res.status === 404) {\n                        data = [];\n                        error = null;\n                        status = 200;\n                        statusText = 'OK';\n                    }\n                }\n                catch (_d) {\n                    // Workaround for https://github.com/supabase/postgrest-js/issues/295\n                    if (res.status === 404 && body === '') {\n                        status = 204;\n                        statusText = 'No Content';\n                    }\n                    else {\n                        error = {\n                            message: body,\n                        };\n                    }\n                }\n                if (error && this.isMaybeSingle && ((_c = error === null || error === void 0 ? void 0 : error.details) === null || _c === void 0 ? void 0 : _c.includes('0 rows'))) {\n                    error = null;\n                    status = 200;\n                    statusText = 'OK';\n                }\n                if (error && this.shouldThrowOnError) {\n                    throw new PostgrestError_1.default(error);\n                }\n            }\n            const postgrestResponse = {\n                error,\n                data,\n                count,\n                status,\n                statusText,\n            };\n            return postgrestResponse;\n        });\n        if (!this.shouldThrowOnError) {\n            res = res.catch((fetchError) => {\n                var _a, _b, _c;\n                return ({\n                    error: {\n                        message: `${(_a = fetchError === null || fetchError === void 0 ? void 0 : fetchError.name) !== null && _a !== void 0 ? _a : 'FetchError'}: ${fetchError === null || fetchError === void 0 ? void 0 : fetchError.message}`,\n                        details: `${(_b = fetchError === null || fetchError === void 0 ? void 0 : fetchError.stack) !== null && _b !== void 0 ? _b : ''}`,\n                        hint: '',\n                        code: `${(_c = fetchError === null || fetchError === void 0 ? void 0 : fetchError.code) !== null && _c !== void 0 ? _c : ''}`,\n                    },\n                    data: null,\n                    count: null,\n                    status: 0,\n                    statusText: '',\n                });\n            });\n        }\n        return res.then(onfulfilled, onrejected);\n    }\n    /**\n     * Override the type of the returned `data`.\n     *\n     * @typeParam NewResult - The new result type to override with\n     * @deprecated Use overrideTypes<yourType, { merge: false }>() method at the end of your call chain instead\n     */\n    returns() {\n        /* istanbul ignore next */\n        return this;\n    }\n    /**\n     * Override the type of the returned `data` field in the response.\n     *\n     * @typeParam NewResult - The new type to cast the response data to\n     * @typeParam Options - Optional type configuration (defaults to { merge: true })\n     * @typeParam Options.merge - When true, merges the new type with existing return type. When false, replaces the existing types entirely (defaults to true)\n     * @example\n     * ```typescript\n     * // Merge with existing types (default behavior)\n     * const query = supabase\n     *   .from('users')\n     *   .select()\n     *   .overrideTypes<{ custom_field: string }>()\n     *\n     * // Replace existing types completely\n     * const replaceQuery = supabase\n     *   .from('users')\n     *   .select()\n     *   .overrideTypes<{ id: number; name: string }, { merge: false }>()\n     * ```\n     * @returns A PostgrestBuilder instance with the new type\n     */\n    overrideTypes() {\n        return this;\n    }\n}\nexports[\"default\"] = PostgrestBuilder;\n//# sourceMappingURL=PostgrestBuilder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestBuilder.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestClient.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestClient.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst PostgrestQueryBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestQueryBuilder */ \"./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestQueryBuilder.js\"));\nconst PostgrestFilterBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestFilterBuilder */ \"./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestFilterBuilder.js\"));\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./node_modules/@supabase/postgrest-js/dist/cjs/constants.js\");\n/**\n * PostgREST client.\n *\n * @typeParam Database - Types for the schema from the [type\n * generator](https://supabase.com/docs/reference/javascript/next/typescript-support)\n *\n * @typeParam SchemaName - Postgres schema to switch to. Must be a string\n * literal, the same one passed to the constructor. If the schema is not\n * `\"public\"`, this must be supplied manually.\n */\nclass PostgrestClient {\n    // TODO: Add back shouldThrowOnError once we figure out the typings\n    /**\n     * Creates a PostgREST client.\n     *\n     * @param url - URL of the PostgREST endpoint\n     * @param options - Named parameters\n     * @param options.headers - Custom headers\n     * @param options.schema - Postgres schema to switch to\n     * @param options.fetch - Custom fetch\n     */\n    constructor(url, { headers = {}, schema, fetch, } = {}) {\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, constants_1.DEFAULT_HEADERS), headers);\n        this.schemaName = schema;\n        this.fetch = fetch;\n    }\n    /**\n     * Perform a query on a table or a view.\n     *\n     * @param relation - The table or view name to query\n     */\n    from(relation) {\n        const url = new URL(`${this.url}/${relation}`);\n        return new PostgrestQueryBuilder_1.default(url, {\n            headers: Object.assign({}, this.headers),\n            schema: this.schemaName,\n            fetch: this.fetch,\n        });\n    }\n    /**\n     * Select a schema to query or perform an function (rpc) call.\n     *\n     * The schema needs to be on the list of exposed schemas inside Supabase.\n     *\n     * @param schema - The schema to query\n     */\n    schema(schema) {\n        return new PostgrestClient(this.url, {\n            headers: this.headers,\n            schema,\n            fetch: this.fetch,\n        });\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn - The function name to call\n     * @param args - The arguments to pass to the function call\n     * @param options - Named parameters\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     * @param options.get - When set to `true`, the function will be called with\n     * read-only access mode.\n     * @param options.count - Count algorithm to use to count rows returned by the\n     * function. Only applicable for [set-returning\n     * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    rpc(fn, args = {}, { head = false, get = false, count, } = {}) {\n        let method;\n        const url = new URL(`${this.url}/rpc/${fn}`);\n        let body;\n        if (head || get) {\n            method = head ? 'HEAD' : 'GET';\n            Object.entries(args)\n                // params with undefined value needs to be filtered out, otherwise it'll\n                // show up as `?param=undefined`\n                .filter(([_, value]) => value !== undefined)\n                // array values need special syntax\n                .map(([name, value]) => [name, Array.isArray(value) ? `{${value.join(',')}}` : `${value}`])\n                .forEach(([name, value]) => {\n                url.searchParams.append(name, value);\n            });\n        }\n        else {\n            method = 'POST';\n            body = args;\n        }\n        const headers = Object.assign({}, this.headers);\n        if (count) {\n            headers['Prefer'] = `count=${count}`;\n        }\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url,\n            headers,\n            schema: this.schemaName,\n            body,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n}\nexports[\"default\"] = PostgrestClient;\n//# sourceMappingURL=PostgrestClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3Bvc3RncmVzdC1qcy9kaXN0L2Nqcy9Qb3N0Z3Jlc3RDbGllbnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnREFBZ0QsbUJBQU8sQ0FBQyx3R0FBeUI7QUFDakYsaURBQWlELG1CQUFPLENBQUMsMEdBQTBCO0FBQ25GLG9CQUFvQixtQkFBTyxDQUFDLGdGQUFhO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixZQUFZLG1CQUFtQixJQUFJO0FBQzFEO0FBQ0EscURBQXFEO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQixTQUFTLEdBQUcsU0FBUztBQUNwRDtBQUNBLHFDQUFxQztBQUNyQztBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixJQUFJLG9DQUFvQyxJQUFJO0FBQ2pFO0FBQ0EsK0JBQStCLFNBQVMsT0FBTyxHQUFHO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0UsRUFBRSxpQkFBaUIsT0FBTyxNQUFNO0FBQ3hHO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QztBQUN4QztBQUNBLHlDQUF5QyxNQUFNO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3Bvc3RncmVzdC1qcy9kaXN0L2Nqcy9Qb3N0Z3Jlc3RDbGllbnQuanM/ZTY0MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IFBvc3RncmVzdFF1ZXJ5QnVpbGRlcl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL1Bvc3RncmVzdFF1ZXJ5QnVpbGRlclwiKSk7XG5jb25zdCBQb3N0Z3Jlc3RGaWx0ZXJCdWlsZGVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vUG9zdGdyZXN0RmlsdGVyQnVpbGRlclwiKSk7XG5jb25zdCBjb25zdGFudHNfMSA9IHJlcXVpcmUoXCIuL2NvbnN0YW50c1wiKTtcbi8qKlxuICogUG9zdGdSRVNUIGNsaWVudC5cbiAqXG4gKiBAdHlwZVBhcmFtIERhdGFiYXNlIC0gVHlwZXMgZm9yIHRoZSBzY2hlbWEgZnJvbSB0aGUgW3R5cGVcbiAqIGdlbmVyYXRvcl0oaHR0cHM6Ly9zdXBhYmFzZS5jb20vZG9jcy9yZWZlcmVuY2UvamF2YXNjcmlwdC9uZXh0L3R5cGVzY3JpcHQtc3VwcG9ydClcbiAqXG4gKiBAdHlwZVBhcmFtIFNjaGVtYU5hbWUgLSBQb3N0Z3JlcyBzY2hlbWEgdG8gc3dpdGNoIHRvLiBNdXN0IGJlIGEgc3RyaW5nXG4gKiBsaXRlcmFsLCB0aGUgc2FtZSBvbmUgcGFzc2VkIHRvIHRoZSBjb25zdHJ1Y3Rvci4gSWYgdGhlIHNjaGVtYSBpcyBub3RcbiAqIGBcInB1YmxpY1wiYCwgdGhpcyBtdXN0IGJlIHN1cHBsaWVkIG1hbnVhbGx5LlxuICovXG5jbGFzcyBQb3N0Z3Jlc3RDbGllbnQge1xuICAgIC8vIFRPRE86IEFkZCBiYWNrIHNob3VsZFRocm93T25FcnJvciBvbmNlIHdlIGZpZ3VyZSBvdXQgdGhlIHR5cGluZ3NcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgUG9zdGdSRVNUIGNsaWVudC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB1cmwgLSBVUkwgb2YgdGhlIFBvc3RnUkVTVCBlbmRwb2ludFxuICAgICAqIEBwYXJhbSBvcHRpb25zIC0gTmFtZWQgcGFyYW1ldGVyc1xuICAgICAqIEBwYXJhbSBvcHRpb25zLmhlYWRlcnMgLSBDdXN0b20gaGVhZGVyc1xuICAgICAqIEBwYXJhbSBvcHRpb25zLnNjaGVtYSAtIFBvc3RncmVzIHNjaGVtYSB0byBzd2l0Y2ggdG9cbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5mZXRjaCAtIEN1c3RvbSBmZXRjaFxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHVybCwgeyBoZWFkZXJzID0ge30sIHNjaGVtYSwgZmV0Y2gsIH0gPSB7fSkge1xuICAgICAgICB0aGlzLnVybCA9IHVybDtcbiAgICAgICAgdGhpcy5oZWFkZXJzID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBjb25zdGFudHNfMS5ERUZBVUxUX0hFQURFUlMpLCBoZWFkZXJzKTtcbiAgICAgICAgdGhpcy5zY2hlbWFOYW1lID0gc2NoZW1hO1xuICAgICAgICB0aGlzLmZldGNoID0gZmV0Y2g7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFBlcmZvcm0gYSBxdWVyeSBvbiBhIHRhYmxlIG9yIGEgdmlldy5cbiAgICAgKlxuICAgICAqIEBwYXJhbSByZWxhdGlvbiAtIFRoZSB0YWJsZSBvciB2aWV3IG5hbWUgdG8gcXVlcnlcbiAgICAgKi9cbiAgICBmcm9tKHJlbGF0aW9uKSB7XG4gICAgICAgIGNvbnN0IHVybCA9IG5ldyBVUkwoYCR7dGhpcy51cmx9LyR7cmVsYXRpb259YCk7XG4gICAgICAgIHJldHVybiBuZXcgUG9zdGdyZXN0UXVlcnlCdWlsZGVyXzEuZGVmYXVsdCh1cmwsIHtcbiAgICAgICAgICAgIGhlYWRlcnM6IE9iamVjdC5hc3NpZ24oe30sIHRoaXMuaGVhZGVycyksXG4gICAgICAgICAgICBzY2hlbWE6IHRoaXMuc2NoZW1hTmFtZSxcbiAgICAgICAgICAgIGZldGNoOiB0aGlzLmZldGNoLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2VsZWN0IGEgc2NoZW1hIHRvIHF1ZXJ5IG9yIHBlcmZvcm0gYW4gZnVuY3Rpb24gKHJwYykgY2FsbC5cbiAgICAgKlxuICAgICAqIFRoZSBzY2hlbWEgbmVlZHMgdG8gYmUgb24gdGhlIGxpc3Qgb2YgZXhwb3NlZCBzY2hlbWFzIGluc2lkZSBTdXBhYmFzZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBzY2hlbWEgLSBUaGUgc2NoZW1hIHRvIHF1ZXJ5XG4gICAgICovXG4gICAgc2NoZW1hKHNjaGVtYSkge1xuICAgICAgICByZXR1cm4gbmV3IFBvc3RncmVzdENsaWVudCh0aGlzLnVybCwge1xuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxuICAgICAgICAgICAgc2NoZW1hLFxuICAgICAgICAgICAgZmV0Y2g6IHRoaXMuZmV0Y2gsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBQZXJmb3JtIGEgZnVuY3Rpb24gY2FsbC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBmbiAtIFRoZSBmdW5jdGlvbiBuYW1lIHRvIGNhbGxcbiAgICAgKiBAcGFyYW0gYXJncyAtIFRoZSBhcmd1bWVudHMgdG8gcGFzcyB0byB0aGUgZnVuY3Rpb24gY2FsbFxuICAgICAqIEBwYXJhbSBvcHRpb25zIC0gTmFtZWQgcGFyYW1ldGVyc1xuICAgICAqIEBwYXJhbSBvcHRpb25zLmhlYWQgLSBXaGVuIHNldCB0byBgdHJ1ZWAsIGBkYXRhYCB3aWxsIG5vdCBiZSByZXR1cm5lZC5cbiAgICAgKiBVc2VmdWwgaWYgeW91IG9ubHkgbmVlZCB0aGUgY291bnQuXG4gICAgICogQHBhcmFtIG9wdGlvbnMuZ2V0IC0gV2hlbiBzZXQgdG8gYHRydWVgLCB0aGUgZnVuY3Rpb24gd2lsbCBiZSBjYWxsZWQgd2l0aFxuICAgICAqIHJlYWQtb25seSBhY2Nlc3MgbW9kZS5cbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5jb3VudCAtIENvdW50IGFsZ29yaXRobSB0byB1c2UgdG8gY291bnQgcm93cyByZXR1cm5lZCBieSB0aGVcbiAgICAgKiBmdW5jdGlvbi4gT25seSBhcHBsaWNhYmxlIGZvciBbc2V0LXJldHVybmluZ1xuICAgICAqIGZ1bmN0aW9uc10oaHR0cHM6Ly93d3cucG9zdGdyZXNxbC5vcmcvZG9jcy9jdXJyZW50L2Z1bmN0aW9ucy1zcmYuaHRtbCkuXG4gICAgICpcbiAgICAgKiBgXCJleGFjdFwiYDogRXhhY3QgYnV0IHNsb3cgY291bnQgYWxnb3JpdGhtLiBQZXJmb3JtcyBhIGBDT1VOVCgqKWAgdW5kZXIgdGhlXG4gICAgICogaG9vZC5cbiAgICAgKlxuICAgICAqIGBcInBsYW5uZWRcImA6IEFwcHJveGltYXRlZCBidXQgZmFzdCBjb3VudCBhbGdvcml0aG0uIFVzZXMgdGhlIFBvc3RncmVzXG4gICAgICogc3RhdGlzdGljcyB1bmRlciB0aGUgaG9vZC5cbiAgICAgKlxuICAgICAqIGBcImVzdGltYXRlZFwiYDogVXNlcyBleGFjdCBjb3VudCBmb3IgbG93IG51bWJlcnMgYW5kIHBsYW5uZWQgY291bnQgZm9yIGhpZ2hcbiAgICAgKiBudW1iZXJzLlxuICAgICAqL1xuICAgIHJwYyhmbiwgYXJncyA9IHt9LCB7IGhlYWQgPSBmYWxzZSwgZ2V0ID0gZmFsc2UsIGNvdW50LCB9ID0ge30pIHtcbiAgICAgICAgbGV0IG1ldGhvZDtcbiAgICAgICAgY29uc3QgdXJsID0gbmV3IFVSTChgJHt0aGlzLnVybH0vcnBjLyR7Zm59YCk7XG4gICAgICAgIGxldCBib2R5O1xuICAgICAgICBpZiAoaGVhZCB8fCBnZXQpIHtcbiAgICAgICAgICAgIG1ldGhvZCA9IGhlYWQgPyAnSEVBRCcgOiAnR0VUJztcbiAgICAgICAgICAgIE9iamVjdC5lbnRyaWVzKGFyZ3MpXG4gICAgICAgICAgICAgICAgLy8gcGFyYW1zIHdpdGggdW5kZWZpbmVkIHZhbHVlIG5lZWRzIHRvIGJlIGZpbHRlcmVkIG91dCwgb3RoZXJ3aXNlIGl0J2xsXG4gICAgICAgICAgICAgICAgLy8gc2hvdyB1cCBhcyBgP3BhcmFtPXVuZGVmaW5lZGBcbiAgICAgICAgICAgICAgICAuZmlsdGVyKChbXywgdmFsdWVdKSA9PiB2YWx1ZSAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgICAgIC8vIGFycmF5IHZhbHVlcyBuZWVkIHNwZWNpYWwgc3ludGF4XG4gICAgICAgICAgICAgICAgLm1hcCgoW25hbWUsIHZhbHVlXSkgPT4gW25hbWUsIEFycmF5LmlzQXJyYXkodmFsdWUpID8gYHske3ZhbHVlLmpvaW4oJywnKX19YCA6IGAke3ZhbHVlfWBdKVxuICAgICAgICAgICAgICAgIC5mb3JFYWNoKChbbmFtZSwgdmFsdWVdKSA9PiB7XG4gICAgICAgICAgICAgICAgdXJsLnNlYXJjaFBhcmFtcy5hcHBlbmQobmFtZSwgdmFsdWUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBtZXRob2QgPSAnUE9TVCc7XG4gICAgICAgICAgICBib2R5ID0gYXJncztcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBoZWFkZXJzID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5oZWFkZXJzKTtcbiAgICAgICAgaWYgKGNvdW50KSB7XG4gICAgICAgICAgICBoZWFkZXJzWydQcmVmZXInXSA9IGBjb3VudD0ke2NvdW50fWA7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBQb3N0Z3Jlc3RGaWx0ZXJCdWlsZGVyXzEuZGVmYXVsdCh7XG4gICAgICAgICAgICBtZXRob2QsXG4gICAgICAgICAgICB1cmwsXG4gICAgICAgICAgICBoZWFkZXJzLFxuICAgICAgICAgICAgc2NoZW1hOiB0aGlzLnNjaGVtYU5hbWUsXG4gICAgICAgICAgICBib2R5LFxuICAgICAgICAgICAgZmV0Y2g6IHRoaXMuZmV0Y2gsXG4gICAgICAgICAgICBhbGxvd0VtcHR5OiBmYWxzZSxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gUG9zdGdyZXN0Q2xpZW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UG9zdGdyZXN0Q2xpZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestClient.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestError.js":
/*!************************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestError.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Error format\n *\n * {@link https://postgrest.org/en/stable/api.html?highlight=options#errors-and-http-status-codes}\n */\nclass PostgrestError extends Error {\n    constructor(context) {\n        super(context.message);\n        this.name = 'PostgrestError';\n        this.details = context.details;\n        this.hint = context.hint;\n        this.code = context.code;\n    }\n}\nexports[\"default\"] = PostgrestError;\n//# sourceMappingURL=PostgrestError.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3Bvc3RncmVzdC1qcy9kaXN0L2Nqcy9Qb3N0Z3Jlc3RFcnJvci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RDtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcG9zdGdyZXN0LWpzL2Rpc3QvY2pzL1Bvc3RncmVzdEVycm9yLmpzPzEzZWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vKipcbiAqIEVycm9yIGZvcm1hdFxuICpcbiAqIHtAbGluayBodHRwczovL3Bvc3RncmVzdC5vcmcvZW4vc3RhYmxlL2FwaS5odG1sP2hpZ2hsaWdodD1vcHRpb25zI2Vycm9ycy1hbmQtaHR0cC1zdGF0dXMtY29kZXN9XG4gKi9cbmNsYXNzIFBvc3RncmVzdEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKGNvbnRleHQpIHtcbiAgICAgICAgc3VwZXIoY29udGV4dC5tZXNzYWdlKTtcbiAgICAgICAgdGhpcy5uYW1lID0gJ1Bvc3RncmVzdEVycm9yJztcbiAgICAgICAgdGhpcy5kZXRhaWxzID0gY29udGV4dC5kZXRhaWxzO1xuICAgICAgICB0aGlzLmhpbnQgPSBjb250ZXh0LmhpbnQ7XG4gICAgICAgIHRoaXMuY29kZSA9IGNvbnRleHQuY29kZTtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBQb3N0Z3Jlc3RFcnJvcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVBvc3RncmVzdEVycm9yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestError.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestFilterBuilder.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestFilterBuilder.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst PostgrestTransformBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestTransformBuilder */ \"./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestTransformBuilder.js\"));\nclass PostgrestFilterBuilder extends PostgrestTransformBuilder_1.default {\n    /**\n     * Match only rows where `column` is equal to `value`.\n     *\n     * To check if the value of `column` is NULL, you should use `.is()` instead.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    eq(column, value) {\n        this.url.searchParams.append(column, `eq.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is not equal to `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    neq(column, value) {\n        this.url.searchParams.append(column, `neq.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is greater than `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    gt(column, value) {\n        this.url.searchParams.append(column, `gt.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is greater than or equal to `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    gte(column, value) {\n        this.url.searchParams.append(column, `gte.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is less than `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    lt(column, value) {\n        this.url.searchParams.append(column, `lt.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is less than or equal to `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    lte(column, value) {\n        this.url.searchParams.append(column, `lte.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches `pattern` case-sensitively.\n     *\n     * @param column - The column to filter on\n     * @param pattern - The pattern to match with\n     */\n    like(column, pattern) {\n        this.url.searchParams.append(column, `like.${pattern}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches all of `patterns` case-sensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */\n    likeAllOf(column, patterns) {\n        this.url.searchParams.append(column, `like(all).{${patterns.join(',')}}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches any of `patterns` case-sensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */\n    likeAnyOf(column, patterns) {\n        this.url.searchParams.append(column, `like(any).{${patterns.join(',')}}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches `pattern` case-insensitively.\n     *\n     * @param column - The column to filter on\n     * @param pattern - The pattern to match with\n     */\n    ilike(column, pattern) {\n        this.url.searchParams.append(column, `ilike.${pattern}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches all of `patterns` case-insensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */\n    ilikeAllOf(column, patterns) {\n        this.url.searchParams.append(column, `ilike(all).{${patterns.join(',')}}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches any of `patterns` case-insensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */\n    ilikeAnyOf(column, patterns) {\n        this.url.searchParams.append(column, `ilike(any).{${patterns.join(',')}}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` IS `value`.\n     *\n     * For non-boolean columns, this is only relevant for checking if the value of\n     * `column` is NULL by setting `value` to `null`.\n     *\n     * For boolean columns, you can also set `value` to `true` or `false` and it\n     * will behave the same way as `.eq()`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    is(column, value) {\n        this.url.searchParams.append(column, `is.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is included in the `values` array.\n     *\n     * @param column - The column to filter on\n     * @param values - The values array to filter with\n     */\n    in(column, values) {\n        const cleanedValues = Array.from(new Set(values))\n            .map((s) => {\n            // handle postgrest reserved characters\n            // https://postgrest.org/en/v7.0.0/api.html#reserved-characters\n            if (typeof s === 'string' && new RegExp('[,()]').test(s))\n                return `\"${s}\"`;\n            else\n                return `${s}`;\n        })\n            .join(',');\n        this.url.searchParams.append(column, `in.(${cleanedValues})`);\n        return this;\n    }\n    /**\n     * Only relevant for jsonb, array, and range columns. Match only rows where\n     * `column` contains every element appearing in `value`.\n     *\n     * @param column - The jsonb, array, or range column to filter on\n     * @param value - The jsonb, array, or range value to filter with\n     */\n    contains(column, value) {\n        if (typeof value === 'string') {\n            // range types can be inclusive '[', ']' or exclusive '(', ')' so just\n            // keep it simple and accept a string\n            this.url.searchParams.append(column, `cs.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(column, `cs.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(column, `cs.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Only relevant for jsonb, array, and range columns. Match only rows where\n     * every element appearing in `column` is contained by `value`.\n     *\n     * @param column - The jsonb, array, or range column to filter on\n     * @param value - The jsonb, array, or range value to filter with\n     */\n    containedBy(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(column, `cd.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(column, `cd.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(column, `cd.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is greater than any element in `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeGt(column, range) {\n        this.url.searchParams.append(column, `sr.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is either contained in `range` or greater than any element in\n     * `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeGte(column, range) {\n        this.url.searchParams.append(column, `nxl.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is less than any element in `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeLt(column, range) {\n        this.url.searchParams.append(column, `sl.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is either contained in `range` or less than any element in\n     * `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeLte(column, range) {\n        this.url.searchParams.append(column, `nxr.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where `column` is\n     * mutually exclusive to `range` and there can be no element between the two\n     * ranges.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeAdjacent(column, range) {\n        this.url.searchParams.append(column, `adj.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for array and range columns. Match only rows where\n     * `column` and `value` have an element in common.\n     *\n     * @param column - The array or range column to filter on\n     * @param value - The array or range value to filter with\n     */\n    overlaps(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(column, `ov.${value}`);\n        }\n        else {\n            // array\n            this.url.searchParams.append(column, `ov.{${value.join(',')}}`);\n        }\n        return this;\n    }\n    /**\n     * Only relevant for text and tsvector columns. Match only rows where\n     * `column` matches the query string in `query`.\n     *\n     * @param column - The text or tsvector column to filter on\n     * @param query - The query text to match with\n     * @param options - Named parameters\n     * @param options.config - The text search configuration to use\n     * @param options.type - Change how the `query` text is interpreted\n     */\n    textSearch(column, query, { config, type } = {}) {\n        let typePart = '';\n        if (type === 'plain') {\n            typePart = 'pl';\n        }\n        else if (type === 'phrase') {\n            typePart = 'ph';\n        }\n        else if (type === 'websearch') {\n            typePart = 'w';\n        }\n        const configPart = config === undefined ? '' : `(${config})`;\n        this.url.searchParams.append(column, `${typePart}fts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Match only rows where each column in `query` keys is equal to its\n     * associated value. Shorthand for multiple `.eq()`s.\n     *\n     * @param query - The object to filter with, with column names as keys mapped\n     * to their filter values\n     */\n    match(query) {\n        Object.entries(query).forEach(([column, value]) => {\n            this.url.searchParams.append(column, `eq.${value}`);\n        });\n        return this;\n    }\n    /**\n     * Match only rows which doesn't satisfy the filter.\n     *\n     * Unlike most filters, `opearator` and `value` are used as-is and need to\n     * follow [PostgREST\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n     * to make sure they are properly sanitized.\n     *\n     * @param column - The column to filter on\n     * @param operator - The operator to be negated to filter with, following\n     * PostgREST syntax\n     * @param value - The value to filter with, following PostgREST syntax\n     */\n    not(column, operator, value) {\n        this.url.searchParams.append(column, `not.${operator}.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows which satisfy at least one of the filters.\n     *\n     * Unlike most filters, `filters` is used as-is and needs to follow [PostgREST\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n     * to make sure it's properly sanitized.\n     *\n     * It's currently not possible to do an `.or()` filter across multiple tables.\n     *\n     * @param filters - The filters to use, following PostgREST syntax\n     * @param options - Named parameters\n     * @param options.referencedTable - Set this to filter on referenced tables\n     * instead of the parent table\n     * @param options.foreignTable - Deprecated, use `referencedTable` instead\n     */\n    or(filters, { foreignTable, referencedTable = foreignTable, } = {}) {\n        const key = referencedTable ? `${referencedTable}.or` : 'or';\n        this.url.searchParams.append(key, `(${filters})`);\n        return this;\n    }\n    /**\n     * Match only rows which satisfy the filter. This is an escape hatch - you\n     * should use the specific filter methods wherever possible.\n     *\n     * Unlike most filters, `opearator` and `value` are used as-is and need to\n     * follow [PostgREST\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n     * to make sure they are properly sanitized.\n     *\n     * @param column - The column to filter on\n     * @param operator - The operator to filter with, following PostgREST syntax\n     * @param value - The value to filter with, following PostgREST syntax\n     */\n    filter(column, operator, value) {\n        this.url.searchParams.append(column, `${operator}.${value}`);\n        return this;\n    }\n}\nexports[\"default\"] = PostgrestFilterBuilder;\n//# sourceMappingURL=PostgrestFilterBuilder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestFilterBuilder.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestQueryBuilder.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestQueryBuilder.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst PostgrestFilterBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestFilterBuilder */ \"./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestFilterBuilder.js\"));\nclass PostgrestQueryBuilder {\n    constructor(url, { headers = {}, schema, fetch, }) {\n        this.url = url;\n        this.headers = headers;\n        this.schema = schema;\n        this.fetch = fetch;\n    }\n    /**\n     * Perform a SELECT query on the table or view.\n     *\n     * @param columns - The columns to retrieve, separated by commas. Columns can be renamed when returned with `customName:columnName`\n     *\n     * @param options - Named parameters\n     *\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     *\n     * @param options.count - Count algorithm to use to count rows in the table or view.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    select(columns, { head = false, count, } = {}) {\n        const method = head ? 'HEAD' : 'GET';\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = (columns !== null && columns !== void 0 ? columns : '*')\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        if (count) {\n            this.headers['Prefer'] = `count=${count}`;\n        }\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n    /**\n     * Perform an INSERT into the table or view.\n     *\n     * By default, inserted rows are not returned. To return it, chain the call\n     * with `.select()`.\n     *\n     * @param values - The values to insert. Pass an object to insert a single row\n     * or an array to insert multiple rows.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count inserted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     *\n     * @param options.defaultToNull - Make missing fields default to `null`.\n     * Otherwise, use the default value for the column. Only applies for bulk\n     * inserts.\n     */\n    insert(values, { count, defaultToNull = true, } = {}) {\n        const method = 'POST';\n        const prefersHeaders = [];\n        if (this.headers['Prefer']) {\n            prefersHeaders.push(this.headers['Prefer']);\n        }\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (!defaultToNull) {\n            prefersHeaders.push('missing=default');\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        if (Array.isArray(values)) {\n            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);\n            if (columns.length > 0) {\n                const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`);\n                this.url.searchParams.set('columns', uniqueColumns.join(','));\n            }\n        }\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body: values,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n    /**\n     * Perform an UPSERT on the table or view. Depending on the column(s) passed\n     * to `onConflict`, `.upsert()` allows you to perform the equivalent of\n     * `.insert()` if a row with the corresponding `onConflict` columns doesn't\n     * exist, or if it does exist, perform an alternative action depending on\n     * `ignoreDuplicates`.\n     *\n     * By default, upserted rows are not returned. To return it, chain the call\n     * with `.select()`.\n     *\n     * @param values - The values to upsert with. Pass an object to upsert a\n     * single row or an array to upsert multiple rows.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.onConflict - Comma-separated UNIQUE column(s) to specify how\n     * duplicate rows are determined. Two rows are duplicates if all the\n     * `onConflict` columns are equal.\n     *\n     * @param options.ignoreDuplicates - If `true`, duplicate rows are ignored. If\n     * `false`, duplicate rows are merged with existing rows.\n     *\n     * @param options.count - Count algorithm to use to count upserted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     *\n     * @param options.defaultToNull - Make missing fields default to `null`.\n     * Otherwise, use the default value for the column. This only applies when\n     * inserting new rows, not when merging with existing rows under\n     * `ignoreDuplicates: false`. This also only applies when doing bulk upserts.\n     */\n    upsert(values, { onConflict, ignoreDuplicates = false, count, defaultToNull = true, } = {}) {\n        const method = 'POST';\n        const prefersHeaders = [`resolution=${ignoreDuplicates ? 'ignore' : 'merge'}-duplicates`];\n        if (onConflict !== undefined)\n            this.url.searchParams.set('on_conflict', onConflict);\n        if (this.headers['Prefer']) {\n            prefersHeaders.push(this.headers['Prefer']);\n        }\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (!defaultToNull) {\n            prefersHeaders.push('missing=default');\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        if (Array.isArray(values)) {\n            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);\n            if (columns.length > 0) {\n                const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`);\n                this.url.searchParams.set('columns', uniqueColumns.join(','));\n            }\n        }\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body: values,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n    /**\n     * Perform an UPDATE on the table or view.\n     *\n     * By default, updated rows are not returned. To return it, chain the call\n     * with `.select()` after filters.\n     *\n     * @param values - The values to update with\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count updated rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    update(values, { count, } = {}) {\n        const method = 'PATCH';\n        const prefersHeaders = [];\n        if (this.headers['Prefer']) {\n            prefersHeaders.push(this.headers['Prefer']);\n        }\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body: values,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n    /**\n     * Perform a DELETE on the table or view.\n     *\n     * By default, deleted rows are not returned. To return it, chain the call\n     * with `.select()` after filters.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count deleted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    delete({ count, } = {}) {\n        const method = 'DELETE';\n        const prefersHeaders = [];\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n}\nexports[\"default\"] = PostgrestQueryBuilder;\n//# sourceMappingURL=PostgrestQueryBuilder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3Bvc3RncmVzdC1qcy9kaXN0L2Nqcy9Qb3N0Z3Jlc3RRdWVyeUJ1aWxkZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpREFBaUQsbUJBQU8sQ0FBQywwR0FBMEI7QUFDbkY7QUFDQSx1QkFBdUIsWUFBWSxrQkFBa0I7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix1QkFBdUIsSUFBSTtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsTUFBTTtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiwrQkFBK0IsSUFBSTtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsTUFBTTtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0ZBQWdGLE9BQU87QUFDdkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIscUVBQXFFLElBQUk7QUFDOUY7QUFDQSw4Q0FBOEMsc0NBQXNDO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxNQUFNO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRkFBZ0YsT0FBTztBQUN2RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLFNBQVMsSUFBSTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsTUFBTTtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxTQUFTLElBQUk7QUFDMUI7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLE1BQU07QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcG9zdGdyZXN0LWpzL2Rpc3QvY2pzL1Bvc3RncmVzdFF1ZXJ5QnVpbGRlci5qcz8yNWM2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgUG9zdGdyZXN0RmlsdGVyQnVpbGRlcl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL1Bvc3RncmVzdEZpbHRlckJ1aWxkZXJcIikpO1xuY2xhc3MgUG9zdGdyZXN0UXVlcnlCdWlsZGVyIHtcbiAgICBjb25zdHJ1Y3Rvcih1cmwsIHsgaGVhZGVycyA9IHt9LCBzY2hlbWEsIGZldGNoLCB9KSB7XG4gICAgICAgIHRoaXMudXJsID0gdXJsO1xuICAgICAgICB0aGlzLmhlYWRlcnMgPSBoZWFkZXJzO1xuICAgICAgICB0aGlzLnNjaGVtYSA9IHNjaGVtYTtcbiAgICAgICAgdGhpcy5mZXRjaCA9IGZldGNoO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBQZXJmb3JtIGEgU0VMRUNUIHF1ZXJ5IG9uIHRoZSB0YWJsZSBvciB2aWV3LlxuICAgICAqXG4gICAgICogQHBhcmFtIGNvbHVtbnMgLSBUaGUgY29sdW1ucyB0byByZXRyaWV2ZSwgc2VwYXJhdGVkIGJ5IGNvbW1hcy4gQ29sdW1ucyBjYW4gYmUgcmVuYW1lZCB3aGVuIHJldHVybmVkIHdpdGggYGN1c3RvbU5hbWU6Y29sdW1uTmFtZWBcbiAgICAgKlxuICAgICAqIEBwYXJhbSBvcHRpb25zIC0gTmFtZWQgcGFyYW1ldGVyc1xuICAgICAqXG4gICAgICogQHBhcmFtIG9wdGlvbnMuaGVhZCAtIFdoZW4gc2V0IHRvIGB0cnVlYCwgYGRhdGFgIHdpbGwgbm90IGJlIHJldHVybmVkLlxuICAgICAqIFVzZWZ1bCBpZiB5b3Ugb25seSBuZWVkIHRoZSBjb3VudC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBvcHRpb25zLmNvdW50IC0gQ291bnQgYWxnb3JpdGhtIHRvIHVzZSB0byBjb3VudCByb3dzIGluIHRoZSB0YWJsZSBvciB2aWV3LlxuICAgICAqXG4gICAgICogYFwiZXhhY3RcImA6IEV4YWN0IGJ1dCBzbG93IGNvdW50IGFsZ29yaXRobS4gUGVyZm9ybXMgYSBgQ09VTlQoKilgIHVuZGVyIHRoZVxuICAgICAqIGhvb2QuXG4gICAgICpcbiAgICAgKiBgXCJwbGFubmVkXCJgOiBBcHByb3hpbWF0ZWQgYnV0IGZhc3QgY291bnQgYWxnb3JpdGhtLiBVc2VzIHRoZSBQb3N0Z3Jlc1xuICAgICAqIHN0YXRpc3RpY3MgdW5kZXIgdGhlIGhvb2QuXG4gICAgICpcbiAgICAgKiBgXCJlc3RpbWF0ZWRcImA6IFVzZXMgZXhhY3QgY291bnQgZm9yIGxvdyBudW1iZXJzIGFuZCBwbGFubmVkIGNvdW50IGZvciBoaWdoXG4gICAgICogbnVtYmVycy5cbiAgICAgKi9cbiAgICBzZWxlY3QoY29sdW1ucywgeyBoZWFkID0gZmFsc2UsIGNvdW50LCB9ID0ge30pIHtcbiAgICAgICAgY29uc3QgbWV0aG9kID0gaGVhZCA/ICdIRUFEJyA6ICdHRVQnO1xuICAgICAgICAvLyBSZW1vdmUgd2hpdGVzcGFjZXMgZXhjZXB0IHdoZW4gcXVvdGVkXG4gICAgICAgIGxldCBxdW90ZWQgPSBmYWxzZTtcbiAgICAgICAgY29uc3QgY2xlYW5lZENvbHVtbnMgPSAoY29sdW1ucyAhPT0gbnVsbCAmJiBjb2x1bW5zICE9PSB2b2lkIDAgPyBjb2x1bW5zIDogJyonKVxuICAgICAgICAgICAgLnNwbGl0KCcnKVxuICAgICAgICAgICAgLm1hcCgoYykgPT4ge1xuICAgICAgICAgICAgaWYgKC9cXHMvLnRlc3QoYykgJiYgIXF1b3RlZCkge1xuICAgICAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChjID09PSAnXCInKSB7XG4gICAgICAgICAgICAgICAgcXVvdGVkID0gIXF1b3RlZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBjO1xuICAgICAgICB9KVxuICAgICAgICAgICAgLmpvaW4oJycpO1xuICAgICAgICB0aGlzLnVybC5zZWFyY2hQYXJhbXMuc2V0KCdzZWxlY3QnLCBjbGVhbmVkQ29sdW1ucyk7XG4gICAgICAgIGlmIChjb3VudCkge1xuICAgICAgICAgICAgdGhpcy5oZWFkZXJzWydQcmVmZXInXSA9IGBjb3VudD0ke2NvdW50fWA7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBQb3N0Z3Jlc3RGaWx0ZXJCdWlsZGVyXzEuZGVmYXVsdCh7XG4gICAgICAgICAgICBtZXRob2QsXG4gICAgICAgICAgICB1cmw6IHRoaXMudXJsLFxuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxuICAgICAgICAgICAgc2NoZW1hOiB0aGlzLnNjaGVtYSxcbiAgICAgICAgICAgIGZldGNoOiB0aGlzLmZldGNoLFxuICAgICAgICAgICAgYWxsb3dFbXB0eTogZmFsc2UsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBQZXJmb3JtIGFuIElOU0VSVCBpbnRvIHRoZSB0YWJsZSBvciB2aWV3LlxuICAgICAqXG4gICAgICogQnkgZGVmYXVsdCwgaW5zZXJ0ZWQgcm93cyBhcmUgbm90IHJldHVybmVkLiBUbyByZXR1cm4gaXQsIGNoYWluIHRoZSBjYWxsXG4gICAgICogd2l0aCBgLnNlbGVjdCgpYC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB2YWx1ZXMgLSBUaGUgdmFsdWVzIHRvIGluc2VydC4gUGFzcyBhbiBvYmplY3QgdG8gaW5zZXJ0IGEgc2luZ2xlIHJvd1xuICAgICAqIG9yIGFuIGFycmF5IHRvIGluc2VydCBtdWx0aXBsZSByb3dzLlxuICAgICAqXG4gICAgICogQHBhcmFtIG9wdGlvbnMgLSBOYW1lZCBwYXJhbWV0ZXJzXG4gICAgICpcbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5jb3VudCAtIENvdW50IGFsZ29yaXRobSB0byB1c2UgdG8gY291bnQgaW5zZXJ0ZWQgcm93cy5cbiAgICAgKlxuICAgICAqIGBcImV4YWN0XCJgOiBFeGFjdCBidXQgc2xvdyBjb3VudCBhbGdvcml0aG0uIFBlcmZvcm1zIGEgYENPVU5UKCopYCB1bmRlciB0aGVcbiAgICAgKiBob29kLlxuICAgICAqXG4gICAgICogYFwicGxhbm5lZFwiYDogQXBwcm94aW1hdGVkIGJ1dCBmYXN0IGNvdW50IGFsZ29yaXRobS4gVXNlcyB0aGUgUG9zdGdyZXNcbiAgICAgKiBzdGF0aXN0aWNzIHVuZGVyIHRoZSBob29kLlxuICAgICAqXG4gICAgICogYFwiZXN0aW1hdGVkXCJgOiBVc2VzIGV4YWN0IGNvdW50IGZvciBsb3cgbnVtYmVycyBhbmQgcGxhbm5lZCBjb3VudCBmb3IgaGlnaFxuICAgICAqIG51bWJlcnMuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5kZWZhdWx0VG9OdWxsIC0gTWFrZSBtaXNzaW5nIGZpZWxkcyBkZWZhdWx0IHRvIGBudWxsYC5cbiAgICAgKiBPdGhlcndpc2UsIHVzZSB0aGUgZGVmYXVsdCB2YWx1ZSBmb3IgdGhlIGNvbHVtbi4gT25seSBhcHBsaWVzIGZvciBidWxrXG4gICAgICogaW5zZXJ0cy5cbiAgICAgKi9cbiAgICBpbnNlcnQodmFsdWVzLCB7IGNvdW50LCBkZWZhdWx0VG9OdWxsID0gdHJ1ZSwgfSA9IHt9KSB7XG4gICAgICAgIGNvbnN0IG1ldGhvZCA9ICdQT1NUJztcbiAgICAgICAgY29uc3QgcHJlZmVyc0hlYWRlcnMgPSBbXTtcbiAgICAgICAgaWYgKHRoaXMuaGVhZGVyc1snUHJlZmVyJ10pIHtcbiAgICAgICAgICAgIHByZWZlcnNIZWFkZXJzLnB1c2godGhpcy5oZWFkZXJzWydQcmVmZXInXSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNvdW50KSB7XG4gICAgICAgICAgICBwcmVmZXJzSGVhZGVycy5wdXNoKGBjb3VudD0ke2NvdW50fWApO1xuICAgICAgICB9XG4gICAgICAgIGlmICghZGVmYXVsdFRvTnVsbCkge1xuICAgICAgICAgICAgcHJlZmVyc0hlYWRlcnMucHVzaCgnbWlzc2luZz1kZWZhdWx0Jyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5oZWFkZXJzWydQcmVmZXInXSA9IHByZWZlcnNIZWFkZXJzLmpvaW4oJywnKTtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWVzKSkge1xuICAgICAgICAgICAgY29uc3QgY29sdW1ucyA9IHZhbHVlcy5yZWR1Y2UoKGFjYywgeCkgPT4gYWNjLmNvbmNhdChPYmplY3Qua2V5cyh4KSksIFtdKTtcbiAgICAgICAgICAgIGlmIChjb2x1bW5zLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICBjb25zdCB1bmlxdWVDb2x1bW5zID0gWy4uLm5ldyBTZXQoY29sdW1ucyldLm1hcCgoY29sdW1uKSA9PiBgXCIke2NvbHVtbn1cImApO1xuICAgICAgICAgICAgICAgIHRoaXMudXJsLnNlYXJjaFBhcmFtcy5zZXQoJ2NvbHVtbnMnLCB1bmlxdWVDb2x1bW5zLmpvaW4oJywnKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBQb3N0Z3Jlc3RGaWx0ZXJCdWlsZGVyXzEuZGVmYXVsdCh7XG4gICAgICAgICAgICBtZXRob2QsXG4gICAgICAgICAgICB1cmw6IHRoaXMudXJsLFxuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxuICAgICAgICAgICAgc2NoZW1hOiB0aGlzLnNjaGVtYSxcbiAgICAgICAgICAgIGJvZHk6IHZhbHVlcyxcbiAgICAgICAgICAgIGZldGNoOiB0aGlzLmZldGNoLFxuICAgICAgICAgICAgYWxsb3dFbXB0eTogZmFsc2UsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBQZXJmb3JtIGFuIFVQU0VSVCBvbiB0aGUgdGFibGUgb3Igdmlldy4gRGVwZW5kaW5nIG9uIHRoZSBjb2x1bW4ocykgcGFzc2VkXG4gICAgICogdG8gYG9uQ29uZmxpY3RgLCBgLnVwc2VydCgpYCBhbGxvd3MgeW91IHRvIHBlcmZvcm0gdGhlIGVxdWl2YWxlbnQgb2ZcbiAgICAgKiBgLmluc2VydCgpYCBpZiBhIHJvdyB3aXRoIHRoZSBjb3JyZXNwb25kaW5nIGBvbkNvbmZsaWN0YCBjb2x1bW5zIGRvZXNuJ3RcbiAgICAgKiBleGlzdCwgb3IgaWYgaXQgZG9lcyBleGlzdCwgcGVyZm9ybSBhbiBhbHRlcm5hdGl2ZSBhY3Rpb24gZGVwZW5kaW5nIG9uXG4gICAgICogYGlnbm9yZUR1cGxpY2F0ZXNgLlxuICAgICAqXG4gICAgICogQnkgZGVmYXVsdCwgdXBzZXJ0ZWQgcm93cyBhcmUgbm90IHJldHVybmVkLiBUbyByZXR1cm4gaXQsIGNoYWluIHRoZSBjYWxsXG4gICAgICogd2l0aCBgLnNlbGVjdCgpYC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB2YWx1ZXMgLSBUaGUgdmFsdWVzIHRvIHVwc2VydCB3aXRoLiBQYXNzIGFuIG9iamVjdCB0byB1cHNlcnQgYVxuICAgICAqIHNpbmdsZSByb3cgb3IgYW4gYXJyYXkgdG8gdXBzZXJ0IG11bHRpcGxlIHJvd3MuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gb3B0aW9ucyAtIE5hbWVkIHBhcmFtZXRlcnNcbiAgICAgKlxuICAgICAqIEBwYXJhbSBvcHRpb25zLm9uQ29uZmxpY3QgLSBDb21tYS1zZXBhcmF0ZWQgVU5JUVVFIGNvbHVtbihzKSB0byBzcGVjaWZ5IGhvd1xuICAgICAqIGR1cGxpY2F0ZSByb3dzIGFyZSBkZXRlcm1pbmVkLiBUd28gcm93cyBhcmUgZHVwbGljYXRlcyBpZiBhbGwgdGhlXG4gICAgICogYG9uQ29uZmxpY3RgIGNvbHVtbnMgYXJlIGVxdWFsLlxuICAgICAqXG4gICAgICogQHBhcmFtIG9wdGlvbnMuaWdub3JlRHVwbGljYXRlcyAtIElmIGB0cnVlYCwgZHVwbGljYXRlIHJvd3MgYXJlIGlnbm9yZWQuIElmXG4gICAgICogYGZhbHNlYCwgZHVwbGljYXRlIHJvd3MgYXJlIG1lcmdlZCB3aXRoIGV4aXN0aW5nIHJvd3MuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5jb3VudCAtIENvdW50IGFsZ29yaXRobSB0byB1c2UgdG8gY291bnQgdXBzZXJ0ZWQgcm93cy5cbiAgICAgKlxuICAgICAqIGBcImV4YWN0XCJgOiBFeGFjdCBidXQgc2xvdyBjb3VudCBhbGdvcml0aG0uIFBlcmZvcm1zIGEgYENPVU5UKCopYCB1bmRlciB0aGVcbiAgICAgKiBob29kLlxuICAgICAqXG4gICAgICogYFwicGxhbm5lZFwiYDogQXBwcm94aW1hdGVkIGJ1dCBmYXN0IGNvdW50IGFsZ29yaXRobS4gVXNlcyB0aGUgUG9zdGdyZXNcbiAgICAgKiBzdGF0aXN0aWNzIHVuZGVyIHRoZSBob29kLlxuICAgICAqXG4gICAgICogYFwiZXN0aW1hdGVkXCJgOiBVc2VzIGV4YWN0IGNvdW50IGZvciBsb3cgbnVtYmVycyBhbmQgcGxhbm5lZCBjb3VudCBmb3IgaGlnaFxuICAgICAqIG51bWJlcnMuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5kZWZhdWx0VG9OdWxsIC0gTWFrZSBtaXNzaW5nIGZpZWxkcyBkZWZhdWx0IHRvIGBudWxsYC5cbiAgICAgKiBPdGhlcndpc2UsIHVzZSB0aGUgZGVmYXVsdCB2YWx1ZSBmb3IgdGhlIGNvbHVtbi4gVGhpcyBvbmx5IGFwcGxpZXMgd2hlblxuICAgICAqIGluc2VydGluZyBuZXcgcm93cywgbm90IHdoZW4gbWVyZ2luZyB3aXRoIGV4aXN0aW5nIHJvd3MgdW5kZXJcbiAgICAgKiBgaWdub3JlRHVwbGljYXRlczogZmFsc2VgLiBUaGlzIGFsc28gb25seSBhcHBsaWVzIHdoZW4gZG9pbmcgYnVsayB1cHNlcnRzLlxuICAgICAqL1xuICAgIHVwc2VydCh2YWx1ZXMsIHsgb25Db25mbGljdCwgaWdub3JlRHVwbGljYXRlcyA9IGZhbHNlLCBjb3VudCwgZGVmYXVsdFRvTnVsbCA9IHRydWUsIH0gPSB7fSkge1xuICAgICAgICBjb25zdCBtZXRob2QgPSAnUE9TVCc7XG4gICAgICAgIGNvbnN0IHByZWZlcnNIZWFkZXJzID0gW2ByZXNvbHV0aW9uPSR7aWdub3JlRHVwbGljYXRlcyA/ICdpZ25vcmUnIDogJ21lcmdlJ30tZHVwbGljYXRlc2BdO1xuICAgICAgICBpZiAob25Db25mbGljdCAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgdGhpcy51cmwuc2VhcmNoUGFyYW1zLnNldCgnb25fY29uZmxpY3QnLCBvbkNvbmZsaWN0KTtcbiAgICAgICAgaWYgKHRoaXMuaGVhZGVyc1snUHJlZmVyJ10pIHtcbiAgICAgICAgICAgIHByZWZlcnNIZWFkZXJzLnB1c2godGhpcy5oZWFkZXJzWydQcmVmZXInXSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNvdW50KSB7XG4gICAgICAgICAgICBwcmVmZXJzSGVhZGVycy5wdXNoKGBjb3VudD0ke2NvdW50fWApO1xuICAgICAgICB9XG4gICAgICAgIGlmICghZGVmYXVsdFRvTnVsbCkge1xuICAgICAgICAgICAgcHJlZmVyc0hlYWRlcnMucHVzaCgnbWlzc2luZz1kZWZhdWx0Jyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5oZWFkZXJzWydQcmVmZXInXSA9IHByZWZlcnNIZWFkZXJzLmpvaW4oJywnKTtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWVzKSkge1xuICAgICAgICAgICAgY29uc3QgY29sdW1ucyA9IHZhbHVlcy5yZWR1Y2UoKGFjYywgeCkgPT4gYWNjLmNvbmNhdChPYmplY3Qua2V5cyh4KSksIFtdKTtcbiAgICAgICAgICAgIGlmIChjb2x1bW5zLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICBjb25zdCB1bmlxdWVDb2x1bW5zID0gWy4uLm5ldyBTZXQoY29sdW1ucyldLm1hcCgoY29sdW1uKSA9PiBgXCIke2NvbHVtbn1cImApO1xuICAgICAgICAgICAgICAgIHRoaXMudXJsLnNlYXJjaFBhcmFtcy5zZXQoJ2NvbHVtbnMnLCB1bmlxdWVDb2x1bW5zLmpvaW4oJywnKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBQb3N0Z3Jlc3RGaWx0ZXJCdWlsZGVyXzEuZGVmYXVsdCh7XG4gICAgICAgICAgICBtZXRob2QsXG4gICAgICAgICAgICB1cmw6IHRoaXMudXJsLFxuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxuICAgICAgICAgICAgc2NoZW1hOiB0aGlzLnNjaGVtYSxcbiAgICAgICAgICAgIGJvZHk6IHZhbHVlcyxcbiAgICAgICAgICAgIGZldGNoOiB0aGlzLmZldGNoLFxuICAgICAgICAgICAgYWxsb3dFbXB0eTogZmFsc2UsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBQZXJmb3JtIGFuIFVQREFURSBvbiB0aGUgdGFibGUgb3Igdmlldy5cbiAgICAgKlxuICAgICAqIEJ5IGRlZmF1bHQsIHVwZGF0ZWQgcm93cyBhcmUgbm90IHJldHVybmVkLiBUbyByZXR1cm4gaXQsIGNoYWluIHRoZSBjYWxsXG4gICAgICogd2l0aCBgLnNlbGVjdCgpYCBhZnRlciBmaWx0ZXJzLlxuICAgICAqXG4gICAgICogQHBhcmFtIHZhbHVlcyAtIFRoZSB2YWx1ZXMgdG8gdXBkYXRlIHdpdGhcbiAgICAgKlxuICAgICAqIEBwYXJhbSBvcHRpb25zIC0gTmFtZWQgcGFyYW1ldGVyc1xuICAgICAqXG4gICAgICogQHBhcmFtIG9wdGlvbnMuY291bnQgLSBDb3VudCBhbGdvcml0aG0gdG8gdXNlIHRvIGNvdW50IHVwZGF0ZWQgcm93cy5cbiAgICAgKlxuICAgICAqIGBcImV4YWN0XCJgOiBFeGFjdCBidXQgc2xvdyBjb3VudCBhbGdvcml0aG0uIFBlcmZvcm1zIGEgYENPVU5UKCopYCB1bmRlciB0aGVcbiAgICAgKiBob29kLlxuICAgICAqXG4gICAgICogYFwicGxhbm5lZFwiYDogQXBwcm94aW1hdGVkIGJ1dCBmYXN0IGNvdW50IGFsZ29yaXRobS4gVXNlcyB0aGUgUG9zdGdyZXNcbiAgICAgKiBzdGF0aXN0aWNzIHVuZGVyIHRoZSBob29kLlxuICAgICAqXG4gICAgICogYFwiZXN0aW1hdGVkXCJgOiBVc2VzIGV4YWN0IGNvdW50IGZvciBsb3cgbnVtYmVycyBhbmQgcGxhbm5lZCBjb3VudCBmb3IgaGlnaFxuICAgICAqIG51bWJlcnMuXG4gICAgICovXG4gICAgdXBkYXRlKHZhbHVlcywgeyBjb3VudCwgfSA9IHt9KSB7XG4gICAgICAgIGNvbnN0IG1ldGhvZCA9ICdQQVRDSCc7XG4gICAgICAgIGNvbnN0IHByZWZlcnNIZWFkZXJzID0gW107XG4gICAgICAgIGlmICh0aGlzLmhlYWRlcnNbJ1ByZWZlciddKSB7XG4gICAgICAgICAgICBwcmVmZXJzSGVhZGVycy5wdXNoKHRoaXMuaGVhZGVyc1snUHJlZmVyJ10pO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjb3VudCkge1xuICAgICAgICAgICAgcHJlZmVyc0hlYWRlcnMucHVzaChgY291bnQ9JHtjb3VudH1gKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmhlYWRlcnNbJ1ByZWZlciddID0gcHJlZmVyc0hlYWRlcnMuam9pbignLCcpO1xuICAgICAgICByZXR1cm4gbmV3IFBvc3RncmVzdEZpbHRlckJ1aWxkZXJfMS5kZWZhdWx0KHtcbiAgICAgICAgICAgIG1ldGhvZCxcbiAgICAgICAgICAgIHVybDogdGhpcy51cmwsXG4gICAgICAgICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXG4gICAgICAgICAgICBzY2hlbWE6IHRoaXMuc2NoZW1hLFxuICAgICAgICAgICAgYm9keTogdmFsdWVzLFxuICAgICAgICAgICAgZmV0Y2g6IHRoaXMuZmV0Y2gsXG4gICAgICAgICAgICBhbGxvd0VtcHR5OiBmYWxzZSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFBlcmZvcm0gYSBERUxFVEUgb24gdGhlIHRhYmxlIG9yIHZpZXcuXG4gICAgICpcbiAgICAgKiBCeSBkZWZhdWx0LCBkZWxldGVkIHJvd3MgYXJlIG5vdCByZXR1cm5lZC4gVG8gcmV0dXJuIGl0LCBjaGFpbiB0aGUgY2FsbFxuICAgICAqIHdpdGggYC5zZWxlY3QoKWAgYWZ0ZXIgZmlsdGVycy5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBvcHRpb25zIC0gTmFtZWQgcGFyYW1ldGVyc1xuICAgICAqXG4gICAgICogQHBhcmFtIG9wdGlvbnMuY291bnQgLSBDb3VudCBhbGdvcml0aG0gdG8gdXNlIHRvIGNvdW50IGRlbGV0ZWQgcm93cy5cbiAgICAgKlxuICAgICAqIGBcImV4YWN0XCJgOiBFeGFjdCBidXQgc2xvdyBjb3VudCBhbGdvcml0aG0uIFBlcmZvcm1zIGEgYENPVU5UKCopYCB1bmRlciB0aGVcbiAgICAgKiBob29kLlxuICAgICAqXG4gICAgICogYFwicGxhbm5lZFwiYDogQXBwcm94aW1hdGVkIGJ1dCBmYXN0IGNvdW50IGFsZ29yaXRobS4gVXNlcyB0aGUgUG9zdGdyZXNcbiAgICAgKiBzdGF0aXN0aWNzIHVuZGVyIHRoZSBob29kLlxuICAgICAqXG4gICAgICogYFwiZXN0aW1hdGVkXCJgOiBVc2VzIGV4YWN0IGNvdW50IGZvciBsb3cgbnVtYmVycyBhbmQgcGxhbm5lZCBjb3VudCBmb3IgaGlnaFxuICAgICAqIG51bWJlcnMuXG4gICAgICovXG4gICAgZGVsZXRlKHsgY291bnQsIH0gPSB7fSkge1xuICAgICAgICBjb25zdCBtZXRob2QgPSAnREVMRVRFJztcbiAgICAgICAgY29uc3QgcHJlZmVyc0hlYWRlcnMgPSBbXTtcbiAgICAgICAgaWYgKGNvdW50KSB7XG4gICAgICAgICAgICBwcmVmZXJzSGVhZGVycy5wdXNoKGBjb3VudD0ke2NvdW50fWApO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmhlYWRlcnNbJ1ByZWZlciddKSB7XG4gICAgICAgICAgICBwcmVmZXJzSGVhZGVycy51bnNoaWZ0KHRoaXMuaGVhZGVyc1snUHJlZmVyJ10pO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuaGVhZGVyc1snUHJlZmVyJ10gPSBwcmVmZXJzSGVhZGVycy5qb2luKCcsJyk7XG4gICAgICAgIHJldHVybiBuZXcgUG9zdGdyZXN0RmlsdGVyQnVpbGRlcl8xLmRlZmF1bHQoe1xuICAgICAgICAgICAgbWV0aG9kLFxuICAgICAgICAgICAgdXJsOiB0aGlzLnVybCxcbiAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcbiAgICAgICAgICAgIHNjaGVtYTogdGhpcy5zY2hlbWEsXG4gICAgICAgICAgICBmZXRjaDogdGhpcy5mZXRjaCxcbiAgICAgICAgICAgIGFsbG93RW1wdHk6IGZhbHNlLFxuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBQb3N0Z3Jlc3RRdWVyeUJ1aWxkZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Qb3N0Z3Jlc3RRdWVyeUJ1aWxkZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestQueryBuilder.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestTransformBuilder.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestTransformBuilder.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst PostgrestBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestBuilder */ \"./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestBuilder.js\"));\nclass PostgrestTransformBuilder extends PostgrestBuilder_1.default {\n    /**\n     * Perform a SELECT on the query result.\n     *\n     * By default, `.insert()`, `.update()`, `.upsert()`, and `.delete()` do not\n     * return modified rows. By calling this method, modified rows are returned in\n     * `data`.\n     *\n     * @param columns - The columns to retrieve, separated by commas\n     */\n    select(columns) {\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = (columns !== null && columns !== void 0 ? columns : '*')\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        if (this.headers['Prefer']) {\n            this.headers['Prefer'] += ',';\n        }\n        this.headers['Prefer'] += 'return=representation';\n        return this;\n    }\n    /**\n     * Order the query result by `column`.\n     *\n     * You can call this method multiple times to order by multiple columns.\n     *\n     * You can order referenced tables, but it only affects the ordering of the\n     * parent table if you use `!inner` in the query.\n     *\n     * @param column - The column to order by\n     * @param options - Named parameters\n     * @param options.ascending - If `true`, the result will be in ascending order\n     * @param options.nullsFirst - If `true`, `null`s appear first. If `false`,\n     * `null`s appear last.\n     * @param options.referencedTable - Set this to order a referenced table by\n     * its columns\n     * @param options.foreignTable - Deprecated, use `options.referencedTable`\n     * instead\n     */\n    order(column, { ascending = true, nullsFirst, foreignTable, referencedTable = foreignTable, } = {}) {\n        const key = referencedTable ? `${referencedTable}.order` : 'order';\n        const existingOrder = this.url.searchParams.get(key);\n        this.url.searchParams.set(key, `${existingOrder ? `${existingOrder},` : ''}${column}.${ascending ? 'asc' : 'desc'}${nullsFirst === undefined ? '' : nullsFirst ? '.nullsfirst' : '.nullslast'}`);\n        return this;\n    }\n    /**\n     * Limit the query result by `count`.\n     *\n     * @param count - The maximum number of rows to return\n     * @param options - Named parameters\n     * @param options.referencedTable - Set this to limit rows of referenced\n     * tables instead of the parent table\n     * @param options.foreignTable - Deprecated, use `options.referencedTable`\n     * instead\n     */\n    limit(count, { foreignTable, referencedTable = foreignTable, } = {}) {\n        const key = typeof referencedTable === 'undefined' ? 'limit' : `${referencedTable}.limit`;\n        this.url.searchParams.set(key, `${count}`);\n        return this;\n    }\n    /**\n     * Limit the query result by starting at an offset `from` and ending at the offset `to`.\n     * Only records within this range are returned.\n     * This respects the query order and if there is no order clause the range could behave unexpectedly.\n     * The `from` and `to` values are 0-based and inclusive: `range(1, 3)` will include the second, third\n     * and fourth rows of the query.\n     *\n     * @param from - The starting index from which to limit the result\n     * @param to - The last index to which to limit the result\n     * @param options - Named parameters\n     * @param options.referencedTable - Set this to limit rows of referenced\n     * tables instead of the parent table\n     * @param options.foreignTable - Deprecated, use `options.referencedTable`\n     * instead\n     */\n    range(from, to, { foreignTable, referencedTable = foreignTable, } = {}) {\n        const keyOffset = typeof referencedTable === 'undefined' ? 'offset' : `${referencedTable}.offset`;\n        const keyLimit = typeof referencedTable === 'undefined' ? 'limit' : `${referencedTable}.limit`;\n        this.url.searchParams.set(keyOffset, `${from}`);\n        // Range is inclusive, so add 1\n        this.url.searchParams.set(keyLimit, `${to - from + 1}`);\n        return this;\n    }\n    /**\n     * Set the AbortSignal for the fetch request.\n     *\n     * @param signal - The AbortSignal to use for the fetch request\n     */\n    abortSignal(signal) {\n        this.signal = signal;\n        return this;\n    }\n    /**\n     * Return `data` as a single object instead of an array of objects.\n     *\n     * Query result must be one row (e.g. using `.limit(1)`), otherwise this\n     * returns an error.\n     */\n    single() {\n        this.headers['Accept'] = 'application/vnd.pgrst.object+json';\n        return this;\n    }\n    /**\n     * Return `data` as a single object instead of an array of objects.\n     *\n     * Query result must be zero or one row (e.g. using `.limit(1)`), otherwise\n     * this returns an error.\n     */\n    maybeSingle() {\n        // Temporary partial fix for https://github.com/supabase/postgrest-js/issues/361\n        // Issue persists e.g. for `.insert([...]).select().maybeSingle()`\n        if (this.method === 'GET') {\n            this.headers['Accept'] = 'application/json';\n        }\n        else {\n            this.headers['Accept'] = 'application/vnd.pgrst.object+json';\n        }\n        this.isMaybeSingle = true;\n        return this;\n    }\n    /**\n     * Return `data` as a string in CSV format.\n     */\n    csv() {\n        this.headers['Accept'] = 'text/csv';\n        return this;\n    }\n    /**\n     * Return `data` as an object in [GeoJSON](https://geojson.org) format.\n     */\n    geojson() {\n        this.headers['Accept'] = 'application/geo+json';\n        return this;\n    }\n    /**\n     * Return `data` as the EXPLAIN plan for the query.\n     *\n     * You need to enable the\n     * [db_plan_enabled](https://supabase.com/docs/guides/database/debugging-performance#enabling-explain)\n     * setting before using this method.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.analyze - If `true`, the query will be executed and the\n     * actual run time will be returned\n     *\n     * @param options.verbose - If `true`, the query identifier will be returned\n     * and `data` will include the output columns of the query\n     *\n     * @param options.settings - If `true`, include information on configuration\n     * parameters that affect query planning\n     *\n     * @param options.buffers - If `true`, include information on buffer usage\n     *\n     * @param options.wal - If `true`, include information on WAL record generation\n     *\n     * @param options.format - The format of the output, can be `\"text\"` (default)\n     * or `\"json\"`\n     */\n    explain({ analyze = false, verbose = false, settings = false, buffers = false, wal = false, format = 'text', } = {}) {\n        var _a;\n        const options = [\n            analyze ? 'analyze' : null,\n            verbose ? 'verbose' : null,\n            settings ? 'settings' : null,\n            buffers ? 'buffers' : null,\n            wal ? 'wal' : null,\n        ]\n            .filter(Boolean)\n            .join('|');\n        // An Accept header can carry multiple media types but postgrest-js always sends one\n        const forMediatype = (_a = this.headers['Accept']) !== null && _a !== void 0 ? _a : 'application/json';\n        this.headers['Accept'] = `application/vnd.pgrst.plan+${format}; for=\"${forMediatype}\"; options=${options};`;\n        if (format === 'json')\n            return this;\n        else\n            return this;\n    }\n    /**\n     * Rollback the query.\n     *\n     * `data` will still be returned, but the query is not committed.\n     */\n    rollback() {\n        var _a;\n        if (((_a = this.headers['Prefer']) !== null && _a !== void 0 ? _a : '').trim().length > 0) {\n            this.headers['Prefer'] += ',tx=rollback';\n        }\n        else {\n            this.headers['Prefer'] = 'tx=rollback';\n        }\n        return this;\n    }\n    /**\n     * Override the type of the returned `data`.\n     *\n     * @typeParam NewResult - The new result type to override with\n     * @deprecated Use overrideTypes<yourType, { merge: false }>() method at the end of your call chain instead\n     */\n    returns() {\n        return this;\n    }\n}\nexports[\"default\"] = PostgrestTransformBuilder;\n//# sourceMappingURL=PostgrestTransformBuilder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestTransformBuilder.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/postgrest-js/dist/cjs/constants.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/constants.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DEFAULT_HEADERS = void 0;\nconst version_1 = __webpack_require__(/*! ./version */ \"./node_modules/@supabase/postgrest-js/dist/cjs/version.js\");\nexports.DEFAULT_HEADERS = { 'X-Client-Info': `postgrest-js/${version_1.version}` };\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3Bvc3RncmVzdC1qcy9kaXN0L2Nqcy9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCO0FBQ3ZCLGtCQUFrQixtQkFBTyxDQUFDLDRFQUFXO0FBQ3JDLHVCQUF1QixLQUFLLGlDQUFpQyxrQkFBa0I7QUFDL0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9wb3N0Z3Jlc3QtanMvZGlzdC9janMvY29uc3RhbnRzLmpzPzU1MDYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkRFRkFVTFRfSEVBREVSUyA9IHZvaWQgMDtcbmNvbnN0IHZlcnNpb25fMSA9IHJlcXVpcmUoXCIuL3ZlcnNpb25cIik7XG5leHBvcnRzLkRFRkFVTFRfSEVBREVSUyA9IHsgJ1gtQ2xpZW50LUluZm8nOiBgcG9zdGdyZXN0LWpzLyR7dmVyc2lvbl8xLnZlcnNpb259YCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@supabase/postgrest-js/dist/cjs/constants.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/postgrest-js/dist/cjs/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/index.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PostgrestError = exports.PostgrestBuilder = exports.PostgrestTransformBuilder = exports.PostgrestFilterBuilder = exports.PostgrestQueryBuilder = exports.PostgrestClient = void 0;\n// Always update wrapper.mjs when updating this file.\nconst PostgrestClient_1 = __importDefault(__webpack_require__(/*! ./PostgrestClient */ \"./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestClient.js\"));\nexports.PostgrestClient = PostgrestClient_1.default;\nconst PostgrestQueryBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestQueryBuilder */ \"./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestQueryBuilder.js\"));\nexports.PostgrestQueryBuilder = PostgrestQueryBuilder_1.default;\nconst PostgrestFilterBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestFilterBuilder */ \"./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestFilterBuilder.js\"));\nexports.PostgrestFilterBuilder = PostgrestFilterBuilder_1.default;\nconst PostgrestTransformBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestTransformBuilder */ \"./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestTransformBuilder.js\"));\nexports.PostgrestTransformBuilder = PostgrestTransformBuilder_1.default;\nconst PostgrestBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestBuilder */ \"./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestBuilder.js\"));\nexports.PostgrestBuilder = PostgrestBuilder_1.default;\nconst PostgrestError_1 = __importDefault(__webpack_require__(/*! ./PostgrestError */ \"./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestError.js\"));\nexports.PostgrestError = PostgrestError_1.default;\nexports[\"default\"] = {\n    PostgrestClient: PostgrestClient_1.default,\n    PostgrestQueryBuilder: PostgrestQueryBuilder_1.default,\n    PostgrestFilterBuilder: PostgrestFilterBuilder_1.default,\n    PostgrestTransformBuilder: PostgrestTransformBuilder_1.default,\n    PostgrestBuilder: PostgrestBuilder_1.default,\n    PostgrestError: PostgrestError_1.default,\n};\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3Bvc3RncmVzdC1qcy9kaXN0L2Nqcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQixHQUFHLHdCQUF3QixHQUFHLGlDQUFpQyxHQUFHLDhCQUE4QixHQUFHLDZCQUE2QixHQUFHLHVCQUF1QjtBQUNoTDtBQUNBLDBDQUEwQyxtQkFBTyxDQUFDLDRGQUFtQjtBQUNyRSx1QkFBdUI7QUFDdkIsZ0RBQWdELG1CQUFPLENBQUMsd0dBQXlCO0FBQ2pGLDZCQUE2QjtBQUM3QixpREFBaUQsbUJBQU8sQ0FBQywwR0FBMEI7QUFDbkYsOEJBQThCO0FBQzlCLG9EQUFvRCxtQkFBTyxDQUFDLGdIQUE2QjtBQUN6RixpQ0FBaUM7QUFDakMsMkNBQTJDLG1CQUFPLENBQUMsOEZBQW9CO0FBQ3ZFLHdCQUF3QjtBQUN4Qix5Q0FBeUMsbUJBQU8sQ0FBQywwRkFBa0I7QUFDbkUsc0JBQXNCO0FBQ3RCLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3Bvc3RncmVzdC1qcy9kaXN0L2Nqcy9pbmRleC5qcz9kMzE3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb3N0Z3Jlc3RFcnJvciA9IGV4cG9ydHMuUG9zdGdyZXN0QnVpbGRlciA9IGV4cG9ydHMuUG9zdGdyZXN0VHJhbnNmb3JtQnVpbGRlciA9IGV4cG9ydHMuUG9zdGdyZXN0RmlsdGVyQnVpbGRlciA9IGV4cG9ydHMuUG9zdGdyZXN0UXVlcnlCdWlsZGVyID0gZXhwb3J0cy5Qb3N0Z3Jlc3RDbGllbnQgPSB2b2lkIDA7XG4vLyBBbHdheXMgdXBkYXRlIHdyYXBwZXIubWpzIHdoZW4gdXBkYXRpbmcgdGhpcyBmaWxlLlxuY29uc3QgUG9zdGdyZXN0Q2xpZW50XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vUG9zdGdyZXN0Q2xpZW50XCIpKTtcbmV4cG9ydHMuUG9zdGdyZXN0Q2xpZW50ID0gUG9zdGdyZXN0Q2xpZW50XzEuZGVmYXVsdDtcbmNvbnN0IFBvc3RncmVzdFF1ZXJ5QnVpbGRlcl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL1Bvc3RncmVzdFF1ZXJ5QnVpbGRlclwiKSk7XG5leHBvcnRzLlBvc3RncmVzdFF1ZXJ5QnVpbGRlciA9IFBvc3RncmVzdFF1ZXJ5QnVpbGRlcl8xLmRlZmF1bHQ7XG5jb25zdCBQb3N0Z3Jlc3RGaWx0ZXJCdWlsZGVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vUG9zdGdyZXN0RmlsdGVyQnVpbGRlclwiKSk7XG5leHBvcnRzLlBvc3RncmVzdEZpbHRlckJ1aWxkZXIgPSBQb3N0Z3Jlc3RGaWx0ZXJCdWlsZGVyXzEuZGVmYXVsdDtcbmNvbnN0IFBvc3RncmVzdFRyYW5zZm9ybUJ1aWxkZXJfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9Qb3N0Z3Jlc3RUcmFuc2Zvcm1CdWlsZGVyXCIpKTtcbmV4cG9ydHMuUG9zdGdyZXN0VHJhbnNmb3JtQnVpbGRlciA9IFBvc3RncmVzdFRyYW5zZm9ybUJ1aWxkZXJfMS5kZWZhdWx0O1xuY29uc3QgUG9zdGdyZXN0QnVpbGRlcl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL1Bvc3RncmVzdEJ1aWxkZXJcIikpO1xuZXhwb3J0cy5Qb3N0Z3Jlc3RCdWlsZGVyID0gUG9zdGdyZXN0QnVpbGRlcl8xLmRlZmF1bHQ7XG5jb25zdCBQb3N0Z3Jlc3RFcnJvcl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL1Bvc3RncmVzdEVycm9yXCIpKTtcbmV4cG9ydHMuUG9zdGdyZXN0RXJyb3IgPSBQb3N0Z3Jlc3RFcnJvcl8xLmRlZmF1bHQ7XG5leHBvcnRzLmRlZmF1bHQgPSB7XG4gICAgUG9zdGdyZXN0Q2xpZW50OiBQb3N0Z3Jlc3RDbGllbnRfMS5kZWZhdWx0LFxuICAgIFBvc3RncmVzdFF1ZXJ5QnVpbGRlcjogUG9zdGdyZXN0UXVlcnlCdWlsZGVyXzEuZGVmYXVsdCxcbiAgICBQb3N0Z3Jlc3RGaWx0ZXJCdWlsZGVyOiBQb3N0Z3Jlc3RGaWx0ZXJCdWlsZGVyXzEuZGVmYXVsdCxcbiAgICBQb3N0Z3Jlc3RUcmFuc2Zvcm1CdWlsZGVyOiBQb3N0Z3Jlc3RUcmFuc2Zvcm1CdWlsZGVyXzEuZGVmYXVsdCxcbiAgICBQb3N0Z3Jlc3RCdWlsZGVyOiBQb3N0Z3Jlc3RCdWlsZGVyXzEuZGVmYXVsdCxcbiAgICBQb3N0Z3Jlc3RFcnJvcjogUG9zdGdyZXN0RXJyb3JfMS5kZWZhdWx0LFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@supabase/postgrest-js/dist/cjs/index.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/postgrest-js/dist/cjs/version.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/version.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.version = void 0;\nexports.version = '0.0.0-automated';\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3Bvc3RncmVzdC1qcy9kaXN0L2Nqcy92ZXJzaW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGVBQWU7QUFDZixlQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9wb3N0Z3Jlc3QtanMvZGlzdC9janMvdmVyc2lvbi5qcz9mYmYzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy52ZXJzaW9uID0gdm9pZCAwO1xuZXhwb3J0cy52ZXJzaW9uID0gJzAuMC4wLWF1dG9tYXRlZCc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJzaW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@supabase/postgrest-js/dist/cjs/version.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   REALTIME_CHANNEL_STATES: function() { return /* binding */ REALTIME_CHANNEL_STATES; },\n/* harmony export */   REALTIME_LISTEN_TYPES: function() { return /* binding */ REALTIME_LISTEN_TYPES; },\n/* harmony export */   REALTIME_POSTGRES_CHANGES_LISTEN_EVENT: function() { return /* binding */ REALTIME_POSTGRES_CHANGES_LISTEN_EVENT; },\n/* harmony export */   REALTIME_SUBSCRIBE_STATES: function() { return /* binding */ REALTIME_SUBSCRIBE_STATES; },\n/* harmony export */   \"default\": function() { return /* binding */ RealtimeChannel; }\n/* harmony export */ });\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/constants */ \"./node_modules/@supabase/realtime-js/dist/module/lib/constants.js\");\n/* harmony import */ var _lib_push__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/push */ \"./node_modules/@supabase/realtime-js/dist/module/lib/push.js\");\n/* harmony import */ var _lib_timer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/timer */ \"./node_modules/@supabase/realtime-js/dist/module/lib/timer.js\");\n/* harmony import */ var _RealtimePresence__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./RealtimePresence */ \"./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js\");\n/* harmony import */ var _lib_transformers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/transformers */ \"./node_modules/@supabase/realtime-js/dist/module/lib/transformers.js\");\n\n\n\n\n\n\nvar REALTIME_POSTGRES_CHANGES_LISTEN_EVENT;\n(function (REALTIME_POSTGRES_CHANGES_LISTEN_EVENT) {\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"ALL\"] = \"*\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"INSERT\"] = \"INSERT\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"UPDATE\"] = \"UPDATE\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"DELETE\"] = \"DELETE\";\n})(REALTIME_POSTGRES_CHANGES_LISTEN_EVENT || (REALTIME_POSTGRES_CHANGES_LISTEN_EVENT = {}));\nvar REALTIME_LISTEN_TYPES;\n(function (REALTIME_LISTEN_TYPES) {\n    REALTIME_LISTEN_TYPES[\"BROADCAST\"] = \"broadcast\";\n    REALTIME_LISTEN_TYPES[\"PRESENCE\"] = \"presence\";\n    REALTIME_LISTEN_TYPES[\"POSTGRES_CHANGES\"] = \"postgres_changes\";\n    REALTIME_LISTEN_TYPES[\"SYSTEM\"] = \"system\";\n})(REALTIME_LISTEN_TYPES || (REALTIME_LISTEN_TYPES = {}));\nvar REALTIME_SUBSCRIBE_STATES;\n(function (REALTIME_SUBSCRIBE_STATES) {\n    REALTIME_SUBSCRIBE_STATES[\"SUBSCRIBED\"] = \"SUBSCRIBED\";\n    REALTIME_SUBSCRIBE_STATES[\"TIMED_OUT\"] = \"TIMED_OUT\";\n    REALTIME_SUBSCRIBE_STATES[\"CLOSED\"] = \"CLOSED\";\n    REALTIME_SUBSCRIBE_STATES[\"CHANNEL_ERROR\"] = \"CHANNEL_ERROR\";\n})(REALTIME_SUBSCRIBE_STATES || (REALTIME_SUBSCRIBE_STATES = {}));\nconst REALTIME_CHANNEL_STATES = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES;\n/** A channel is the basic building block of Realtime\n * and narrows the scope of data flow to subscribed clients.\n * You can think of a channel as a chatroom where participants are able to see who's online\n * and send and receive messages.\n */\nclass RealtimeChannel {\n    constructor(\n    /** Topic name can be any string. */\n    topic, params = { config: {} }, socket) {\n        this.topic = topic;\n        this.params = params;\n        this.socket = socket;\n        this.bindings = {};\n        this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.closed;\n        this.joinedOnce = false;\n        this.pushBuffer = [];\n        this.subTopic = topic.replace(/^realtime:/i, '');\n        this.params.config = Object.assign({\n            broadcast: { ack: false, self: false },\n            presence: { key: '', enabled: false },\n            private: false,\n        }, params.config);\n        this.timeout = this.socket.timeout;\n        this.joinPush = new _lib_push__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS.join, this.params, this.timeout);\n        this.rejoinTimer = new _lib_timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](() => this._rejoinUntilConnected(), this.socket.reconnectAfterMs);\n        this.joinPush.receive('ok', () => {\n            this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.joined;\n            this.rejoinTimer.reset();\n            this.pushBuffer.forEach((pushEvent) => pushEvent.send());\n            this.pushBuffer = [];\n        });\n        this._onClose(() => {\n            this.rejoinTimer.reset();\n            this.socket.log('channel', `close ${this.topic} ${this._joinRef()}`);\n            this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.closed;\n            this.socket._remove(this);\n        });\n        this._onError((reason) => {\n            if (this._isLeaving() || this._isClosed()) {\n                return;\n            }\n            this.socket.log('channel', `error ${this.topic}`, reason);\n            this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.joinPush.receive('timeout', () => {\n            if (!this._isJoining()) {\n                return;\n            }\n            this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout);\n            this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.joinPush.receive('error', (reason) => {\n            if (this._isLeaving() || this._isClosed()) {\n                return;\n            }\n            this.socket.log('channel', `error ${this.topic}`, reason);\n            this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this._on(_lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS.reply, {}, (payload, ref) => {\n            this._trigger(this._replyEventName(ref), payload);\n        });\n        this.presence = new _RealtimePresence__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this);\n        this.broadcastEndpointURL = (0,_lib_transformers__WEBPACK_IMPORTED_MODULE_4__.httpEndpointURL)(this.socket.endPoint);\n        this.private = this.params.config.private || false;\n    }\n    /** Subscribe registers your client with the server */\n    subscribe(callback, timeout = this.timeout) {\n        var _a, _b;\n        if (!this.socket.isConnected()) {\n            this.socket.connect();\n        }\n        if (this.state == _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.closed) {\n            const { config: { broadcast, presence, private: isPrivate }, } = this.params;\n            const postgres_changes = (_b = (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.map((r) => r.filter)) !== null && _b !== void 0 ? _b : [];\n            const presence_enabled = !!this.bindings[REALTIME_LISTEN_TYPES.PRESENCE] &&\n                this.bindings[REALTIME_LISTEN_TYPES.PRESENCE].length > 0;\n            const accessTokenPayload = {};\n            const config = {\n                broadcast,\n                presence: Object.assign(Object.assign({}, presence), { enabled: presence_enabled }),\n                postgres_changes,\n                private: isPrivate,\n            };\n            if (this.socket.accessTokenValue) {\n                accessTokenPayload.access_token = this.socket.accessTokenValue;\n            }\n            this._onError((e) => callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.CHANNEL_ERROR, e));\n            this._onClose(() => callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.CLOSED));\n            this.updateJoinPayload(Object.assign({ config }, accessTokenPayload));\n            this.joinedOnce = true;\n            this._rejoin(timeout);\n            this.joinPush\n                .receive('ok', async ({ postgres_changes }) => {\n                var _a;\n                this.socket.setAuth();\n                if (postgres_changes === undefined) {\n                    callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.SUBSCRIBED);\n                    return;\n                }\n                else {\n                    const clientPostgresBindings = this.bindings.postgres_changes;\n                    const bindingsLen = (_a = clientPostgresBindings === null || clientPostgresBindings === void 0 ? void 0 : clientPostgresBindings.length) !== null && _a !== void 0 ? _a : 0;\n                    const newPostgresBindings = [];\n                    for (let i = 0; i < bindingsLen; i++) {\n                        const clientPostgresBinding = clientPostgresBindings[i];\n                        const { filter: { event, schema, table, filter }, } = clientPostgresBinding;\n                        const serverPostgresFilter = postgres_changes && postgres_changes[i];\n                        if (serverPostgresFilter &&\n                            serverPostgresFilter.event === event &&\n                            serverPostgresFilter.schema === schema &&\n                            serverPostgresFilter.table === table &&\n                            serverPostgresFilter.filter === filter) {\n                            newPostgresBindings.push(Object.assign(Object.assign({}, clientPostgresBinding), { id: serverPostgresFilter.id }));\n                        }\n                        else {\n                            this.unsubscribe();\n                            this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.errored;\n                            callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.CHANNEL_ERROR, new Error('mismatch between server and client bindings for postgres changes'));\n                            return;\n                        }\n                    }\n                    this.bindings.postgres_changes = newPostgresBindings;\n                    callback && callback(REALTIME_SUBSCRIBE_STATES.SUBSCRIBED);\n                    return;\n                }\n            })\n                .receive('error', (error) => {\n                this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.errored;\n                callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.CHANNEL_ERROR, new Error(JSON.stringify(Object.values(error).join(', ') || 'error')));\n                return;\n            })\n                .receive('timeout', () => {\n                callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.TIMED_OUT);\n                return;\n            });\n        }\n        return this;\n    }\n    presenceState() {\n        return this.presence.state;\n    }\n    async track(payload, opts = {}) {\n        return await this.send({\n            type: 'presence',\n            event: 'track',\n            payload,\n        }, opts.timeout || this.timeout);\n    }\n    async untrack(opts = {}) {\n        return await this.send({\n            type: 'presence',\n            event: 'untrack',\n        }, opts);\n    }\n    on(type, filter, callback) {\n        if (this.state === _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.joined &&\n            type === REALTIME_LISTEN_TYPES.PRESENCE) {\n            this.socket.log('channel', `resubscribe to ${this.topic} due to change in presence callbacks on joined channel`);\n            this.unsubscribe().then(() => this.subscribe());\n        }\n        return this._on(type, filter, callback);\n    }\n    /**\n     * Sends a message into the channel.\n     *\n     * @param args Arguments to send to channel\n     * @param args.type The type of event to send\n     * @param args.event The name of the event being sent\n     * @param args.payload Payload to be sent\n     * @param opts Options to be used during the send process\n     */\n    async send(args, opts = {}) {\n        var _a, _b;\n        if (!this._canPush() && args.type === 'broadcast') {\n            const { event, payload: endpoint_payload } = args;\n            const authorization = this.socket.accessTokenValue\n                ? `Bearer ${this.socket.accessTokenValue}`\n                : '';\n            const options = {\n                method: 'POST',\n                headers: {\n                    Authorization: authorization,\n                    apikey: this.socket.apiKey ? this.socket.apiKey : '',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    messages: [\n                        {\n                            topic: this.subTopic,\n                            event,\n                            payload: endpoint_payload,\n                            private: this.private,\n                        },\n                    ],\n                }),\n            };\n            try {\n                const response = await this._fetchWithTimeout(this.broadcastEndpointURL, options, (_a = opts.timeout) !== null && _a !== void 0 ? _a : this.timeout);\n                await ((_b = response.body) === null || _b === void 0 ? void 0 : _b.cancel());\n                return response.ok ? 'ok' : 'error';\n            }\n            catch (error) {\n                if (error.name === 'AbortError') {\n                    return 'timed out';\n                }\n                else {\n                    return 'error';\n                }\n            }\n        }\n        else {\n            return new Promise((resolve) => {\n                var _a, _b, _c;\n                const push = this._push(args.type, args, opts.timeout || this.timeout);\n                if (args.type === 'broadcast' && !((_c = (_b = (_a = this.params) === null || _a === void 0 ? void 0 : _a.config) === null || _b === void 0 ? void 0 : _b.broadcast) === null || _c === void 0 ? void 0 : _c.ack)) {\n                    resolve('ok');\n                }\n                push.receive('ok', () => resolve('ok'));\n                push.receive('error', () => resolve('error'));\n                push.receive('timeout', () => resolve('timed out'));\n            });\n        }\n    }\n    updateJoinPayload(payload) {\n        this.joinPush.updatePayload(payload);\n    }\n    /**\n     * Leaves the channel.\n     *\n     * Unsubscribes from server events, and instructs channel to terminate on server.\n     * Triggers onClose() hooks.\n     *\n     * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n     * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n     */\n    unsubscribe(timeout = this.timeout) {\n        this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.leaving;\n        const onClose = () => {\n            this.socket.log('channel', `leave ${this.topic}`);\n            this._trigger(_lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS.close, 'leave', this._joinRef());\n        };\n        this.joinPush.destroy();\n        let leavePush = null;\n        return new Promise((resolve) => {\n            leavePush = new _lib_push__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS.leave, {}, timeout);\n            leavePush\n                .receive('ok', () => {\n                onClose();\n                resolve('ok');\n            })\n                .receive('timeout', () => {\n                onClose();\n                resolve('timed out');\n            })\n                .receive('error', () => {\n                resolve('error');\n            });\n            leavePush.send();\n            if (!this._canPush()) {\n                leavePush.trigger('ok', {});\n            }\n        }).finally(() => {\n            leavePush === null || leavePush === void 0 ? void 0 : leavePush.destroy();\n        });\n    }\n    /**\n     * Teardown the channel.\n     *\n     * Destroys and stops related timers.\n     */\n    teardown() {\n        this.pushBuffer.forEach((push) => push.destroy());\n        this.pushBuffer = [];\n        this.rejoinTimer.reset();\n        this.joinPush.destroy();\n        this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.closed;\n        this.bindings = {};\n    }\n    /** @internal */\n    async _fetchWithTimeout(url, options, timeout) {\n        const controller = new AbortController();\n        const id = setTimeout(() => controller.abort(), timeout);\n        const response = await this.socket.fetch(url, Object.assign(Object.assign({}, options), { signal: controller.signal }));\n        clearTimeout(id);\n        return response;\n    }\n    /** @internal */\n    _push(event, payload, timeout = this.timeout) {\n        if (!this.joinedOnce) {\n            throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;\n        }\n        let pushEvent = new _lib_push__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, event, payload, timeout);\n        if (this._canPush()) {\n            pushEvent.send();\n        }\n        else {\n            this._addToPushBuffer(pushEvent);\n        }\n        return pushEvent;\n    }\n    /** @internal */\n    _addToPushBuffer(pushEvent) {\n        pushEvent.startTimeout();\n        this.pushBuffer.push(pushEvent);\n        // Enforce buffer size limit\n        if (this.pushBuffer.length > _lib_constants__WEBPACK_IMPORTED_MODULE_0__.MAX_PUSH_BUFFER_SIZE) {\n            const removedPush = this.pushBuffer.shift();\n            if (removedPush) {\n                removedPush.destroy();\n                this.socket.log('channel', `discarded push due to buffer overflow: ${removedPush.event}`, removedPush.payload);\n            }\n        }\n    }\n    /**\n     * Overridable message hook\n     *\n     * Receives all events for specialized message handling before dispatching to the channel callbacks.\n     * Must return the payload, modified or unmodified.\n     *\n     * @internal\n     */\n    _onMessage(_event, payload, _ref) {\n        return payload;\n    }\n    /** @internal */\n    _isMember(topic) {\n        return this.topic === topic;\n    }\n    /** @internal */\n    _joinRef() {\n        return this.joinPush.ref;\n    }\n    /** @internal */\n    _trigger(type, payload, ref) {\n        var _a, _b;\n        const typeLower = type.toLocaleLowerCase();\n        const { close, error, leave, join } = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS;\n        const events = [close, error, leave, join];\n        if (ref && events.indexOf(typeLower) >= 0 && ref !== this._joinRef()) {\n            return;\n        }\n        let handledPayload = this._onMessage(typeLower, payload, ref);\n        if (payload && !handledPayload) {\n            throw 'channel onMessage callbacks must return the payload, modified or unmodified';\n        }\n        if (['insert', 'update', 'delete'].includes(typeLower)) {\n            (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.filter((bind) => {\n                var _a, _b, _c;\n                return (((_a = bind.filter) === null || _a === void 0 ? void 0 : _a.event) === '*' ||\n                    ((_c = (_b = bind.filter) === null || _b === void 0 ? void 0 : _b.event) === null || _c === void 0 ? void 0 : _c.toLocaleLowerCase()) === typeLower);\n            }).map((bind) => bind.callback(handledPayload, ref));\n        }\n        else {\n            (_b = this.bindings[typeLower]) === null || _b === void 0 ? void 0 : _b.filter((bind) => {\n                var _a, _b, _c, _d, _e, _f;\n                if (['broadcast', 'presence', 'postgres_changes'].includes(typeLower)) {\n                    if ('id' in bind) {\n                        const bindId = bind.id;\n                        const bindEvent = (_a = bind.filter) === null || _a === void 0 ? void 0 : _a.event;\n                        return (bindId &&\n                            ((_b = payload.ids) === null || _b === void 0 ? void 0 : _b.includes(bindId)) &&\n                            (bindEvent === '*' ||\n                                (bindEvent === null || bindEvent === void 0 ? void 0 : bindEvent.toLocaleLowerCase()) ===\n                                    ((_c = payload.data) === null || _c === void 0 ? void 0 : _c.type.toLocaleLowerCase())));\n                    }\n                    else {\n                        const bindEvent = (_e = (_d = bind === null || bind === void 0 ? void 0 : bind.filter) === null || _d === void 0 ? void 0 : _d.event) === null || _e === void 0 ? void 0 : _e.toLocaleLowerCase();\n                        return (bindEvent === '*' ||\n                            bindEvent === ((_f = payload === null || payload === void 0 ? void 0 : payload.event) === null || _f === void 0 ? void 0 : _f.toLocaleLowerCase()));\n                    }\n                }\n                else {\n                    return bind.type.toLocaleLowerCase() === typeLower;\n                }\n            }).map((bind) => {\n                if (typeof handledPayload === 'object' && 'ids' in handledPayload) {\n                    const postgresChanges = handledPayload.data;\n                    const { schema, table, commit_timestamp, type, errors } = postgresChanges;\n                    const enrichedPayload = {\n                        schema: schema,\n                        table: table,\n                        commit_timestamp: commit_timestamp,\n                        eventType: type,\n                        new: {},\n                        old: {},\n                        errors: errors,\n                    };\n                    handledPayload = Object.assign(Object.assign({}, enrichedPayload), this._getPayloadRecords(postgresChanges));\n                }\n                bind.callback(handledPayload, ref);\n            });\n        }\n    }\n    /** @internal */\n    _isClosed() {\n        return this.state === _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.closed;\n    }\n    /** @internal */\n    _isJoined() {\n        return this.state === _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.joined;\n    }\n    /** @internal */\n    _isJoining() {\n        return this.state === _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.joining;\n    }\n    /** @internal */\n    _isLeaving() {\n        return this.state === _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.leaving;\n    }\n    /** @internal */\n    _replyEventName(ref) {\n        return `chan_reply_${ref}`;\n    }\n    /** @internal */\n    _on(type, filter, callback) {\n        const typeLower = type.toLocaleLowerCase();\n        const binding = {\n            type: typeLower,\n            filter: filter,\n            callback: callback,\n        };\n        if (this.bindings[typeLower]) {\n            this.bindings[typeLower].push(binding);\n        }\n        else {\n            this.bindings[typeLower] = [binding];\n        }\n        return this;\n    }\n    /** @internal */\n    _off(type, filter) {\n        const typeLower = type.toLocaleLowerCase();\n        if (this.bindings[typeLower]) {\n            this.bindings[typeLower] = this.bindings[typeLower].filter((bind) => {\n                var _a;\n                return !(((_a = bind.type) === null || _a === void 0 ? void 0 : _a.toLocaleLowerCase()) === typeLower &&\n                    RealtimeChannel.isEqual(bind.filter, filter));\n            });\n        }\n        return this;\n    }\n    /** @internal */\n    static isEqual(obj1, obj2) {\n        if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n            return false;\n        }\n        for (const k in obj1) {\n            if (obj1[k] !== obj2[k]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /** @internal */\n    _rejoinUntilConnected() {\n        this.rejoinTimer.scheduleTimeout();\n        if (this.socket.isConnected()) {\n            this._rejoin();\n        }\n    }\n    /**\n     * Registers a callback that will be executed when the channel closes.\n     *\n     * @internal\n     */\n    _onClose(callback) {\n        this._on(_lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS.close, {}, callback);\n    }\n    /**\n     * Registers a callback that will be executed when the channel encounteres an error.\n     *\n     * @internal\n     */\n    _onError(callback) {\n        this._on(_lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS.error, {}, (reason) => callback(reason));\n    }\n    /**\n     * Returns `true` if the socket is connected and the channel has been joined.\n     *\n     * @internal\n     */\n    _canPush() {\n        return this.socket.isConnected() && this._isJoined();\n    }\n    /** @internal */\n    _rejoin(timeout = this.timeout) {\n        if (this._isLeaving()) {\n            return;\n        }\n        this.socket._leaveOpenTopic(this.topic);\n        this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.joining;\n        this.joinPush.resend(timeout);\n    }\n    /** @internal */\n    _getPayloadRecords(payload) {\n        const records = {\n            new: {},\n            old: {},\n        };\n        if (payload.type === 'INSERT' || payload.type === 'UPDATE') {\n            records.new = _lib_transformers__WEBPACK_IMPORTED_MODULE_4__.convertChangeData(payload.columns, payload.record);\n        }\n        if (payload.type === 'UPDATE' || payload.type === 'DELETE') {\n            records.old = _lib_transformers__WEBPACK_IMPORTED_MODULE_4__.convertChangeData(payload.columns, payload.old_record);\n        }\n        return records;\n    }\n}\n//# sourceMappingURL=RealtimeChannel.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ RealtimeClient; }\n/* harmony export */ });\n/* harmony import */ var _lib_websocket_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/websocket-factory */ \"./node_modules/@supabase/realtime-js/dist/module/lib/websocket-factory.js\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/constants */ \"./node_modules/@supabase/realtime-js/dist/module/lib/constants.js\");\n/* harmony import */ var _lib_serializer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/serializer */ \"./node_modules/@supabase/realtime-js/dist/module/lib/serializer.js\");\n/* harmony import */ var _lib_timer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/timer */ \"./node_modules/@supabase/realtime-js/dist/module/lib/timer.js\");\n/* harmony import */ var _lib_transformers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/transformers */ \"./node_modules/@supabase/realtime-js/dist/module/lib/transformers.js\");\n/* harmony import */ var _RealtimeChannel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./RealtimeChannel */ \"./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js\");\n\n\n\n\n\n\nconst noop = () => { };\n// Connection-related constants\nconst CONNECTION_TIMEOUTS = {\n    HEARTBEAT_INTERVAL: 25000,\n    RECONNECT_DELAY: 10,\n    HEARTBEAT_TIMEOUT_FALLBACK: 100,\n};\nconst RECONNECT_INTERVALS = [1000, 2000, 5000, 10000];\nconst DEFAULT_RECONNECT_FALLBACK = 10000;\nconst WORKER_SCRIPT = `\n  addEventListener(\"message\", (e) => {\n    if (e.data.event === \"start\") {\n      setInterval(() => postMessage({ event: \"keepAlive\" }), e.data.interval);\n    }\n  });`;\nclass RealtimeClient {\n    /**\n     * Initializes the Socket.\n     *\n     * @param endPoint The string WebSocket endpoint, ie, \"ws://example.com/socket\", \"wss://example.com\", \"/socket\" (inherited host & protocol)\n     * @param httpEndpoint The string HTTP endpoint, ie, \"https://example.com\", \"/\" (inherited host & protocol)\n     * @param options.transport The Websocket Transport, for example WebSocket. This can be a custom implementation\n     * @param options.timeout The default timeout in milliseconds to trigger push timeouts.\n     * @param options.params The optional params to pass when connecting.\n     * @param options.headers Deprecated: headers cannot be set on websocket connections and this option will be removed in the future.\n     * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.\n     * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n     * @param options.logLevel Sets the log level for Realtime\n     * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))\n     * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.\n     * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.\n     * @param options.worker Use Web Worker to set a side flow. Defaults to false.\n     * @param options.workerUrl The URL of the worker script. Defaults to https://realtime.supabase.com/worker.js that includes a heartbeat event call to keep the connection alive.\n     */\n    constructor(endPoint, options) {\n        var _a;\n        this.accessTokenValue = null;\n        this.apiKey = null;\n        this.channels = new Array();\n        this.endPoint = '';\n        this.httpEndpoint = '';\n        /** @deprecated headers cannot be set on websocket connections */\n        this.headers = {};\n        this.params = {};\n        this.timeout = _lib_constants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_TIMEOUT;\n        this.transport = null;\n        this.heartbeatIntervalMs = CONNECTION_TIMEOUTS.HEARTBEAT_INTERVAL;\n        this.heartbeatTimer = undefined;\n        this.pendingHeartbeatRef = null;\n        this.heartbeatCallback = noop;\n        this.ref = 0;\n        this.reconnectTimer = null;\n        this.logger = noop;\n        this.conn = null;\n        this.sendBuffer = [];\n        this.serializer = new _lib_serializer__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n        this.stateChangeCallbacks = {\n            open: [],\n            close: [],\n            error: [],\n            message: [],\n        };\n        this.accessToken = null;\n        this._connectionState = 'disconnected';\n        this._wasManualDisconnect = false;\n        this._authPromise = null;\n        /**\n         * Use either custom fetch, if provided, or default fetch to make HTTP requests\n         *\n         * @internal\n         */\n        this._resolveFetch = (customFetch) => {\n            let _fetch;\n            if (customFetch) {\n                _fetch = customFetch;\n            }\n            else if (typeof fetch === 'undefined') {\n                // Node.js environment without native fetch\n                _fetch = (...args) => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @supabase/node-fetch */ \"./node_modules/@supabase/node-fetch/browser.js\"))\n                    .then(({ default: fetch }) => fetch(...args))\n                    .catch((error) => {\n                    throw new Error(`Failed to load @supabase/node-fetch: ${error.message}. ` +\n                        `This is required for HTTP requests in Node.js environments without native fetch.`);\n                });\n            }\n            else {\n                _fetch = fetch;\n            }\n            return (...args) => _fetch(...args);\n        };\n        // Validate required parameters\n        if (!((_a = options === null || options === void 0 ? void 0 : options.params) === null || _a === void 0 ? void 0 : _a.apikey)) {\n            throw new Error('API key is required to connect to Realtime');\n        }\n        this.apiKey = options.params.apikey;\n        // Initialize endpoint URLs\n        this.endPoint = `${endPoint}/${_lib_constants__WEBPACK_IMPORTED_MODULE_1__.TRANSPORTS.websocket}`;\n        this.httpEndpoint = (0,_lib_transformers__WEBPACK_IMPORTED_MODULE_4__.httpEndpointURL)(endPoint);\n        this._initializeOptions(options);\n        this._setupReconnectionTimer();\n        this.fetch = this._resolveFetch(options === null || options === void 0 ? void 0 : options.fetch);\n    }\n    /**\n     * Connects the socket, unless already connected.\n     */\n    connect() {\n        // Skip if already connecting, disconnecting, or connected\n        if (this.isConnecting() ||\n            this.isDisconnecting() ||\n            (this.conn !== null && this.isConnected())) {\n            return;\n        }\n        this._setConnectionState('connecting');\n        this._setAuthSafely('connect');\n        // Establish WebSocket connection\n        if (!this.transport) {\n            try {\n                this.conn = _lib_websocket_factory__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createWebSocket(this.endpointURL());\n            }\n            catch (error) {\n                this._setConnectionState('disconnected');\n                throw new Error(`WebSocket not available: ${error.message}`);\n            }\n        }\n        else {\n            // Use custom transport if provided\n            this.conn = new this.transport(this.endpointURL());\n        }\n        this._setupConnectionHandlers();\n    }\n    /**\n     * Returns the URL of the websocket.\n     * @returns string The URL of the websocket.\n     */\n    endpointURL() {\n        return this._appendParams(this.endPoint, Object.assign({}, this.params, { vsn: _lib_constants__WEBPACK_IMPORTED_MODULE_1__.VSN }));\n    }\n    /**\n     * Disconnects the socket.\n     *\n     * @param code A numeric status code to send on disconnect.\n     * @param reason A custom reason for the disconnect.\n     */\n    disconnect(code, reason) {\n        if (this.isDisconnecting()) {\n            return;\n        }\n        this._setConnectionState('disconnecting', true);\n        if (this.conn) {\n            // Setup fallback timer to prevent hanging in disconnecting state\n            const fallbackTimer = setTimeout(() => {\n                this._setConnectionState('disconnected');\n            }, 100);\n            this.conn.onclose = () => {\n                clearTimeout(fallbackTimer);\n                this._setConnectionState('disconnected');\n            };\n            // Close the WebSocket connection\n            if (code) {\n                this.conn.close(code, reason !== null && reason !== void 0 ? reason : '');\n            }\n            else {\n                this.conn.close();\n            }\n            this._teardownConnection();\n        }\n        else {\n            this._setConnectionState('disconnected');\n        }\n    }\n    /**\n     * Returns all created channels\n     */\n    getChannels() {\n        return this.channels;\n    }\n    /**\n     * Unsubscribes and removes a single channel\n     * @param channel A RealtimeChannel instance\n     */\n    async removeChannel(channel) {\n        const status = await channel.unsubscribe();\n        if (this.channels.length === 0) {\n            this.disconnect();\n        }\n        return status;\n    }\n    /**\n     * Unsubscribes and removes all channels\n     */\n    async removeAllChannels() {\n        const values_1 = await Promise.all(this.channels.map((channel) => channel.unsubscribe()));\n        this.channels = [];\n        this.disconnect();\n        return values_1;\n    }\n    /**\n     * Logs the message.\n     *\n     * For customized logging, `this.logger` can be overridden.\n     */\n    log(kind, msg, data) {\n        this.logger(kind, msg, data);\n    }\n    /**\n     * Returns the current state of the socket.\n     */\n    connectionState() {\n        switch (this.conn && this.conn.readyState) {\n            case _lib_constants__WEBPACK_IMPORTED_MODULE_1__.SOCKET_STATES.connecting:\n                return _lib_constants__WEBPACK_IMPORTED_MODULE_1__.CONNECTION_STATE.Connecting;\n            case _lib_constants__WEBPACK_IMPORTED_MODULE_1__.SOCKET_STATES.open:\n                return _lib_constants__WEBPACK_IMPORTED_MODULE_1__.CONNECTION_STATE.Open;\n            case _lib_constants__WEBPACK_IMPORTED_MODULE_1__.SOCKET_STATES.closing:\n                return _lib_constants__WEBPACK_IMPORTED_MODULE_1__.CONNECTION_STATE.Closing;\n            default:\n                return _lib_constants__WEBPACK_IMPORTED_MODULE_1__.CONNECTION_STATE.Closed;\n        }\n    }\n    /**\n     * Returns `true` is the connection is open.\n     */\n    isConnected() {\n        return this.connectionState() === _lib_constants__WEBPACK_IMPORTED_MODULE_1__.CONNECTION_STATE.Open;\n    }\n    /**\n     * Returns `true` if the connection is currently connecting.\n     */\n    isConnecting() {\n        return this._connectionState === 'connecting';\n    }\n    /**\n     * Returns `true` if the connection is currently disconnecting.\n     */\n    isDisconnecting() {\n        return this._connectionState === 'disconnecting';\n    }\n    channel(topic, params = { config: {} }) {\n        const realtimeTopic = `realtime:${topic}`;\n        const exists = this.getChannels().find((c) => c.topic === realtimeTopic);\n        if (!exists) {\n            const chan = new _RealtimeChannel__WEBPACK_IMPORTED_MODULE_5__[\"default\"](`realtime:${topic}`, params, this);\n            this.channels.push(chan);\n            return chan;\n        }\n        else {\n            return exists;\n        }\n    }\n    /**\n     * Push out a message if the socket is connected.\n     *\n     * If the socket is not connected, the message gets enqueued within a local buffer, and sent out when a connection is next established.\n     */\n    push(data) {\n        const { topic, event, payload, ref } = data;\n        const callback = () => {\n            this.encode(data, (result) => {\n                var _a;\n                (_a = this.conn) === null || _a === void 0 ? void 0 : _a.send(result);\n            });\n        };\n        this.log('push', `${topic} ${event} (${ref})`, payload);\n        if (this.isConnected()) {\n            callback();\n        }\n        else {\n            this.sendBuffer.push(callback);\n        }\n    }\n    /**\n     * Sets the JWT access token used for channel subscription authorization and Realtime RLS.\n     *\n     * If param is null it will use the `accessToken` callback function or the token set on the client.\n     *\n     * On callback used, it will set the value of the token internal to the client.\n     *\n     * @param token A JWT string to override the token set on the client.\n     */\n    async setAuth(token = null) {\n        this._authPromise = this._performAuth(token);\n        try {\n            await this._authPromise;\n        }\n        finally {\n            this._authPromise = null;\n        }\n    }\n    /**\n     * Sends a heartbeat message if the socket is connected.\n     */\n    async sendHeartbeat() {\n        var _a;\n        if (!this.isConnected()) {\n            this.heartbeatCallback('disconnected');\n            return;\n        }\n        // Handle heartbeat timeout and force reconnection if needed\n        if (this.pendingHeartbeatRef) {\n            this.pendingHeartbeatRef = null;\n            this.log('transport', 'heartbeat timeout. Attempting to re-establish connection');\n            this.heartbeatCallback('timeout');\n            // Force reconnection after heartbeat timeout\n            this._wasManualDisconnect = false;\n            (_a = this.conn) === null || _a === void 0 ? void 0 : _a.close(_lib_constants__WEBPACK_IMPORTED_MODULE_1__.WS_CLOSE_NORMAL, 'heartbeat timeout');\n            setTimeout(() => {\n                var _a;\n                if (!this.isConnected()) {\n                    (_a = this.reconnectTimer) === null || _a === void 0 ? void 0 : _a.scheduleTimeout();\n                }\n            }, CONNECTION_TIMEOUTS.HEARTBEAT_TIMEOUT_FALLBACK);\n            return;\n        }\n        // Send heartbeat message to server\n        this.pendingHeartbeatRef = this._makeRef();\n        this.push({\n            topic: 'phoenix',\n            event: 'heartbeat',\n            payload: {},\n            ref: this.pendingHeartbeatRef,\n        });\n        this.heartbeatCallback('sent');\n        this._setAuthSafely('heartbeat');\n    }\n    onHeartbeat(callback) {\n        this.heartbeatCallback = callback;\n    }\n    /**\n     * Flushes send buffer\n     */\n    flushSendBuffer() {\n        if (this.isConnected() && this.sendBuffer.length > 0) {\n            this.sendBuffer.forEach((callback) => callback());\n            this.sendBuffer = [];\n        }\n    }\n    /**\n     * Return the next message ref, accounting for overflows\n     *\n     * @internal\n     */\n    _makeRef() {\n        let newRef = this.ref + 1;\n        if (newRef === this.ref) {\n            this.ref = 0;\n        }\n        else {\n            this.ref = newRef;\n        }\n        return this.ref.toString();\n    }\n    /**\n     * Unsubscribe from channels with the specified topic.\n     *\n     * @internal\n     */\n    _leaveOpenTopic(topic) {\n        let dupChannel = this.channels.find((c) => c.topic === topic && (c._isJoined() || c._isJoining()));\n        if (dupChannel) {\n            this.log('transport', `leaving duplicate topic \"${topic}\"`);\n            dupChannel.unsubscribe();\n        }\n    }\n    /**\n     * Removes a subscription from the socket.\n     *\n     * @param channel An open subscription.\n     *\n     * @internal\n     */\n    _remove(channel) {\n        this.channels = this.channels.filter((c) => c.topic !== channel.topic);\n    }\n    /** @internal */\n    _onConnMessage(rawMessage) {\n        this.decode(rawMessage.data, (msg) => {\n            // Handle heartbeat responses\n            if (msg.topic === 'phoenix' && msg.event === 'phx_reply') {\n                this.heartbeatCallback(msg.payload.status === 'ok' ? 'ok' : 'error');\n            }\n            // Handle pending heartbeat reference cleanup\n            if (msg.ref && msg.ref === this.pendingHeartbeatRef) {\n                this.pendingHeartbeatRef = null;\n            }\n            // Log incoming message\n            const { topic, event, payload, ref } = msg;\n            const refString = ref ? `(${ref})` : '';\n            const status = payload.status || '';\n            this.log('receive', `${status} ${topic} ${event} ${refString}`.trim(), payload);\n            // Route message to appropriate channels\n            this.channels\n                .filter((channel) => channel._isMember(topic))\n                .forEach((channel) => channel._trigger(event, payload, ref));\n            this._triggerStateCallbacks('message', msg);\n        });\n    }\n    /**\n     * Clear specific timer\n     * @internal\n     */\n    _clearTimer(timer) {\n        var _a;\n        if (timer === 'heartbeat' && this.heartbeatTimer) {\n            clearInterval(this.heartbeatTimer);\n            this.heartbeatTimer = undefined;\n        }\n        else if (timer === 'reconnect') {\n            (_a = this.reconnectTimer) === null || _a === void 0 ? void 0 : _a.reset();\n        }\n    }\n    /**\n     * Clear all timers\n     * @internal\n     */\n    _clearAllTimers() {\n        this._clearTimer('heartbeat');\n        this._clearTimer('reconnect');\n    }\n    /**\n     * Setup connection handlers for WebSocket events\n     * @internal\n     */\n    _setupConnectionHandlers() {\n        if (!this.conn)\n            return;\n        // Set binary type if supported (browsers and most WebSocket implementations)\n        if ('binaryType' in this.conn) {\n            ;\n            this.conn.binaryType = 'arraybuffer';\n        }\n        this.conn.onopen = () => this._onConnOpen();\n        this.conn.onerror = (error) => this._onConnError(error);\n        this.conn.onmessage = (event) => this._onConnMessage(event);\n        this.conn.onclose = (event) => this._onConnClose(event);\n    }\n    /**\n     * Teardown connection and cleanup resources\n     * @internal\n     */\n    _teardownConnection() {\n        if (this.conn) {\n            this.conn.onopen = null;\n            this.conn.onerror = null;\n            this.conn.onmessage = null;\n            this.conn.onclose = null;\n            this.conn = null;\n        }\n        this._clearAllTimers();\n        this.channels.forEach((channel) => channel.teardown());\n    }\n    /** @internal */\n    _onConnOpen() {\n        this._setConnectionState('connected');\n        this.log('transport', `connected to ${this.endpointURL()}`);\n        this.flushSendBuffer();\n        this._clearTimer('reconnect');\n        if (!this.worker) {\n            this._startHeartbeat();\n        }\n        else {\n            if (!this.workerRef) {\n                this._startWorkerHeartbeat();\n            }\n        }\n        this._triggerStateCallbacks('open');\n    }\n    /** @internal */\n    _startHeartbeat() {\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.heartbeatTimer = setInterval(() => this.sendHeartbeat(), this.heartbeatIntervalMs);\n    }\n    /** @internal */\n    _startWorkerHeartbeat() {\n        if (this.workerUrl) {\n            this.log('worker', `starting worker for from ${this.workerUrl}`);\n        }\n        else {\n            this.log('worker', `starting default worker`);\n        }\n        const objectUrl = this._workerObjectUrl(this.workerUrl);\n        this.workerRef = new Worker(objectUrl);\n        this.workerRef.onerror = (error) => {\n            this.log('worker', 'worker error', error.message);\n            this.workerRef.terminate();\n        };\n        this.workerRef.onmessage = (event) => {\n            if (event.data.event === 'keepAlive') {\n                this.sendHeartbeat();\n            }\n        };\n        this.workerRef.postMessage({\n            event: 'start',\n            interval: this.heartbeatIntervalMs,\n        });\n    }\n    /** @internal */\n    _onConnClose(event) {\n        var _a;\n        this._setConnectionState('disconnected');\n        this.log('transport', 'close', event);\n        this._triggerChanError();\n        this._clearTimer('heartbeat');\n        // Only schedule reconnection if it wasn't a manual disconnect\n        if (!this._wasManualDisconnect) {\n            (_a = this.reconnectTimer) === null || _a === void 0 ? void 0 : _a.scheduleTimeout();\n        }\n        this._triggerStateCallbacks('close', event);\n    }\n    /** @internal */\n    _onConnError(error) {\n        this._setConnectionState('disconnected');\n        this.log('transport', `${error}`);\n        this._triggerChanError();\n        this._triggerStateCallbacks('error', error);\n    }\n    /** @internal */\n    _triggerChanError() {\n        this.channels.forEach((channel) => channel._trigger(_lib_constants__WEBPACK_IMPORTED_MODULE_1__.CHANNEL_EVENTS.error));\n    }\n    /** @internal */\n    _appendParams(url, params) {\n        if (Object.keys(params).length === 0) {\n            return url;\n        }\n        const prefix = url.match(/\\?/) ? '&' : '?';\n        const query = new URLSearchParams(params);\n        return `${url}${prefix}${query}`;\n    }\n    _workerObjectUrl(url) {\n        let result_url;\n        if (url) {\n            result_url = url;\n        }\n        else {\n            const blob = new Blob([WORKER_SCRIPT], { type: 'application/javascript' });\n            result_url = URL.createObjectURL(blob);\n        }\n        return result_url;\n    }\n    /**\n     * Set connection state with proper state management\n     * @internal\n     */\n    _setConnectionState(state, manual = false) {\n        this._connectionState = state;\n        if (state === 'connecting') {\n            this._wasManualDisconnect = false;\n        }\n        else if (state === 'disconnecting') {\n            this._wasManualDisconnect = manual;\n        }\n    }\n    /**\n     * Perform the actual auth operation\n     * @internal\n     */\n    async _performAuth(token = null) {\n        let tokenToSend;\n        if (token) {\n            tokenToSend = token;\n        }\n        else if (this.accessToken) {\n            // Always call the accessToken callback to get fresh token\n            tokenToSend = await this.accessToken();\n        }\n        else {\n            tokenToSend = this.accessTokenValue;\n        }\n        if (this.accessTokenValue != tokenToSend) {\n            this.accessTokenValue = tokenToSend;\n            this.channels.forEach((channel) => {\n                const payload = {\n                    access_token: tokenToSend,\n                    version: _lib_constants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_VERSION,\n                };\n                tokenToSend && channel.updateJoinPayload(payload);\n                if (channel.joinedOnce && channel._isJoined()) {\n                    channel._push(_lib_constants__WEBPACK_IMPORTED_MODULE_1__.CHANNEL_EVENTS.access_token, {\n                        access_token: tokenToSend,\n                    });\n                }\n            });\n        }\n    }\n    /**\n     * Wait for any in-flight auth operations to complete\n     * @internal\n     */\n    async _waitForAuthIfNeeded() {\n        if (this._authPromise) {\n            await this._authPromise;\n        }\n    }\n    /**\n     * Safely call setAuth with standardized error handling\n     * @internal\n     */\n    _setAuthSafely(context = 'general') {\n        this.setAuth().catch((e) => {\n            this.log('error', `error setting auth in ${context}`, e);\n        });\n    }\n    /**\n     * Trigger state change callbacks with proper error handling\n     * @internal\n     */\n    _triggerStateCallbacks(event, data) {\n        try {\n            this.stateChangeCallbacks[event].forEach((callback) => {\n                try {\n                    callback(data);\n                }\n                catch (e) {\n                    this.log('error', `error in ${event} callback`, e);\n                }\n            });\n        }\n        catch (e) {\n            this.log('error', `error triggering ${event} callbacks`, e);\n        }\n    }\n    /**\n     * Setup reconnection timer with proper configuration\n     * @internal\n     */\n    _setupReconnectionTimer() {\n        this.reconnectTimer = new _lib_timer__WEBPACK_IMPORTED_MODULE_3__[\"default\"](async () => {\n            setTimeout(async () => {\n                await this._waitForAuthIfNeeded();\n                if (!this.isConnected()) {\n                    this.connect();\n                }\n            }, CONNECTION_TIMEOUTS.RECONNECT_DELAY);\n        }, this.reconnectAfterMs);\n    }\n    /**\n     * Initialize client options with defaults\n     * @internal\n     */\n    _initializeOptions(options) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        // Set defaults\n        this.transport = (_a = options === null || options === void 0 ? void 0 : options.transport) !== null && _a !== void 0 ? _a : null;\n        this.timeout = (_b = options === null || options === void 0 ? void 0 : options.timeout) !== null && _b !== void 0 ? _b : _lib_constants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_TIMEOUT;\n        this.heartbeatIntervalMs =\n            (_c = options === null || options === void 0 ? void 0 : options.heartbeatIntervalMs) !== null && _c !== void 0 ? _c : CONNECTION_TIMEOUTS.HEARTBEAT_INTERVAL;\n        this.worker = (_d = options === null || options === void 0 ? void 0 : options.worker) !== null && _d !== void 0 ? _d : false;\n        this.accessToken = (_e = options === null || options === void 0 ? void 0 : options.accessToken) !== null && _e !== void 0 ? _e : null;\n        // Handle special cases\n        if (options === null || options === void 0 ? void 0 : options.params)\n            this.params = options.params;\n        if (options === null || options === void 0 ? void 0 : options.logger)\n            this.logger = options.logger;\n        if ((options === null || options === void 0 ? void 0 : options.logLevel) || (options === null || options === void 0 ? void 0 : options.log_level)) {\n            this.logLevel = options.logLevel || options.log_level;\n            this.params = Object.assign(Object.assign({}, this.params), { log_level: this.logLevel });\n        }\n        // Set up functions with defaults\n        this.reconnectAfterMs =\n            (_f = options === null || options === void 0 ? void 0 : options.reconnectAfterMs) !== null && _f !== void 0 ? _f : ((tries) => {\n                return RECONNECT_INTERVALS[tries - 1] || DEFAULT_RECONNECT_FALLBACK;\n            });\n        this.encode =\n            (_g = options === null || options === void 0 ? void 0 : options.encode) !== null && _g !== void 0 ? _g : ((payload, callback) => {\n                return callback(JSON.stringify(payload));\n            });\n        this.decode =\n            (_h = options === null || options === void 0 ? void 0 : options.decode) !== null && _h !== void 0 ? _h : this.serializer.decode.bind(this.serializer);\n        // Handle worker setup\n        if (this.worker) {\n            if (typeof window !== 'undefined' && !window.Worker) {\n                throw new Error('Web Worker is not supported');\n            }\n            this.workerUrl = options === null || options === void 0 ? void 0 : options.workerUrl;\n        }\n    }\n}\n//# sourceMappingURL=RealtimeClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   REALTIME_PRESENCE_LISTEN_EVENTS: function() { return /* binding */ REALTIME_PRESENCE_LISTEN_EVENTS; },\n/* harmony export */   \"default\": function() { return /* binding */ RealtimePresence; }\n/* harmony export */ });\n/*\n  This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\n  License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\n*/\nvar REALTIME_PRESENCE_LISTEN_EVENTS;\n(function (REALTIME_PRESENCE_LISTEN_EVENTS) {\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"SYNC\"] = \"sync\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"JOIN\"] = \"join\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"LEAVE\"] = \"leave\";\n})(REALTIME_PRESENCE_LISTEN_EVENTS || (REALTIME_PRESENCE_LISTEN_EVENTS = {}));\nclass RealtimePresence {\n    /**\n     * Initializes the Presence.\n     *\n     * @param channel - The RealtimeChannel\n     * @param opts - The options,\n     *        for example `{events: {state: 'state', diff: 'diff'}}`\n     */\n    constructor(channel, opts) {\n        this.channel = channel;\n        this.state = {};\n        this.pendingDiffs = [];\n        this.joinRef = null;\n        this.enabled = false;\n        this.caller = {\n            onJoin: () => { },\n            onLeave: () => { },\n            onSync: () => { },\n        };\n        const events = (opts === null || opts === void 0 ? void 0 : opts.events) || {\n            state: 'presence_state',\n            diff: 'presence_diff',\n        };\n        this.channel._on(events.state, {}, (newState) => {\n            const { onJoin, onLeave, onSync } = this.caller;\n            this.joinRef = this.channel._joinRef();\n            this.state = RealtimePresence.syncState(this.state, newState, onJoin, onLeave);\n            this.pendingDiffs.forEach((diff) => {\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n            });\n            this.pendingDiffs = [];\n            onSync();\n        });\n        this.channel._on(events.diff, {}, (diff) => {\n            const { onJoin, onLeave, onSync } = this.caller;\n            if (this.inPendingSyncState()) {\n                this.pendingDiffs.push(diff);\n            }\n            else {\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n                onSync();\n            }\n        });\n        this.onJoin((key, currentPresences, newPresences) => {\n            this.channel._trigger('presence', {\n                event: 'join',\n                key,\n                currentPresences,\n                newPresences,\n            });\n        });\n        this.onLeave((key, currentPresences, leftPresences) => {\n            this.channel._trigger('presence', {\n                event: 'leave',\n                key,\n                currentPresences,\n                leftPresences,\n            });\n        });\n        this.onSync(() => {\n            this.channel._trigger('presence', { event: 'sync' });\n        });\n    }\n    /**\n     * Used to sync the list of presences on the server with the\n     * client's state.\n     *\n     * An optional `onJoin` and `onLeave` callback can be provided to\n     * react to changes in the client's local presences across\n     * disconnects and reconnects with the server.\n     *\n     * @internal\n     */\n    static syncState(currentState, newState, onJoin, onLeave) {\n        const state = this.cloneDeep(currentState);\n        const transformedState = this.transformState(newState);\n        const joins = {};\n        const leaves = {};\n        this.map(state, (key, presences) => {\n            if (!transformedState[key]) {\n                leaves[key] = presences;\n            }\n        });\n        this.map(transformedState, (key, newPresences) => {\n            const currentPresences = state[key];\n            if (currentPresences) {\n                const newPresenceRefs = newPresences.map((m) => m.presence_ref);\n                const curPresenceRefs = currentPresences.map((m) => m.presence_ref);\n                const joinedPresences = newPresences.filter((m) => curPresenceRefs.indexOf(m.presence_ref) < 0);\n                const leftPresences = currentPresences.filter((m) => newPresenceRefs.indexOf(m.presence_ref) < 0);\n                if (joinedPresences.length > 0) {\n                    joins[key] = joinedPresences;\n                }\n                if (leftPresences.length > 0) {\n                    leaves[key] = leftPresences;\n                }\n            }\n            else {\n                joins[key] = newPresences;\n            }\n        });\n        return this.syncDiff(state, { joins, leaves }, onJoin, onLeave);\n    }\n    /**\n     * Used to sync a diff of presence join and leave events from the\n     * server, as they happen.\n     *\n     * Like `syncState`, `syncDiff` accepts optional `onJoin` and\n     * `onLeave` callbacks to react to a user joining or leaving from a\n     * device.\n     *\n     * @internal\n     */\n    static syncDiff(state, diff, onJoin, onLeave) {\n        const { joins, leaves } = {\n            joins: this.transformState(diff.joins),\n            leaves: this.transformState(diff.leaves),\n        };\n        if (!onJoin) {\n            onJoin = () => { };\n        }\n        if (!onLeave) {\n            onLeave = () => { };\n        }\n        this.map(joins, (key, newPresences) => {\n            var _a;\n            const currentPresences = (_a = state[key]) !== null && _a !== void 0 ? _a : [];\n            state[key] = this.cloneDeep(newPresences);\n            if (currentPresences.length > 0) {\n                const joinedPresenceRefs = state[key].map((m) => m.presence_ref);\n                const curPresences = currentPresences.filter((m) => joinedPresenceRefs.indexOf(m.presence_ref) < 0);\n                state[key].unshift(...curPresences);\n            }\n            onJoin(key, currentPresences, newPresences);\n        });\n        this.map(leaves, (key, leftPresences) => {\n            let currentPresences = state[key];\n            if (!currentPresences)\n                return;\n            const presenceRefsToRemove = leftPresences.map((m) => m.presence_ref);\n            currentPresences = currentPresences.filter((m) => presenceRefsToRemove.indexOf(m.presence_ref) < 0);\n            state[key] = currentPresences;\n            onLeave(key, currentPresences, leftPresences);\n            if (currentPresences.length === 0)\n                delete state[key];\n        });\n        return state;\n    }\n    /** @internal */\n    static map(obj, func) {\n        return Object.getOwnPropertyNames(obj).map((key) => func(key, obj[key]));\n    }\n    /**\n     * Remove 'metas' key\n     * Change 'phx_ref' to 'presence_ref'\n     * Remove 'phx_ref' and 'phx_ref_prev'\n     *\n     * @example\n     * // returns {\n     *  abc123: [\n     *    { presence_ref: '2', user_id: 1 },\n     *    { presence_ref: '3', user_id: 2 }\n     *  ]\n     * }\n     * RealtimePresence.transformState({\n     *  abc123: {\n     *    metas: [\n     *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\n     *      { phx_ref: '3', user_id: 2 }\n     *    ]\n     *  }\n     * })\n     *\n     * @internal\n     */\n    static transformState(state) {\n        state = this.cloneDeep(state);\n        return Object.getOwnPropertyNames(state).reduce((newState, key) => {\n            const presences = state[key];\n            if ('metas' in presences) {\n                newState[key] = presences.metas.map((presence) => {\n                    presence['presence_ref'] = presence['phx_ref'];\n                    delete presence['phx_ref'];\n                    delete presence['phx_ref_prev'];\n                    return presence;\n                });\n            }\n            else {\n                newState[key] = presences;\n            }\n            return newState;\n        }, {});\n    }\n    /** @internal */\n    static cloneDeep(obj) {\n        return JSON.parse(JSON.stringify(obj));\n    }\n    /** @internal */\n    onJoin(callback) {\n        this.caller.onJoin = callback;\n    }\n    /** @internal */\n    onLeave(callback) {\n        this.caller.onLeave = callback;\n    }\n    /** @internal */\n    onSync(callback) {\n        this.caller.onSync = callback;\n    }\n    /** @internal */\n    inPendingSyncState() {\n        return !this.joinRef || this.joinRef !== this.channel._joinRef();\n    }\n}\n//# sourceMappingURL=RealtimePresence.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/realtime-js/dist/module/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/index.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   REALTIME_CHANNEL_STATES: function() { return /* reexport safe */ _RealtimeChannel__WEBPACK_IMPORTED_MODULE_1__.REALTIME_CHANNEL_STATES; },\n/* harmony export */   REALTIME_LISTEN_TYPES: function() { return /* reexport safe */ _RealtimeChannel__WEBPACK_IMPORTED_MODULE_1__.REALTIME_LISTEN_TYPES; },\n/* harmony export */   REALTIME_POSTGRES_CHANGES_LISTEN_EVENT: function() { return /* reexport safe */ _RealtimeChannel__WEBPACK_IMPORTED_MODULE_1__.REALTIME_POSTGRES_CHANGES_LISTEN_EVENT; },\n/* harmony export */   REALTIME_PRESENCE_LISTEN_EVENTS: function() { return /* reexport safe */ _RealtimePresence__WEBPACK_IMPORTED_MODULE_2__.REALTIME_PRESENCE_LISTEN_EVENTS; },\n/* harmony export */   REALTIME_SUBSCRIBE_STATES: function() { return /* reexport safe */ _RealtimeChannel__WEBPACK_IMPORTED_MODULE_1__.REALTIME_SUBSCRIBE_STATES; },\n/* harmony export */   RealtimeChannel: function() { return /* reexport safe */ _RealtimeChannel__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; },\n/* harmony export */   RealtimeClient: function() { return /* reexport safe */ _RealtimeClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; },\n/* harmony export */   RealtimePresence: function() { return /* reexport safe */ _RealtimePresence__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; },\n/* harmony export */   WebSocketFactory: function() { return /* reexport safe */ _lib_websocket_factory__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _RealtimeClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RealtimeClient */ \"./node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js\");\n/* harmony import */ var _RealtimeChannel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RealtimeChannel */ \"./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js\");\n/* harmony import */ var _RealtimePresence__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RealtimePresence */ \"./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js\");\n/* harmony import */ var _lib_websocket_factory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/websocket-factory */ \"./node_modules/@supabase/realtime-js/dist/module/lib/websocket-factory.js\");\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3JlYWx0aW1lLWpzL2Rpc3QvbW9kdWxlL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBOEM7QUFDMEg7QUFDaEY7QUFDakM7QUFDNks7QUFDcE8iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9yZWFsdGltZS1qcy9kaXN0L21vZHVsZS9pbmRleC5qcz81NTVkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFsdGltZUNsaWVudCBmcm9tICcuL1JlYWx0aW1lQ2xpZW50JztcbmltcG9ydCBSZWFsdGltZUNoYW5uZWwsIHsgUkVBTFRJTUVfTElTVEVOX1RZUEVTLCBSRUFMVElNRV9QT1NUR1JFU19DSEFOR0VTX0xJU1RFTl9FVkVOVCwgUkVBTFRJTUVfU1VCU0NSSUJFX1NUQVRFUywgUkVBTFRJTUVfQ0hBTk5FTF9TVEFURVMsIH0gZnJvbSAnLi9SZWFsdGltZUNoYW5uZWwnO1xuaW1wb3J0IFJlYWx0aW1lUHJlc2VuY2UsIHsgUkVBTFRJTUVfUFJFU0VOQ0VfTElTVEVOX0VWRU5UUywgfSBmcm9tICcuL1JlYWx0aW1lUHJlc2VuY2UnO1xuaW1wb3J0IFdlYlNvY2tldEZhY3RvcnkgZnJvbSAnLi9saWIvd2Vic29ja2V0LWZhY3RvcnknO1xuZXhwb3J0IHsgUmVhbHRpbWVQcmVzZW5jZSwgUmVhbHRpbWVDaGFubmVsLCBSZWFsdGltZUNsaWVudCwgUkVBTFRJTUVfTElTVEVOX1RZUEVTLCBSRUFMVElNRV9QT1NUR1JFU19DSEFOR0VTX0xJU1RFTl9FVkVOVCwgUkVBTFRJTUVfUFJFU0VOQ0VfTElTVEVOX0VWRU5UUywgUkVBTFRJTUVfU1VCU0NSSUJFX1NUQVRFUywgUkVBTFRJTUVfQ0hBTk5FTF9TVEFURVMsIFdlYlNvY2tldEZhY3RvcnksIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@supabase/realtime-js/dist/module/index.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/realtime-js/dist/module/lib/constants.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/lib/constants.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CHANNEL_EVENTS: function() { return /* binding */ CHANNEL_EVENTS; },\n/* harmony export */   CHANNEL_STATES: function() { return /* binding */ CHANNEL_STATES; },\n/* harmony export */   CONNECTION_STATE: function() { return /* binding */ CONNECTION_STATE; },\n/* harmony export */   DEFAULT_TIMEOUT: function() { return /* binding */ DEFAULT_TIMEOUT; },\n/* harmony export */   DEFAULT_VERSION: function() { return /* binding */ DEFAULT_VERSION; },\n/* harmony export */   MAX_PUSH_BUFFER_SIZE: function() { return /* binding */ MAX_PUSH_BUFFER_SIZE; },\n/* harmony export */   SOCKET_STATES: function() { return /* binding */ SOCKET_STATES; },\n/* harmony export */   TRANSPORTS: function() { return /* binding */ TRANSPORTS; },\n/* harmony export */   VERSION: function() { return /* binding */ VERSION; },\n/* harmony export */   VSN: function() { return /* binding */ VSN; },\n/* harmony export */   WS_CLOSE_NORMAL: function() { return /* binding */ WS_CLOSE_NORMAL; }\n/* harmony export */ });\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version */ \"./node_modules/@supabase/realtime-js/dist/module/lib/version.js\");\n\nconst DEFAULT_VERSION = `realtime-js/${_version__WEBPACK_IMPORTED_MODULE_0__.version}`;\nconst VSN = '1.0.0';\nconst VERSION = _version__WEBPACK_IMPORTED_MODULE_0__.version;\nconst DEFAULT_TIMEOUT = 10000;\nconst WS_CLOSE_NORMAL = 1000;\nconst MAX_PUSH_BUFFER_SIZE = 100;\nvar SOCKET_STATES;\n(function (SOCKET_STATES) {\n    SOCKET_STATES[SOCKET_STATES[\"connecting\"] = 0] = \"connecting\";\n    SOCKET_STATES[SOCKET_STATES[\"open\"] = 1] = \"open\";\n    SOCKET_STATES[SOCKET_STATES[\"closing\"] = 2] = \"closing\";\n    SOCKET_STATES[SOCKET_STATES[\"closed\"] = 3] = \"closed\";\n})(SOCKET_STATES || (SOCKET_STATES = {}));\nvar CHANNEL_STATES;\n(function (CHANNEL_STATES) {\n    CHANNEL_STATES[\"closed\"] = \"closed\";\n    CHANNEL_STATES[\"errored\"] = \"errored\";\n    CHANNEL_STATES[\"joined\"] = \"joined\";\n    CHANNEL_STATES[\"joining\"] = \"joining\";\n    CHANNEL_STATES[\"leaving\"] = \"leaving\";\n})(CHANNEL_STATES || (CHANNEL_STATES = {}));\nvar CHANNEL_EVENTS;\n(function (CHANNEL_EVENTS) {\n    CHANNEL_EVENTS[\"close\"] = \"phx_close\";\n    CHANNEL_EVENTS[\"error\"] = \"phx_error\";\n    CHANNEL_EVENTS[\"join\"] = \"phx_join\";\n    CHANNEL_EVENTS[\"reply\"] = \"phx_reply\";\n    CHANNEL_EVENTS[\"leave\"] = \"phx_leave\";\n    CHANNEL_EVENTS[\"access_token\"] = \"access_token\";\n})(CHANNEL_EVENTS || (CHANNEL_EVENTS = {}));\nvar TRANSPORTS;\n(function (TRANSPORTS) {\n    TRANSPORTS[\"websocket\"] = \"websocket\";\n})(TRANSPORTS || (TRANSPORTS = {}));\nvar CONNECTION_STATE;\n(function (CONNECTION_STATE) {\n    CONNECTION_STATE[\"Connecting\"] = \"connecting\";\n    CONNECTION_STATE[\"Open\"] = \"open\";\n    CONNECTION_STATE[\"Closing\"] = \"closing\";\n    CONNECTION_STATE[\"Closed\"] = \"closed\";\n})(CONNECTION_STATE || (CONNECTION_STATE = {}));\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3JlYWx0aW1lLWpzL2Rpc3QvbW9kdWxlL2xpYi9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQW9DO0FBQzdCLHVDQUF1Qyw2Q0FBTyxDQUFDO0FBQy9DO0FBQ0EsZ0JBQWdCLDZDQUFPO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsc0NBQXNDO0FBQ2hDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx3Q0FBd0M7QUFDbEM7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsd0NBQXdDO0FBQ2xDO0FBQ1A7QUFDQTtBQUNBLENBQUMsZ0NBQWdDO0FBQzFCO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNENBQTRDO0FBQzdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcmVhbHRpbWUtanMvZGlzdC9tb2R1bGUvbGliL2NvbnN0YW50cy5qcz9hYzEzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHZlcnNpb24gfSBmcm9tICcuL3ZlcnNpb24nO1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfVkVSU0lPTiA9IGByZWFsdGltZS1qcy8ke3ZlcnNpb259YDtcbmV4cG9ydCBjb25zdCBWU04gPSAnMS4wLjAnO1xuZXhwb3J0IGNvbnN0IFZFUlNJT04gPSB2ZXJzaW9uO1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfVElNRU9VVCA9IDEwMDAwO1xuZXhwb3J0IGNvbnN0IFdTX0NMT1NFX05PUk1BTCA9IDEwMDA7XG5leHBvcnQgY29uc3QgTUFYX1BVU0hfQlVGRkVSX1NJWkUgPSAxMDA7XG5leHBvcnQgdmFyIFNPQ0tFVF9TVEFURVM7XG4oZnVuY3Rpb24gKFNPQ0tFVF9TVEFURVMpIHtcbiAgICBTT0NLRVRfU1RBVEVTW1NPQ0tFVF9TVEFURVNbXCJjb25uZWN0aW5nXCJdID0gMF0gPSBcImNvbm5lY3RpbmdcIjtcbiAgICBTT0NLRVRfU1RBVEVTW1NPQ0tFVF9TVEFURVNbXCJvcGVuXCJdID0gMV0gPSBcIm9wZW5cIjtcbiAgICBTT0NLRVRfU1RBVEVTW1NPQ0tFVF9TVEFURVNbXCJjbG9zaW5nXCJdID0gMl0gPSBcImNsb3NpbmdcIjtcbiAgICBTT0NLRVRfU1RBVEVTW1NPQ0tFVF9TVEFURVNbXCJjbG9zZWRcIl0gPSAzXSA9IFwiY2xvc2VkXCI7XG59KShTT0NLRVRfU1RBVEVTIHx8IChTT0NLRVRfU1RBVEVTID0ge30pKTtcbmV4cG9ydCB2YXIgQ0hBTk5FTF9TVEFURVM7XG4oZnVuY3Rpb24gKENIQU5ORUxfU1RBVEVTKSB7XG4gICAgQ0hBTk5FTF9TVEFURVNbXCJjbG9zZWRcIl0gPSBcImNsb3NlZFwiO1xuICAgIENIQU5ORUxfU1RBVEVTW1wiZXJyb3JlZFwiXSA9IFwiZXJyb3JlZFwiO1xuICAgIENIQU5ORUxfU1RBVEVTW1wiam9pbmVkXCJdID0gXCJqb2luZWRcIjtcbiAgICBDSEFOTkVMX1NUQVRFU1tcImpvaW5pbmdcIl0gPSBcImpvaW5pbmdcIjtcbiAgICBDSEFOTkVMX1NUQVRFU1tcImxlYXZpbmdcIl0gPSBcImxlYXZpbmdcIjtcbn0pKENIQU5ORUxfU1RBVEVTIHx8IChDSEFOTkVMX1NUQVRFUyA9IHt9KSk7XG5leHBvcnQgdmFyIENIQU5ORUxfRVZFTlRTO1xuKGZ1bmN0aW9uIChDSEFOTkVMX0VWRU5UUykge1xuICAgIENIQU5ORUxfRVZFTlRTW1wiY2xvc2VcIl0gPSBcInBoeF9jbG9zZVwiO1xuICAgIENIQU5ORUxfRVZFTlRTW1wiZXJyb3JcIl0gPSBcInBoeF9lcnJvclwiO1xuICAgIENIQU5ORUxfRVZFTlRTW1wiam9pblwiXSA9IFwicGh4X2pvaW5cIjtcbiAgICBDSEFOTkVMX0VWRU5UU1tcInJlcGx5XCJdID0gXCJwaHhfcmVwbHlcIjtcbiAgICBDSEFOTkVMX0VWRU5UU1tcImxlYXZlXCJdID0gXCJwaHhfbGVhdmVcIjtcbiAgICBDSEFOTkVMX0VWRU5UU1tcImFjY2Vzc190b2tlblwiXSA9IFwiYWNjZXNzX3Rva2VuXCI7XG59KShDSEFOTkVMX0VWRU5UUyB8fCAoQ0hBTk5FTF9FVkVOVFMgPSB7fSkpO1xuZXhwb3J0IHZhciBUUkFOU1BPUlRTO1xuKGZ1bmN0aW9uIChUUkFOU1BPUlRTKSB7XG4gICAgVFJBTlNQT1JUU1tcIndlYnNvY2tldFwiXSA9IFwid2Vic29ja2V0XCI7XG59KShUUkFOU1BPUlRTIHx8IChUUkFOU1BPUlRTID0ge30pKTtcbmV4cG9ydCB2YXIgQ09OTkVDVElPTl9TVEFURTtcbihmdW5jdGlvbiAoQ09OTkVDVElPTl9TVEFURSkge1xuICAgIENPTk5FQ1RJT05fU1RBVEVbXCJDb25uZWN0aW5nXCJdID0gXCJjb25uZWN0aW5nXCI7XG4gICAgQ09OTkVDVElPTl9TVEFURVtcIk9wZW5cIl0gPSBcIm9wZW5cIjtcbiAgICBDT05ORUNUSU9OX1NUQVRFW1wiQ2xvc2luZ1wiXSA9IFwiY2xvc2luZ1wiO1xuICAgIENPTk5FQ1RJT05fU1RBVEVbXCJDbG9zZWRcIl0gPSBcImNsb3NlZFwiO1xufSkoQ09OTkVDVElPTl9TVEFURSB8fCAoQ09OTkVDVElPTl9TVEFURSA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdGFudHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@supabase/realtime-js/dist/module/lib/constants.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/realtime-js/dist/module/lib/push.js":
/*!********************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/lib/push.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Push; }\n/* harmony export */ });\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/constants */ \"./node_modules/@supabase/realtime-js/dist/module/lib/constants.js\");\n\nclass Push {\n    /**\n     * Initializes the Push\n     *\n     * @param channel The Channel\n     * @param event The event, for example `\"phx_join\"`\n     * @param payload The payload, for example `{user_id: 123}`\n     * @param timeout The push timeout in milliseconds\n     */\n    constructor(channel, event, payload = {}, timeout = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_TIMEOUT) {\n        this.channel = channel;\n        this.event = event;\n        this.payload = payload;\n        this.timeout = timeout;\n        this.sent = false;\n        this.timeoutTimer = undefined;\n        this.ref = '';\n        this.receivedResp = null;\n        this.recHooks = [];\n        this.refEvent = null;\n    }\n    resend(timeout) {\n        this.timeout = timeout;\n        this._cancelRefEvent();\n        this.ref = '';\n        this.refEvent = null;\n        this.receivedResp = null;\n        this.sent = false;\n        this.send();\n    }\n    send() {\n        if (this._hasReceived('timeout')) {\n            return;\n        }\n        this.startTimeout();\n        this.sent = true;\n        this.channel.socket.push({\n            topic: this.channel.topic,\n            event: this.event,\n            payload: this.payload,\n            ref: this.ref,\n            join_ref: this.channel._joinRef(),\n        });\n    }\n    updatePayload(payload) {\n        this.payload = Object.assign(Object.assign({}, this.payload), payload);\n    }\n    receive(status, callback) {\n        var _a;\n        if (this._hasReceived(status)) {\n            callback((_a = this.receivedResp) === null || _a === void 0 ? void 0 : _a.response);\n        }\n        this.recHooks.push({ status, callback });\n        return this;\n    }\n    startTimeout() {\n        if (this.timeoutTimer) {\n            return;\n        }\n        this.ref = this.channel.socket._makeRef();\n        this.refEvent = this.channel._replyEventName(this.ref);\n        const callback = (payload) => {\n            this._cancelRefEvent();\n            this._cancelTimeout();\n            this.receivedResp = payload;\n            this._matchReceive(payload);\n        };\n        this.channel._on(this.refEvent, {}, callback);\n        this.timeoutTimer = setTimeout(() => {\n            this.trigger('timeout', {});\n        }, this.timeout);\n    }\n    trigger(status, response) {\n        if (this.refEvent)\n            this.channel._trigger(this.refEvent, { status, response });\n    }\n    destroy() {\n        this._cancelRefEvent();\n        this._cancelTimeout();\n    }\n    _cancelRefEvent() {\n        if (!this.refEvent) {\n            return;\n        }\n        this.channel._off(this.refEvent, {});\n    }\n    _cancelTimeout() {\n        clearTimeout(this.timeoutTimer);\n        this.timeoutTimer = undefined;\n    }\n    _matchReceive({ status, response, }) {\n        this.recHooks\n            .filter((h) => h.status === status)\n            .forEach((h) => h.callback(response));\n    }\n    _hasReceived(status) {\n        return this.receivedResp && this.receivedResp.status === status;\n    }\n}\n//# sourceMappingURL=push.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3JlYWx0aW1lLWpzL2Rpc3QvbW9kdWxlL2xpYi9wdXNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW1EO0FBQ3BDO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCxhQUFhO0FBQzlEO0FBQ0E7QUFDQSw0Q0FBNEMsWUFBWSwyREFBZTtBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxxREFBcUQ7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLGtCQUFrQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDO0FBQzFDO0FBQ0Esc0NBQXNDO0FBQ3RDLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsa0JBQWtCO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLG1CQUFtQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9yZWFsdGltZS1qcy9kaXN0L21vZHVsZS9saWIvcHVzaC5qcz80NDhmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERFRkFVTFRfVElNRU9VVCB9IGZyb20gJy4uL2xpYi9jb25zdGFudHMnO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUHVzaCB7XG4gICAgLyoqXG4gICAgICogSW5pdGlhbGl6ZXMgdGhlIFB1c2hcbiAgICAgKlxuICAgICAqIEBwYXJhbSBjaGFubmVsIFRoZSBDaGFubmVsXG4gICAgICogQHBhcmFtIGV2ZW50IFRoZSBldmVudCwgZm9yIGV4YW1wbGUgYFwicGh4X2pvaW5cImBcbiAgICAgKiBAcGFyYW0gcGF5bG9hZCBUaGUgcGF5bG9hZCwgZm9yIGV4YW1wbGUgYHt1c2VyX2lkOiAxMjN9YFxuICAgICAqIEBwYXJhbSB0aW1lb3V0IFRoZSBwdXNoIHRpbWVvdXQgaW4gbWlsbGlzZWNvbmRzXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY2hhbm5lbCwgZXZlbnQsIHBheWxvYWQgPSB7fSwgdGltZW91dCA9IERFRkFVTFRfVElNRU9VVCkge1xuICAgICAgICB0aGlzLmNoYW5uZWwgPSBjaGFubmVsO1xuICAgICAgICB0aGlzLmV2ZW50ID0gZXZlbnQ7XG4gICAgICAgIHRoaXMucGF5bG9hZCA9IHBheWxvYWQ7XG4gICAgICAgIHRoaXMudGltZW91dCA9IHRpbWVvdXQ7XG4gICAgICAgIHRoaXMuc2VudCA9IGZhbHNlO1xuICAgICAgICB0aGlzLnRpbWVvdXRUaW1lciA9IHVuZGVmaW5lZDtcbiAgICAgICAgdGhpcy5yZWYgPSAnJztcbiAgICAgICAgdGhpcy5yZWNlaXZlZFJlc3AgPSBudWxsO1xuICAgICAgICB0aGlzLnJlY0hvb2tzID0gW107XG4gICAgICAgIHRoaXMucmVmRXZlbnQgPSBudWxsO1xuICAgIH1cbiAgICByZXNlbmQodGltZW91dCkge1xuICAgICAgICB0aGlzLnRpbWVvdXQgPSB0aW1lb3V0O1xuICAgICAgICB0aGlzLl9jYW5jZWxSZWZFdmVudCgpO1xuICAgICAgICB0aGlzLnJlZiA9ICcnO1xuICAgICAgICB0aGlzLnJlZkV2ZW50ID0gbnVsbDtcbiAgICAgICAgdGhpcy5yZWNlaXZlZFJlc3AgPSBudWxsO1xuICAgICAgICB0aGlzLnNlbnQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5zZW5kKCk7XG4gICAgfVxuICAgIHNlbmQoKSB7XG4gICAgICAgIGlmICh0aGlzLl9oYXNSZWNlaXZlZCgndGltZW91dCcpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zdGFydFRpbWVvdXQoKTtcbiAgICAgICAgdGhpcy5zZW50ID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5jaGFubmVsLnNvY2tldC5wdXNoKHtcbiAgICAgICAgICAgIHRvcGljOiB0aGlzLmNoYW5uZWwudG9waWMsXG4gICAgICAgICAgICBldmVudDogdGhpcy5ldmVudCxcbiAgICAgICAgICAgIHBheWxvYWQ6IHRoaXMucGF5bG9hZCxcbiAgICAgICAgICAgIHJlZjogdGhpcy5yZWYsXG4gICAgICAgICAgICBqb2luX3JlZjogdGhpcy5jaGFubmVsLl9qb2luUmVmKCksXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICB1cGRhdGVQYXlsb2FkKHBheWxvYWQpIHtcbiAgICAgICAgdGhpcy5wYXlsb2FkID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCB0aGlzLnBheWxvYWQpLCBwYXlsb2FkKTtcbiAgICB9XG4gICAgcmVjZWl2ZShzdGF0dXMsIGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgaWYgKHRoaXMuX2hhc1JlY2VpdmVkKHN0YXR1cykpIHtcbiAgICAgICAgICAgIGNhbGxiYWNrKChfYSA9IHRoaXMucmVjZWl2ZWRSZXNwKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EucmVzcG9uc2UpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucmVjSG9va3MucHVzaCh7IHN0YXR1cywgY2FsbGJhY2sgfSk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBzdGFydFRpbWVvdXQoKSB7XG4gICAgICAgIGlmICh0aGlzLnRpbWVvdXRUaW1lcikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucmVmID0gdGhpcy5jaGFubmVsLnNvY2tldC5fbWFrZVJlZigpO1xuICAgICAgICB0aGlzLnJlZkV2ZW50ID0gdGhpcy5jaGFubmVsLl9yZXBseUV2ZW50TmFtZSh0aGlzLnJlZik7XG4gICAgICAgIGNvbnN0IGNhbGxiYWNrID0gKHBheWxvYWQpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX2NhbmNlbFJlZkV2ZW50KCk7XG4gICAgICAgICAgICB0aGlzLl9jYW5jZWxUaW1lb3V0KCk7XG4gICAgICAgICAgICB0aGlzLnJlY2VpdmVkUmVzcCA9IHBheWxvYWQ7XG4gICAgICAgICAgICB0aGlzLl9tYXRjaFJlY2VpdmUocGF5bG9hZCk7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuY2hhbm5lbC5fb24odGhpcy5yZWZFdmVudCwge30sIGNhbGxiYWNrKTtcbiAgICAgICAgdGhpcy50aW1lb3V0VGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMudHJpZ2dlcigndGltZW91dCcsIHt9KTtcbiAgICAgICAgfSwgdGhpcy50aW1lb3V0KTtcbiAgICB9XG4gICAgdHJpZ2dlcihzdGF0dXMsIHJlc3BvbnNlKSB7XG4gICAgICAgIGlmICh0aGlzLnJlZkV2ZW50KVxuICAgICAgICAgICAgdGhpcy5jaGFubmVsLl90cmlnZ2VyKHRoaXMucmVmRXZlbnQsIHsgc3RhdHVzLCByZXNwb25zZSB9KTtcbiAgICB9XG4gICAgZGVzdHJveSgpIHtcbiAgICAgICAgdGhpcy5fY2FuY2VsUmVmRXZlbnQoKTtcbiAgICAgICAgdGhpcy5fY2FuY2VsVGltZW91dCgpO1xuICAgIH1cbiAgICBfY2FuY2VsUmVmRXZlbnQoKSB7XG4gICAgICAgIGlmICghdGhpcy5yZWZFdmVudCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuY2hhbm5lbC5fb2ZmKHRoaXMucmVmRXZlbnQsIHt9KTtcbiAgICB9XG4gICAgX2NhbmNlbFRpbWVvdXQoKSB7XG4gICAgICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVvdXRUaW1lcik7XG4gICAgICAgIHRoaXMudGltZW91dFRpbWVyID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBfbWF0Y2hSZWNlaXZlKHsgc3RhdHVzLCByZXNwb25zZSwgfSkge1xuICAgICAgICB0aGlzLnJlY0hvb2tzXG4gICAgICAgICAgICAuZmlsdGVyKChoKSA9PiBoLnN0YXR1cyA9PT0gc3RhdHVzKVxuICAgICAgICAgICAgLmZvckVhY2goKGgpID0+IGguY2FsbGJhY2socmVzcG9uc2UpKTtcbiAgICB9XG4gICAgX2hhc1JlY2VpdmVkKHN0YXR1cykge1xuICAgICAgICByZXR1cm4gdGhpcy5yZWNlaXZlZFJlc3AgJiYgdGhpcy5yZWNlaXZlZFJlc3Auc3RhdHVzID09PSBzdGF0dXM7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHVzaC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@supabase/realtime-js/dist/module/lib/push.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/realtime-js/dist/module/lib/serializer.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/lib/serializer.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Serializer; }\n/* harmony export */ });\n// This file draws heavily from https://github.com/phoenixframework/phoenix/commit/cf098e9cf7a44ee6479d31d911a97d3c7430c6fe\n// License: https://github.com/phoenixframework/phoenix/blob/master/LICENSE.md\nclass Serializer {\n    constructor() {\n        this.HEADER_LENGTH = 1;\n    }\n    decode(rawPayload, callback) {\n        if (rawPayload.constructor === ArrayBuffer) {\n            return callback(this._binaryDecode(rawPayload));\n        }\n        if (typeof rawPayload === 'string') {\n            return callback(JSON.parse(rawPayload));\n        }\n        return callback({});\n    }\n    _binaryDecode(buffer) {\n        const view = new DataView(buffer);\n        const decoder = new TextDecoder();\n        return this._decodeBroadcast(buffer, view, decoder);\n    }\n    _decodeBroadcast(buffer, view, decoder) {\n        const topicSize = view.getUint8(1);\n        const eventSize = view.getUint8(2);\n        let offset = this.HEADER_LENGTH + 2;\n        const topic = decoder.decode(buffer.slice(offset, offset + topicSize));\n        offset = offset + topicSize;\n        const event = decoder.decode(buffer.slice(offset, offset + eventSize));\n        offset = offset + eventSize;\n        const data = JSON.parse(decoder.decode(buffer.slice(offset, buffer.byteLength)));\n        return { ref: null, topic: topic, event: event, payload: data };\n    }\n}\n//# sourceMappingURL=serializer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3JlYWx0aW1lLWpzL2Rpc3QvbW9kdWxlL2xpYi9zZXJpYWxpemVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ2U7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcmVhbHRpbWUtanMvZGlzdC9tb2R1bGUvbGliL3NlcmlhbGl6ZXIuanM/ODFkYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGZpbGUgZHJhd3MgaGVhdmlseSBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9waG9lbml4ZnJhbWV3b3JrL3Bob2VuaXgvY29tbWl0L2NmMDk4ZTljZjdhNDRlZTY0NzlkMzFkOTExYTk3ZDNjNzQzMGM2ZmVcbi8vIExpY2Vuc2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9waG9lbml4ZnJhbWV3b3JrL3Bob2VuaXgvYmxvYi9tYXN0ZXIvTElDRU5TRS5tZFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VyaWFsaXplciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuSEVBREVSX0xFTkdUSCA9IDE7XG4gICAgfVxuICAgIGRlY29kZShyYXdQYXlsb2FkLCBjYWxsYmFjaykge1xuICAgICAgICBpZiAocmF3UGF5bG9hZC5jb25zdHJ1Y3RvciA9PT0gQXJyYXlCdWZmZXIpIHtcbiAgICAgICAgICAgIHJldHVybiBjYWxsYmFjayh0aGlzLl9iaW5hcnlEZWNvZGUocmF3UGF5bG9hZCkpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2YgcmF3UGF5bG9hZCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHJldHVybiBjYWxsYmFjayhKU09OLnBhcnNlKHJhd1BheWxvYWQpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gY2FsbGJhY2soe30pO1xuICAgIH1cbiAgICBfYmluYXJ5RGVjb2RlKGJ1ZmZlcikge1xuICAgICAgICBjb25zdCB2aWV3ID0gbmV3IERhdGFWaWV3KGJ1ZmZlcik7XG4gICAgICAgIGNvbnN0IGRlY29kZXIgPSBuZXcgVGV4dERlY29kZXIoKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2RlY29kZUJyb2FkY2FzdChidWZmZXIsIHZpZXcsIGRlY29kZXIpO1xuICAgIH1cbiAgICBfZGVjb2RlQnJvYWRjYXN0KGJ1ZmZlciwgdmlldywgZGVjb2Rlcikge1xuICAgICAgICBjb25zdCB0b3BpY1NpemUgPSB2aWV3LmdldFVpbnQ4KDEpO1xuICAgICAgICBjb25zdCBldmVudFNpemUgPSB2aWV3LmdldFVpbnQ4KDIpO1xuICAgICAgICBsZXQgb2Zmc2V0ID0gdGhpcy5IRUFERVJfTEVOR1RIICsgMjtcbiAgICAgICAgY29uc3QgdG9waWMgPSBkZWNvZGVyLmRlY29kZShidWZmZXIuc2xpY2Uob2Zmc2V0LCBvZmZzZXQgKyB0b3BpY1NpemUpKTtcbiAgICAgICAgb2Zmc2V0ID0gb2Zmc2V0ICsgdG9waWNTaXplO1xuICAgICAgICBjb25zdCBldmVudCA9IGRlY29kZXIuZGVjb2RlKGJ1ZmZlci5zbGljZShvZmZzZXQsIG9mZnNldCArIGV2ZW50U2l6ZSkpO1xuICAgICAgICBvZmZzZXQgPSBvZmZzZXQgKyBldmVudFNpemU7XG4gICAgICAgIGNvbnN0IGRhdGEgPSBKU09OLnBhcnNlKGRlY29kZXIuZGVjb2RlKGJ1ZmZlci5zbGljZShvZmZzZXQsIGJ1ZmZlci5ieXRlTGVuZ3RoKSkpO1xuICAgICAgICByZXR1cm4geyByZWY6IG51bGwsIHRvcGljOiB0b3BpYywgZXZlbnQ6IGV2ZW50LCBwYXlsb2FkOiBkYXRhIH07XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VyaWFsaXplci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@supabase/realtime-js/dist/module/lib/serializer.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/realtime-js/dist/module/lib/timer.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/lib/timer.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Timer; }\n/* harmony export */ });\n/**\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\n *\n * @example\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *      return [1000, 5000, 10000][tries - 1] || 10000\n *    })\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n *    reconnectTimer.scheduleTimeout() // fires after 5000\n *    reconnectTimer.reset()\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n */\nclass Timer {\n    constructor(callback, timerCalc) {\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n        this.timer = undefined;\n        this.tries = 0;\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n    }\n    reset() {\n        this.tries = 0;\n        clearTimeout(this.timer);\n        this.timer = undefined;\n    }\n    // Cancels any previous scheduleTimeout and schedules callback\n    scheduleTimeout() {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(() => {\n            this.tries = this.tries + 1;\n            this.callback();\n        }, this.timerCalc(this.tries + 1));\n    }\n}\n//# sourceMappingURL=timer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3JlYWx0aW1lLWpzL2Rpc3QvbW9kdWxlL2xpYi90aW1lci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3JlYWx0aW1lLWpzL2Rpc3QvbW9kdWxlL2xpYi90aW1lci5qcz8xMTVlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlcyBhIHRpbWVyIHRoYXQgYWNjZXB0cyBhIGB0aW1lckNhbGNgIGZ1bmN0aW9uIHRvIHBlcmZvcm0gY2FsY3VsYXRlZCB0aW1lb3V0IHJldHJpZXMsIHN1Y2ggYXMgZXhwb25lbnRpYWwgYmFja29mZi5cbiAqXG4gKiBAZXhhbXBsZVxuICogICAgbGV0IHJlY29ubmVjdFRpbWVyID0gbmV3IFRpbWVyKCgpID0+IHRoaXMuY29ubmVjdCgpLCBmdW5jdGlvbih0cmllcyl7XG4gKiAgICAgIHJldHVybiBbMTAwMCwgNTAwMCwgMTAwMDBdW3RyaWVzIC0gMV0gfHwgMTAwMDBcbiAqICAgIH0pXG4gKiAgICByZWNvbm5lY3RUaW1lci5zY2hlZHVsZVRpbWVvdXQoKSAvLyBmaXJlcyBhZnRlciAxMDAwXG4gKiAgICByZWNvbm5lY3RUaW1lci5zY2hlZHVsZVRpbWVvdXQoKSAvLyBmaXJlcyBhZnRlciA1MDAwXG4gKiAgICByZWNvbm5lY3RUaW1lci5yZXNldCgpXG4gKiAgICByZWNvbm5lY3RUaW1lci5zY2hlZHVsZVRpbWVvdXQoKSAvLyBmaXJlcyBhZnRlciAxMDAwXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRpbWVyIHtcbiAgICBjb25zdHJ1Y3RvcihjYWxsYmFjaywgdGltZXJDYWxjKSB7XG4gICAgICAgIHRoaXMuY2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgICAgICAgdGhpcy50aW1lckNhbGMgPSB0aW1lckNhbGM7XG4gICAgICAgIHRoaXMudGltZXIgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMudHJpZXMgPSAwO1xuICAgICAgICB0aGlzLmNhbGxiYWNrID0gY2FsbGJhY2s7XG4gICAgICAgIHRoaXMudGltZXJDYWxjID0gdGltZXJDYWxjO1xuICAgIH1cbiAgICByZXNldCgpIHtcbiAgICAgICAgdGhpcy50cmllcyA9IDA7XG4gICAgICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVyKTtcbiAgICAgICAgdGhpcy50aW1lciA9IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgLy8gQ2FuY2VscyBhbnkgcHJldmlvdXMgc2NoZWR1bGVUaW1lb3V0IGFuZCBzY2hlZHVsZXMgY2FsbGJhY2tcbiAgICBzY2hlZHVsZVRpbWVvdXQoKSB7XG4gICAgICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVyKTtcbiAgICAgICAgdGhpcy50aW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy50cmllcyA9IHRoaXMudHJpZXMgKyAxO1xuICAgICAgICAgICAgdGhpcy5jYWxsYmFjaygpO1xuICAgICAgICB9LCB0aGlzLnRpbWVyQ2FsYyh0aGlzLnRyaWVzICsgMSkpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRpbWVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@supabase/realtime-js/dist/module/lib/timer.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/realtime-js/dist/module/lib/transformers.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/lib/transformers.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PostgresTypes: function() { return /* binding */ PostgresTypes; },\n/* harmony export */   convertCell: function() { return /* binding */ convertCell; },\n/* harmony export */   convertChangeData: function() { return /* binding */ convertChangeData; },\n/* harmony export */   convertColumn: function() { return /* binding */ convertColumn; },\n/* harmony export */   httpEndpointURL: function() { return /* binding */ httpEndpointURL; },\n/* harmony export */   toArray: function() { return /* binding */ toArray; },\n/* harmony export */   toBoolean: function() { return /* binding */ toBoolean; },\n/* harmony export */   toJson: function() { return /* binding */ toJson; },\n/* harmony export */   toNumber: function() { return /* binding */ toNumber; },\n/* harmony export */   toTimestampString: function() { return /* binding */ toTimestampString; }\n/* harmony export */ });\n/**\n * Helpers to convert the change Payload into native JS types.\n */\n// Adapted from epgsql (src/epgsql_binary.erl), this module licensed under\n// 3-clause BSD found here: https://raw.githubusercontent.com/epgsql/epgsql/devel/LICENSE\nvar PostgresTypes;\n(function (PostgresTypes) {\n    PostgresTypes[\"abstime\"] = \"abstime\";\n    PostgresTypes[\"bool\"] = \"bool\";\n    PostgresTypes[\"date\"] = \"date\";\n    PostgresTypes[\"daterange\"] = \"daterange\";\n    PostgresTypes[\"float4\"] = \"float4\";\n    PostgresTypes[\"float8\"] = \"float8\";\n    PostgresTypes[\"int2\"] = \"int2\";\n    PostgresTypes[\"int4\"] = \"int4\";\n    PostgresTypes[\"int4range\"] = \"int4range\";\n    PostgresTypes[\"int8\"] = \"int8\";\n    PostgresTypes[\"int8range\"] = \"int8range\";\n    PostgresTypes[\"json\"] = \"json\";\n    PostgresTypes[\"jsonb\"] = \"jsonb\";\n    PostgresTypes[\"money\"] = \"money\";\n    PostgresTypes[\"numeric\"] = \"numeric\";\n    PostgresTypes[\"oid\"] = \"oid\";\n    PostgresTypes[\"reltime\"] = \"reltime\";\n    PostgresTypes[\"text\"] = \"text\";\n    PostgresTypes[\"time\"] = \"time\";\n    PostgresTypes[\"timestamp\"] = \"timestamp\";\n    PostgresTypes[\"timestamptz\"] = \"timestamptz\";\n    PostgresTypes[\"timetz\"] = \"timetz\";\n    PostgresTypes[\"tsrange\"] = \"tsrange\";\n    PostgresTypes[\"tstzrange\"] = \"tstzrange\";\n})(PostgresTypes || (PostgresTypes = {}));\n/**\n * Takes an array of columns and an object of string values then converts each string value\n * to its mapped type.\n *\n * @param {{name: String, type: String}[]} columns\n * @param {Object} record\n * @param {Object} options The map of various options that can be applied to the mapper\n * @param {Array} options.skipTypes The array of types that should not be converted\n *\n * @example convertChangeData([{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age:'33'}, {})\n * //=>{ first_name: 'Paul', age: 33 }\n */\nconst convertChangeData = (columns, record, options = {}) => {\n    var _a;\n    const skipTypes = (_a = options.skipTypes) !== null && _a !== void 0 ? _a : [];\n    return Object.keys(record).reduce((acc, rec_key) => {\n        acc[rec_key] = convertColumn(rec_key, columns, record, skipTypes);\n        return acc;\n    }, {});\n};\n/**\n * Converts the value of an individual column.\n *\n * @param {String} columnName The column that you want to convert\n * @param {{name: String, type: String}[]} columns All of the columns\n * @param {Object} record The map of string values\n * @param {Array} skipTypes An array of types that should not be converted\n * @return {object} Useless information\n *\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, [])\n * //=> 33\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, ['int4'])\n * //=> \"33\"\n */\nconst convertColumn = (columnName, columns, record, skipTypes) => {\n    const column = columns.find((x) => x.name === columnName);\n    const colType = column === null || column === void 0 ? void 0 : column.type;\n    const value = record[columnName];\n    if (colType && !skipTypes.includes(colType)) {\n        return convertCell(colType, value);\n    }\n    return noop(value);\n};\n/**\n * If the value of the cell is `null`, returns null.\n * Otherwise converts the string value to the correct type.\n * @param {String} type A postgres column type\n * @param {String} value The cell value\n *\n * @example convertCell('bool', 't')\n * //=> true\n * @example convertCell('int8', '10')\n * //=> 10\n * @example convertCell('_int4', '{1,2,3,4}')\n * //=> [1,2,3,4]\n */\nconst convertCell = (type, value) => {\n    // if data type is an array\n    if (type.charAt(0) === '_') {\n        const dataType = type.slice(1, type.length);\n        return toArray(value, dataType);\n    }\n    // If not null, convert to correct type.\n    switch (type) {\n        case PostgresTypes.bool:\n            return toBoolean(value);\n        case PostgresTypes.float4:\n        case PostgresTypes.float8:\n        case PostgresTypes.int2:\n        case PostgresTypes.int4:\n        case PostgresTypes.int8:\n        case PostgresTypes.numeric:\n        case PostgresTypes.oid:\n            return toNumber(value);\n        case PostgresTypes.json:\n        case PostgresTypes.jsonb:\n            return toJson(value);\n        case PostgresTypes.timestamp:\n            return toTimestampString(value); // Format to be consistent with PostgREST\n        case PostgresTypes.abstime: // To allow users to cast it based on Timezone\n        case PostgresTypes.date: // To allow users to cast it based on Timezone\n        case PostgresTypes.daterange:\n        case PostgresTypes.int4range:\n        case PostgresTypes.int8range:\n        case PostgresTypes.money:\n        case PostgresTypes.reltime: // To allow users to cast it based on Timezone\n        case PostgresTypes.text:\n        case PostgresTypes.time: // To allow users to cast it based on Timezone\n        case PostgresTypes.timestamptz: // To allow users to cast it based on Timezone\n        case PostgresTypes.timetz: // To allow users to cast it based on Timezone\n        case PostgresTypes.tsrange:\n        case PostgresTypes.tstzrange:\n            return noop(value);\n        default:\n            // Return the value for remaining types\n            return noop(value);\n    }\n};\nconst noop = (value) => {\n    return value;\n};\nconst toBoolean = (value) => {\n    switch (value) {\n        case 't':\n            return true;\n        case 'f':\n            return false;\n        default:\n            return value;\n    }\n};\nconst toNumber = (value) => {\n    if (typeof value === 'string') {\n        const parsedValue = parseFloat(value);\n        if (!Number.isNaN(parsedValue)) {\n            return parsedValue;\n        }\n    }\n    return value;\n};\nconst toJson = (value) => {\n    if (typeof value === 'string') {\n        try {\n            return JSON.parse(value);\n        }\n        catch (error) {\n            console.log(`JSON parse error: ${error}`);\n            return value;\n        }\n    }\n    return value;\n};\n/**\n * Converts a Postgres Array into a native JS array\n *\n * @example toArray('{}', 'int4')\n * //=> []\n * @example toArray('{\"[2021-01-01,2021-12-31)\",\"(2021-01-01,2021-12-32]\"}', 'daterange')\n * //=> ['[2021-01-01,2021-12-31)', '(2021-01-01,2021-12-32]']\n * @example toArray([1,2,3,4], 'int4')\n * //=> [1,2,3,4]\n */\nconst toArray = (value, type) => {\n    if (typeof value !== 'string') {\n        return value;\n    }\n    const lastIdx = value.length - 1;\n    const closeBrace = value[lastIdx];\n    const openBrace = value[0];\n    // Confirm value is a Postgres array by checking curly brackets\n    if (openBrace === '{' && closeBrace === '}') {\n        let arr;\n        const valTrim = value.slice(1, lastIdx);\n        // TODO: find a better solution to separate Postgres array data\n        try {\n            arr = JSON.parse('[' + valTrim + ']');\n        }\n        catch (_) {\n            // WARNING: splitting on comma does not cover all edge cases\n            arr = valTrim ? valTrim.split(',') : [];\n        }\n        return arr.map((val) => convertCell(type, val));\n    }\n    return value;\n};\n/**\n * Fixes timestamp to be ISO-8601. Swaps the space between the date and time for a 'T'\n * See https://github.com/supabase/supabase/issues/18\n *\n * @example toTimestampString('2019-09-10 00:00:00')\n * //=> '2019-09-10T00:00:00'\n */\nconst toTimestampString = (value) => {\n    if (typeof value === 'string') {\n        return value.replace(' ', 'T');\n    }\n    return value;\n};\nconst httpEndpointURL = (socketUrl) => {\n    let url = socketUrl;\n    url = url.replace(/^ws/i, 'http');\n    url = url.replace(/(\\/socket\\/websocket|\\/socket|\\/websocket)\\/?$/i, '');\n    return url.replace(/\\/+$/, '') + '/api/broadcast';\n};\n//# sourceMappingURL=transformers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/realtime-js/dist/module/lib/transformers.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/realtime-js/dist/module/lib/version.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/lib/version.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: function() { return /* binding */ version; }\n/* harmony export */ });\nconst version = '2.15.0';\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3JlYWx0aW1lLWpzL2Rpc3QvbW9kdWxlL2xpYi92ZXJzaW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcmVhbHRpbWUtanMvZGlzdC9tb2R1bGUvbGliL3ZlcnNpb24uanM/MWZkNSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgdmVyc2lvbiA9ICcyLjE1LjAnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVyc2lvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@supabase/realtime-js/dist/module/lib/version.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/realtime-js/dist/module/lib/websocket-factory.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/lib/websocket-factory.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebSocketFactory: function() { return /* binding */ WebSocketFactory; }\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\nclass WebSocketFactory {\n    /**\n     * Dynamic require that works in both CJS and ESM environments\n     * Bulletproof against strict ESM environments where require might not be in scope\n     * @private\n     */\n    static dynamicRequire(moduleId) {\n        try {\n            // Check if we're in a Node.js environment first\n            if (typeof process !== 'undefined' &&\n                process.versions &&\n                process.versions.node) {\n                // In Node.js, both CJS and ESM support require for dynamic imports\n                // Wrap in try/catch to handle strict ESM environments\n                if (true) {\n                    return __webpack_require__(\"./node_modules/@supabase/realtime-js/dist/module/lib sync recursive\")(moduleId);\n                }\n            }\n            return null;\n        }\n        catch (_a) {\n            // Catches any error from typeof require OR require() call in strict ESM\n            return null;\n        }\n    }\n    static detectEnvironment() {\n        var _a, _b;\n        if (typeof WebSocket !== 'undefined') {\n            return { type: 'native', constructor: WebSocket };\n        }\n        if (typeof globalThis !== 'undefined' &&\n            typeof globalThis.WebSocket !== 'undefined') {\n            return { type: 'native', constructor: globalThis.WebSocket };\n        }\n        if (typeof __webpack_require__.g !== 'undefined' &&\n            typeof __webpack_require__.g.WebSocket !== 'undefined') {\n            return { type: 'native', constructor: __webpack_require__.g.WebSocket };\n        }\n        if (typeof globalThis !== 'undefined' &&\n            typeof globalThis.WebSocketPair !== 'undefined' &&\n            typeof globalThis.WebSocket === 'undefined') {\n            return {\n                type: 'cloudflare',\n                error: 'Cloudflare Workers detected. WebSocket clients are not supported in Cloudflare Workers.',\n                workaround: 'Use Cloudflare Workers WebSocket API for server-side WebSocket handling, or deploy to a different runtime.',\n            };\n        }\n        if ((typeof globalThis !== 'undefined' && globalThis.EdgeRuntime) ||\n            (typeof navigator !== 'undefined' &&\n                ((_a = navigator.userAgent) === null || _a === void 0 ? void 0 : _a.includes('Vercel-Edge')))) {\n            return {\n                type: 'unsupported',\n                error: 'Edge runtime detected (Vercel Edge/Netlify Edge). WebSockets are not supported in edge functions.',\n                workaround: 'Use serverless functions or a different deployment target for WebSocket functionality.',\n            };\n        }\n        if (typeof process !== 'undefined' &&\n            process.versions &&\n            process.versions.node) {\n            const nodeVersion = parseInt(process.versions.node.split('.')[0]);\n            if (nodeVersion >= 22) {\n                try {\n                    if (typeof globalThis.WebSocket !== 'undefined') {\n                        return { type: 'native', constructor: globalThis.WebSocket };\n                    }\n                    const undici = this.dynamicRequire('undici');\n                    if (undici && undici.WebSocket) {\n                        return { type: 'native', constructor: undici.WebSocket };\n                    }\n                    throw new Error('undici not available');\n                }\n                catch (err) {\n                    return {\n                        type: 'unsupported',\n                        error: `Node.js ${nodeVersion} detected but native WebSocket not found.`,\n                        workaround: 'Install the \"ws\" package or check your Node.js installation.',\n                    };\n                }\n            }\n            try {\n                // Use dynamic require to work in both CJS and ESM environments\n                const ws = this.dynamicRequire('ws');\n                if (ws) {\n                    return { type: 'ws', constructor: (_b = ws.WebSocket) !== null && _b !== void 0 ? _b : ws };\n                }\n                throw new Error('ws package not available');\n            }\n            catch (err) {\n                return {\n                    type: 'unsupported',\n                    error: `Node.js ${nodeVersion} detected without WebSocket support.`,\n                    workaround: 'Install the \"ws\" package: npm install ws',\n                };\n            }\n        }\n        return {\n            type: 'unsupported',\n            error: 'Unknown JavaScript runtime without WebSocket support.',\n            workaround: \"Ensure you're running in a supported environment (browser, Node.js, Deno) or provide a custom WebSocket implementation.\",\n        };\n    }\n    static getWebSocketConstructor() {\n        const env = this.detectEnvironment();\n        if (env.constructor) {\n            return env.constructor;\n        }\n        let errorMessage = env.error || 'WebSocket not supported in this environment.';\n        if (env.workaround) {\n            errorMessage += `\\n\\nSuggested solution: ${env.workaround}`;\n        }\n        throw new Error(errorMessage);\n    }\n    static createWebSocket(url, protocols) {\n        const WS = this.getWebSocketConstructor();\n        return new WS(url, protocols);\n    }\n    static isWebSocketSupported() {\n        try {\n            const env = this.detectEnvironment();\n            return env.type === 'native' || env.type === 'ws';\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (WebSocketFactory);\n//# sourceMappingURL=websocket-factory.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/realtime-js/dist/module/lib/websocket-factory.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/realtime-js/dist/module/lib sync recursive":
/*!******************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/lib/ sync ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = function() { return []; };
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "./node_modules/@supabase/realtime-js/dist/module/lib sync recursive";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "./node_modules/@supabase/storage-js/dist/module/StorageClient.js":
/*!************************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/StorageClient.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StorageClient: function() { return /* binding */ StorageClient; }\n/* harmony export */ });\n/* harmony import */ var _packages_StorageFileApi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./packages/StorageFileApi */ \"./node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.js\");\n/* harmony import */ var _packages_StorageBucketApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./packages/StorageBucketApi */ \"./node_modules/@supabase/storage-js/dist/module/packages/StorageBucketApi.js\");\n\n\nclass StorageClient extends _packages_StorageBucketApi__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(url, headers = {}, fetch, opts) {\n        super(url, headers, fetch, opts);\n    }\n    /**\n     * Perform file operation in a bucket.\n     *\n     * @param id The bucket id to operate on.\n     */\n    from(id) {\n        return new _packages_StorageFileApi__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.url, this.headers, id, this.fetch);\n    }\n}\n//# sourceMappingURL=StorageClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N0b3JhZ2UtanMvZGlzdC9tb2R1bGUvU3RvcmFnZUNsaWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBdUQ7QUFDSTtBQUNwRCw0QkFBNEIsa0VBQWdCO0FBQ25ELGlDQUFpQztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLGdFQUFjO0FBQ2pDO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N0b3JhZ2UtanMvZGlzdC9tb2R1bGUvU3RvcmFnZUNsaWVudC5qcz9hOGNjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTdG9yYWdlRmlsZUFwaSBmcm9tICcuL3BhY2thZ2VzL1N0b3JhZ2VGaWxlQXBpJztcbmltcG9ydCBTdG9yYWdlQnVja2V0QXBpIGZyb20gJy4vcGFja2FnZXMvU3RvcmFnZUJ1Y2tldEFwaSc7XG5leHBvcnQgY2xhc3MgU3RvcmFnZUNsaWVudCBleHRlbmRzIFN0b3JhZ2VCdWNrZXRBcGkge1xuICAgIGNvbnN0cnVjdG9yKHVybCwgaGVhZGVycyA9IHt9LCBmZXRjaCwgb3B0cykge1xuICAgICAgICBzdXBlcih1cmwsIGhlYWRlcnMsIGZldGNoLCBvcHRzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUGVyZm9ybSBmaWxlIG9wZXJhdGlvbiBpbiBhIGJ1Y2tldC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBpZCBUaGUgYnVja2V0IGlkIHRvIG9wZXJhdGUgb24uXG4gICAgICovXG4gICAgZnJvbShpZCkge1xuICAgICAgICByZXR1cm4gbmV3IFN0b3JhZ2VGaWxlQXBpKHRoaXMudXJsLCB0aGlzLmhlYWRlcnMsIGlkLCB0aGlzLmZldGNoKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TdG9yYWdlQ2xpZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@supabase/storage-js/dist/module/StorageClient.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/storage-js/dist/module/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/index.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StorageClient: function() { return /* reexport safe */ _StorageClient__WEBPACK_IMPORTED_MODULE_0__.StorageClient; }\n/* harmony export */ });\n/* harmony import */ var _StorageClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StorageClient */ \"./node_modules/@supabase/storage-js/dist/module/StorageClient.js\");\n/* harmony import */ var _lib_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/types */ \"./node_modules/@supabase/storage-js/dist/module/lib/types.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _lib_types__WEBPACK_IMPORTED_MODULE_1__) if([\"default\",\"StorageClient\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _lib_types__WEBPACK_IMPORTED_MODULE_1__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/errors */ \"./node_modules/@supabase/storage-js/dist/module/lib/errors.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _lib_errors__WEBPACK_IMPORTED_MODULE_2__) if([\"default\",\"StorageClient\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _lib_errors__WEBPACK_IMPORTED_MODULE_2__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N0b3JhZ2UtanMvZGlzdC9tb2R1bGUvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFpRTtBQUNyQztBQUNDO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3RvcmFnZS1qcy9kaXN0L21vZHVsZS9pbmRleC5qcz8zMjQ2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IFN0b3JhZ2VDbGllbnQgYXMgU3RvcmFnZUNsaWVudCB9IGZyb20gJy4vU3RvcmFnZUNsaWVudCc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi90eXBlcyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9lcnJvcnMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@supabase/storage-js/dist/module/index.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/storage-js/dist/module/lib/constants.js":
/*!************************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/lib/constants.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_HEADERS: function() { return /* binding */ DEFAULT_HEADERS; }\n/* harmony export */ });\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version */ \"./node_modules/@supabase/storage-js/dist/module/lib/version.js\");\n\nconst DEFAULT_HEADERS = { 'X-Client-Info': `storage-js/${_version__WEBPACK_IMPORTED_MODULE_0__.version}` };\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N0b3JhZ2UtanMvZGlzdC9tb2R1bGUvbGliL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFvQztBQUM3QiwwQkFBMEIsK0JBQStCLDZDQUFPLENBQUM7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9zdG9yYWdlLWpzL2Rpc3QvbW9kdWxlL2xpYi9jb25zdGFudHMuanM/Nzk5MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB2ZXJzaW9uIH0gZnJvbSAnLi92ZXJzaW9uJztcbmV4cG9ydCBjb25zdCBERUZBVUxUX0hFQURFUlMgPSB7ICdYLUNsaWVudC1JbmZvJzogYHN0b3JhZ2UtanMvJHt2ZXJzaW9ufWAgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@supabase/storage-js/dist/module/lib/constants.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/storage-js/dist/module/lib/errors.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/lib/errors.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StorageApiError: function() { return /* binding */ StorageApiError; },\n/* harmony export */   StorageError: function() { return /* binding */ StorageError; },\n/* harmony export */   StorageUnknownError: function() { return /* binding */ StorageUnknownError; },\n/* harmony export */   isStorageError: function() { return /* binding */ isStorageError; }\n/* harmony export */ });\nclass StorageError extends Error {\n    constructor(message) {\n        super(message);\n        this.__isStorageError = true;\n        this.name = 'StorageError';\n    }\n}\nfunction isStorageError(error) {\n    return typeof error === 'object' && error !== null && '__isStorageError' in error;\n}\nclass StorageApiError extends StorageError {\n    constructor(message, status, statusCode) {\n        super(message);\n        this.name = 'StorageApiError';\n        this.status = status;\n        this.statusCode = statusCode;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n            statusCode: this.statusCode,\n        };\n    }\n}\nclass StorageUnknownError extends StorageError {\n    constructor(message, originalError) {\n        super(message);\n        this.name = 'StorageUnknownError';\n        this.originalError = originalError;\n    }\n}\n//# sourceMappingURL=errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N0b3JhZ2UtanMvZGlzdC9tb2R1bGUvbGliL2Vycm9ycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9zdG9yYWdlLWpzL2Rpc3QvbW9kdWxlL2xpYi9lcnJvcnMuanM/NGE5YSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgU3RvcmFnZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgICAgIHRoaXMuX19pc1N0b3JhZ2VFcnJvciA9IHRydWU7XG4gICAgICAgIHRoaXMubmFtZSA9ICdTdG9yYWdlRXJyb3InO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1N0b3JhZ2VFcnJvcihlcnJvcikge1xuICAgIHJldHVybiB0eXBlb2YgZXJyb3IgPT09ICdvYmplY3QnICYmIGVycm9yICE9PSBudWxsICYmICdfX2lzU3RvcmFnZUVycm9yJyBpbiBlcnJvcjtcbn1cbmV4cG9ydCBjbGFzcyBTdG9yYWdlQXBpRXJyb3IgZXh0ZW5kcyBTdG9yYWdlRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIHN0YXR1cywgc3RhdHVzQ29kZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgdGhpcy5uYW1lID0gJ1N0b3JhZ2VBcGlFcnJvcic7XG4gICAgICAgIHRoaXMuc3RhdHVzID0gc3RhdHVzO1xuICAgICAgICB0aGlzLnN0YXR1c0NvZGUgPSBzdGF0dXNDb2RlO1xuICAgIH1cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBuYW1lOiB0aGlzLm5hbWUsXG4gICAgICAgICAgICBtZXNzYWdlOiB0aGlzLm1lc3NhZ2UsXG4gICAgICAgICAgICBzdGF0dXM6IHRoaXMuc3RhdHVzLFxuICAgICAgICAgICAgc3RhdHVzQ29kZTogdGhpcy5zdGF0dXNDb2RlLFxuICAgICAgICB9O1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBTdG9yYWdlVW5rbm93bkVycm9yIGV4dGVuZHMgU3RvcmFnZUVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBvcmlnaW5hbEVycm9yKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLm5hbWUgPSAnU3RvcmFnZVVua25vd25FcnJvcic7XG4gICAgICAgIHRoaXMub3JpZ2luYWxFcnJvciA9IG9yaWdpbmFsRXJyb3I7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3JzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@supabase/storage-js/dist/module/lib/errors.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/storage-js/dist/module/lib/fetch.js":
/*!********************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/lib/fetch.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   get: function() { return /* binding */ get; },\n/* harmony export */   head: function() { return /* binding */ head; },\n/* harmony export */   post: function() { return /* binding */ post; },\n/* harmony export */   put: function() { return /* binding */ put; },\n/* harmony export */   remove: function() { return /* binding */ remove; }\n/* harmony export */ });\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors */ \"./node_modules/@supabase/storage-js/dist/module/lib/errors.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers */ \"./node_modules/@supabase/storage-js/dist/module/lib/helpers.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject, options) => __awaiter(void 0, void 0, void 0, function* () {\n    const Res = yield (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.resolveResponse)();\n    if (error instanceof Res && !(options === null || options === void 0 ? void 0 : options.noResolveJson)) {\n        error\n            .json()\n            .then((err) => {\n            const status = error.status || 500;\n            const statusCode = (err === null || err === void 0 ? void 0 : err.statusCode) || status + '';\n            reject(new _errors__WEBPACK_IMPORTED_MODULE_1__.StorageApiError(_getErrorMessage(err), status, statusCode));\n        })\n            .catch((err) => {\n            reject(new _errors__WEBPACK_IMPORTED_MODULE_1__.StorageUnknownError(_getErrorMessage(err), err));\n        });\n    }\n    else {\n        reject(new _errors__WEBPACK_IMPORTED_MODULE_1__.StorageUnknownError(_getErrorMessage(error), error));\n    }\n});\nconst _getRequestParams = (method, options, parameters, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET' || !body) {\n        return params;\n    }\n    if ((0,_helpers__WEBPACK_IMPORTED_MODULE_0__.isPlainObject)(body)) {\n        params.headers = Object.assign({ 'Content-Type': 'application/json' }, options === null || options === void 0 ? void 0 : options.headers);\n        params.body = JSON.stringify(body);\n    }\n    else {\n        params.body = body;\n    }\n    return Object.assign(Object.assign({}, params), parameters);\n};\nfunction _handleRequest(fetcher, method, url, options, parameters, body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            fetcher(url, _getRequestParams(method, options, parameters, body))\n                .then((result) => {\n                if (!result.ok)\n                    throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\n                    return result;\n                return result.json();\n            })\n                .then((data) => resolve(data))\n                .catch((error) => handleError(error, reject, options));\n        });\n    });\n}\nfunction get(fetcher, url, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'GET', url, options, parameters);\n    });\n}\nfunction post(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'POST', url, options, parameters, body);\n    });\n}\nfunction put(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'PUT', url, options, parameters, body);\n    });\n}\nfunction head(fetcher, url, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'HEAD', url, Object.assign(Object.assign({}, options), { noResolveJson: true }), parameters);\n    });\n}\nfunction remove(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'DELETE', url, options, parameters, body);\n    });\n}\n//# sourceMappingURL=fetch.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N0b3JhZ2UtanMvZGlzdC9tb2R1bGUvbGliL2ZldGNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxpQkFBaUIsU0FBSSxJQUFJLFNBQUk7QUFDN0IsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDZ0U7QUFDTDtBQUMzRDtBQUNBO0FBQ0Esc0JBQXNCLHlEQUFlO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixvREFBZTtBQUN0QyxTQUFTO0FBQ1Q7QUFDQSx1QkFBdUIsd0RBQW1CO0FBQzFDLFNBQVM7QUFDVDtBQUNBO0FBQ0EsbUJBQW1CLHdEQUFtQjtBQUN0QztBQUNBLENBQUM7QUFDRDtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxRQUFRLHVEQUFhO0FBQ3JCLHlDQUF5QyxvQ0FBb0M7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ087QUFDUDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ087QUFDUDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ087QUFDUDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ087QUFDUDtBQUNBLGtGQUFrRixjQUFjLHFCQUFxQjtBQUNySCxLQUFLO0FBQ0w7QUFDTztBQUNQO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N0b3JhZ2UtanMvZGlzdC9tb2R1bGUvbGliL2ZldGNoLmpzP2MwNDYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5pbXBvcnQgeyBTdG9yYWdlQXBpRXJyb3IsIFN0b3JhZ2VVbmtub3duRXJyb3IgfSBmcm9tICcuL2Vycm9ycyc7XG5pbXBvcnQgeyBpc1BsYWluT2JqZWN0LCByZXNvbHZlUmVzcG9uc2UgfSBmcm9tICcuL2hlbHBlcnMnO1xuY29uc3QgX2dldEVycm9yTWVzc2FnZSA9IChlcnIpID0+IGVyci5tc2cgfHwgZXJyLm1lc3NhZ2UgfHwgZXJyLmVycm9yX2Rlc2NyaXB0aW9uIHx8IGVyci5lcnJvciB8fCBKU09OLnN0cmluZ2lmeShlcnIpO1xuY29uc3QgaGFuZGxlRXJyb3IgPSAoZXJyb3IsIHJlamVjdCwgb3B0aW9ucykgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgY29uc3QgUmVzID0geWllbGQgcmVzb2x2ZVJlc3BvbnNlKCk7XG4gICAgaWYgKGVycm9yIGluc3RhbmNlb2YgUmVzICYmICEob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLm5vUmVzb2x2ZUpzb24pKSB7XG4gICAgICAgIGVycm9yXG4gICAgICAgICAgICAuanNvbigpXG4gICAgICAgICAgICAudGhlbigoZXJyKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBzdGF0dXMgPSBlcnJvci5zdGF0dXMgfHwgNTAwO1xuICAgICAgICAgICAgY29uc3Qgc3RhdHVzQ29kZSA9IChlcnIgPT09IG51bGwgfHwgZXJyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBlcnIuc3RhdHVzQ29kZSkgfHwgc3RhdHVzICsgJyc7XG4gICAgICAgICAgICByZWplY3QobmV3IFN0b3JhZ2VBcGlFcnJvcihfZ2V0RXJyb3JNZXNzYWdlKGVyciksIHN0YXR1cywgc3RhdHVzQ29kZSkpO1xuICAgICAgICB9KVxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICAgIHJlamVjdChuZXcgU3RvcmFnZVVua25vd25FcnJvcihfZ2V0RXJyb3JNZXNzYWdlKGVyciksIGVycikpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJlamVjdChuZXcgU3RvcmFnZVVua25vd25FcnJvcihfZ2V0RXJyb3JNZXNzYWdlKGVycm9yKSwgZXJyb3IpKTtcbiAgICB9XG59KTtcbmNvbnN0IF9nZXRSZXF1ZXN0UGFyYW1zID0gKG1ldGhvZCwgb3B0aW9ucywgcGFyYW1ldGVycywgYm9keSkgPT4ge1xuICAgIGNvbnN0IHBhcmFtcyA9IHsgbWV0aG9kLCBoZWFkZXJzOiAob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmhlYWRlcnMpIHx8IHt9IH07XG4gICAgaWYgKG1ldGhvZCA9PT0gJ0dFVCcgfHwgIWJvZHkpIHtcbiAgICAgICAgcmV0dXJuIHBhcmFtcztcbiAgICB9XG4gICAgaWYgKGlzUGxhaW5PYmplY3QoYm9keSkpIHtcbiAgICAgICAgcGFyYW1zLmhlYWRlcnMgPSBPYmplY3QuYXNzaWduKHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LCBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuaGVhZGVycyk7XG4gICAgICAgIHBhcmFtcy5ib2R5ID0gSlNPTi5zdHJpbmdpZnkoYm9keSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBwYXJhbXMuYm9keSA9IGJvZHk7XG4gICAgfVxuICAgIHJldHVybiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHBhcmFtcyksIHBhcmFtZXRlcnMpO1xufTtcbmZ1bmN0aW9uIF9oYW5kbGVSZXF1ZXN0KGZldGNoZXIsIG1ldGhvZCwgdXJsLCBvcHRpb25zLCBwYXJhbWV0ZXJzLCBib2R5KSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIGZldGNoZXIodXJsLCBfZ2V0UmVxdWVzdFBhcmFtcyhtZXRob2QsIG9wdGlvbnMsIHBhcmFtZXRlcnMsIGJvZHkpKVxuICAgICAgICAgICAgICAgIC50aGVuKChyZXN1bHQpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoIXJlc3VsdC5vaylcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgcmVzdWx0O1xuICAgICAgICAgICAgICAgIGlmIChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMubm9SZXNvbHZlSnNvbilcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0Lmpzb24oKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLnRoZW4oKGRhdGEpID0+IHJlc29sdmUoZGF0YSkpXG4gICAgICAgICAgICAgICAgLmNhdGNoKChlcnJvcikgPT4gaGFuZGxlRXJyb3IoZXJyb3IsIHJlamVjdCwgb3B0aW9ucykpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXQoZmV0Y2hlciwgdXJsLCBvcHRpb25zLCBwYXJhbWV0ZXJzKSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgcmV0dXJuIF9oYW5kbGVSZXF1ZXN0KGZldGNoZXIsICdHRVQnLCB1cmwsIG9wdGlvbnMsIHBhcmFtZXRlcnMpO1xuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHBvc3QoZmV0Y2hlciwgdXJsLCBib2R5LCBvcHRpb25zLCBwYXJhbWV0ZXJzKSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgcmV0dXJuIF9oYW5kbGVSZXF1ZXN0KGZldGNoZXIsICdQT1NUJywgdXJsLCBvcHRpb25zLCBwYXJhbWV0ZXJzLCBib2R5KTtcbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwdXQoZmV0Y2hlciwgdXJsLCBib2R5LCBvcHRpb25zLCBwYXJhbWV0ZXJzKSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgcmV0dXJuIF9oYW5kbGVSZXF1ZXN0KGZldGNoZXIsICdQVVQnLCB1cmwsIG9wdGlvbnMsIHBhcmFtZXRlcnMsIGJvZHkpO1xuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGhlYWQoZmV0Y2hlciwgdXJsLCBvcHRpb25zLCBwYXJhbWV0ZXJzKSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgcmV0dXJuIF9oYW5kbGVSZXF1ZXN0KGZldGNoZXIsICdIRUFEJywgdXJsLCBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIG9wdGlvbnMpLCB7IG5vUmVzb2x2ZUpzb246IHRydWUgfSksIHBhcmFtZXRlcnMpO1xuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZShmZXRjaGVyLCB1cmwsIGJvZHksIG9wdGlvbnMsIHBhcmFtZXRlcnMpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICByZXR1cm4gX2hhbmRsZVJlcXVlc3QoZmV0Y2hlciwgJ0RFTEVURScsIHVybCwgb3B0aW9ucywgcGFyYW1ldGVycywgYm9keSk7XG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mZXRjaC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@supabase/storage-js/dist/module/lib/fetch.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/storage-js/dist/module/lib/helpers.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/lib/helpers.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isPlainObject: function() { return /* binding */ isPlainObject; },\n/* harmony export */   recursiveToCamel: function() { return /* binding */ recursiveToCamel; },\n/* harmony export */   resolveFetch: function() { return /* binding */ resolveFetch; },\n/* harmony export */   resolveResponse: function() { return /* binding */ resolveResponse; }\n/* harmony export */ });\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @supabase/node-fetch */ \"./node_modules/@supabase/node-fetch/browser.js\")).then(({ default: fetch }) => fetch(...args));\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\nconst resolveResponse = () => __awaiter(void 0, void 0, void 0, function* () {\n    if (typeof Response === 'undefined') {\n        // @ts-ignore\n        return (yield Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @supabase/node-fetch */ \"./node_modules/@supabase/node-fetch/browser.js\"))).Response;\n    }\n    return Response;\n});\nconst recursiveToCamel = (item) => {\n    if (Array.isArray(item)) {\n        return item.map((el) => recursiveToCamel(el));\n    }\n    else if (typeof item === 'function' || item !== Object(item)) {\n        return item;\n    }\n    const result = {};\n    Object.entries(item).forEach(([key, value]) => {\n        const newKey = key.replace(/([-_][a-z])/gi, (c) => c.toUpperCase().replace(/[-_]/g, ''));\n        result[newKey] = recursiveToCamel(value);\n    });\n    return result;\n};\n/**\n * Determine if input is a plain object\n * An object is plain if it's created by either {}, new Object(), or Object.create(null)\n * source: https://github.com/sindresorhus/is-plain-obj\n */\nconst isPlainObject = (value) => {\n    if (typeof value !== 'object' || value === null) {\n        return false;\n    }\n    const prototype = Object.getPrototypeOf(value);\n    return ((prototype === null ||\n        prototype === Object.prototype ||\n        Object.getPrototypeOf(prototype) === null) &&\n        !(Symbol.toStringTag in value) &&\n        !(Symbol.iterator in value));\n};\n//# sourceMappingURL=helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N0b3JhZ2UtanMvZGlzdC9tb2R1bGUvbGliL2hlbHBlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLGlCQUFpQixTQUFJLElBQUksU0FBSTtBQUM3Qiw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixrS0FBOEIsU0FBUyxnQkFBZ0I7QUFDckY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0Esc0JBQXNCLGtLQUE4QjtBQUNwRDtBQUNBO0FBQ0EsQ0FBQztBQUNNO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0Q7QUFDbEQ7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N0b3JhZ2UtanMvZGlzdC9tb2R1bGUvbGliL2hlbHBlcnMuanM/YTQ3YiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbmV4cG9ydCBjb25zdCByZXNvbHZlRmV0Y2ggPSAoY3VzdG9tRmV0Y2gpID0+IHtcbiAgICBsZXQgX2ZldGNoO1xuICAgIGlmIChjdXN0b21GZXRjaCkge1xuICAgICAgICBfZmV0Y2ggPSBjdXN0b21GZXRjaDtcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZW9mIGZldGNoID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICBfZmV0Y2ggPSAoLi4uYXJncykgPT4gaW1wb3J0KCdAc3VwYWJhc2Uvbm9kZS1mZXRjaCcpLnRoZW4oKHsgZGVmYXVsdDogZmV0Y2ggfSkgPT4gZmV0Y2goLi4uYXJncykpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgX2ZldGNoID0gZmV0Y2g7XG4gICAgfVxuICAgIHJldHVybiAoLi4uYXJncykgPT4gX2ZldGNoKC4uLmFyZ3MpO1xufTtcbmV4cG9ydCBjb25zdCByZXNvbHZlUmVzcG9uc2UgPSAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICBpZiAodHlwZW9mIFJlc3BvbnNlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIHJldHVybiAoeWllbGQgaW1wb3J0KCdAc3VwYWJhc2Uvbm9kZS1mZXRjaCcpKS5SZXNwb25zZTtcbiAgICB9XG4gICAgcmV0dXJuIFJlc3BvbnNlO1xufSk7XG5leHBvcnQgY29uc3QgcmVjdXJzaXZlVG9DYW1lbCA9IChpdGVtKSA9PiB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoaXRlbSkpIHtcbiAgICAgICAgcmV0dXJuIGl0ZW0ubWFwKChlbCkgPT4gcmVjdXJzaXZlVG9DYW1lbChlbCkpO1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlb2YgaXRlbSA9PT0gJ2Z1bmN0aW9uJyB8fCBpdGVtICE9PSBPYmplY3QoaXRlbSkpIHtcbiAgICAgICAgcmV0dXJuIGl0ZW07XG4gICAgfVxuICAgIGNvbnN0IHJlc3VsdCA9IHt9O1xuICAgIE9iamVjdC5lbnRyaWVzKGl0ZW0pLmZvckVhY2goKFtrZXksIHZhbHVlXSkgPT4ge1xuICAgICAgICBjb25zdCBuZXdLZXkgPSBrZXkucmVwbGFjZSgvKFstX11bYS16XSkvZ2ksIChjKSA9PiBjLnRvVXBwZXJDYXNlKCkucmVwbGFjZSgvWy1fXS9nLCAnJykpO1xuICAgICAgICByZXN1bHRbbmV3S2V5XSA9IHJlY3Vyc2l2ZVRvQ2FtZWwodmFsdWUpO1xuICAgIH0pO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xuLyoqXG4gKiBEZXRlcm1pbmUgaWYgaW5wdXQgaXMgYSBwbGFpbiBvYmplY3RcbiAqIEFuIG9iamVjdCBpcyBwbGFpbiBpZiBpdCdzIGNyZWF0ZWQgYnkgZWl0aGVyIHt9LCBuZXcgT2JqZWN0KCksIG9yIE9iamVjdC5jcmVhdGUobnVsbClcbiAqIHNvdXJjZTogaHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9pcy1wbGFpbi1vYmpcbiAqL1xuZXhwb3J0IGNvbnN0IGlzUGxhaW5PYmplY3QgPSAodmFsdWUpID0+IHtcbiAgICBpZiAodHlwZW9mIHZhbHVlICE9PSAnb2JqZWN0JyB8fCB2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGNvbnN0IHByb3RvdHlwZSA9IE9iamVjdC5nZXRQcm90b3R5cGVPZih2YWx1ZSk7XG4gICAgcmV0dXJuICgocHJvdG90eXBlID09PSBudWxsIHx8XG4gICAgICAgIHByb3RvdHlwZSA9PT0gT2JqZWN0LnByb3RvdHlwZSB8fFxuICAgICAgICBPYmplY3QuZ2V0UHJvdG90eXBlT2YocHJvdG90eXBlKSA9PT0gbnVsbCkgJiZcbiAgICAgICAgIShTeW1ib2wudG9TdHJpbmdUYWcgaW4gdmFsdWUpICYmXG4gICAgICAgICEoU3ltYm9sLml0ZXJhdG9yIGluIHZhbHVlKSk7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGVscGVycy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@supabase/storage-js/dist/module/lib/helpers.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/storage-js/dist/module/lib/types.js":
/*!********************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/lib/types.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N0b3JhZ2UtanMvZGlzdC9tb2R1bGUvbGliL3R5cGVzLmpzIiwibWFwcGluZ3MiOiI7QUFBVTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3RvcmFnZS1qcy9kaXN0L21vZHVsZS9saWIvdHlwZXMuanM/MGExZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@supabase/storage-js/dist/module/lib/types.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/storage-js/dist/module/lib/version.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/lib/version.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: function() { return /* binding */ version; }\n/* harmony export */ });\n// generated by genversion\nconst version = '2.10.4';\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N0b3JhZ2UtanMvZGlzdC9tb2R1bGUvbGliL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ087QUFDUCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N0b3JhZ2UtanMvZGlzdC9tb2R1bGUvbGliL3ZlcnNpb24uanM/ZmEzOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBnZW5lcmF0ZWQgYnkgZ2VudmVyc2lvblxuZXhwb3J0IGNvbnN0IHZlcnNpb24gPSAnMi4xMC40Jztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZlcnNpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@supabase/storage-js/dist/module/lib/version.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/storage-js/dist/module/packages/StorageBucketApi.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/packages/StorageBucketApi.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ StorageBucketApi; }\n/* harmony export */ });\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/constants */ \"./node_modules/@supabase/storage-js/dist/module/lib/constants.js\");\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/errors */ \"./node_modules/@supabase/storage-js/dist/module/lib/errors.js\");\n/* harmony import */ var _lib_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/fetch */ \"./node_modules/@supabase/storage-js/dist/module/lib/fetch.js\");\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/helpers */ \"./node_modules/@supabase/storage-js/dist/module/lib/helpers.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\nclass StorageBucketApi {\n    constructor(url, headers = {}, fetch, opts) {\n        const baseUrl = new URL(url);\n        // if legacy uri is used, replace with new storage host (disables request buffering to allow > 50GB uploads)\n        // \"project-ref.supabase.co\" becomes \"project-ref.storage.supabase.co\"\n        if (opts === null || opts === void 0 ? void 0 : opts.useNewHostname) {\n            const isSupabaseHost = /supabase\\.(co|in|red)$/.test(baseUrl.hostname);\n            if (isSupabaseHost && !baseUrl.hostname.includes('storage.supabase.')) {\n                baseUrl.hostname = baseUrl.hostname.replace('supabase.', 'storage.supabase.');\n            }\n        }\n        this.url = baseUrl.href;\n        this.headers = Object.assign(Object.assign({}, _lib_constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_HEADERS), headers);\n        this.fetch = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.resolveFetch)(fetch);\n    }\n    /**\n     * Retrieves the details of all Storage buckets within an existing project.\n     */\n    listBuckets() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.get)(this.fetch, `${this.url}/bucket`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isStorageError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves the details of an existing Storage bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to retrieve.\n     */\n    getBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.get)(this.fetch, `${this.url}/bucket/${id}`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isStorageError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates a new Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are creating.\n     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private.\n     * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\n     * The global file size limit takes precedence over this value.\n     * The default value is null, which doesn't set a per bucket file size limit.\n     * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\n     * The default value is null, which allows files with all mime types to be uploaded.\n     * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n     * @returns newly created bucket id\n     * @param options.type (private-beta) specifies the bucket type. see `BucketType` for more details.\n     *   - default bucket type is `STANDARD`\n     */\n    createBucket(id, options = {\n        public: false,\n    }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.post)(this.fetch, `${this.url}/bucket`, {\n                    id,\n                    name: id,\n                    type: options.type,\n                    public: options.public,\n                    file_size_limit: options.fileSizeLimit,\n                    allowed_mime_types: options.allowedMimeTypes,\n                }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isStorageError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Updates a Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are updating.\n     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations.\n     * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\n     * The global file size limit takes precedence over this value.\n     * The default value is null, which doesn't set a per bucket file size limit.\n     * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\n     * The default value is null, which allows files with all mime types to be uploaded.\n     * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n     */\n    updateBucket(id, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.put)(this.fetch, `${this.url}/bucket/${id}`, {\n                    id,\n                    name: id,\n                    public: options.public,\n                    file_size_limit: options.fileSizeLimit,\n                    allowed_mime_types: options.allowedMimeTypes,\n                }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isStorageError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Removes all objects inside a single bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to empty.\n     */\n    emptyBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.post)(this.fetch, `${this.url}/bucket/${id}/empty`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isStorageError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\n     * You must first `empty()` the bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to delete.\n     */\n    deleteBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_2__.remove)(this.fetch, `${this.url}/bucket/${id}`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_3__.isStorageError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n}\n//# sourceMappingURL=StorageBucketApi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/storage-js/dist/module/packages/StorageBucketApi.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ StorageFileApi; }\n/* harmony export */ });\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/errors */ \"./node_modules/@supabase/storage-js/dist/module/lib/errors.js\");\n/* harmony import */ var _lib_fetch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/fetch */ \"./node_modules/@supabase/storage-js/dist/module/lib/fetch.js\");\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/helpers */ \"./node_modules/@supabase/storage-js/dist/module/lib/helpers.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\nconst DEFAULT_SEARCH_OPTIONS = {\n    limit: 100,\n    offset: 0,\n    sortBy: {\n        column: 'name',\n        order: 'asc',\n    },\n};\nconst DEFAULT_FILE_OPTIONS = {\n    cacheControl: '3600',\n    contentType: 'text/plain;charset=UTF-8',\n    upsert: false,\n};\nclass StorageFileApi {\n    constructor(url, headers = {}, bucketId, fetch) {\n        this.url = url;\n        this.headers = headers;\n        this.bucketId = bucketId;\n        this.fetch = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_0__.resolveFetch)(fetch);\n    }\n    /**\n     * Uploads a file to an existing bucket or replaces an existing file at the specified path with a new one.\n     *\n     * @param method HTTP method.\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    uploadOrUpdate(method, path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let body;\n                const options = Object.assign(Object.assign({}, DEFAULT_FILE_OPTIONS), fileOptions);\n                let headers = Object.assign(Object.assign({}, this.headers), (method === 'POST' && { 'x-upsert': String(options.upsert) }));\n                const metadata = options.metadata;\n                if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\n                    body = new FormData();\n                    body.append('cacheControl', options.cacheControl);\n                    if (metadata) {\n                        body.append('metadata', this.encodeMetadata(metadata));\n                    }\n                    body.append('', fileBody);\n                }\n                else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\n                    body = fileBody;\n                    body.append('cacheControl', options.cacheControl);\n                    if (metadata) {\n                        body.append('metadata', this.encodeMetadata(metadata));\n                    }\n                }\n                else {\n                    body = fileBody;\n                    headers['cache-control'] = `max-age=${options.cacheControl}`;\n                    headers['content-type'] = options.contentType;\n                    if (metadata) {\n                        headers['x-metadata'] = this.toBase64(this.encodeMetadata(metadata));\n                    }\n                }\n                if (fileOptions === null || fileOptions === void 0 ? void 0 : fileOptions.headers) {\n                    headers = Object.assign(Object.assign({}, headers), fileOptions.headers);\n                }\n                const cleanPath = this._removeEmptyFolders(path);\n                const _path = this._getFinalPath(cleanPath);\n                const data = yield (method == 'PUT' ? _lib_fetch__WEBPACK_IMPORTED_MODULE_1__.put : _lib_fetch__WEBPACK_IMPORTED_MODULE_1__.post)(this.fetch, `${this.url}/object/${_path}`, body, Object.assign({ headers }, ((options === null || options === void 0 ? void 0 : options.duplex) ? { duplex: options.duplex } : {})));\n                return {\n                    data: { path: cleanPath, id: data.Id, fullPath: data.Key },\n                    error: null,\n                };\n            }\n            catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isStorageError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Uploads a file to an existing bucket.\n     *\n     * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    upload(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.uploadOrUpdate('POST', path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Upload a file with a token generated from `createSignedUploadUrl`.\n     * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param token The token generated from `createSignedUploadUrl`\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    uploadToSignedUrl(path, token, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const cleanPath = this._removeEmptyFolders(path);\n            const _path = this._getFinalPath(cleanPath);\n            const url = new URL(this.url + `/object/upload/sign/${_path}`);\n            url.searchParams.set('token', token);\n            try {\n                let body;\n                const options = Object.assign({ upsert: DEFAULT_FILE_OPTIONS.upsert }, fileOptions);\n                const headers = Object.assign(Object.assign({}, this.headers), { 'x-upsert': String(options.upsert) });\n                if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\n                    body = new FormData();\n                    body.append('cacheControl', options.cacheControl);\n                    body.append('', fileBody);\n                }\n                else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\n                    body = fileBody;\n                    body.append('cacheControl', options.cacheControl);\n                }\n                else {\n                    body = fileBody;\n                    headers['cache-control'] = `max-age=${options.cacheControl}`;\n                    headers['content-type'] = options.contentType;\n                }\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_1__.put)(this.fetch, url.toString(), body, { headers });\n                return {\n                    data: { path: cleanPath, fullPath: data.Key },\n                    error: null,\n                };\n            }\n            catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isStorageError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates a signed upload URL.\n     * Signed upload URLs can be used to upload files to the bucket without further authentication.\n     * They are valid for 2 hours.\n     * @param path The file path, including the current file name. For example `folder/image.png`.\n     * @param options.upsert If set to true, allows the file to be overwritten if it already exists.\n     */\n    createSignedUploadUrl(path, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let _path = this._getFinalPath(path);\n                const headers = Object.assign({}, this.headers);\n                if (options === null || options === void 0 ? void 0 : options.upsert) {\n                    headers['x-upsert'] = 'true';\n                }\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_1__.post)(this.fetch, `${this.url}/object/upload/sign/${_path}`, {}, { headers });\n                const url = new URL(this.url + data.url);\n                const token = url.searchParams.get('token');\n                if (!token) {\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.StorageError('No token returned by API');\n                }\n                return { data: { signedUrl: url.toString(), path, token }, error: null };\n            }\n            catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isStorageError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Replaces an existing file at the specified path with a new one.\n     *\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to update.\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    update(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.uploadOrUpdate('PUT', path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Moves an existing file to a new path in the same bucket.\n     *\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n     * @param toPath The new file path, including the new file name. For example `folder/image-new.png`.\n     * @param options The destination options.\n     */\n    move(fromPath, toPath, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_1__.post)(this.fetch, `${this.url}/object/move`, {\n                    bucketId: this.bucketId,\n                    sourceKey: fromPath,\n                    destinationKey: toPath,\n                    destinationBucket: options === null || options === void 0 ? void 0 : options.destinationBucket,\n                }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isStorageError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Copies an existing file to a new path in the same bucket.\n     *\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n     * @param toPath The new file path, including the new file name. For example `folder/image-copy.png`.\n     * @param options The destination options.\n     */\n    copy(fromPath, toPath, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_1__.post)(this.fetch, `${this.url}/object/copy`, {\n                    bucketId: this.bucketId,\n                    sourceKey: fromPath,\n                    destinationKey: toPath,\n                    destinationBucket: options === null || options === void 0 ? void 0 : options.destinationBucket,\n                }, { headers: this.headers });\n                return { data: { path: data.Key }, error: null };\n            }\n            catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isStorageError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates a signed URL. Use a signed URL to share a file for a fixed amount of time.\n     *\n     * @param path The file path, including the current file name. For example `folder/image.png`.\n     * @param expiresIn The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute.\n     * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n     * @param options.transform Transform the asset before serving it to the client.\n     */\n    createSignedUrl(path, expiresIn, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let _path = this._getFinalPath(path);\n                let data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_1__.post)(this.fetch, `${this.url}/object/sign/${_path}`, Object.assign({ expiresIn }, ((options === null || options === void 0 ? void 0 : options.transform) ? { transform: options.transform } : {})), { headers: this.headers });\n                const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\n                    ? `&download=${options.download === true ? '' : options.download}`\n                    : '';\n                const signedUrl = encodeURI(`${this.url}${data.signedURL}${downloadQueryParam}`);\n                data = { signedUrl };\n                return { data, error: null };\n            }\n            catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isStorageError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates multiple signed URLs. Use a signed URL to share a file for a fixed amount of time.\n     *\n     * @param paths The file paths to be downloaded, including the current file names. For example `['folder/image.png', 'folder2/image2.png']`.\n     * @param expiresIn The number of seconds until the signed URLs expire. For example, `60` for URLs which are valid for one minute.\n     * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n     */\n    createSignedUrls(paths, expiresIn, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_1__.post)(this.fetch, `${this.url}/object/sign/${this.bucketId}`, { expiresIn, paths }, { headers: this.headers });\n                const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\n                    ? `&download=${options.download === true ? '' : options.download}`\n                    : '';\n                return {\n                    data: data.map((datum) => (Object.assign(Object.assign({}, datum), { signedUrl: datum.signedURL\n                            ? encodeURI(`${this.url}${datum.signedURL}${downloadQueryParam}`)\n                            : null }))),\n                    error: null,\n                };\n            }\n            catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isStorageError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Downloads a file from a private bucket. For public buckets, make a request to the URL returned from `getPublicUrl` instead.\n     *\n     * @param path The full path and file name of the file to be downloaded. For example `folder/image.png`.\n     * @param options.transform Transform the asset before serving it to the client.\n     */\n    download(path, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const wantsTransformation = typeof (options === null || options === void 0 ? void 0 : options.transform) !== 'undefined';\n            const renderPath = wantsTransformation ? 'render/image/authenticated' : 'object';\n            const transformationQuery = this.transformOptsToQueryString((options === null || options === void 0 ? void 0 : options.transform) || {});\n            const queryString = transformationQuery ? `?${transformationQuery}` : '';\n            try {\n                const _path = this._getFinalPath(path);\n                const res = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_1__.get)(this.fetch, `${this.url}/${renderPath}/${_path}${queryString}`, {\n                    headers: this.headers,\n                    noResolveJson: true,\n                });\n                const data = yield res.blob();\n                return { data, error: null };\n            }\n            catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isStorageError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves the details of an existing file.\n     * @param path\n     */\n    info(path) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const _path = this._getFinalPath(path);\n            try {\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_1__.get)(this.fetch, `${this.url}/object/info/${_path}`, {\n                    headers: this.headers,\n                });\n                return { data: (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_0__.recursiveToCamel)(data), error: null };\n            }\n            catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isStorageError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Checks the existence of a file.\n     * @param path\n     */\n    exists(path) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const _path = this._getFinalPath(path);\n            try {\n                yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_1__.head)(this.fetch, `${this.url}/object/${_path}`, {\n                    headers: this.headers,\n                });\n                return { data: true, error: null };\n            }\n            catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isStorageError)(error) && error instanceof _lib_errors__WEBPACK_IMPORTED_MODULE_2__.StorageUnknownError) {\n                    const originalError = error.originalError;\n                    if ([400, 404].includes(originalError === null || originalError === void 0 ? void 0 : originalError.status)) {\n                        return { data: false, error };\n                    }\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * A simple convenience function to get the URL for an asset in a public bucket. If you do not want to use this function, you can construct the public URL by concatenating the bucket URL with the path to the asset.\n     * This function does not verify if the bucket is public. If a public URL is created for a bucket which is not public, you will not be able to download the asset.\n     *\n     * @param path The path and name of the file to generate the public URL for. For example `folder/image.png`.\n     * @param options.download Triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n     * @param options.transform Transform the asset before serving it to the client.\n     */\n    getPublicUrl(path, options) {\n        const _path = this._getFinalPath(path);\n        const _queryString = [];\n        const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\n            ? `download=${options.download === true ? '' : options.download}`\n            : '';\n        if (downloadQueryParam !== '') {\n            _queryString.push(downloadQueryParam);\n        }\n        const wantsTransformation = typeof (options === null || options === void 0 ? void 0 : options.transform) !== 'undefined';\n        const renderPath = wantsTransformation ? 'render/image' : 'object';\n        const transformationQuery = this.transformOptsToQueryString((options === null || options === void 0 ? void 0 : options.transform) || {});\n        if (transformationQuery !== '') {\n            _queryString.push(transformationQuery);\n        }\n        let queryString = _queryString.join('&');\n        if (queryString !== '') {\n            queryString = `?${queryString}`;\n        }\n        return {\n            data: { publicUrl: encodeURI(`${this.url}/${renderPath}/public/${_path}${queryString}`) },\n        };\n    }\n    /**\n     * Deletes files within the same bucket\n     *\n     * @param paths An array of files to delete, including the path and file name. For example [`'folder/image.png'`].\n     */\n    remove(paths) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_1__.remove)(this.fetch, `${this.url}/object/${this.bucketId}`, { prefixes: paths }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isStorageError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get file metadata\n     * @param id the file id to retrieve metadata\n     */\n    // async getMetadata(\n    //   id: string\n    // ): Promise<\n    //   | {\n    //       data: Metadata\n    //       error: null\n    //     }\n    //   | {\n    //       data: null\n    //       error: StorageError\n    //     }\n    // > {\n    //   try {\n    //     const data = await get(this.fetch, `${this.url}/metadata/${id}`, { headers: this.headers })\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     if (isStorageError(error)) {\n    //       return { data: null, error }\n    //     }\n    //     throw error\n    //   }\n    // }\n    /**\n     * Update file metadata\n     * @param id the file id to update metadata\n     * @param meta the new file metadata\n     */\n    // async updateMetadata(\n    //   id: string,\n    //   meta: Metadata\n    // ): Promise<\n    //   | {\n    //       data: Metadata\n    //       error: null\n    //     }\n    //   | {\n    //       data: null\n    //       error: StorageError\n    //     }\n    // > {\n    //   try {\n    //     const data = await post(\n    //       this.fetch,\n    //       `${this.url}/metadata/${id}`,\n    //       { ...meta },\n    //       { headers: this.headers }\n    //     )\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     if (isStorageError(error)) {\n    //       return { data: null, error }\n    //     }\n    //     throw error\n    //   }\n    // }\n    /**\n     * Lists all the files within a bucket.\n     * @param path The folder path.\n     * @param options Search options including limit (defaults to 100), offset, sortBy, and search\n     */\n    list(path, options, parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const body = Object.assign(Object.assign(Object.assign({}, DEFAULT_SEARCH_OPTIONS), options), { prefix: path || '' });\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_1__.post)(this.fetch, `${this.url}/object/list/${this.bucketId}`, body, { headers: this.headers }, parameters);\n                return { data, error: null };\n            }\n            catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isStorageError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    encodeMetadata(metadata) {\n        return JSON.stringify(metadata);\n    }\n    toBase64(data) {\n        if (typeof Buffer !== 'undefined') {\n            return Buffer.from(data).toString('base64');\n        }\n        return btoa(data);\n    }\n    _getFinalPath(path) {\n        return `${this.bucketId}/${path.replace(/^\\/+/, '')}`;\n    }\n    _removeEmptyFolders(path) {\n        return path.replace(/^\\/|\\/$/g, '').replace(/\\/+/g, '/');\n    }\n    transformOptsToQueryString(transform) {\n        const params = [];\n        if (transform.width) {\n            params.push(`width=${transform.width}`);\n        }\n        if (transform.height) {\n            params.push(`height=${transform.height}`);\n        }\n        if (transform.resize) {\n            params.push(`resize=${transform.resize}`);\n        }\n        if (transform.format) {\n            params.push(`format=${transform.format}`);\n        }\n        if (transform.quality) {\n            params.push(`quality=${transform.quality}`);\n        }\n        return params.join('&');\n    }\n}\n//# sourceMappingURL=StorageFileApi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ SupabaseClient; }\n/* harmony export */ });\n/* harmony import */ var _supabase_functions_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @supabase/functions-js */ \"./node_modules/@supabase/functions-js/dist/module/index.js\");\n/* harmony import */ var _supabase_postgrest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/postgrest-js */ \"./node_modules/@supabase/postgrest-js/dist/esm/wrapper.mjs\");\n/* harmony import */ var _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/realtime-js */ \"./node_modules/@supabase/realtime-js/dist/module/index.js\");\n/* harmony import */ var _supabase_storage_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @supabase/storage-js */ \"./node_modules/@supabase/storage-js/dist/module/index.js\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/constants */ \"./node_modules/@supabase/supabase-js/dist/module/lib/constants.js\");\n/* harmony import */ var _lib_fetch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/fetch */ \"./node_modules/@supabase/supabase-js/dist/module/lib/fetch.js\");\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/helpers */ \"./node_modules/@supabase/supabase-js/dist/module/lib/helpers.js\");\n/* harmony import */ var _lib_SupabaseAuthClient__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./lib/SupabaseAuthClient */ \"./node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\n\n/**\n * Supabase Client.\n *\n * An isomorphic Javascript client for interacting with Postgres.\n */\nclass SupabaseClient {\n    /**\n     * Create a new client for use in the browser.\n     * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n     * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n     * @param options.db.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n     * @param options.auth.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.auth.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.auth.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.realtime Options passed along to realtime-js constructor.\n     * @param options.storage Options passed along to the storage-js constructor.\n     * @param options.global.fetch A custom fetch implementation.\n     * @param options.global.headers Any additional headers to send with each network request.\n     */\n    constructor(supabaseUrl, supabaseKey, options) {\n        var _a, _b, _c;\n        this.supabaseUrl = supabaseUrl;\n        this.supabaseKey = supabaseKey;\n        if (!supabaseUrl)\n            throw new Error('supabaseUrl is required.');\n        if (!supabaseKey)\n            throw new Error('supabaseKey is required.');\n        const _supabaseUrl = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_2__.ensureTrailingSlash)(supabaseUrl);\n        const baseUrl = new URL(_supabaseUrl);\n        this.realtimeUrl = new URL('realtime/v1', baseUrl);\n        this.realtimeUrl.protocol = this.realtimeUrl.protocol.replace('http', 'ws');\n        this.authUrl = new URL('auth/v1', baseUrl);\n        this.storageUrl = new URL('storage/v1', baseUrl);\n        this.functionsUrl = new URL('functions/v1', baseUrl);\n        // default storage key uses the supabase project ref as a namespace\n        const defaultStorageKey = `sb-${baseUrl.hostname.split('.')[0]}-auth-token`;\n        const DEFAULTS = {\n            db: _lib_constants__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_DB_OPTIONS,\n            realtime: _lib_constants__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_REALTIME_OPTIONS,\n            auth: Object.assign(Object.assign({}, _lib_constants__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_AUTH_OPTIONS), { storageKey: defaultStorageKey }),\n            global: _lib_constants__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_GLOBAL_OPTIONS,\n        };\n        const settings = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_2__.applySettingDefaults)(options !== null && options !== void 0 ? options : {}, DEFAULTS);\n        this.storageKey = (_a = settings.auth.storageKey) !== null && _a !== void 0 ? _a : '';\n        this.headers = (_b = settings.global.headers) !== null && _b !== void 0 ? _b : {};\n        if (!settings.accessToken) {\n            this.auth = this._initSupabaseAuthClient((_c = settings.auth) !== null && _c !== void 0 ? _c : {}, this.headers, settings.global.fetch);\n        }\n        else {\n            this.accessToken = settings.accessToken;\n            this.auth = new Proxy({}, {\n                get: (_, prop) => {\n                    throw new Error(`@supabase/supabase-js: Supabase Client is configured with the accessToken option, accessing supabase.auth.${String(prop)} is not possible`);\n                },\n            });\n        }\n        this.fetch = (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_4__.fetchWithAuth)(supabaseKey, this._getAccessToken.bind(this), settings.global.fetch);\n        this.realtime = this._initRealtimeClient(Object.assign({ headers: this.headers, accessToken: this._getAccessToken.bind(this) }, settings.realtime));\n        this.rest = new _supabase_postgrest_js__WEBPACK_IMPORTED_MODULE_0__.PostgrestClient(new URL('rest/v1', baseUrl).href, {\n            headers: this.headers,\n            schema: settings.db.schema,\n            fetch: this.fetch,\n        });\n        this.storage = new _supabase_storage_js__WEBPACK_IMPORTED_MODULE_5__.StorageClient(this.storageUrl.href, this.headers, this.fetch, options === null || options === void 0 ? void 0 : options.storage);\n        if (!settings.accessToken) {\n            this._listenForAuthEvents();\n        }\n    }\n    /**\n     * Supabase Functions allows you to deploy and invoke edge functions.\n     */\n    get functions() {\n        return new _supabase_functions_js__WEBPACK_IMPORTED_MODULE_6__.FunctionsClient(this.functionsUrl.href, {\n            headers: this.headers,\n            customFetch: this.fetch,\n        });\n    }\n    /**\n     * Perform a query on a table or a view.\n     *\n     * @param relation - The table or view name to query\n     */\n    from(relation) {\n        return this.rest.from(relation);\n    }\n    // NOTE: signatures must be kept in sync with PostgrestClient.schema\n    /**\n     * Select a schema to query or perform an function (rpc) call.\n     *\n     * The schema needs to be on the list of exposed schemas inside Supabase.\n     *\n     * @param schema - The schema to query\n     */\n    schema(schema) {\n        return this.rest.schema(schema);\n    }\n    // NOTE: signatures must be kept in sync with PostgrestClient.rpc\n    /**\n     * Perform a function call.\n     *\n     * @param fn - The function name to call\n     * @param args - The arguments to pass to the function call\n     * @param options - Named parameters\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     * @param options.get - When set to `true`, the function will be called with\n     * read-only access mode.\n     * @param options.count - Count algorithm to use to count rows returned by the\n     * function. Only applicable for [set-returning\n     * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    rpc(fn, args = {}, options = {}) {\n        return this.rest.rpc(fn, args, options);\n    }\n    /**\n     * Creates a Realtime channel with Broadcast, Presence, and Postgres Changes.\n     *\n     * @param {string} name - The name of the Realtime channel.\n     * @param {Object} opts - The options to pass to the Realtime channel.\n     *\n     */\n    channel(name, opts = { config: {} }) {\n        return this.realtime.channel(name, opts);\n    }\n    /**\n     * Returns all Realtime channels.\n     */\n    getChannels() {\n        return this.realtime.getChannels();\n    }\n    /**\n     * Unsubscribes and removes Realtime channel from Realtime client.\n     *\n     * @param {RealtimeChannel} channel - The name of the Realtime channel.\n     *\n     */\n    removeChannel(channel) {\n        return this.realtime.removeChannel(channel);\n    }\n    /**\n     * Unsubscribes and removes all Realtime channels from Realtime client.\n     */\n    removeAllChannels() {\n        return this.realtime.removeAllChannels();\n    }\n    _getAccessToken() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.accessToken) {\n                return yield this.accessToken();\n            }\n            const { data } = yield this.auth.getSession();\n            return (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : this.supabaseKey;\n        });\n    }\n    _initSupabaseAuthClient({ autoRefreshToken, persistSession, detectSessionInUrl, storage, storageKey, flowType, lock, debug, }, headers, fetch) {\n        const authHeaders = {\n            Authorization: `Bearer ${this.supabaseKey}`,\n            apikey: `${this.supabaseKey}`,\n        };\n        return new _lib_SupabaseAuthClient__WEBPACK_IMPORTED_MODULE_7__.SupabaseAuthClient({\n            url: this.authUrl.href,\n            headers: Object.assign(Object.assign({}, authHeaders), headers),\n            storageKey: storageKey,\n            autoRefreshToken,\n            persistSession,\n            detectSessionInUrl,\n            storage,\n            flowType,\n            lock,\n            debug,\n            fetch,\n            // auth checks if there is a custom authorizaiton header using this flag\n            // so it knows whether to return an error when getUser is called with no session\n            hasCustomAuthorizationHeader: 'Authorization' in this.headers,\n        });\n    }\n    _initRealtimeClient(options) {\n        return new _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_1__.RealtimeClient(this.realtimeUrl.href, Object.assign(Object.assign({}, options), { params: Object.assign({ apikey: this.supabaseKey }, options === null || options === void 0 ? void 0 : options.params) }));\n    }\n    _listenForAuthEvents() {\n        let data = this.auth.onAuthStateChange((event, session) => {\n            this._handleTokenChanged(event, 'CLIENT', session === null || session === void 0 ? void 0 : session.access_token);\n        });\n        return data;\n    }\n    _handleTokenChanged(event, source, token) {\n        if ((event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') &&\n            this.changedAccessToken !== token) {\n            this.changedAccessToken = token;\n        }\n        else if (event === 'SIGNED_OUT') {\n            this.realtime.setAuth();\n            if (source == 'STORAGE')\n                this.auth.signOut();\n            this.changedAccessToken = undefined;\n        }\n    }\n}\n//# sourceMappingURL=SupabaseClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/supabase-js/dist/module/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/index.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FunctionRegion: function() { return /* reexport safe */ _supabase_functions_js__WEBPACK_IMPORTED_MODULE_2__.FunctionRegion; },\n/* harmony export */   FunctionsError: function() { return /* reexport safe */ _supabase_functions_js__WEBPACK_IMPORTED_MODULE_2__.FunctionsError; },\n/* harmony export */   FunctionsFetchError: function() { return /* reexport safe */ _supabase_functions_js__WEBPACK_IMPORTED_MODULE_2__.FunctionsFetchError; },\n/* harmony export */   FunctionsHttpError: function() { return /* reexport safe */ _supabase_functions_js__WEBPACK_IMPORTED_MODULE_2__.FunctionsHttpError; },\n/* harmony export */   FunctionsRelayError: function() { return /* reexport safe */ _supabase_functions_js__WEBPACK_IMPORTED_MODULE_2__.FunctionsRelayError; },\n/* harmony export */   PostgrestError: function() { return /* reexport safe */ _supabase_postgrest_js__WEBPACK_IMPORTED_MODULE_1__.PostgrestError; },\n/* harmony export */   SupabaseClient: function() { return /* reexport safe */ _SupabaseClient__WEBPACK_IMPORTED_MODULE_4__[\"default\"]; },\n/* harmony export */   createClient: function() { return /* binding */ createClient; }\n/* harmony export */ });\n/* harmony import */ var _SupabaseClient__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./SupabaseClient */ \"./node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js\");\n/* harmony import */ var _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/auth-js */ \"./node_modules/@supabase/auth-js/dist/module/index.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__) if([\"default\",\"PostgrestError\",\"FunctionsHttpError\",\"FunctionsFetchError\",\"FunctionsRelayError\",\"FunctionsError\",\"FunctionRegion\",\"SupabaseClient\",\"createClient\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _supabase_postgrest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/postgrest-js */ \"./node_modules/@supabase/postgrest-js/dist/esm/wrapper.mjs\");\n/* harmony import */ var _supabase_functions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @supabase/functions-js */ \"./node_modules/@supabase/functions-js/dist/module/index.js\");\n/* harmony import */ var _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @supabase/realtime-js */ \"./node_modules/@supabase/realtime-js/dist/module/index.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_3__) if([\"default\",\"PostgrestError\",\"FunctionsHttpError\",\"FunctionsFetchError\",\"FunctionsRelayError\",\"FunctionsError\",\"FunctionRegion\",\"SupabaseClient\",\"createClient\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_3__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\n\n\n\n\n\n/**\n * Creates a new Supabase Client.\n */\nconst createClient = (supabaseUrl, supabaseKey, options) => {\n    return new _SupabaseClient__WEBPACK_IMPORTED_MODULE_4__[\"default\"](supabaseUrl, supabaseKey, options);\n};\n// Check for Node.js <= 18 deprecation\nfunction shouldShowDeprecationWarning() {\n    // Skip in browser environments\n    if (typeof window !== 'undefined') {\n        return false;\n    }\n    // Skip if process is not available (e.g., Edge Runtime)\n    if (typeof process === 'undefined') {\n        return false;\n    }\n    // Use dynamic property access to avoid Next.js Edge Runtime static analysis warnings\n    const processVersion = process['version'];\n    if (processVersion === undefined || processVersion === null) {\n        return false;\n    }\n    const versionMatch = processVersion.match(/^v(\\d+)\\./);\n    if (!versionMatch) {\n        return false;\n    }\n    const majorVersion = parseInt(versionMatch[1], 10);\n    return majorVersion <= 18;\n}\nif (shouldShowDeprecationWarning()) {\n    console.warn(`⚠️  Node.js 18 and below are deprecated and will no longer be supported in future versions of @supabase/supabase-js. ` +\n        `Please upgrade to Node.js 20 or later. ` +\n        `For more information, visit: https://github.com/orgs/supabase/discussions/37217`);\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N1cGFiYXNlLWpzL2Rpc3QvbW9kdWxlL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQThDO0FBQ1o7QUFDdUI7QUFDOEU7QUFDakc7QUFDdUI7QUFDN0Q7QUFDQTtBQUNBO0FBQ087QUFDUCxlQUFlLHVEQUFjO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLE9BQU87QUFDdEI7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLE9BQU87QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9zdXBhYmFzZS1qcy9kaXN0L21vZHVsZS9pbmRleC5qcz9iMzI2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTdXBhYmFzZUNsaWVudCBmcm9tICcuL1N1cGFiYXNlQ2xpZW50JztcbmV4cG9ydCAqIGZyb20gJ0BzdXBhYmFzZS9hdXRoLWpzJztcbmV4cG9ydCB7IFBvc3RncmVzdEVycm9yLCB9IGZyb20gJ0BzdXBhYmFzZS9wb3N0Z3Jlc3QtanMnO1xuZXhwb3J0IHsgRnVuY3Rpb25zSHR0cEVycm9yLCBGdW5jdGlvbnNGZXRjaEVycm9yLCBGdW5jdGlvbnNSZWxheUVycm9yLCBGdW5jdGlvbnNFcnJvciwgRnVuY3Rpb25SZWdpb24sIH0gZnJvbSAnQHN1cGFiYXNlL2Z1bmN0aW9ucy1qcyc7XG5leHBvcnQgKiBmcm9tICdAc3VwYWJhc2UvcmVhbHRpbWUtanMnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBTdXBhYmFzZUNsaWVudCB9IGZyb20gJy4vU3VwYWJhc2VDbGllbnQnO1xuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IFN1cGFiYXNlIENsaWVudC5cbiAqL1xuZXhwb3J0IGNvbnN0IGNyZWF0ZUNsaWVudCA9IChzdXBhYmFzZVVybCwgc3VwYWJhc2VLZXksIG9wdGlvbnMpID0+IHtcbiAgICByZXR1cm4gbmV3IFN1cGFiYXNlQ2xpZW50KHN1cGFiYXNlVXJsLCBzdXBhYmFzZUtleSwgb3B0aW9ucyk7XG59O1xuLy8gQ2hlY2sgZm9yIE5vZGUuanMgPD0gMTggZGVwcmVjYXRpb25cbmZ1bmN0aW9uIHNob3VsZFNob3dEZXByZWNhdGlvbldhcm5pbmcoKSB7XG4gICAgLy8gU2tpcCBpbiBicm93c2VyIGVudmlyb25tZW50c1xuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIC8vIFNraXAgaWYgcHJvY2VzcyBpcyBub3QgYXZhaWxhYmxlIChlLmcuLCBFZGdlIFJ1bnRpbWUpXG4gICAgaWYgKHR5cGVvZiBwcm9jZXNzID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIC8vIFVzZSBkeW5hbWljIHByb3BlcnR5IGFjY2VzcyB0byBhdm9pZCBOZXh0LmpzIEVkZ2UgUnVudGltZSBzdGF0aWMgYW5hbHlzaXMgd2FybmluZ3NcbiAgICBjb25zdCBwcm9jZXNzVmVyc2lvbiA9IHByb2Nlc3NbJ3ZlcnNpb24nXTtcbiAgICBpZiAocHJvY2Vzc1ZlcnNpb24gPT09IHVuZGVmaW5lZCB8fCBwcm9jZXNzVmVyc2lvbiA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGNvbnN0IHZlcnNpb25NYXRjaCA9IHByb2Nlc3NWZXJzaW9uLm1hdGNoKC9edihcXGQrKVxcLi8pO1xuICAgIGlmICghdmVyc2lvbk1hdGNoKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgY29uc3QgbWFqb3JWZXJzaW9uID0gcGFyc2VJbnQodmVyc2lvbk1hdGNoWzFdLCAxMCk7XG4gICAgcmV0dXJuIG1ham9yVmVyc2lvbiA8PSAxODtcbn1cbmlmIChzaG91bGRTaG93RGVwcmVjYXRpb25XYXJuaW5nKCkpIHtcbiAgICBjb25zb2xlLndhcm4oYOKaoO+4jyAgTm9kZS5qcyAxOCBhbmQgYmVsb3cgYXJlIGRlcHJlY2F0ZWQgYW5kIHdpbGwgbm8gbG9uZ2VyIGJlIHN1cHBvcnRlZCBpbiBmdXR1cmUgdmVyc2lvbnMgb2YgQHN1cGFiYXNlL3N1cGFiYXNlLWpzLiBgICtcbiAgICAgICAgYFBsZWFzZSB1cGdyYWRlIHRvIE5vZGUuanMgMjAgb3IgbGF0ZXIuIGAgK1xuICAgICAgICBgRm9yIG1vcmUgaW5mb3JtYXRpb24sIHZpc2l0OiBodHRwczovL2dpdGh1Yi5jb20vb3Jncy9zdXBhYmFzZS9kaXNjdXNzaW9ucy8zNzIxN2ApO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@supabase/supabase-js/dist/module/index.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SupabaseAuthClient: function() { return /* binding */ SupabaseAuthClient; }\n/* harmony export */ });\n/* harmony import */ var _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/auth-js */ \"./node_modules/@supabase/auth-js/dist/module/index.js\");\n\nclass SupabaseAuthClient extends _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthClient {\n    constructor(options) {\n        super(options);\n    }\n}\n//# sourceMappingURL=SupabaseAuthClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N1cGFiYXNlLWpzL2Rpc3QvbW9kdWxlL2xpYi9TdXBhYmFzZUF1dGhDbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0M7QUFDeEMsaUNBQWlDLHlEQUFVO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9zdXBhYmFzZS1qcy9kaXN0L21vZHVsZS9saWIvU3VwYWJhc2VBdXRoQ2xpZW50LmpzPzFkMjkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXV0aENsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9hdXRoLWpzJztcbmV4cG9ydCBjbGFzcyBTdXBhYmFzZUF1dGhDbGllbnQgZXh0ZW5kcyBBdXRoQ2xpZW50IHtcbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgICAgIHN1cGVyKG9wdGlvbnMpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVN1cGFiYXNlQXV0aENsaWVudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/supabase-js/dist/module/lib/constants.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/lib/constants.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_AUTH_OPTIONS: function() { return /* binding */ DEFAULT_AUTH_OPTIONS; },\n/* harmony export */   DEFAULT_DB_OPTIONS: function() { return /* binding */ DEFAULT_DB_OPTIONS; },\n/* harmony export */   DEFAULT_GLOBAL_OPTIONS: function() { return /* binding */ DEFAULT_GLOBAL_OPTIONS; },\n/* harmony export */   DEFAULT_HEADERS: function() { return /* binding */ DEFAULT_HEADERS; },\n/* harmony export */   DEFAULT_REALTIME_OPTIONS: function() { return /* binding */ DEFAULT_REALTIME_OPTIONS; }\n/* harmony export */ });\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version */ \"./node_modules/@supabase/supabase-js/dist/module/lib/version.js\");\n\nlet JS_ENV = '';\n// @ts-ignore\nif (typeof Deno !== 'undefined') {\n    JS_ENV = 'deno';\n}\nelse if (typeof document !== 'undefined') {\n    JS_ENV = 'web';\n}\nelse if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    JS_ENV = 'react-native';\n}\nelse {\n    JS_ENV = 'node';\n}\nconst DEFAULT_HEADERS = { 'X-Client-Info': `supabase-js-${JS_ENV}/${_version__WEBPACK_IMPORTED_MODULE_0__.version}` };\nconst DEFAULT_GLOBAL_OPTIONS = {\n    headers: DEFAULT_HEADERS,\n};\nconst DEFAULT_DB_OPTIONS = {\n    schema: 'public',\n};\nconst DEFAULT_AUTH_OPTIONS = {\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    flowType: 'implicit',\n};\nconst DEFAULT_REALTIME_OPTIONS = {};\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N1cGFiYXNlLWpzL2Rpc3QvbW9kdWxlL2xpYi9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQW9DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTywwQkFBMEIsZ0NBQWdDLE9BQU8sR0FBRyw2Q0FBTyxDQUFDO0FBQzVFO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9zdXBhYmFzZS1qcy9kaXN0L21vZHVsZS9saWIvY29uc3RhbnRzLmpzP2JlNzIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdmVyc2lvbiB9IGZyb20gJy4vdmVyc2lvbic7XG5sZXQgSlNfRU5WID0gJyc7XG4vLyBAdHMtaWdub3JlXG5pZiAodHlwZW9mIERlbm8gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgSlNfRU5WID0gJ2Rlbm8nO1xufVxuZWxzZSBpZiAodHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJykge1xuICAgIEpTX0VOViA9ICd3ZWInO1xufVxuZWxzZSBpZiAodHlwZW9mIG5hdmlnYXRvciAhPT0gJ3VuZGVmaW5lZCcgJiYgbmF2aWdhdG9yLnByb2R1Y3QgPT09ICdSZWFjdE5hdGl2ZScpIHtcbiAgICBKU19FTlYgPSAncmVhY3QtbmF0aXZlJztcbn1cbmVsc2Uge1xuICAgIEpTX0VOViA9ICdub2RlJztcbn1cbmV4cG9ydCBjb25zdCBERUZBVUxUX0hFQURFUlMgPSB7ICdYLUNsaWVudC1JbmZvJzogYHN1cGFiYXNlLWpzLSR7SlNfRU5WfS8ke3ZlcnNpb259YCB9O1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfR0xPQkFMX09QVElPTlMgPSB7XG4gICAgaGVhZGVyczogREVGQVVMVF9IRUFERVJTLFxufTtcbmV4cG9ydCBjb25zdCBERUZBVUxUX0RCX09QVElPTlMgPSB7XG4gICAgc2NoZW1hOiAncHVibGljJyxcbn07XG5leHBvcnQgY29uc3QgREVGQVVMVF9BVVRIX09QVElPTlMgPSB7XG4gICAgYXV0b1JlZnJlc2hUb2tlbjogdHJ1ZSxcbiAgICBwZXJzaXN0U2Vzc2lvbjogdHJ1ZSxcbiAgICBkZXRlY3RTZXNzaW9uSW5Vcmw6IHRydWUsXG4gICAgZmxvd1R5cGU6ICdpbXBsaWNpdCcsXG59O1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfUkVBTFRJTUVfT1BUSU9OUyA9IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@supabase/supabase-js/dist/module/lib/constants.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/supabase-js/dist/module/lib/fetch.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/lib/fetch.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchWithAuth: function() { return /* binding */ fetchWithAuth; },\n/* harmony export */   resolveFetch: function() { return /* binding */ resolveFetch; },\n/* harmony export */   resolveHeadersConstructor: function() { return /* binding */ resolveHeadersConstructor; }\n/* harmony export */ });\n/* harmony import */ var _supabase_node_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/node-fetch */ \"./node_modules/@supabase/node-fetch/browser.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// @ts-ignore\n\nconst resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = _supabase_node_fetch__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\nconst resolveHeadersConstructor = () => {\n    if (typeof Headers === 'undefined') {\n        return _supabase_node_fetch__WEBPACK_IMPORTED_MODULE_0__.Headers;\n    }\n    return Headers;\n};\nconst fetchWithAuth = (supabaseKey, getAccessToken, customFetch) => {\n    const fetch = resolveFetch(customFetch);\n    const HeadersConstructor = resolveHeadersConstructor();\n    return (input, init) => __awaiter(void 0, void 0, void 0, function* () {\n        var _a;\n        const accessToken = (_a = (yield getAccessToken())) !== null && _a !== void 0 ? _a : supabaseKey;\n        let headers = new HeadersConstructor(init === null || init === void 0 ? void 0 : init.headers);\n        if (!headers.has('apikey')) {\n            headers.set('apikey', supabaseKey);\n        }\n        if (!headers.has('Authorization')) {\n            headers.set('Authorization', `Bearer ${accessToken}`);\n        }\n        return fetch(input, Object.assign(Object.assign({}, init), { headers }));\n    });\n};\n//# sourceMappingURL=fetch.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N1cGFiYXNlLWpzL2Rpc3QvbW9kdWxlL2xpYi9mZXRjaC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsaUJBQWlCLFNBQUksSUFBSSxTQUFJO0FBQzdCLDRCQUE0QiwrREFBK0QsaUJBQWlCO0FBQzVHO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDO0FBQ2hDO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDOEU7QUFDdkU7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDREQUFTO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxlQUFlLHlEQUFnQjtBQUMvQjtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELFlBQVk7QUFDL0Q7QUFDQSwwREFBMEQsV0FBVyxTQUFTO0FBQzlFLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3VwYWJhc2UtanMvZGlzdC9tb2R1bGUvbGliL2ZldGNoLmpzPzI1NGMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG4vLyBAdHMtaWdub3JlXG5pbXBvcnQgbm9kZUZldGNoLCB7IEhlYWRlcnMgYXMgTm9kZUZldGNoSGVhZGVycyB9IGZyb20gJ0BzdXBhYmFzZS9ub2RlLWZldGNoJztcbmV4cG9ydCBjb25zdCByZXNvbHZlRmV0Y2ggPSAoY3VzdG9tRmV0Y2gpID0+IHtcbiAgICBsZXQgX2ZldGNoO1xuICAgIGlmIChjdXN0b21GZXRjaCkge1xuICAgICAgICBfZmV0Y2ggPSBjdXN0b21GZXRjaDtcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZW9mIGZldGNoID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICBfZmV0Y2ggPSBub2RlRmV0Y2g7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBfZmV0Y2ggPSBmZXRjaDtcbiAgICB9XG4gICAgcmV0dXJuICguLi5hcmdzKSA9PiBfZmV0Y2goLi4uYXJncyk7XG59O1xuZXhwb3J0IGNvbnN0IHJlc29sdmVIZWFkZXJzQ29uc3RydWN0b3IgPSAoKSA9PiB7XG4gICAgaWYgKHR5cGVvZiBIZWFkZXJzID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4gTm9kZUZldGNoSGVhZGVycztcbiAgICB9XG4gICAgcmV0dXJuIEhlYWRlcnM7XG59O1xuZXhwb3J0IGNvbnN0IGZldGNoV2l0aEF1dGggPSAoc3VwYWJhc2VLZXksIGdldEFjY2Vzc1Rva2VuLCBjdXN0b21GZXRjaCkgPT4ge1xuICAgIGNvbnN0IGZldGNoID0gcmVzb2x2ZUZldGNoKGN1c3RvbUZldGNoKTtcbiAgICBjb25zdCBIZWFkZXJzQ29uc3RydWN0b3IgPSByZXNvbHZlSGVhZGVyc0NvbnN0cnVjdG9yKCk7XG4gICAgcmV0dXJuIChpbnB1dCwgaW5pdCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgY29uc3QgYWNjZXNzVG9rZW4gPSAoX2EgPSAoeWllbGQgZ2V0QWNjZXNzVG9rZW4oKSkpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IHN1cGFiYXNlS2V5O1xuICAgICAgICBsZXQgaGVhZGVycyA9IG5ldyBIZWFkZXJzQ29uc3RydWN0b3IoaW5pdCA9PT0gbnVsbCB8fCBpbml0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpbml0LmhlYWRlcnMpO1xuICAgICAgICBpZiAoIWhlYWRlcnMuaGFzKCdhcGlrZXknKSkge1xuICAgICAgICAgICAgaGVhZGVycy5zZXQoJ2FwaWtleScsIHN1cGFiYXNlS2V5KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWhlYWRlcnMuaGFzKCdBdXRob3JpemF0aW9uJykpIHtcbiAgICAgICAgICAgIGhlYWRlcnMuc2V0KCdBdXRob3JpemF0aW9uJywgYEJlYXJlciAke2FjY2Vzc1Rva2VufWApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmZXRjaChpbnB1dCwgT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBpbml0KSwgeyBoZWFkZXJzIH0pKTtcbiAgICB9KTtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mZXRjaC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@supabase/supabase-js/dist/module/lib/fetch.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/supabase-js/dist/module/lib/helpers.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/lib/helpers.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applySettingDefaults: function() { return /* binding */ applySettingDefaults; },\n/* harmony export */   ensureTrailingSlash: function() { return /* binding */ ensureTrailingSlash; },\n/* harmony export */   isBrowser: function() { return /* binding */ isBrowser; },\n/* harmony export */   uuid: function() { return /* binding */ uuid; }\n/* harmony export */ });\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nfunction uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nfunction ensureTrailingSlash(url) {\n    return url.endsWith('/') ? url : url + '/';\n}\nconst isBrowser = () => typeof window !== 'undefined';\nfunction applySettingDefaults(options, defaults) {\n    var _a, _b;\n    const { db: dbOptions, auth: authOptions, realtime: realtimeOptions, global: globalOptions, } = options;\n    const { db: DEFAULT_DB_OPTIONS, auth: DEFAULT_AUTH_OPTIONS, realtime: DEFAULT_REALTIME_OPTIONS, global: DEFAULT_GLOBAL_OPTIONS, } = defaults;\n    const result = {\n        db: Object.assign(Object.assign({}, DEFAULT_DB_OPTIONS), dbOptions),\n        auth: Object.assign(Object.assign({}, DEFAULT_AUTH_OPTIONS), authOptions),\n        realtime: Object.assign(Object.assign({}, DEFAULT_REALTIME_OPTIONS), realtimeOptions),\n        storage: {},\n        global: Object.assign(Object.assign(Object.assign({}, DEFAULT_GLOBAL_OPTIONS), globalOptions), { headers: Object.assign(Object.assign({}, ((_a = DEFAULT_GLOBAL_OPTIONS === null || DEFAULT_GLOBAL_OPTIONS === void 0 ? void 0 : DEFAULT_GLOBAL_OPTIONS.headers) !== null && _a !== void 0 ? _a : {})), ((_b = globalOptions === null || globalOptions === void 0 ? void 0 : globalOptions.headers) !== null && _b !== void 0 ? _b : {})) }),\n        accessToken: () => __awaiter(this, void 0, void 0, function* () { return ''; }),\n    };\n    if (options.accessToken) {\n        result.accessToken = options.accessToken;\n    }\n    else {\n        // hack around Required<>\n        delete result.accessToken;\n    }\n    return result;\n}\n//# sourceMappingURL=helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N1cGFiYXNlLWpzL2Rpc3QvbW9kdWxlL2xpYi9oZWxwZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxpQkFBaUIsU0FBSSxJQUFJLFNBQUk7QUFDN0IsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ0E7QUFDUDtBQUNBLFlBQVksc0ZBQXNGO0FBQ2xHLFlBQVksMEhBQTBIO0FBQ3RJO0FBQ0EsMENBQTBDO0FBQzFDLDRDQUE0QztBQUM1QyxnREFBZ0Q7QUFDaEQsbUJBQW1CO0FBQ25CLDREQUE0RCw2Q0FBNkMsdUNBQXVDLDRKQUE0SixtSUFBbUksSUFBSTtBQUNuYiwwRUFBMEUsWUFBWTtBQUN0RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3VwYWJhc2UtanMvZGlzdC9tb2R1bGUvbGliL2hlbHBlcnMuanM/OWE2ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbmV4cG9ydCBmdW5jdGlvbiB1dWlkKCkge1xuICAgIHJldHVybiAneHh4eHh4eHgteHh4eC00eHh4LXl4eHgteHh4eHh4eHh4eHh4Jy5yZXBsYWNlKC9beHldL2csIGZ1bmN0aW9uIChjKSB7XG4gICAgICAgIHZhciByID0gKE1hdGgucmFuZG9tKCkgKiAxNikgfCAwLCB2ID0gYyA9PSAneCcgPyByIDogKHIgJiAweDMpIHwgMHg4O1xuICAgICAgICByZXR1cm4gdi50b1N0cmluZygxNik7XG4gICAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZW5zdXJlVHJhaWxpbmdTbGFzaCh1cmwpIHtcbiAgICByZXR1cm4gdXJsLmVuZHNXaXRoKCcvJykgPyB1cmwgOiB1cmwgKyAnLyc7XG59XG5leHBvcnQgY29uc3QgaXNCcm93c2VyID0gKCkgPT4gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCc7XG5leHBvcnQgZnVuY3Rpb24gYXBwbHlTZXR0aW5nRGVmYXVsdHMob3B0aW9ucywgZGVmYXVsdHMpIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIGNvbnN0IHsgZGI6IGRiT3B0aW9ucywgYXV0aDogYXV0aE9wdGlvbnMsIHJlYWx0aW1lOiByZWFsdGltZU9wdGlvbnMsIGdsb2JhbDogZ2xvYmFsT3B0aW9ucywgfSA9IG9wdGlvbnM7XG4gICAgY29uc3QgeyBkYjogREVGQVVMVF9EQl9PUFRJT05TLCBhdXRoOiBERUZBVUxUX0FVVEhfT1BUSU9OUywgcmVhbHRpbWU6IERFRkFVTFRfUkVBTFRJTUVfT1BUSU9OUywgZ2xvYmFsOiBERUZBVUxUX0dMT0JBTF9PUFRJT05TLCB9ID0gZGVmYXVsdHM7XG4gICAgY29uc3QgcmVzdWx0ID0ge1xuICAgICAgICBkYjogT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBERUZBVUxUX0RCX09QVElPTlMpLCBkYk9wdGlvbnMpLFxuICAgICAgICBhdXRoOiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIERFRkFVTFRfQVVUSF9PUFRJT05TKSwgYXV0aE9wdGlvbnMpLFxuICAgICAgICByZWFsdGltZTogT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBERUZBVUxUX1JFQUxUSU1FX09QVElPTlMpLCByZWFsdGltZU9wdGlvbnMpLFxuICAgICAgICBzdG9yYWdlOiB7fSxcbiAgICAgICAgZ2xvYmFsOiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgREVGQVVMVF9HTE9CQUxfT1BUSU9OUyksIGdsb2JhbE9wdGlvbnMpLCB7IGhlYWRlcnM6IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgKChfYSA9IERFRkFVTFRfR0xPQkFMX09QVElPTlMgPT09IG51bGwgfHwgREVGQVVMVF9HTE9CQUxfT1BUSU9OUyA9PT0gdm9pZCAwID8gdm9pZCAwIDogREVGQVVMVF9HTE9CQUxfT1BUSU9OUy5oZWFkZXJzKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiB7fSkpLCAoKF9iID0gZ2xvYmFsT3B0aW9ucyA9PT0gbnVsbCB8fCBnbG9iYWxPcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBnbG9iYWxPcHRpb25zLmhlYWRlcnMpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IHt9KSkgfSksXG4gICAgICAgIGFjY2Vzc1Rva2VuOiAoKSA9PiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiAnJzsgfSksXG4gICAgfTtcbiAgICBpZiAob3B0aW9ucy5hY2Nlc3NUb2tlbikge1xuICAgICAgICByZXN1bHQuYWNjZXNzVG9rZW4gPSBvcHRpb25zLmFjY2Vzc1Rva2VuO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgLy8gaGFjayBhcm91bmQgUmVxdWlyZWQ8PlxuICAgICAgICBkZWxldGUgcmVzdWx0LmFjY2Vzc1Rva2VuO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGVscGVycy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@supabase/supabase-js/dist/module/lib/helpers.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/supabase-js/dist/module/lib/version.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/lib/version.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: function() { return /* binding */ version; }\n/* harmony export */ });\nconst version = '2.54.0';\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N1cGFiYXNlLWpzL2Rpc3QvbW9kdWxlL2xpYi92ZXJzaW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3VwYWJhc2UtanMvZGlzdC9tb2R1bGUvbGliL3ZlcnNpb24uanM/NDgyNyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgdmVyc2lvbiA9ICcyLjU0LjAnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVyc2lvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@supabase/supabase-js/dist/module/lib/version.js\n"));

/***/ }),

/***/ "./node_modules/html-parse-stringify/dist/html-parse-stringify.module.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/html-parse-stringify/dist/html-parse-stringify.module.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var void_elements__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! void-elements */ \"./node_modules/void-elements/index.js\");\n/* harmony import */ var void_elements__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(void_elements__WEBPACK_IMPORTED_MODULE_0__);\nvar t=/\\s([^'\"/\\s><]+?)[\\s/>]|([^\\s=]+)=\\s?(\".*?\"|'.*?')/g;function n(n){var r={type:\"tag\",name:\"\",voidElement:!1,attrs:{},children:[]},i=n.match(/<\\/?([^\\s]+?)[/\\s>]/);if(i&&(r.name=i[1],((void_elements__WEBPACK_IMPORTED_MODULE_0___default())[i[1]]||\"/\"===n.charAt(n.length-2))&&(r.voidElement=!0),r.name.startsWith(\"!--\"))){var s=n.indexOf(\"--\\x3e\");return{type:\"comment\",comment:-1!==s?n.slice(4,s):\"\"}}for(var a=new RegExp(t),c=null;null!==(c=a.exec(n));)if(c[0].trim())if(c[1]){var o=c[1].trim(),l=[o,\"\"];o.indexOf(\"=\")>-1&&(l=o.split(\"=\")),r.attrs[l[0]]=l[1],a.lastIndex--}else c[2]&&(r.attrs[c[2]]=c[3].trim().substring(1,c[3].length-1));return r}var r=/<[a-zA-Z0-9\\-\\!\\/](?:\"[^\"]*\"|'[^']*'|[^'\">])*>/g,i=/^\\s*$/,s=Object.create(null);function a(e,t){switch(t.type){case\"text\":return e+t.content;case\"tag\":return e+=\"<\"+t.name+(t.attrs?function(e){var t=[];for(var n in e)t.push(n+'=\"'+e[n]+'\"');return t.length?\" \"+t.join(\" \"):\"\"}(t.attrs):\"\")+(t.voidElement?\"/>\":\">\"),t.voidElement?e:e+t.children.reduce(a,\"\")+\"</\"+t.name+\">\";case\"comment\":return e+\"\\x3c!--\"+t.comment+\"--\\x3e\"}}var c={parse:function(e,t){t||(t={}),t.components||(t.components=s);var a,c=[],o=[],l=-1,m=!1;if(0!==e.indexOf(\"<\")){var u=e.indexOf(\"<\");c.push({type:\"text\",content:-1===u?e:e.substring(0,u)})}return e.replace(r,function(r,s){if(m){if(r!==\"</\"+a.name+\">\")return;m=!1}var u,f=\"/\"!==r.charAt(1),h=r.startsWith(\"\\x3c!--\"),p=s+r.length,d=e.charAt(p);if(h){var v=n(r);return l<0?(c.push(v),c):((u=o[l]).children.push(v),c)}if(f&&(l++,\"tag\"===(a=n(r)).type&&t.components[a.name]&&(a.type=\"component\",m=!0),a.voidElement||m||!d||\"<\"===d||a.children.push({type:\"text\",content:e.slice(p,e.indexOf(\"<\",p))}),0===l&&c.push(a),(u=o[l-1])&&u.children.push(a),o[l]=a),(!f||a.voidElement)&&(l>-1&&(a.voidElement||a.name===r.slice(2,-1))&&(l--,a=-1===l?c:o[l]),!m&&\"<\"!==d&&d)){u=-1===l?c:o[l].children;var x=e.indexOf(\"<\",p),g=e.slice(p,-1===x?void 0:x);i.test(g)&&(g=\" \"),(x>-1&&l+u.length>=0||\" \"!==g)&&u.push({type:\"text\",content:g})}}),c},stringify:function(e){return e.reduce(function(e,t){return e+a(\"\",t)},\"\")}};/* harmony default export */ __webpack_exports__[\"default\"] = (c);\n//# sourceMappingURL=html-parse-stringify.module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaHRtbC1wYXJzZS1zdHJpbmdpZnkvZGlzdC9odG1sLXBhcnNlLXN0cmluZ2lmeS5tb2R1bGUuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQTZCLDJEQUEyRCxjQUFjLE9BQU8sMENBQTBDLGFBQWEsa0NBQWtDLG9CQUFvQixzREFBQyxtRkFBbUYsMEJBQTBCLE9BQU8sK0NBQStDLCtCQUErQixxQkFBcUIseUJBQXlCLDJCQUEyQixxRUFBcUUsa0VBQWtFLFNBQVMsd0ZBQXdGLGdCQUFnQixlQUFlLDhCQUE4QixvREFBb0QsU0FBUyx1Q0FBdUMsbUNBQW1DLGlHQUFpRyxxREFBcUQsT0FBTyxvQkFBb0IsUUFBUSxpQ0FBaUMsMEJBQTBCLHVCQUF1QixxQkFBcUIsUUFBUSw4Q0FBOEMsRUFBRSxpQ0FBaUMsTUFBTSw4QkFBOEIsS0FBSywrRUFBK0UsTUFBTSxXQUFXLHVEQUF1RCxrSUFBa0ksZ0RBQWdELHNLQUFzSyx5QkFBeUIsb0RBQW9ELDJEQUEyRCxzQkFBc0IsR0FBRyxJQUFJLHVCQUF1Qiw4QkFBOEIsaUJBQWlCLE9BQU8sK0RBQWUsQ0FBQyxFQUFDO0FBQ3RpRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvaHRtbC1wYXJzZS1zdHJpbmdpZnkvZGlzdC9odG1sLXBhcnNlLXN0cmluZ2lmeS5tb2R1bGUuanM/MDdlNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZSBmcm9tXCJ2b2lkLWVsZW1lbnRzXCI7dmFyIHQ9L1xccyhbXidcIi9cXHM+PF0rPylbXFxzLz5dfChbXlxccz1dKyk9XFxzPyhcIi4qP1wifCcuKj8nKS9nO2Z1bmN0aW9uIG4obil7dmFyIHI9e3R5cGU6XCJ0YWdcIixuYW1lOlwiXCIsdm9pZEVsZW1lbnQ6ITEsYXR0cnM6e30sY2hpbGRyZW46W119LGk9bi5tYXRjaCgvPFxcLz8oW15cXHNdKz8pWy9cXHM+XS8pO2lmKGkmJihyLm5hbWU9aVsxXSwoZVtpWzFdXXx8XCIvXCI9PT1uLmNoYXJBdChuLmxlbmd0aC0yKSkmJihyLnZvaWRFbGVtZW50PSEwKSxyLm5hbWUuc3RhcnRzV2l0aChcIiEtLVwiKSkpe3ZhciBzPW4uaW5kZXhPZihcIi0tXFx4M2VcIik7cmV0dXJue3R5cGU6XCJjb21tZW50XCIsY29tbWVudDotMSE9PXM/bi5zbGljZSg0LHMpOlwiXCJ9fWZvcih2YXIgYT1uZXcgUmVnRXhwKHQpLGM9bnVsbDtudWxsIT09KGM9YS5leGVjKG4pKTspaWYoY1swXS50cmltKCkpaWYoY1sxXSl7dmFyIG89Y1sxXS50cmltKCksbD1bbyxcIlwiXTtvLmluZGV4T2YoXCI9XCIpPi0xJiYobD1vLnNwbGl0KFwiPVwiKSksci5hdHRyc1tsWzBdXT1sWzFdLGEubGFzdEluZGV4LS19ZWxzZSBjWzJdJiYoci5hdHRyc1tjWzJdXT1jWzNdLnRyaW0oKS5zdWJzdHJpbmcoMSxjWzNdLmxlbmd0aC0xKSk7cmV0dXJuIHJ9dmFyIHI9LzxbYS16QS1aMC05XFwtXFwhXFwvXSg/OlwiW15cIl0qXCJ8J1teJ10qJ3xbXidcIj5dKSo+L2csaT0vXlxccyokLyxzPU9iamVjdC5jcmVhdGUobnVsbCk7ZnVuY3Rpb24gYShlLHQpe3N3aXRjaCh0LnR5cGUpe2Nhc2VcInRleHRcIjpyZXR1cm4gZSt0LmNvbnRlbnQ7Y2FzZVwidGFnXCI6cmV0dXJuIGUrPVwiPFwiK3QubmFtZSsodC5hdHRycz9mdW5jdGlvbihlKXt2YXIgdD1bXTtmb3IodmFyIG4gaW4gZSl0LnB1c2gobisnPVwiJytlW25dKydcIicpO3JldHVybiB0Lmxlbmd0aD9cIiBcIit0LmpvaW4oXCIgXCIpOlwiXCJ9KHQuYXR0cnMpOlwiXCIpKyh0LnZvaWRFbGVtZW50P1wiLz5cIjpcIj5cIiksdC52b2lkRWxlbWVudD9lOmUrdC5jaGlsZHJlbi5yZWR1Y2UoYSxcIlwiKStcIjwvXCIrdC5uYW1lK1wiPlwiO2Nhc2VcImNvbW1lbnRcIjpyZXR1cm4gZStcIlxceDNjIS0tXCIrdC5jb21tZW50K1wiLS1cXHgzZVwifX12YXIgYz17cGFyc2U6ZnVuY3Rpb24oZSx0KXt0fHwodD17fSksdC5jb21wb25lbnRzfHwodC5jb21wb25lbnRzPXMpO3ZhciBhLGM9W10sbz1bXSxsPS0xLG09ITE7aWYoMCE9PWUuaW5kZXhPZihcIjxcIikpe3ZhciB1PWUuaW5kZXhPZihcIjxcIik7Yy5wdXNoKHt0eXBlOlwidGV4dFwiLGNvbnRlbnQ6LTE9PT11P2U6ZS5zdWJzdHJpbmcoMCx1KX0pfXJldHVybiBlLnJlcGxhY2UocixmdW5jdGlvbihyLHMpe2lmKG0pe2lmKHIhPT1cIjwvXCIrYS5uYW1lK1wiPlwiKXJldHVybjttPSExfXZhciB1LGY9XCIvXCIhPT1yLmNoYXJBdCgxKSxoPXIuc3RhcnRzV2l0aChcIlxceDNjIS0tXCIpLHA9cytyLmxlbmd0aCxkPWUuY2hhckF0KHApO2lmKGgpe3ZhciB2PW4ocik7cmV0dXJuIGw8MD8oYy5wdXNoKHYpLGMpOigodT1vW2xdKS5jaGlsZHJlbi5wdXNoKHYpLGMpfWlmKGYmJihsKyssXCJ0YWdcIj09PShhPW4ocikpLnR5cGUmJnQuY29tcG9uZW50c1thLm5hbWVdJiYoYS50eXBlPVwiY29tcG9uZW50XCIsbT0hMCksYS52b2lkRWxlbWVudHx8bXx8IWR8fFwiPFwiPT09ZHx8YS5jaGlsZHJlbi5wdXNoKHt0eXBlOlwidGV4dFwiLGNvbnRlbnQ6ZS5zbGljZShwLGUuaW5kZXhPZihcIjxcIixwKSl9KSwwPT09bCYmYy5wdXNoKGEpLCh1PW9bbC0xXSkmJnUuY2hpbGRyZW4ucHVzaChhKSxvW2xdPWEpLCghZnx8YS52b2lkRWxlbWVudCkmJihsPi0xJiYoYS52b2lkRWxlbWVudHx8YS5uYW1lPT09ci5zbGljZSgyLC0xKSkmJihsLS0sYT0tMT09PWw/YzpvW2xdKSwhbSYmXCI8XCIhPT1kJiZkKSl7dT0tMT09PWw/YzpvW2xdLmNoaWxkcmVuO3ZhciB4PWUuaW5kZXhPZihcIjxcIixwKSxnPWUuc2xpY2UocCwtMT09PXg/dm9pZCAwOngpO2kudGVzdChnKSYmKGc9XCIgXCIpLCh4Pi0xJiZsK3UubGVuZ3RoPj0wfHxcIiBcIiE9PWcpJiZ1LnB1c2goe3R5cGU6XCJ0ZXh0XCIsY29udGVudDpnfSl9fSksY30sc3RyaW5naWZ5OmZ1bmN0aW9uKGUpe3JldHVybiBlLnJlZHVjZShmdW5jdGlvbihlLHQpe3JldHVybiBlK2EoXCJcIix0KX0sXCJcIil9fTtleHBvcnQgZGVmYXVsdCBjO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aHRtbC1wYXJzZS1zdHJpbmdpZnkubW9kdWxlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/html-parse-stringify/dist/html-parse-stringify.module.js\n"));

/***/ }),

/***/ "./node_modules/lucide-react/dist/esm/Icon.js":
/*!****************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/Icon.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Icon; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _defaultAttributes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaultAttributes.js */ \"./node_modules/lucide-react/dist/esm/defaultAttributes.js\");\n/* harmony import */ var _shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shared/src/utils.js */ \"./node_modules/lucide-react/dist/esm/shared/src/utils.js\");\n/**\n * @license lucide-react v0.539.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\n\n\nconst Icon = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(\n  ({\n    color = \"currentColor\",\n    size = 24,\n    strokeWidth = 2,\n    absoluteStrokeWidth,\n    className = \"\",\n    children,\n    iconNode,\n    ...rest\n  }, ref) => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\n    \"svg\",\n    {\n      ref,\n      ..._defaultAttributes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n      width: size,\n      height: size,\n      stroke: color,\n      strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n      className: (0,_shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__.mergeClasses)(\"lucide\", className),\n      ...!children && !(0,_shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__.hasA11yProp)(rest) && { \"aria-hidden\": \"true\" },\n      ...rest\n    },\n    [\n      ...iconNode.map(([tag, attrs]) => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(tag, attrs)),\n      ...Array.isArray(children) ? children : [children]\n    ]\n  )\n);\n\n\n//# sourceMappingURL=Icon.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL0ljb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWtEO0FBQ0s7QUFDVzs7QUFFbEUsYUFBYSxpREFBVTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLFVBQVUsb0RBQWE7QUFDMUI7QUFDQTtBQUNBO0FBQ0EsU0FBUyw2REFBaUI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsa0VBQVk7QUFDN0IsdUJBQXVCLGlFQUFXLFlBQVksdUJBQXVCO0FBQ3JFO0FBQ0EsS0FBSztBQUNMO0FBQ0Esd0NBQXdDLG9EQUFhO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBOztBQUUyQjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL0ljb24uanM/OTIzMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC41MzkuMCAtIElTQ1xuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLlxuICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaW1wb3J0IHsgZm9yd2FyZFJlZiwgY3JlYXRlRWxlbWVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBkZWZhdWx0QXR0cmlidXRlcyBmcm9tICcuL2RlZmF1bHRBdHRyaWJ1dGVzLmpzJztcbmltcG9ydCB7IG1lcmdlQ2xhc3NlcywgaGFzQTExeVByb3AgfSBmcm9tICcuL3NoYXJlZC9zcmMvdXRpbHMuanMnO1xuXG5jb25zdCBJY29uID0gZm9yd2FyZFJlZihcbiAgKHtcbiAgICBjb2xvciA9IFwiY3VycmVudENvbG9yXCIsXG4gICAgc2l6ZSA9IDI0LFxuICAgIHN0cm9rZVdpZHRoID0gMixcbiAgICBhYnNvbHV0ZVN0cm9rZVdpZHRoLFxuICAgIGNsYXNzTmFtZSA9IFwiXCIsXG4gICAgY2hpbGRyZW4sXG4gICAgaWNvbk5vZGUsXG4gICAgLi4ucmVzdFxuICB9LCByZWYpID0+IGNyZWF0ZUVsZW1lbnQoXG4gICAgXCJzdmdcIixcbiAgICB7XG4gICAgICByZWYsXG4gICAgICAuLi5kZWZhdWx0QXR0cmlidXRlcyxcbiAgICAgIHdpZHRoOiBzaXplLFxuICAgICAgaGVpZ2h0OiBzaXplLFxuICAgICAgc3Ryb2tlOiBjb2xvcixcbiAgICAgIHN0cm9rZVdpZHRoOiBhYnNvbHV0ZVN0cm9rZVdpZHRoID8gTnVtYmVyKHN0cm9rZVdpZHRoKSAqIDI0IC8gTnVtYmVyKHNpemUpIDogc3Ryb2tlV2lkdGgsXG4gICAgICBjbGFzc05hbWU6IG1lcmdlQ2xhc3NlcyhcImx1Y2lkZVwiLCBjbGFzc05hbWUpLFxuICAgICAgLi4uIWNoaWxkcmVuICYmICFoYXNBMTF5UHJvcChyZXN0KSAmJiB7IFwiYXJpYS1oaWRkZW5cIjogXCJ0cnVlXCIgfSxcbiAgICAgIC4uLnJlc3RcbiAgICB9LFxuICAgIFtcbiAgICAgIC4uLmljb25Ob2RlLm1hcCgoW3RhZywgYXR0cnNdKSA9PiBjcmVhdGVFbGVtZW50KHRhZywgYXR0cnMpKSxcbiAgICAgIC4uLkFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW4gOiBbY2hpbGRyZW5dXG4gICAgXVxuICApXG4pO1xuXG5leHBvcnQgeyBJY29uIGFzIGRlZmF1bHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUljb24uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lucide-react/dist/esm/Icon.js\n"));

/***/ }),

/***/ "./node_modules/lucide-react/dist/esm/createLucideIcon.js":
/*!****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/createLucideIcon.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ createLucideIcon; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shared/src/utils.js */ \"./node_modules/lucide-react/dist/esm/shared/src/utils.js\");\n/* harmony import */ var _Icon_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Icon.js */ \"./node_modules/lucide-react/dist/esm/Icon.js\");\n/**\n * @license lucide-react v0.539.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\n\n\nconst createLucideIcon = (iconName, iconNode) => {\n  const Component = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(\n    ({ className, ...props }, ref) => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_Icon_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n      ref,\n      iconNode,\n      className: (0,_shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__.mergeClasses)(\n        `lucide-${(0,_shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__.toKebabCase)((0,_shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__.toPascalCase)(iconName))}`,\n        `lucide-${iconName}`,\n        className\n      ),\n      ...props\n    })\n  );\n  Component.displayName = (0,_shared_src_utils_js__WEBPACK_IMPORTED_MODULE_2__.toPascalCase)(iconName);\n  return Component;\n};\n\n\n//# sourceMappingURL=createLucideIcon.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2NyZWF0ZUx1Y2lkZUljb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWtEO0FBQzhCO0FBQ25EOztBQUU3QjtBQUNBLG9CQUFvQixpREFBVTtBQUM5QixPQUFPLHFCQUFxQixVQUFVLG9EQUFhLENBQUMsZ0RBQUk7QUFDeEQ7QUFDQTtBQUNBLGlCQUFpQixrRUFBWTtBQUM3QixrQkFBa0IsaUVBQVcsQ0FBQyxrRUFBWSxZQUFZO0FBQ3RELGtCQUFrQixTQUFTO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLDBCQUEwQixrRUFBWTtBQUN0QztBQUNBOztBQUV1QztBQUN2QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2NyZWF0ZUx1Y2lkZUljb24uanM/NDBjNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC41MzkuMCAtIElTQ1xuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLlxuICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaW1wb3J0IHsgZm9yd2FyZFJlZiwgY3JlYXRlRWxlbWVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IG1lcmdlQ2xhc3NlcywgdG9LZWJhYkNhc2UsIHRvUGFzY2FsQ2FzZSB9IGZyb20gJy4vc2hhcmVkL3NyYy91dGlscy5qcyc7XG5pbXBvcnQgSWNvbiBmcm9tICcuL0ljb24uanMnO1xuXG5jb25zdCBjcmVhdGVMdWNpZGVJY29uID0gKGljb25OYW1lLCBpY29uTm9kZSkgPT4ge1xuICBjb25zdCBDb21wb25lbnQgPSBmb3J3YXJkUmVmKFxuICAgICh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiBjcmVhdGVFbGVtZW50KEljb24sIHtcbiAgICAgIHJlZixcbiAgICAgIGljb25Ob2RlLFxuICAgICAgY2xhc3NOYW1lOiBtZXJnZUNsYXNzZXMoXG4gICAgICAgIGBsdWNpZGUtJHt0b0tlYmFiQ2FzZSh0b1Bhc2NhbENhc2UoaWNvbk5hbWUpKX1gLFxuICAgICAgICBgbHVjaWRlLSR7aWNvbk5hbWV9YCxcbiAgICAgICAgY2xhc3NOYW1lXG4gICAgICApLFxuICAgICAgLi4ucHJvcHNcbiAgICB9KVxuICApO1xuICBDb21wb25lbnQuZGlzcGxheU5hbWUgPSB0b1Bhc2NhbENhc2UoaWNvbk5hbWUpO1xuICByZXR1cm4gQ29tcG9uZW50O1xufTtcblxuZXhwb3J0IHsgY3JlYXRlTHVjaWRlSWNvbiBhcyBkZWZhdWx0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jcmVhdGVMdWNpZGVJY29uLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lucide-react/dist/esm/createLucideIcon.js\n"));

/***/ }),

/***/ "./node_modules/lucide-react/dist/esm/defaultAttributes.js":
/*!*****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/defaultAttributes.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ defaultAttributes; }\n/* harmony export */ });\n/**\n * @license lucide-react v0.539.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nvar defaultAttributes = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 24,\n  height: 24,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n};\n\n\n//# sourceMappingURL=defaultAttributes.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2RlZmF1bHRBdHRyaWJ1dGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFd0M7QUFDeEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2x1Y2lkZS1yZWFjdC9kaXN0L2VzbS9kZWZhdWx0QXR0cmlidXRlcy5qcz8xZDdmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjUzOS4wIC0gSVNDXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuXG4gKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG52YXIgZGVmYXVsdEF0dHJpYnV0ZXMgPSB7XG4gIHhtbG5zOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXG4gIHdpZHRoOiAyNCxcbiAgaGVpZ2h0OiAyNCxcbiAgdmlld0JveDogXCIwIDAgMjQgMjRcIixcbiAgZmlsbDogXCJub25lXCIsXG4gIHN0cm9rZTogXCJjdXJyZW50Q29sb3JcIixcbiAgc3Ryb2tlV2lkdGg6IDIsXG4gIHN0cm9rZUxpbmVjYXA6IFwicm91bmRcIixcbiAgc3Ryb2tlTGluZWpvaW46IFwicm91bmRcIlxufTtcblxuZXhwb3J0IHsgZGVmYXVsdEF0dHJpYnV0ZXMgYXMgZGVmYXVsdCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVmYXVsdEF0dHJpYnV0ZXMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lucide-react/dist/esm/defaultAttributes.js\n"));

/***/ }),

/***/ "./node_modules/lucide-react/dist/esm/icons/chart-column.js":
/*!******************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/chart-column.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __iconNode: function() { return /* binding */ __iconNode; },\n/* harmony export */   \"default\": function() { return /* binding */ ChartColumn; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.539.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst __iconNode = [\n  [\"path\", { d: \"M3 3v16a2 2 0 0 0 2 2h16\", key: \"c24i48\" }],\n  [\"path\", { d: \"M18 17V9\", key: \"2bz60n\" }],\n  [\"path\", { d: \"M13 17V5\", key: \"1frdt8\" }],\n  [\"path\", { d: \"M8 17v-3\", key: \"17ska0\" }]\n];\nconst ChartColumn = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"chart-column\", __iconNode);\n\n\n//# sourceMappingURL=chart-column.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL2NoYXJ0LWNvbHVtbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXNEOztBQUV0RDtBQUNBLGFBQWEsOENBQThDO0FBQzNELGFBQWEsOEJBQThCO0FBQzNDLGFBQWEsOEJBQThCO0FBQzNDLGFBQWEsOEJBQThCO0FBQzNDO0FBQ0Esb0JBQW9CLGdFQUFnQjs7QUFFVTtBQUM5QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL2NoYXJ0LWNvbHVtbi5qcz83ODRkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjUzOS4wIC0gSVNDXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuXG4gKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pbXBvcnQgY3JlYXRlTHVjaWRlSWNvbiBmcm9tICcuLi9jcmVhdGVMdWNpZGVJY29uLmpzJztcblxuY29uc3QgX19pY29uTm9kZSA9IFtcbiAgW1wicGF0aFwiLCB7IGQ6IFwiTTMgM3YxNmEyIDIgMCAwIDAgMiAyaDE2XCIsIGtleTogXCJjMjRpNDhcIiB9XSxcbiAgW1wicGF0aFwiLCB7IGQ6IFwiTTE4IDE3VjlcIiwga2V5OiBcIjJiejYwblwiIH1dLFxuICBbXCJwYXRoXCIsIHsgZDogXCJNMTMgMTdWNVwiLCBrZXk6IFwiMWZyZHQ4XCIgfV0sXG4gIFtcInBhdGhcIiwgeyBkOiBcIk04IDE3di0zXCIsIGtleTogXCIxN3NrYTBcIiB9XVxuXTtcbmNvbnN0IENoYXJ0Q29sdW1uID0gY3JlYXRlTHVjaWRlSWNvbihcImNoYXJ0LWNvbHVtblwiLCBfX2ljb25Ob2RlKTtcblxuZXhwb3J0IHsgX19pY29uTm9kZSwgQ2hhcnRDb2x1bW4gYXMgZGVmYXVsdCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2hhcnQtY29sdW1uLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lucide-react/dist/esm/icons/chart-column.js\n"));

/***/ }),

/***/ "./node_modules/lucide-react/dist/esm/icons/dollar-sign.js":
/*!*****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/dollar-sign.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __iconNode: function() { return /* binding */ __iconNode; },\n/* harmony export */   \"default\": function() { return /* binding */ DollarSign; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.539.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst __iconNode = [\n  [\"line\", { x1: \"12\", x2: \"12\", y1: \"2\", y2: \"22\", key: \"7eqyqh\" }],\n  [\"path\", { d: \"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\", key: \"1b0p4s\" }]\n];\nconst DollarSign = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"dollar-sign\", __iconNode);\n\n\n//# sourceMappingURL=dollar-sign.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL2RvbGxhci1zaWduLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFc0Q7O0FBRXREO0FBQ0EsYUFBYSxzREFBc0Q7QUFDbkUsYUFBYSx1RUFBdUU7QUFDcEY7QUFDQSxtQkFBbUIsZ0VBQWdCOztBQUVVO0FBQzdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvZG9sbGFyLXNpZ24uanM/MWJjOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC41MzkuMCAtIElTQ1xuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLlxuICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaW1wb3J0IGNyZWF0ZUx1Y2lkZUljb24gZnJvbSAnLi4vY3JlYXRlTHVjaWRlSWNvbi5qcyc7XG5cbmNvbnN0IF9faWNvbk5vZGUgPSBbXG4gIFtcImxpbmVcIiwgeyB4MTogXCIxMlwiLCB4MjogXCIxMlwiLCB5MTogXCIyXCIsIHkyOiBcIjIyXCIsIGtleTogXCI3ZXF5cWhcIiB9XSxcbiAgW1wicGF0aFwiLCB7IGQ6IFwiTTE3IDVIOS41YTMuNSAzLjUgMCAwIDAgMCA3aDVhMy41IDMuNSAwIDAgMSAwIDdINlwiLCBrZXk6IFwiMWIwcDRzXCIgfV1cbl07XG5jb25zdCBEb2xsYXJTaWduID0gY3JlYXRlTHVjaWRlSWNvbihcImRvbGxhci1zaWduXCIsIF9faWNvbk5vZGUpO1xuXG5leHBvcnQgeyBfX2ljb25Ob2RlLCBEb2xsYXJTaWduIGFzIGRlZmF1bHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRvbGxhci1zaWduLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lucide-react/dist/esm/icons/dollar-sign.js\n"));

/***/ }),

/***/ "./node_modules/lucide-react/dist/esm/icons/globe.js":
/*!***********************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/globe.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __iconNode: function() { return /* binding */ __iconNode; },\n/* harmony export */   \"default\": function() { return /* binding */ Globe; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.539.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst __iconNode = [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20\", key: \"13o1zl\" }],\n  [\"path\", { d: \"M2 12h20\", key: \"9i4pu4\" }]\n];\nconst Globe = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"globe\", __iconNode);\n\n\n//# sourceMappingURL=globe.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL2dsb2JlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFc0Q7O0FBRXREO0FBQ0EsZUFBZSw0Q0FBNEM7QUFDM0QsYUFBYSxxRUFBcUU7QUFDbEYsYUFBYSw4QkFBOEI7QUFDM0M7QUFDQSxjQUFjLGdFQUFnQjs7QUFFVTtBQUN4QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL2dsb2JlLmpzPzBkNGMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNTM5LjAgLSBJU0NcbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS5cbiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmltcG9ydCBjcmVhdGVMdWNpZGVJY29uIGZyb20gJy4uL2NyZWF0ZUx1Y2lkZUljb24uanMnO1xuXG5jb25zdCBfX2ljb25Ob2RlID0gW1xuICBbXCJjaXJjbGVcIiwgeyBjeDogXCIxMlwiLCBjeTogXCIxMlwiLCByOiBcIjEwXCIsIGtleTogXCIxbWdsYXlcIiB9XSxcbiAgW1wicGF0aFwiLCB7IGQ6IFwiTTEyIDJhMTQuNSAxNC41IDAgMCAwIDAgMjAgMTQuNSAxNC41IDAgMCAwIDAtMjBcIiwga2V5OiBcIjEzbzF6bFwiIH1dLFxuICBbXCJwYXRoXCIsIHsgZDogXCJNMiAxMmgyMFwiLCBrZXk6IFwiOWk0cHU0XCIgfV1cbl07XG5jb25zdCBHbG9iZSA9IGNyZWF0ZUx1Y2lkZUljb24oXCJnbG9iZVwiLCBfX2ljb25Ob2RlKTtcblxuZXhwb3J0IHsgX19pY29uTm9kZSwgR2xvYmUgYXMgZGVmYXVsdCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2xvYmUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lucide-react/dist/esm/icons/globe.js\n"));

/***/ }),

/***/ "./node_modules/lucide-react/dist/esm/icons/loader.js":
/*!************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/loader.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __iconNode: function() { return /* binding */ __iconNode; },\n/* harmony export */   \"default\": function() { return /* binding */ Loader; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.539.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst __iconNode = [\n  [\"path\", { d: \"M12 2v4\", key: \"3427ic\" }],\n  [\"path\", { d: \"m16.2 7.8 2.9-2.9\", key: \"r700ao\" }],\n  [\"path\", { d: \"M18 12h4\", key: \"wj9ykh\" }],\n  [\"path\", { d: \"m16.2 16.2 2.9 2.9\", key: \"1bxg5t\" }],\n  [\"path\", { d: \"M12 18v4\", key: \"jadmvz\" }],\n  [\"path\", { d: \"m4.9 19.1 2.9-2.9\", key: \"bwix9q\" }],\n  [\"path\", { d: \"M2 12h4\", key: \"j09sii\" }],\n  [\"path\", { d: \"m4.9 4.9 2.9 2.9\", key: \"giyufr\" }]\n];\nconst Loader = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"loader\", __iconNode);\n\n\n//# sourceMappingURL=loader.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL2xvYWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXNEOztBQUV0RDtBQUNBLGFBQWEsNkJBQTZCO0FBQzFDLGFBQWEsdUNBQXVDO0FBQ3BELGFBQWEsOEJBQThCO0FBQzNDLGFBQWEsd0NBQXdDO0FBQ3JELGFBQWEsOEJBQThCO0FBQzNDLGFBQWEsdUNBQXVDO0FBQ3BELGFBQWEsNkJBQTZCO0FBQzFDLGFBQWEsc0NBQXNDO0FBQ25EO0FBQ0EsZUFBZSxnRUFBZ0I7O0FBRVU7QUFDekMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2x1Y2lkZS1yZWFjdC9kaXN0L2VzbS9pY29ucy9sb2FkZXIuanM/NjY4MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC41MzkuMCAtIElTQ1xuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLlxuICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaW1wb3J0IGNyZWF0ZUx1Y2lkZUljb24gZnJvbSAnLi4vY3JlYXRlTHVjaWRlSWNvbi5qcyc7XG5cbmNvbnN0IF9faWNvbk5vZGUgPSBbXG4gIFtcInBhdGhcIiwgeyBkOiBcIk0xMiAydjRcIiwga2V5OiBcIjM0MjdpY1wiIH1dLFxuICBbXCJwYXRoXCIsIHsgZDogXCJtMTYuMiA3LjggMi45LTIuOVwiLCBrZXk6IFwicjcwMGFvXCIgfV0sXG4gIFtcInBhdGhcIiwgeyBkOiBcIk0xOCAxMmg0XCIsIGtleTogXCJ3ajl5a2hcIiB9XSxcbiAgW1wicGF0aFwiLCB7IGQ6IFwibTE2LjIgMTYuMiAyLjkgMi45XCIsIGtleTogXCIxYnhnNXRcIiB9XSxcbiAgW1wicGF0aFwiLCB7IGQ6IFwiTTEyIDE4djRcIiwga2V5OiBcImphZG12elwiIH1dLFxuICBbXCJwYXRoXCIsIHsgZDogXCJtNC45IDE5LjEgMi45LTIuOVwiLCBrZXk6IFwiYndpeDlxXCIgfV0sXG4gIFtcInBhdGhcIiwgeyBkOiBcIk0yIDEyaDRcIiwga2V5OiBcImowOXNpaVwiIH1dLFxuICBbXCJwYXRoXCIsIHsgZDogXCJtNC45IDQuOSAyLjkgMi45XCIsIGtleTogXCJnaXl1ZnJcIiB9XVxuXTtcbmNvbnN0IExvYWRlciA9IGNyZWF0ZUx1Y2lkZUljb24oXCJsb2FkZXJcIiwgX19pY29uTm9kZSk7XG5cbmV4cG9ydCB7IF9faWNvbk5vZGUsIExvYWRlciBhcyBkZWZhdWx0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2FkZXIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lucide-react/dist/esm/icons/loader.js\n"));

/***/ }),

/***/ "./node_modules/lucide-react/dist/esm/icons/message-circle.js":
/*!********************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/message-circle.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __iconNode: function() { return /* binding */ __iconNode; },\n/* harmony export */   \"default\": function() { return /* binding */ MessageCircle; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.539.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M2.992 16.342a2 2 0 0 1 .094 1.167l-1.065 3.29a1 1 0 0 0 1.236 1.168l3.413-.998a2 2 0 0 1 1.099.092 10 10 0 1 0-4.777-4.719\",\n      key: \"1sd12s\"\n    }\n  ]\n];\nconst MessageCircle = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"message-circle\", __iconNode);\n\n\n//# sourceMappingURL=message-circle.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL21lc3NhZ2UtY2lyY2xlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFc0Q7O0FBRXREO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixnRUFBZ0I7O0FBRVU7QUFDaEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2x1Y2lkZS1yZWFjdC9kaXN0L2VzbS9pY29ucy9tZXNzYWdlLWNpcmNsZS5qcz8zMWQxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjUzOS4wIC0gSVNDXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuXG4gKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pbXBvcnQgY3JlYXRlTHVjaWRlSWNvbiBmcm9tICcuLi9jcmVhdGVMdWNpZGVJY29uLmpzJztcblxuY29uc3QgX19pY29uTm9kZSA9IFtcbiAgW1xuICAgIFwicGF0aFwiLFxuICAgIHtcbiAgICAgIGQ6IFwiTTIuOTkyIDE2LjM0MmEyIDIgMCAwIDEgLjA5NCAxLjE2N2wtMS4wNjUgMy4yOWExIDEgMCAwIDAgMS4yMzYgMS4xNjhsMy40MTMtLjk5OGEyIDIgMCAwIDEgMS4wOTkuMDkyIDEwIDEwIDAgMSAwLTQuNzc3LTQuNzE5XCIsXG4gICAgICBrZXk6IFwiMXNkMTJzXCJcbiAgICB9XG4gIF1cbl07XG5jb25zdCBNZXNzYWdlQ2lyY2xlID0gY3JlYXRlTHVjaWRlSWNvbihcIm1lc3NhZ2UtY2lyY2xlXCIsIF9faWNvbk5vZGUpO1xuXG5leHBvcnQgeyBfX2ljb25Ob2RlLCBNZXNzYWdlQ2lyY2xlIGFzIGRlZmF1bHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1lc3NhZ2UtY2lyY2xlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lucide-react/dist/esm/icons/message-circle.js\n"));

/***/ }),

/***/ "./node_modules/lucide-react/dist/esm/icons/send.js":
/*!**********************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/send.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __iconNode: function() { return /* binding */ __iconNode; },\n/* harmony export */   \"default\": function() { return /* binding */ Send; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.539.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M14.536 21.686a.5.5 0 0 0 .937-.024l6.5-19a.496.496 0 0 0-.635-.635l-19 6.5a.5.5 0 0 0-.024.937l7.93 3.18a2 2 0 0 1 1.112 1.11z\",\n      key: \"1ffxy3\"\n    }\n  ],\n  [\"path\", { d: \"m21.854 2.147-10.94 10.939\", key: \"12cjpa\" }]\n];\nconst Send = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"send\", __iconNode);\n\n\n//# sourceMappingURL=send.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL3NlbmQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVzRDs7QUFFdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsZ0RBQWdEO0FBQzdEO0FBQ0EsYUFBYSxnRUFBZ0I7O0FBRVU7QUFDdkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2x1Y2lkZS1yZWFjdC9kaXN0L2VzbS9pY29ucy9zZW5kLmpzP2E2NGUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNTM5LjAgLSBJU0NcbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS5cbiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmltcG9ydCBjcmVhdGVMdWNpZGVJY29uIGZyb20gJy4uL2NyZWF0ZUx1Y2lkZUljb24uanMnO1xuXG5jb25zdCBfX2ljb25Ob2RlID0gW1xuICBbXG4gICAgXCJwYXRoXCIsXG4gICAge1xuICAgICAgZDogXCJNMTQuNTM2IDIxLjY4NmEuNS41IDAgMCAwIC45MzctLjAyNGw2LjUtMTlhLjQ5Ni40OTYgMCAwIDAtLjYzNS0uNjM1bC0xOSA2LjVhLjUuNSAwIDAgMC0uMDI0LjkzN2w3LjkzIDMuMThhMiAyIDAgMCAxIDEuMTEyIDEuMTF6XCIsXG4gICAgICBrZXk6IFwiMWZmeHkzXCJcbiAgICB9XG4gIF0sXG4gIFtcInBhdGhcIiwgeyBkOiBcIm0yMS44NTQgMi4xNDctMTAuOTQgMTAuOTM5XCIsIGtleTogXCIxMmNqcGFcIiB9XVxuXTtcbmNvbnN0IFNlbmQgPSBjcmVhdGVMdWNpZGVJY29uKFwic2VuZFwiLCBfX2ljb25Ob2RlKTtcblxuZXhwb3J0IHsgX19pY29uTm9kZSwgU2VuZCBhcyBkZWZhdWx0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZW5kLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lucide-react/dist/esm/icons/send.js\n"));

/***/ }),

/***/ "./node_modules/lucide-react/dist/esm/icons/target.js":
/*!************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/target.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __iconNode: function() { return /* binding */ __iconNode; },\n/* harmony export */   \"default\": function() { return /* binding */ Target; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.539.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst __iconNode = [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"6\", key: \"1vlfrh\" }],\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"2\", key: \"1c9p78\" }]\n];\nconst Target = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"target\", __iconNode);\n\n\n//# sourceMappingURL=target.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL3RhcmdldC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXNEOztBQUV0RDtBQUNBLGVBQWUsNENBQTRDO0FBQzNELGVBQWUsMkNBQTJDO0FBQzFELGVBQWUsMkNBQTJDO0FBQzFEO0FBQ0EsZUFBZSxnRUFBZ0I7O0FBRVU7QUFDekMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2x1Y2lkZS1yZWFjdC9kaXN0L2VzbS9pY29ucy90YXJnZXQuanM/NTU4ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC41MzkuMCAtIElTQ1xuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLlxuICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaW1wb3J0IGNyZWF0ZUx1Y2lkZUljb24gZnJvbSAnLi4vY3JlYXRlTHVjaWRlSWNvbi5qcyc7XG5cbmNvbnN0IF9faWNvbk5vZGUgPSBbXG4gIFtcImNpcmNsZVwiLCB7IGN4OiBcIjEyXCIsIGN5OiBcIjEyXCIsIHI6IFwiMTBcIiwga2V5OiBcIjFtZ2xheVwiIH1dLFxuICBbXCJjaXJjbGVcIiwgeyBjeDogXCIxMlwiLCBjeTogXCIxMlwiLCByOiBcIjZcIiwga2V5OiBcIjF2bGZyaFwiIH1dLFxuICBbXCJjaXJjbGVcIiwgeyBjeDogXCIxMlwiLCBjeTogXCIxMlwiLCByOiBcIjJcIiwga2V5OiBcIjFjOXA3OFwiIH1dXG5dO1xuY29uc3QgVGFyZ2V0ID0gY3JlYXRlTHVjaWRlSWNvbihcInRhcmdldFwiLCBfX2ljb25Ob2RlKTtcblxuZXhwb3J0IHsgX19pY29uTm9kZSwgVGFyZ2V0IGFzIGRlZmF1bHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRhcmdldC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lucide-react/dist/esm/icons/target.js\n"));

/***/ }),

/***/ "./node_modules/lucide-react/dist/esm/icons/users.js":
/*!***********************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/users.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __iconNode: function() { return /* binding */ __iconNode; },\n/* harmony export */   \"default\": function() { return /* binding */ Users; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.539.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst __iconNode = [\n  [\"path\", { d: \"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\", key: \"1yyitq\" }],\n  [\"path\", { d: \"M16 3.128a4 4 0 0 1 0 7.744\", key: \"16gr8j\" }],\n  [\"path\", { d: \"M22 21v-2a4 4 0 0 0-3-3.87\", key: \"kshegd\" }],\n  [\"circle\", { cx: \"9\", cy: \"7\", r: \"4\", key: \"nufk8\" }]\n];\nconst Users = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"users\", __iconNode);\n\n\n//# sourceMappingURL=users.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL3VzZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFc0Q7O0FBRXREO0FBQ0EsYUFBYSwrREFBK0Q7QUFDNUUsYUFBYSxpREFBaUQ7QUFDOUQsYUFBYSxnREFBZ0Q7QUFDN0QsZUFBZSx3Q0FBd0M7QUFDdkQ7QUFDQSxjQUFjLGdFQUFnQjs7QUFFVTtBQUN4QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL3VzZXJzLmpzPzA5ZmMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNTM5LjAgLSBJU0NcbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS5cbiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmltcG9ydCBjcmVhdGVMdWNpZGVJY29uIGZyb20gJy4uL2NyZWF0ZUx1Y2lkZUljb24uanMnO1xuXG5jb25zdCBfX2ljb25Ob2RlID0gW1xuICBbXCJwYXRoXCIsIHsgZDogXCJNMTYgMjF2LTJhNCA0IDAgMCAwLTQtNEg2YTQgNCAwIDAgMC00IDR2MlwiLCBrZXk6IFwiMXl5aXRxXCIgfV0sXG4gIFtcInBhdGhcIiwgeyBkOiBcIk0xNiAzLjEyOGE0IDQgMCAwIDEgMCA3Ljc0NFwiLCBrZXk6IFwiMTZncjhqXCIgfV0sXG4gIFtcInBhdGhcIiwgeyBkOiBcIk0yMiAyMXYtMmE0IDQgMCAwIDAtMy0zLjg3XCIsIGtleTogXCJrc2hlZ2RcIiB9XSxcbiAgW1wiY2lyY2xlXCIsIHsgY3g6IFwiOVwiLCBjeTogXCI3XCIsIHI6IFwiNFwiLCBrZXk6IFwibnVmazhcIiB9XVxuXTtcbmNvbnN0IFVzZXJzID0gY3JlYXRlTHVjaWRlSWNvbihcInVzZXJzXCIsIF9faWNvbk5vZGUpO1xuXG5leHBvcnQgeyBfX2ljb25Ob2RlLCBVc2VycyBhcyBkZWZhdWx0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11c2Vycy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lucide-react/dist/esm/icons/users.js\n"));

/***/ }),

/***/ "./node_modules/lucide-react/dist/esm/icons/x.js":
/*!*******************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/x.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __iconNode: function() { return /* binding */ __iconNode; },\n/* harmony export */   \"default\": function() { return /* binding */ X; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.539.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst __iconNode = [\n  [\"path\", { d: \"M18 6 6 18\", key: \"1bl5f8\" }],\n  [\"path\", { d: \"m6 6 12 12\", key: \"d8bk6v\" }]\n];\nconst X = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"x\", __iconNode);\n\n\n//# sourceMappingURL=x.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVzRDs7QUFFdEQ7QUFDQSxhQUFhLGdDQUFnQztBQUM3QyxhQUFhLGdDQUFnQztBQUM3QztBQUNBLFVBQVUsZ0VBQWdCOztBQUVVO0FBQ3BDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMveC5qcz9kZjg4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjUzOS4wIC0gSVNDXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuXG4gKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pbXBvcnQgY3JlYXRlTHVjaWRlSWNvbiBmcm9tICcuLi9jcmVhdGVMdWNpZGVJY29uLmpzJztcblxuY29uc3QgX19pY29uTm9kZSA9IFtcbiAgW1wicGF0aFwiLCB7IGQ6IFwiTTE4IDYgNiAxOFwiLCBrZXk6IFwiMWJsNWY4XCIgfV0sXG4gIFtcInBhdGhcIiwgeyBkOiBcIm02IDYgMTIgMTJcIiwga2V5OiBcImQ4Yms2dlwiIH1dXG5dO1xuY29uc3QgWCA9IGNyZWF0ZUx1Y2lkZUljb24oXCJ4XCIsIF9faWNvbk5vZGUpO1xuXG5leHBvcnQgeyBfX2ljb25Ob2RlLCBYIGFzIGRlZmF1bHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXguanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lucide-react/dist/esm/icons/x.js\n"));

/***/ }),

/***/ "./node_modules/lucide-react/dist/esm/shared/src/utils.js":
/*!****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/shared/src/utils.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasA11yProp: function() { return /* binding */ hasA11yProp; },\n/* harmony export */   mergeClasses: function() { return /* binding */ mergeClasses; },\n/* harmony export */   toCamelCase: function() { return /* binding */ toCamelCase; },\n/* harmony export */   toKebabCase: function() { return /* binding */ toKebabCase; },\n/* harmony export */   toPascalCase: function() { return /* binding */ toPascalCase; }\n/* harmony export */ });\n/**\n * @license lucide-react v0.539.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nconst toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst toCamelCase = (string) => string.replace(\n  /^([A-Z])|[\\s-_]+(\\w)/g,\n  (match, p1, p2) => p2 ? p2.toUpperCase() : p1.toLowerCase()\n);\nconst toPascalCase = (string) => {\n  const camelCase = toCamelCase(string);\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n};\nconst mergeClasses = (...classes) => classes.filter((className, index, array) => {\n  return Boolean(className) && className.trim() !== \"\" && array.indexOf(className) === index;\n}).join(\" \").trim();\nconst hasA11yProp = (props) => {\n  for (const prop in props) {\n    if (prop.startsWith(\"aria-\") || prop === \"role\" || prop === \"title\") {\n      return true;\n    }\n  }\n};\n\n\n//# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL3NoYXJlZC9zcmMvdXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFNkU7QUFDN0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2x1Y2lkZS1yZWFjdC9kaXN0L2VzbS9zaGFyZWQvc3JjL3V0aWxzLmpzPzBhOTAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuNTM5LjAgLSBJU0NcbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS5cbiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IHRvS2ViYWJDYXNlID0gKHN0cmluZykgPT4gc3RyaW5nLnJlcGxhY2UoLyhbYS16MC05XSkoW0EtWl0pL2csIFwiJDEtJDJcIikudG9Mb3dlckNhc2UoKTtcbmNvbnN0IHRvQ2FtZWxDYXNlID0gKHN0cmluZykgPT4gc3RyaW5nLnJlcGxhY2UoXG4gIC9eKFtBLVpdKXxbXFxzLV9dKyhcXHcpL2csXG4gIChtYXRjaCwgcDEsIHAyKSA9PiBwMiA/IHAyLnRvVXBwZXJDYXNlKCkgOiBwMS50b0xvd2VyQ2FzZSgpXG4pO1xuY29uc3QgdG9QYXNjYWxDYXNlID0gKHN0cmluZykgPT4ge1xuICBjb25zdCBjYW1lbENhc2UgPSB0b0NhbWVsQ2FzZShzdHJpbmcpO1xuICByZXR1cm4gY2FtZWxDYXNlLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgY2FtZWxDYXNlLnNsaWNlKDEpO1xufTtcbmNvbnN0IG1lcmdlQ2xhc3NlcyA9ICguLi5jbGFzc2VzKSA9PiBjbGFzc2VzLmZpbHRlcigoY2xhc3NOYW1lLCBpbmRleCwgYXJyYXkpID0+IHtcbiAgcmV0dXJuIEJvb2xlYW4oY2xhc3NOYW1lKSAmJiBjbGFzc05hbWUudHJpbSgpICE9PSBcIlwiICYmIGFycmF5LmluZGV4T2YoY2xhc3NOYW1lKSA9PT0gaW5kZXg7XG59KS5qb2luKFwiIFwiKS50cmltKCk7XG5jb25zdCBoYXNBMTF5UHJvcCA9IChwcm9wcykgPT4ge1xuICBmb3IgKGNvbnN0IHByb3AgaW4gcHJvcHMpIHtcbiAgICBpZiAocHJvcC5zdGFydHNXaXRoKFwiYXJpYS1cIikgfHwgcHJvcCA9PT0gXCJyb2xlXCIgfHwgcHJvcCA9PT0gXCJ0aXRsZVwiKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cbn07XG5cbmV4cG9ydCB7IGhhc0ExMXlQcm9wLCBtZXJnZUNsYXNzZXMsIHRvQ2FtZWxDYXNlLCB0b0tlYmFiQ2FzZSwgdG9QYXNjYWxDYXNlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lucide-react/dist/esm/shared/src/utils.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _global_process, _global_process1;\nmodule.exports = ((_global_process = __webpack_require__.g.process) == null ? void 0 : _global_process.env) && typeof ((_global_process1 = __webpack_require__.g.process) == null ? void 0 : _global_process1.env) === \"object\" ? __webpack_require__.g.process : __webpack_require__(/*! next/dist/compiled/process */ \"./node_modules/next/dist/compiled/process/browser.js\");\n\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSxxQ0FBcUMscUJBQU0saUZBQWlGLHFCQUFNLGtFQUFrRSxxQkFBTSxXQUFXLG1CQUFPLENBQUMsd0ZBQTRCOztBQUV6UCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzP2NhNjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX2dsb2JhbF9wcm9jZXNzLCBfZ2xvYmFsX3Byb2Nlc3MxO1xubW9kdWxlLmV4cG9ydHMgPSAoKF9nbG9iYWxfcHJvY2VzcyA9IGdsb2JhbC5wcm9jZXNzKSA9PSBudWxsID8gdm9pZCAwIDogX2dsb2JhbF9wcm9jZXNzLmVudikgJiYgdHlwZW9mICgoX2dsb2JhbF9wcm9jZXNzMSA9IGdsb2JhbC5wcm9jZXNzKSA9PSBudWxsID8gdm9pZCAwIDogX2dsb2JhbF9wcm9jZXNzMS5lbnYpID09PSBcIm9iamVjdFwiID8gZ2xvYmFsLnByb2Nlc3MgOiByZXF1aXJlKFwibmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3NcIik7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXByb2Nlc3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/components/dashboard.css":
/*!***********************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/components/dashboard.css ***!
  \***********************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* ============================= */\\n/* TRIANGLE INTELLIGENCE         */\\n/* Dashboard Components          */\\n/* Bloomberg Terminal Style      */\\n/* ============================= */\\n\\n/**\\n * Bloomberg Terminal-style Dashboard Components\\n * \\n * This module contains all dashboard-specific components including:\\n * - Executive dashboard layout\\n * - Metrics cards and widgets\\n * - Dashboard navigation\\n * - Intelligence panels\\n * - Real-time data displays\\n */\\n\\n/* ===== DASHBOARD LAYOUTS ===== */\\n\\n/* Executive Dashboard Container */\\n.executive-dashboard-container {\\n  width: 100%;\\n  padding: var(--space-lg);\\n}\\n\\n.executive-dashboard-container-centered {\\n  width: 100%;\\n  max-width: var(--container-2xl);\\n  margin: 0 auto;\\n  padding: var(--space-lg);\\n}\\n\\n/* Dashboard Grid System */\\n.dashboard-grid {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\\n  grid-gap: var(--space-lg);\\n  gap: var(--space-lg);\\n  margin: var(--space-lg) 0;\\n}\\n\\n.dashboard-container {\\n  width: 100%;\\n  max-width: var(--container-2xl);\\n  margin: 0 auto;\\n  padding: 0 var(--space-lg);\\n}\\n\\n/* ===== DASHBOARD WIDGETS ===== */\\n\\n/* Base Widget Styles */\\n.dashboard-widget {\\n  background: var(--bg-secondary);\\n  border: var(--border-1) solid var(--bloomberg-gray-700);\\n  border-radius: var(--radius-lg);\\n  padding: var(--space-lg);\\n  box-shadow: var(--shadow-md);\\n  transition: var(--transition-all);\\n}\\n\\n.dashboard-widget:hover {\\n  border-color: var(--accent-primary);\\n  box-shadow: var(--shadow-bloomberg);\\n  transform: translateY(-2px);\\n}\\n\\n/* Widget Header */\\n.dashboard-widget-header {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  margin-bottom: var(--space-md);\\n  padding-bottom: var(--space-sm);\\n  border-bottom: var(--border-1) solid var(--bloomberg-gray-700);\\n}\\n\\n.dashboard-widget-title {\\n  font-size: var(--text-lg);\\n  font-weight: var(--font-semibold);\\n  color: var(--text-primary);\\n  text-transform: uppercase;\\n  letter-spacing: var(--tracking-wide);\\n}\\n\\n.dashboard-widget-actions {\\n  display: flex;\\n  gap: var(--space-sm);\\n}\\n\\n/* ===== METRICS SYSTEM ===== */\\n\\n/* Metrics Grid */\\n.metrics-grid {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, var(--metric-card-width));\\n  justify-content: center;\\n  grid-gap: var(--space-lg);\\n  gap: var(--space-lg);\\n  margin-bottom: var(--space-2xl);\\n}\\n\\n.executive-metrics-hero {\\n  margin-bottom: var(--space-2xl);\\n}\\n\\n/* Metric Cards */\\n.metric-card {\\n  background: rgba(0, 0, 0, 0.2);\\n  border: var(--border-1) solid var(--bloomberg-gray-700);\\n  border-radius: var(--radius-lg);\\n  padding: var(--space-lg);\\n  text-align: center;\\n  transition: var(--transition-all);\\n  position: relative;\\n  overflow: hidden;\\n  min-height: var(--metric-card-min-height);\\n}\\n\\n.metric-card:hover {\\n  border-color: var(--accent-primary);\\n  transform: translateY(-2px);\\n  box-shadow: var(--shadow-bloomberg);\\n}\\n\\n.metric-card.primary {\\n  border-color: var(--accent-primary);\\n  background: rgba(14, 165, 233, 0.05);\\n}\\n\\n.metric-card.success {\\n  border-color: var(--status-success);\\n  background: rgba(34, 197, 94, 0.05);\\n}\\n\\n.metric-card.warning {\\n  border-color: var(--status-warning);\\n  background: rgba(234, 179, 8, 0.05);\\n}\\n\\n.metric-card.error {\\n  border-color: var(--status-error);\\n  background: rgba(239, 68, 68, 0.05);\\n}\\n\\n/* Metric Header */\\n.metric-header {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  margin-bottom: var(--space-md);\\n}\\n\\n.metric-title {\\n  font-size: var(--text-sm);\\n  color: var(--text-secondary);\\n  font-weight: var(--font-semibold);\\n  text-transform: uppercase;\\n  letter-spacing: var(--tracking-wider);\\n}\\n\\n/* Metric Value */\\n.metric-value {\\n  font-size: 2.5rem;\\n  font-weight: var(--font-bold);\\n  color: var(--accent-primary);\\n  font-family: var(--font-data);\\n  line-height: var(--leading-tight);\\n  margin-bottom: var(--space-sm);\\n}\\n\\n.metric-card.success .metric-value {\\n  color: var(--status-success);\\n}\\n\\n.metric-card.warning .metric-value {\\n  color: var(--status-warning);\\n}\\n\\n.metric-card.error .metric-value {\\n  color: var(--status-error);\\n}\\n\\n/* Metric Change Indicators */\\n.metric-change {\\n  font-size: var(--text-xs);\\n  font-weight: var(--font-semibold);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  gap: var(--space-xs);\\n  margin-top: var(--space-sm);\\n}\\n\\n.metric-change.positive {\\n  color: var(--status-success);\\n}\\n\\n.metric-change.negative {\\n  color: var(--status-error);\\n}\\n\\n.metric-change.neutral {\\n  color: var(--text-muted);\\n}\\n\\n/* Metric Icons */\\n.metric-icon {\\n  width: 20px;\\n  height: 20px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  border-radius: var(--radius-sm);\\n  background: var(--accent-primary);\\n  color: white;\\n  font-size: var(--text-xs);\\n  font-weight: var(--font-bold);\\n}\\n\\n/* ===== INTELLIGENCE PANELS ===== */\\n\\n/* Base Intelligence Panel */\\n.intelligence-panel {\\n  background: linear-gradient(135deg, var(--bg-secondary), var(--bg-tertiary));\\n  border: var(--border-1) solid var(--bloomberg-gray-600);\\n  border-radius: var(--radius-lg);\\n  padding: var(--space-lg);\\n  margin-bottom: var(--space-lg);\\n  position: relative;\\n  overflow: hidden;\\n}\\n\\n.intelligence-panel::before {\\n  content: '';\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  height: 2px;\\n  background: linear-gradient(90deg, var(--accent-primary), var(--bloomberg-blue-light));\\n  opacity: 0.8;\\n}\\n\\n/* Intelligence Panel Header */\\n.intelligence-panel-header {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  margin-bottom: var(--space-md);\\n  padding-bottom: var(--space-sm);\\n  border-bottom: var(--border-1) solid var(--bloomberg-gray-600);\\n}\\n\\n.intelligence-panel-title {\\n  font-size: var(--text-lg);\\n  font-weight: var(--font-semibold);\\n  color: var(--text-primary);\\n  display: flex;\\n  align-items: center;\\n  gap: var(--space-sm);\\n}\\n\\n.intelligence-score {\\n  background: var(--accent-primary);\\n  color: white;\\n  padding: var(--space-xs) var(--space-sm);\\n  border-radius: var(--radius-sm);\\n  font-size: var(--text-xs);\\n  font-weight: var(--font-semibold);\\n  text-transform: uppercase;\\n  letter-spacing: var(--tracking-wide);\\n}\\n\\n/* Intelligence Content */\\n.intelligence-content {\\n  color: var(--text-secondary);\\n  line-height: var(--leading-relaxed);\\n}\\n\\n.intelligence-insight {\\n  background: rgba(14, 165, 233, 0.05);\\n  border-left: 3px solid var(--accent-primary);\\n  padding: var(--space-md);\\n  margin: var(--space-md) 0;\\n  border-radius: 0 var(--radius-md) var(--radius-md) 0;\\n}\\n\\n/* ===== REAL-TIME DATA DISPLAYS ===== */\\n\\n/* Live Data Widget */\\n.live-data-widget {\\n  background: var(--bg-secondary);\\n  border: var(--border-1) solid var(--bloomberg-gray-700);\\n  border-radius: var(--radius-lg);\\n  padding: var(--space-lg);\\n  position: relative;\\n}\\n\\n.live-data-widget::after {\\n  content: '';\\n  position: absolute;\\n  top: var(--space-sm);\\n  right: var(--space-sm);\\n  width: 8px;\\n  height: 8px;\\n  background: var(--status-success);\\n  border-radius: 50%;\\n  animation: pulse 2s infinite;\\n}\\n\\n/* Data Table */\\n.dashboard-data-table {\\n  width: 100%;\\n  border-collapse: collapse;\\n  background: var(--bg-secondary);\\n  border-radius: var(--radius-lg);\\n  overflow: hidden;\\n  box-shadow: var(--shadow-md);\\n}\\n\\n.dashboard-data-table th {\\n  background: var(--bg-tertiary);\\n  padding: var(--space-md);\\n  text-align: left;\\n  font-weight: var(--font-semibold);\\n  color: var(--text-secondary);\\n  border-bottom: var(--border-1) solid var(--bloomberg-gray-600);\\n  font-size: var(--text-sm);\\n  text-transform: uppercase;\\n  letter-spacing: var(--tracking-wide);\\n}\\n\\n.dashboard-data-table td {\\n  padding: var(--space-md);\\n  border-bottom: var(--border-1) solid var(--bloomberg-gray-700);\\n  color: var(--text-secondary);\\n  font-family: var(--font-data);\\n}\\n\\n.dashboard-data-table tr:hover {\\n  background: var(--bg-tertiary);\\n}\\n\\n.dashboard-data-table tr:last-child td {\\n  border-bottom: none;\\n}\\n\\n/* ===== STATUS INDICATORS ===== */\\n\\n/* Status Badges */\\n.status-badge {\\n  display: inline-flex;\\n  align-items: center;\\n  gap: var(--space-xs);\\n  padding: var(--space-xs) var(--space-sm);\\n  border-radius: var(--radius-sm);\\n  font-size: var(--text-xs);\\n  font-weight: var(--font-semibold);\\n  text-transform: uppercase;\\n  letter-spacing: var(--tracking-wide);\\n}\\n\\n.status-badge.success {\\n  background: rgba(34, 197, 94, 0.1);\\n  color: var(--status-success);\\n  border: var(--border-1) solid rgba(34, 197, 94, 0.3);\\n}\\n\\n.status-badge.warning {\\n  background: rgba(234, 179, 8, 0.1);\\n  color: var(--status-warning);\\n  border: var(--border-1) solid rgba(234, 179, 8, 0.3);\\n}\\n\\n.status-badge.error {\\n  background: rgba(239, 68, 68, 0.1);\\n  color: var(--status-error);\\n  border: var(--border-1) solid rgba(239, 68, 68, 0.3);\\n}\\n\\n.status-badge.info {\\n  background: rgba(14, 165, 233, 0.1);\\n  color: var(--status-info);\\n  border: var(--border-1) solid rgba(14, 165, 233, 0.3);\\n}\\n\\n/* Status Dot */\\n.status-dot {\\n  width: 8px;\\n  height: 8px;\\n  border-radius: 50%;\\n  background: currentColor;\\n  animation: pulse 2s infinite;\\n}\\n\\n/* ===== DASHBOARD NAVIGATION ===== */\\n\\n/* Dashboard Tabs */\\n.dashboard-tabs {\\n  display: flex;\\n  border-bottom: var(--border-1) solid var(--bloomberg-gray-700);\\n  margin-bottom: var(--space-lg);\\n}\\n\\n.dashboard-tab {\\n  padding: var(--space-md) var(--space-lg);\\n  color: var(--text-muted);\\n  text-decoration: none;\\n  border-bottom: 2px solid transparent;\\n  transition: var(--transition-colors);\\n  font-weight: var(--font-medium);\\n  text-transform: uppercase;\\n  letter-spacing: var(--tracking-wide);\\n  font-size: var(--text-sm);\\n}\\n\\n.dashboard-tab:hover {\\n  color: var(--text-secondary);\\n  background: rgba(255, 255, 255, 0.02);\\n}\\n\\n.dashboard-tab.active {\\n  color: var(--accent-primary);\\n  border-bottom-color: var(--accent-primary);\\n  background: rgba(14, 165, 233, 0.05);\\n}\\n\\n/* Dashboard Actions */\\n.dashboard-actions {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: var(--space-lg);\\n  padding: var(--space-md) 0;\\n  border-bottom: var(--border-1) solid var(--bloomberg-gray-700);\\n}\\n\\n.dashboard-actions-left {\\n  display: flex;\\n  gap: var(--space-md);\\n  align-items: center;\\n}\\n\\n.dashboard-actions-right {\\n  display: flex;\\n  gap: var(--space-sm);\\n  align-items: center;\\n}\\n\\n/* ===== RESPONSIVE DASHBOARD ===== */\\n\\n/* Large Screens */\\n@media (max-width: var(--breakpoint-xl)) {\\n  .dashboard-container {\\n    max-width: var(--container-xl);\\n  }\\n}\\n\\n/* Desktop */\\n@media (max-width: var(--breakpoint-lg)) {\\n  .dashboard-container {\\n    max-width: var(--container-lg);\\n  }\\n  \\n  .metrics-grid {\\n    grid-template-columns: repeat(2, 1fr);\\n    justify-content: stretch;\\n  }\\n}\\n\\n/* Tablet Landscape */\\n@media (max-width: var(--breakpoint-md)) {\\n  .dashboard-container,\\n  .executive-dashboard-container-centered {\\n    padding: 0 var(--space-md);\\n  }\\n  \\n  .metrics-grid {\\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\\n  }\\n  \\n  .dashboard-actions {\\n    flex-direction: column;\\n    gap: var(--space-md);\\n    align-items: stretch;\\n  }\\n  \\n  .dashboard-actions-left,\\n  .dashboard-actions-right {\\n    justify-content: center;\\n  }\\n}\\n\\n/* Tablet Portrait */\\n@media (max-width: var(--breakpoint-sm)) {\\n  .dashboard-grid {\\n    grid-template-columns: 1fr;\\n    gap: var(--space-md);\\n  }\\n  \\n  .metrics-grid {\\n    grid-template-columns: 1fr;\\n  }\\n  \\n  .metric-value {\\n    font-size: 2rem;\\n  }\\n  \\n  .dashboard-tabs {\\n    overflow-x: auto;\\n    scrollbar-width: none;\\n    -ms-overflow-style: none;\\n  }\\n  \\n  .dashboard-tabs::-webkit-scrollbar {\\n    display: none;\\n  }\\n  \\n  .dashboard-tab {\\n    white-space: nowrap;\\n    flex-shrink: 0;\\n  }\\n}\\n\\n/* Mobile */\\n@media (max-width: var(--breakpoint-xs)) {\\n  .executive-dashboard-container-centered,\\n  .dashboard-container {\\n    padding: 0 var(--space-sm);\\n  }\\n  \\n  .metric-value {\\n    font-size: 1.5rem;\\n  }\\n  \\n  .dashboard-widget {\\n    padding: var(--space-md);\\n  }\\n  \\n  .intelligence-panel {\\n    padding: var(--space-md);\\n  }\\n  \\n  .dashboard-data-table th,\\n  .dashboard-data-table td {\\n    padding: var(--space-sm);\\n    font-size: var(--text-xs);\\n  }\\n}\\n\\n/* ===== ANIMATIONS ===== */\\n\\n@keyframes pulse {\\n  0%, 100% { \\n    opacity: 1; \\n  }\\n  50% { \\n    opacity: 0.5; \\n  }\\n}\\n\\n@keyframes fadeInUp {\\n  from {\\n    opacity: 0;\\n    transform: translateY(20px);\\n  }\\n  to {\\n    opacity: 1;\\n    transform: translateY(0);\\n  }\\n}\\n\\n/* Animation Classes */\\n.fade-in-up {\\n  animation: fadeInUp 0.6s var(--ease-out) forwards;\\n}\\n\\n.stagger-children > * {\\n  animation-delay: calc(var(--stagger-delay, 100ms) * var(--stagger-index, 0));\\n}\\n\\n/* ===== ACCESSIBILITY ===== */\\n\\n/* High contrast mode support */\\n@media (prefers-contrast: high) {\\n  .metric-card,\\n  .dashboard-widget,\\n  .intelligence-panel {\\n    border-width: 2px;\\n  }\\n  \\n  .status-badge {\\n    border-width: 2px;\\n  }\\n}\\n\\n/* Reduced motion support */\\n@media (prefers-reduced-motion: reduce) {\\n  .metric-card:hover,\\n  .dashboard-widget:hover {\\n    transform: none;\\n  }\\n  \\n  .status-dot,\\n  .live-data-widget::after {\\n    animation: none;\\n  }\\n  \\n  .fade-in-up {\\n    animation: none;\\n  }\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://styles/components/dashboard.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/* ============================= */\\n/* TRIANGLE INTELLIGENCE         */\\n/* Dashboard Components          */\\n/* Bloomberg Terminal Style      */\\n/* ============================= */\\n\\n/**\\n * Bloomberg Terminal-style Dashboard Components\\n * \\n * This module contains all dashboard-specific components including:\\n * - Executive dashboard layout\\n * - Metrics cards and widgets\\n * - Dashboard navigation\\n * - Intelligence panels\\n * - Real-time data displays\\n */\\n\\n/* ===== DASHBOARD LAYOUTS ===== */\\n\\n/* Executive Dashboard Container */\\n.executive-dashboard-container {\\n  width: 100%;\\n  padding: var(--space-lg);\\n}\\n\\n.executive-dashboard-container-centered {\\n  width: 100%;\\n  max-width: var(--container-2xl);\\n  margin: 0 auto;\\n  padding: var(--space-lg);\\n}\\n\\n/* Dashboard Grid System */\\n.dashboard-grid {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\\n  gap: var(--space-lg);\\n  margin: var(--space-lg) 0;\\n}\\n\\n.dashboard-container {\\n  width: 100%;\\n  max-width: var(--container-2xl);\\n  margin: 0 auto;\\n  padding: 0 var(--space-lg);\\n}\\n\\n/* ===== DASHBOARD WIDGETS ===== */\\n\\n/* Base Widget Styles */\\n.dashboard-widget {\\n  background: var(--bg-secondary);\\n  border: var(--border-1) solid var(--bloomberg-gray-700);\\n  border-radius: var(--radius-lg);\\n  padding: var(--space-lg);\\n  box-shadow: var(--shadow-md);\\n  transition: var(--transition-all);\\n}\\n\\n.dashboard-widget:hover {\\n  border-color: var(--accent-primary);\\n  box-shadow: var(--shadow-bloomberg);\\n  transform: translateY(-2px);\\n}\\n\\n/* Widget Header */\\n.dashboard-widget-header {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  margin-bottom: var(--space-md);\\n  padding-bottom: var(--space-sm);\\n  border-bottom: var(--border-1) solid var(--bloomberg-gray-700);\\n}\\n\\n.dashboard-widget-title {\\n  font-size: var(--text-lg);\\n  font-weight: var(--font-semibold);\\n  color: var(--text-primary);\\n  text-transform: uppercase;\\n  letter-spacing: var(--tracking-wide);\\n}\\n\\n.dashboard-widget-actions {\\n  display: flex;\\n  gap: var(--space-sm);\\n}\\n\\n/* ===== METRICS SYSTEM ===== */\\n\\n/* Metrics Grid */\\n.metrics-grid {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, var(--metric-card-width));\\n  justify-content: center;\\n  gap: var(--space-lg);\\n  margin-bottom: var(--space-2xl);\\n}\\n\\n.executive-metrics-hero {\\n  margin-bottom: var(--space-2xl);\\n}\\n\\n/* Metric Cards */\\n.metric-card {\\n  background: rgba(0, 0, 0, 0.2);\\n  border: var(--border-1) solid var(--bloomberg-gray-700);\\n  border-radius: var(--radius-lg);\\n  padding: var(--space-lg);\\n  text-align: center;\\n  transition: var(--transition-all);\\n  position: relative;\\n  overflow: hidden;\\n  min-height: var(--metric-card-min-height);\\n}\\n\\n.metric-card:hover {\\n  border-color: var(--accent-primary);\\n  transform: translateY(-2px);\\n  box-shadow: var(--shadow-bloomberg);\\n}\\n\\n.metric-card.primary {\\n  border-color: var(--accent-primary);\\n  background: rgba(14, 165, 233, 0.05);\\n}\\n\\n.metric-card.success {\\n  border-color: var(--status-success);\\n  background: rgba(34, 197, 94, 0.05);\\n}\\n\\n.metric-card.warning {\\n  border-color: var(--status-warning);\\n  background: rgba(234, 179, 8, 0.05);\\n}\\n\\n.metric-card.error {\\n  border-color: var(--status-error);\\n  background: rgba(239, 68, 68, 0.05);\\n}\\n\\n/* Metric Header */\\n.metric-header {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  margin-bottom: var(--space-md);\\n}\\n\\n.metric-title {\\n  font-size: var(--text-sm);\\n  color: var(--text-secondary);\\n  font-weight: var(--font-semibold);\\n  text-transform: uppercase;\\n  letter-spacing: var(--tracking-wider);\\n}\\n\\n/* Metric Value */\\n.metric-value {\\n  font-size: 2.5rem;\\n  font-weight: var(--font-bold);\\n  color: var(--accent-primary);\\n  font-family: var(--font-data);\\n  line-height: var(--leading-tight);\\n  margin-bottom: var(--space-sm);\\n}\\n\\n.metric-card.success .metric-value {\\n  color: var(--status-success);\\n}\\n\\n.metric-card.warning .metric-value {\\n  color: var(--status-warning);\\n}\\n\\n.metric-card.error .metric-value {\\n  color: var(--status-error);\\n}\\n\\n/* Metric Change Indicators */\\n.metric-change {\\n  font-size: var(--text-xs);\\n  font-weight: var(--font-semibold);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  gap: var(--space-xs);\\n  margin-top: var(--space-sm);\\n}\\n\\n.metric-change.positive {\\n  color: var(--status-success);\\n}\\n\\n.metric-change.negative {\\n  color: var(--status-error);\\n}\\n\\n.metric-change.neutral {\\n  color: var(--text-muted);\\n}\\n\\n/* Metric Icons */\\n.metric-icon {\\n  width: 20px;\\n  height: 20px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  border-radius: var(--radius-sm);\\n  background: var(--accent-primary);\\n  color: white;\\n  font-size: var(--text-xs);\\n  font-weight: var(--font-bold);\\n}\\n\\n/* ===== INTELLIGENCE PANELS ===== */\\n\\n/* Base Intelligence Panel */\\n.intelligence-panel {\\n  background: linear-gradient(135deg, var(--bg-secondary), var(--bg-tertiary));\\n  border: var(--border-1) solid var(--bloomberg-gray-600);\\n  border-radius: var(--radius-lg);\\n  padding: var(--space-lg);\\n  margin-bottom: var(--space-lg);\\n  position: relative;\\n  overflow: hidden;\\n}\\n\\n.intelligence-panel::before {\\n  content: '';\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  height: 2px;\\n  background: linear-gradient(90deg, var(--accent-primary), var(--bloomberg-blue-light));\\n  opacity: 0.8;\\n}\\n\\n/* Intelligence Panel Header */\\n.intelligence-panel-header {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  margin-bottom: var(--space-md);\\n  padding-bottom: var(--space-sm);\\n  border-bottom: var(--border-1) solid var(--bloomberg-gray-600);\\n}\\n\\n.intelligence-panel-title {\\n  font-size: var(--text-lg);\\n  font-weight: var(--font-semibold);\\n  color: var(--text-primary);\\n  display: flex;\\n  align-items: center;\\n  gap: var(--space-sm);\\n}\\n\\n.intelligence-score {\\n  background: var(--accent-primary);\\n  color: white;\\n  padding: var(--space-xs) var(--space-sm);\\n  border-radius: var(--radius-sm);\\n  font-size: var(--text-xs);\\n  font-weight: var(--font-semibold);\\n  text-transform: uppercase;\\n  letter-spacing: var(--tracking-wide);\\n}\\n\\n/* Intelligence Content */\\n.intelligence-content {\\n  color: var(--text-secondary);\\n  line-height: var(--leading-relaxed);\\n}\\n\\n.intelligence-insight {\\n  background: rgba(14, 165, 233, 0.05);\\n  border-left: 3px solid var(--accent-primary);\\n  padding: var(--space-md);\\n  margin: var(--space-md) 0;\\n  border-radius: 0 var(--radius-md) var(--radius-md) 0;\\n}\\n\\n/* ===== REAL-TIME DATA DISPLAYS ===== */\\n\\n/* Live Data Widget */\\n.live-data-widget {\\n  background: var(--bg-secondary);\\n  border: var(--border-1) solid var(--bloomberg-gray-700);\\n  border-radius: var(--radius-lg);\\n  padding: var(--space-lg);\\n  position: relative;\\n}\\n\\n.live-data-widget::after {\\n  content: '';\\n  position: absolute;\\n  top: var(--space-sm);\\n  right: var(--space-sm);\\n  width: 8px;\\n  height: 8px;\\n  background: var(--status-success);\\n  border-radius: 50%;\\n  animation: pulse 2s infinite;\\n}\\n\\n/* Data Table */\\n.dashboard-data-table {\\n  width: 100%;\\n  border-collapse: collapse;\\n  background: var(--bg-secondary);\\n  border-radius: var(--radius-lg);\\n  overflow: hidden;\\n  box-shadow: var(--shadow-md);\\n}\\n\\n.dashboard-data-table th {\\n  background: var(--bg-tertiary);\\n  padding: var(--space-md);\\n  text-align: left;\\n  font-weight: var(--font-semibold);\\n  color: var(--text-secondary);\\n  border-bottom: var(--border-1) solid var(--bloomberg-gray-600);\\n  font-size: var(--text-sm);\\n  text-transform: uppercase;\\n  letter-spacing: var(--tracking-wide);\\n}\\n\\n.dashboard-data-table td {\\n  padding: var(--space-md);\\n  border-bottom: var(--border-1) solid var(--bloomberg-gray-700);\\n  color: var(--text-secondary);\\n  font-family: var(--font-data);\\n}\\n\\n.dashboard-data-table tr:hover {\\n  background: var(--bg-tertiary);\\n}\\n\\n.dashboard-data-table tr:last-child td {\\n  border-bottom: none;\\n}\\n\\n/* ===== STATUS INDICATORS ===== */\\n\\n/* Status Badges */\\n.status-badge {\\n  display: inline-flex;\\n  align-items: center;\\n  gap: var(--space-xs);\\n  padding: var(--space-xs) var(--space-sm);\\n  border-radius: var(--radius-sm);\\n  font-size: var(--text-xs);\\n  font-weight: var(--font-semibold);\\n  text-transform: uppercase;\\n  letter-spacing: var(--tracking-wide);\\n}\\n\\n.status-badge.success {\\n  background: rgba(34, 197, 94, 0.1);\\n  color: var(--status-success);\\n  border: var(--border-1) solid rgba(34, 197, 94, 0.3);\\n}\\n\\n.status-badge.warning {\\n  background: rgba(234, 179, 8, 0.1);\\n  color: var(--status-warning);\\n  border: var(--border-1) solid rgba(234, 179, 8, 0.3);\\n}\\n\\n.status-badge.error {\\n  background: rgba(239, 68, 68, 0.1);\\n  color: var(--status-error);\\n  border: var(--border-1) solid rgba(239, 68, 68, 0.3);\\n}\\n\\n.status-badge.info {\\n  background: rgba(14, 165, 233, 0.1);\\n  color: var(--status-info);\\n  border: var(--border-1) solid rgba(14, 165, 233, 0.3);\\n}\\n\\n/* Status Dot */\\n.status-dot {\\n  width: 8px;\\n  height: 8px;\\n  border-radius: 50%;\\n  background: currentColor;\\n  animation: pulse 2s infinite;\\n}\\n\\n/* ===== DASHBOARD NAVIGATION ===== */\\n\\n/* Dashboard Tabs */\\n.dashboard-tabs {\\n  display: flex;\\n  border-bottom: var(--border-1) solid var(--bloomberg-gray-700);\\n  margin-bottom: var(--space-lg);\\n}\\n\\n.dashboard-tab {\\n  padding: var(--space-md) var(--space-lg);\\n  color: var(--text-muted);\\n  text-decoration: none;\\n  border-bottom: 2px solid transparent;\\n  transition: var(--transition-colors);\\n  font-weight: var(--font-medium);\\n  text-transform: uppercase;\\n  letter-spacing: var(--tracking-wide);\\n  font-size: var(--text-sm);\\n}\\n\\n.dashboard-tab:hover {\\n  color: var(--text-secondary);\\n  background: rgba(255, 255, 255, 0.02);\\n}\\n\\n.dashboard-tab.active {\\n  color: var(--accent-primary);\\n  border-bottom-color: var(--accent-primary);\\n  background: rgba(14, 165, 233, 0.05);\\n}\\n\\n/* Dashboard Actions */\\n.dashboard-actions {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: var(--space-lg);\\n  padding: var(--space-md) 0;\\n  border-bottom: var(--border-1) solid var(--bloomberg-gray-700);\\n}\\n\\n.dashboard-actions-left {\\n  display: flex;\\n  gap: var(--space-md);\\n  align-items: center;\\n}\\n\\n.dashboard-actions-right {\\n  display: flex;\\n  gap: var(--space-sm);\\n  align-items: center;\\n}\\n\\n/* ===== RESPONSIVE DASHBOARD ===== */\\n\\n/* Large Screens */\\n@media (max-width: var(--breakpoint-xl)) {\\n  .dashboard-container {\\n    max-width: var(--container-xl);\\n  }\\n}\\n\\n/* Desktop */\\n@media (max-width: var(--breakpoint-lg)) {\\n  .dashboard-container {\\n    max-width: var(--container-lg);\\n  }\\n  \\n  .metrics-grid {\\n    grid-template-columns: repeat(2, 1fr);\\n    justify-content: stretch;\\n  }\\n}\\n\\n/* Tablet Landscape */\\n@media (max-width: var(--breakpoint-md)) {\\n  .dashboard-container,\\n  .executive-dashboard-container-centered {\\n    padding: 0 var(--space-md);\\n  }\\n  \\n  .metrics-grid {\\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\\n  }\\n  \\n  .dashboard-actions {\\n    flex-direction: column;\\n    gap: var(--space-md);\\n    align-items: stretch;\\n  }\\n  \\n  .dashboard-actions-left,\\n  .dashboard-actions-right {\\n    justify-content: center;\\n  }\\n}\\n\\n/* Tablet Portrait */\\n@media (max-width: var(--breakpoint-sm)) {\\n  .dashboard-grid {\\n    grid-template-columns: 1fr;\\n    gap: var(--space-md);\\n  }\\n  \\n  .metrics-grid {\\n    grid-template-columns: 1fr;\\n  }\\n  \\n  .metric-value {\\n    font-size: 2rem;\\n  }\\n  \\n  .dashboard-tabs {\\n    overflow-x: auto;\\n    scrollbar-width: none;\\n    -ms-overflow-style: none;\\n  }\\n  \\n  .dashboard-tabs::-webkit-scrollbar {\\n    display: none;\\n  }\\n  \\n  .dashboard-tab {\\n    white-space: nowrap;\\n    flex-shrink: 0;\\n  }\\n}\\n\\n/* Mobile */\\n@media (max-width: var(--breakpoint-xs)) {\\n  .executive-dashboard-container-centered,\\n  .dashboard-container {\\n    padding: 0 var(--space-sm);\\n  }\\n  \\n  .metric-value {\\n    font-size: 1.5rem;\\n  }\\n  \\n  .dashboard-widget {\\n    padding: var(--space-md);\\n  }\\n  \\n  .intelligence-panel {\\n    padding: var(--space-md);\\n  }\\n  \\n  .dashboard-data-table th,\\n  .dashboard-data-table td {\\n    padding: var(--space-sm);\\n    font-size: var(--text-xs);\\n  }\\n}\\n\\n/* ===== ANIMATIONS ===== */\\n\\n@keyframes pulse {\\n  0%, 100% { \\n    opacity: 1; \\n  }\\n  50% { \\n    opacity: 0.5; \\n  }\\n}\\n\\n@keyframes fadeInUp {\\n  from {\\n    opacity: 0;\\n    transform: translateY(20px);\\n  }\\n  to {\\n    opacity: 1;\\n    transform: translateY(0);\\n  }\\n}\\n\\n/* Animation Classes */\\n.fade-in-up {\\n  animation: fadeInUp 0.6s var(--ease-out) forwards;\\n}\\n\\n.stagger-children > * {\\n  animation-delay: calc(var(--stagger-delay, 100ms) * var(--stagger-index, 0));\\n}\\n\\n/* ===== ACCESSIBILITY ===== */\\n\\n/* High contrast mode support */\\n@media (prefers-contrast: high) {\\n  .metric-card,\\n  .dashboard-widget,\\n  .intelligence-panel {\\n    border-width: 2px;\\n  }\\n  \\n  .status-badge {\\n    border-width: 2px;\\n  }\\n}\\n\\n/* Reduced motion support */\\n@media (prefers-reduced-motion: reduce) {\\n  .metric-card:hover,\\n  .dashboard-widget:hover {\\n    transform: none;\\n  }\\n  \\n  .status-dot,\\n  .live-data-widget::after {\\n    animation: none;\\n  }\\n  \\n  .fade-in-up {\\n    animation: none;\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/components/dashboard.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/components/forms.css":
/*!*******************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/components/forms.css ***!
  \*******************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* ============================= */\\n/* TRIANGLE INTELLIGENCE         */\\n/* Form Components               */\\n/* 6-Page Journey Forms          */\\n/* ============================= */\\n\\n/**\\n * Form Components for Triangle Intelligence Platform\\n * \\n * This module contains all form-related components for the 6-page journey:\\n * 1. Foundation - Business intake forms\\n * 2. Product - Product classification forms\\n * 3. Routing - Triangle routing selection\\n * 4. Partnership - Partnership ecosystem forms\\n * 5. Hindsight - Analysis feedback forms\\n * 6. Alerts - Alert configuration forms\\n */\\n\\n/* ===== BASE FORM STYLES ===== */\\n\\n/* Form Container */\\n.form-container {\\n  background: var(--bg-secondary);\\n  border: var(--border-1) solid var(--bloomberg-gray-700);\\n  border-radius: var(--radius-lg);\\n  padding: var(--space-xl);\\n  box-shadow: var(--shadow-md);\\n}\\n\\n.form-section {\\n  margin-bottom: var(--space-xl);\\n}\\n\\n.form-section:last-child {\\n  margin-bottom: 0;\\n}\\n\\n/* Form Headers */\\n.form-header {\\n  text-align: center;\\n  margin-bottom: var(--space-2xl);\\n}\\n\\n.form-title {\\n  font-size: var(--text-3xl);\\n  font-weight: var(--font-bold);\\n  color: var(--text-primary);\\n  margin-bottom: var(--space-md);\\n  letter-spacing: var(--tracking-tight);\\n}\\n\\n.form-subtitle {\\n  font-size: var(--text-lg);\\n  color: var(--text-secondary);\\n  line-height: var(--leading-relaxed);\\n  max-width: 600px;\\n  margin: 0 auto;\\n}\\n\\n.form-step-indicator {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  gap: var(--space-sm);\\n  margin: var(--space-lg) 0;\\n}\\n\\n.step-indicator {\\n  width: 8px;\\n  height: 8px;\\n  border-radius: 50%;\\n  background: var(--bloomberg-gray-600);\\n  transition: var(--transition-colors);\\n}\\n\\n.step-indicator.active {\\n  background: var(--accent-primary);\\n  box-shadow: 0 0 0 3px rgba(14, 165, 233, 0.3);\\n}\\n\\n.step-indicator.completed {\\n  background: var(--status-success);\\n}\\n\\n/* ===== FORM INPUTS ===== */\\n\\n/* Input Groups */\\n.form-group {\\n  margin-bottom: var(--space-lg);\\n}\\n\\n.form-row {\\n  display: flex;\\n  gap: var(--space-md);\\n  margin-bottom: var(--space-lg);\\n}\\n\\n.form-col {\\n  flex: 1 1;\\n}\\n\\n.form-col-auto {\\n  flex: 0 0 auto;\\n}\\n\\n/* Labels */\\n.form-label {\\n  display: block;\\n  font-size: var(--text-sm);\\n  font-weight: var(--font-semibold);\\n  color: var(--text-primary);\\n  margin-bottom: var(--space-sm);\\n  text-transform: uppercase;\\n  letter-spacing: var(--tracking-wide);\\n}\\n\\n.form-label.required::after {\\n  content: ' *';\\n  color: var(--status-error);\\n}\\n\\n.form-help-text {\\n  font-size: var(--text-xs);\\n  color: var(--text-muted);\\n  margin-top: var(--space-xs);\\n  line-height: var(--leading-relaxed);\\n}\\n\\n/* Input Fields */\\n.form-input,\\n.bloomberg-input {\\n  width: 100%;\\n  height: var(--form-element-height);\\n  padding: 0 var(--space-md);\\n  background: var(--bg-tertiary);\\n  border: var(--border-1) solid var(--bloomberg-gray-600);\\n  border-radius: var(--radius-md);\\n  color: var(--text-primary);\\n  font-size: var(--text-sm);\\n  font-family: var(--font-primary);\\n  transition: var(--transition-all);\\n  outline: none;\\n}\\n\\n.form-input:focus,\\n.bloomberg-input:focus {\\n  border-color: var(--accent-primary);\\n  box-shadow: 0 0 0 3px rgba(14, 165, 233, 0.1);\\n  background: rgba(14, 165, 233, 0.02);\\n}\\n\\n.form-input:hover,\\n.bloomberg-input:hover {\\n  border-color: var(--bloomberg-gray-500);\\n}\\n\\n.form-input.error {\\n  border-color: var(--status-error);\\n  box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);\\n}\\n\\n.form-input.success {\\n  border-color: var(--status-success);\\n  box-shadow: 0 0 0 3px rgba(34, 197, 94, 0.1);\\n}\\n\\n/* Large Input */\\n.form-input-lg {\\n  height: var(--form-element-height-lg);\\n  font-size: var(--text-base);\\n}\\n\\n/* Select Dropdowns */\\n.form-select,\\n.bloomberg-select {\\n  width: 100%;\\n  height: var(--form-element-height);\\n  padding: 0 var(--space-md);\\n  background: var(--bg-tertiary);\\n  border: var(--border-1) solid var(--bloomberg-gray-600);\\n  border-radius: var(--radius-md);\\n  color: var(--text-primary);\\n  font-size: var(--text-sm);\\n  cursor: pointer;\\n  transition: var(--transition-all);\\n  outline: none;\\n  -webkit-appearance: none;\\n     -moz-appearance: none;\\n          appearance: none;\\n  background-image: url(\\\"data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%2394a3b8' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6,9 12,15 18,9'%3e%3c/polyline%3e%3c/svg%3e\\\");\\n  background-repeat: no-repeat;\\n  background-position: right var(--space-md) center;\\n  background-size: 16px;\\n  padding-right: 40px;\\n}\\n\\n.form-select:focus,\\n.bloomberg-select:focus {\\n  border-color: var(--accent-primary);\\n  box-shadow: 0 0 0 3px rgba(14, 165, 233, 0.1);\\n}\\n\\n/* Textarea */\\n.form-textarea,\\n.bloomberg-textarea {\\n  width: 100%;\\n  min-height: 120px;\\n  padding: var(--space-md);\\n  background: var(--bg-tertiary);\\n  border: var(--border-1) solid var(--bloomberg-gray-600);\\n  border-radius: var(--radius-md);\\n  color: var(--text-primary);\\n  font-size: var(--text-sm);\\n  font-family: var(--font-primary);\\n  resize: vertical;\\n  transition: var(--transition-all);\\n  outline: none;\\n  line-height: var(--leading-relaxed);\\n}\\n\\n.form-textarea:focus,\\n.bloomberg-textarea:focus {\\n  border-color: var(--accent-primary);\\n  box-shadow: 0 0 0 3px rgba(14, 165, 233, 0.1);\\n}\\n\\n/* ===== FORM BUTTONS ===== */\\n\\n/* Button Groups */\\n.form-buttons {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-top: var(--space-2xl);\\n  padding-top: var(--space-lg);\\n  border-top: var(--border-1) solid var(--bloomberg-gray-700);\\n}\\n\\n.form-buttons-center {\\n  justify-content: center;\\n  gap: var(--space-md);\\n}\\n\\n.form-buttons-end {\\n  justify-content: flex-end;\\n  gap: var(--space-md);\\n}\\n\\n/* Form Button Base */\\n.form-btn,\\n.bloomberg-btn {\\n  display: inline-flex;\\n  align-items: center;\\n  justify-content: center;\\n  gap: var(--space-sm);\\n  height: var(--form-element-height);\\n  padding: 0 var(--space-lg);\\n  border: var(--border-1) solid transparent;\\n  border-radius: var(--radius-md);\\n  font-size: var(--text-sm);\\n  font-weight: var(--font-semibold);\\n  text-decoration: none;\\n  cursor: pointer;\\n  transition: var(--transition-all);\\n  white-space: nowrap;\\n  text-align: center;\\n  background: none;\\n  font-family: inherit;\\n  text-transform: uppercase;\\n  letter-spacing: var(--tracking-wide);\\n}\\n\\n/* Primary Button */\\n.form-btn-primary,\\n.bloomberg-btn-primary {\\n  background: linear-gradient(135deg, var(--accent-primary), var(--bloomberg-blue-light));\\n  color: white;\\n  border-color: var(--accent-primary);\\n  box-shadow: 0 4px 14px 0 rgba(14, 165, 233, 0.3);\\n}\\n\\n.form-btn-primary:hover,\\n.bloomberg-btn-primary:hover {\\n  background: linear-gradient(135deg, var(--accent-hover), var(--accent-primary));\\n  border-color: var(--accent-hover);\\n  transform: translateY(-1px);\\n  box-shadow: 0 6px 20px 0 rgba(14, 165, 233, 0.4);\\n}\\n\\n.form-btn-primary:active {\\n  transform: translateY(0);\\n}\\n\\n/* Secondary Button */\\n.form-btn-secondary,\\n.bloomberg-btn-secondary {\\n  background: transparent;\\n  color: var(--text-secondary);\\n  border-color: var(--bloomberg-gray-600);\\n}\\n\\n.form-btn-secondary:hover,\\n.bloomberg-btn-secondary:hover {\\n  background: var(--bg-tertiary);\\n  color: var(--text-primary);\\n  border-color: var(--bloomberg-gray-500);\\n}\\n\\n/* Ghost Button */\\n.form-btn-ghost,\\n.bloomberg-btn-ghost {\\n  background: transparent;\\n  color: var(--text-muted);\\n  border: none;\\n}\\n\\n.form-btn-ghost:hover,\\n.bloomberg-btn-ghost:hover {\\n  background: rgba(255, 255, 255, 0.05);\\n  color: var(--text-primary);\\n}\\n\\n/* Button States */\\n.form-btn:disabled {\\n  opacity: 0.5;\\n  cursor: not-allowed;\\n  transform: none !important;\\n}\\n\\n.form-btn.loading {\\n  pointer-events: none;\\n  position: relative;\\n  color: transparent;\\n}\\n\\n.form-btn.loading::after {\\n  content: '';\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  width: 16px;\\n  height: 16px;\\n  margin: -8px 0 0 -8px;\\n  border: 2px solid currentColor;\\n  border-right-color: transparent;\\n  border-radius: 50%;\\n  animation: button-spin 0.8s linear infinite;\\n}\\n\\n@keyframes button-spin {\\n  to { transform: rotate(360deg); }\\n}\\n\\n/* ===== CHECKBOX & RADIO ===== */\\n\\n/* Custom Checkbox */\\n.form-checkbox {\\n  position: relative;\\n  display: flex;\\n  align-items: center;\\n  gap: var(--space-sm);\\n  cursor: pointer;\\n  margin-bottom: var(--space-md);\\n}\\n\\n.form-checkbox input[type=\\\"checkbox\\\"] {\\n  position: absolute;\\n  opacity: 0;\\n  pointer-events: none;\\n}\\n\\n.form-checkbox-indicator {\\n  width: 20px;\\n  height: 20px;\\n  border: var(--border-2) solid var(--bloomberg-gray-600);\\n  border-radius: var(--radius-sm);\\n  background: var(--bg-tertiary);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  transition: var(--transition-all);\\n  flex-shrink: 0;\\n}\\n\\n.form-checkbox input[type=\\\"checkbox\\\"]:checked + .form-checkbox-indicator {\\n  background: var(--accent-primary);\\n  border-color: var(--accent-primary);\\n}\\n\\n.form-checkbox input[type=\\\"checkbox\\\"]:checked + .form-checkbox-indicator::after {\\n  content: '✓';\\n  color: white;\\n  font-size: var(--text-xs);\\n  font-weight: var(--font-bold);\\n}\\n\\n.form-checkbox input[type=\\\"checkbox\\\"]:focus + .form-checkbox-indicator {\\n  box-shadow: 0 0 0 3px rgba(14, 165, 233, 0.2);\\n}\\n\\n.form-checkbox-label {\\n  color: var(--text-secondary);\\n  font-size: var(--text-sm);\\n  line-height: var(--leading-relaxed);\\n}\\n\\n/* Custom Radio */\\n.form-radio {\\n  position: relative;\\n  display: flex;\\n  align-items: center;\\n  gap: var(--space-sm);\\n  cursor: pointer;\\n  margin-bottom: var(--space-md);\\n}\\n\\n.form-radio input[type=\\\"radio\\\"] {\\n  position: absolute;\\n  opacity: 0;\\n  pointer-events: none;\\n}\\n\\n.form-radio-indicator {\\n  width: 20px;\\n  height: 20px;\\n  border: var(--border-2) solid var(--bloomberg-gray-600);\\n  border-radius: 50%;\\n  background: var(--bg-tertiary);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  transition: var(--transition-all);\\n  flex-shrink: 0;\\n}\\n\\n.form-radio input[type=\\\"radio\\\"]:checked + .form-radio-indicator {\\n  border-color: var(--accent-primary);\\n}\\n\\n.form-radio input[type=\\\"radio\\\"]:checked + .form-radio-indicator::after {\\n  content: '';\\n  width: 8px;\\n  height: 8px;\\n  background: var(--accent-primary);\\n  border-radius: 50%;\\n}\\n\\n.form-radio input[type=\\\"radio\\\"]:focus + .form-radio-indicator {\\n  box-shadow: 0 0 0 3px rgba(14, 165, 233, 0.2);\\n}\\n\\n/* ===== FORM VALIDATION ===== */\\n\\n/* Error Messages */\\n.form-error {\\n  color: var(--status-error);\\n  font-size: var(--text-xs);\\n  margin-top: var(--space-xs);\\n  display: flex;\\n  align-items: center;\\n  gap: var(--space-xs);\\n}\\n\\n.form-error::before {\\n  content: '⚠';\\n  font-size: var(--text-sm);\\n}\\n\\n/* Success Messages */\\n.form-success {\\n  color: var(--status-success);\\n  font-size: var(--text-xs);\\n  margin-top: var(--space-xs);\\n  display: flex;\\n  align-items: center;\\n  gap: var(--space-xs);\\n}\\n\\n.form-success::before {\\n  content: '✓';\\n  font-size: var(--text-sm);\\n  font-weight: var(--font-bold);\\n}\\n\\n/* Form Alerts */\\n.form-alert {\\n  padding: var(--space-md);\\n  border-radius: var(--radius-md);\\n  margin-bottom: var(--space-lg);\\n  border: var(--border-1) solid transparent;\\n  font-size: var(--text-sm);\\n  line-height: var(--leading-relaxed);\\n}\\n\\n.form-alert-success {\\n  background: rgba(34, 197, 94, 0.1);\\n  border-color: rgba(34, 197, 94, 0.2);\\n  color: var(--status-success);\\n}\\n\\n.form-alert-warning {\\n  background: rgba(234, 179, 8, 0.1);\\n  border-color: rgba(234, 179, 8, 0.2);\\n  color: var(--status-warning);\\n}\\n\\n.form-alert-error {\\n  background: rgba(239, 68, 68, 0.1);\\n  border-color: rgba(239, 68, 68, 0.2);\\n  color: var(--status-error);\\n}\\n\\n.form-alert-info {\\n  background: rgba(14, 165, 233, 0.1);\\n  border-color: rgba(14, 165, 233, 0.2);\\n  color: var(--status-info);\\n}\\n\\n/* ===== SPECIALIZED FORM COMPONENTS ===== */\\n\\n/* Product Classification Form */\\n.product-classification-grid {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\\n  grid-gap: var(--space-md);\\n  gap: var(--space-md);\\n  margin-bottom: var(--space-lg);\\n}\\n\\n.product-suggestion-card {\\n  background: var(--bg-secondary);\\n  border: var(--border-1) solid var(--bloomberg-gray-700);\\n  border-radius: var(--radius-md);\\n  padding: var(--space-md);\\n  cursor: pointer;\\n  transition: var(--transition-all);\\n}\\n\\n.product-suggestion-card:hover {\\n  border-color: var(--accent-primary);\\n  background: rgba(14, 165, 233, 0.05);\\n}\\n\\n.product-suggestion-card.selected {\\n  border-color: var(--accent-primary);\\n  background: rgba(14, 165, 233, 0.1);\\n}\\n\\n/* Triangle Routing Selection */\\n.routing-options-grid {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\\n  grid-gap: var(--space-lg);\\n  gap: var(--space-lg);\\n  margin: var(--space-lg) 0;\\n}\\n\\n.routing-option-card {\\n  background: var(--bg-secondary);\\n  border: var(--border-2) solid var(--bloomberg-gray-700);\\n  border-radius: var(--radius-lg);\\n  padding: var(--space-lg);\\n  cursor: pointer;\\n  transition: var(--transition-all);\\n  position: relative;\\n}\\n\\n.routing-option-card:hover {\\n  border-color: var(--accent-primary);\\n  transform: translateY(-2px);\\n  box-shadow: var(--shadow-bloomberg);\\n}\\n\\n.routing-option-card.recommended {\\n  border-color: var(--status-success);\\n  background: rgba(34, 197, 94, 0.05);\\n}\\n\\n.routing-option-card.selected {\\n  border-color: var(--accent-primary);\\n  background: rgba(14, 165, 233, 0.1);\\n}\\n\\n.routing-savings {\\n  font-size: var(--text-2xl);\\n  font-weight: var(--font-bold);\\n  color: var(--status-success);\\n  font-family: var(--font-data);\\n  text-align: center;\\n  margin: var(--space-md) 0;\\n}\\n\\n/* Partnership Ecosystem Forms */\\n.partnership-form-grid {\\n  display: grid;\\n  grid-template-columns: 1fr 1fr;\\n  grid-gap: var(--space-xl);\\n  gap: var(--space-xl);\\n  margin-top: var(--space-lg);\\n}\\n\\n/* ===== RESPONSIVE FORMS ===== */\\n\\n/* Tablet Portrait */\\n@media (max-width: var(--breakpoint-sm)) {\\n  .form-row {\\n    flex-direction: column;\\n    gap: var(--space-md);\\n  }\\n  \\n  .form-buttons {\\n    flex-direction: column-reverse;\\n    gap: var(--space-md);\\n    align-items: stretch;\\n  }\\n  \\n  .product-classification-grid,\\n  .routing-options-grid {\\n    grid-template-columns: 1fr;\\n  }\\n  \\n  .partnership-form-grid {\\n    grid-template-columns: 1fr;\\n    gap: var(--space-lg);\\n  }\\n  \\n  .form-title {\\n    font-size: var(--text-2xl);\\n  }\\n  \\n  .form-container {\\n    padding: var(--space-lg);\\n  }\\n}\\n\\n/* Mobile */\\n@media (max-width: var(--breakpoint-xs)) {\\n  .form-container {\\n    padding: var(--space-md);\\n    margin: var(--space-sm);\\n  }\\n  \\n  .form-title {\\n    font-size: var(--text-xl);\\n  }\\n  \\n  .form-subtitle {\\n    font-size: var(--text-base);\\n  }\\n  \\n  .form-btn,\\n  .bloomberg-btn {\\n    height: var(--form-element-height-lg);\\n    font-size: var(--text-base);\\n  }\\n  \\n  .routing-option-card {\\n    padding: var(--space-md);\\n  }\\n  \\n  .routing-savings {\\n    font-size: var(--text-xl);\\n  }\\n}\\n\\n/* ===== ACCESSIBILITY ===== */\\n\\n/* Focus visible styles */\\n.form-input:focus-visible,\\n.form-select:focus-visible,\\n.form-textarea:focus-visible {\\n  outline: 2px solid var(--accent-primary);\\n  outline-offset: 2px;\\n}\\n\\n.form-btn:focus-visible {\\n  outline: 2px solid var(--accent-primary);\\n  outline-offset: 2px;\\n}\\n\\n/* Screen reader support */\\n.sr-only {\\n  position: absolute;\\n  width: 1px;\\n  height: 1px;\\n  padding: 0;\\n  margin: -1px;\\n  overflow: hidden;\\n  clip: rect(0, 0, 0, 0);\\n  white-space: nowrap;\\n  border: 0;\\n}\\n\\n/* High contrast mode */\\n@media (prefers-contrast: high) {\\n  .form-input,\\n  .form-select,\\n  .form-textarea {\\n    border-width: 2px;\\n  }\\n  \\n  .form-btn {\\n    border-width: 2px;\\n  }\\n  \\n  .routing-option-card {\\n    border-width: 3px;\\n  }\\n}\\n\\n/* Reduced motion */\\n@media (prefers-reduced-motion: reduce) {\\n  .routing-option-card:hover {\\n    transform: none;\\n  }\\n  \\n  .form-btn-primary:hover {\\n    transform: none;\\n  }\\n  \\n  .form-btn.loading::after {\\n    animation: none;\\n  }\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://styles/components/forms.css\"],\"names\":[],\"mappings\":\"AAAA,kCAAkC;AAClC,kCAAkC;AAClC,kCAAkC;AAClC,kCAAkC;AAClC,kCAAkC;;AAElC;;;;;;;;;;EAUE;;AAEF,iCAAiC;;AAEjC,mBAAmB;AACnB;EACE,+BAA+B;EAC/B,uDAAuD;EACvD,+BAA+B;EAC/B,wBAAwB;EACxB,4BAA4B;AAC9B;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,gBAAgB;AAClB;;AAEA,iBAAiB;AACjB;EACE,kBAAkB;EAClB,+BAA+B;AACjC;;AAEA;EACE,0BAA0B;EAC1B,6BAA6B;EAC7B,0BAA0B;EAC1B,8BAA8B;EAC9B,qCAAqC;AACvC;;AAEA;EACE,yBAAyB;EACzB,4BAA4B;EAC5B,mCAAmC;EACnC,gBAAgB;EAChB,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,oBAAoB;EACpB,yBAAyB;AAC3B;;AAEA;EACE,UAAU;EACV,WAAW;EACX,kBAAkB;EAClB,qCAAqC;EACrC,oCAAoC;AACtC;;AAEA;EACE,iCAAiC;EACjC,6CAA6C;AAC/C;;AAEA;EACE,iCAAiC;AACnC;;AAEA,4BAA4B;;AAE5B,iBAAiB;AACjB;EACE,8BAA8B;AAChC;;AAEA;EACE,aAAa;EACb,oBAAoB;EACpB,8BAA8B;AAChC;;AAEA;EACE,SAAO;AACT;;AAEA;EACE,cAAc;AAChB;;AAEA,WAAW;AACX;EACE,cAAc;EACd,yBAAyB;EACzB,iCAAiC;EACjC,0BAA0B;EAC1B,8BAA8B;EAC9B,yBAAyB;EACzB,oCAAoC;AACtC;;AAEA;EACE,aAAa;EACb,0BAA0B;AAC5B;;AAEA;EACE,yBAAyB;EACzB,wBAAwB;EACxB,2BAA2B;EAC3B,mCAAmC;AACrC;;AAEA,iBAAiB;AACjB;;EAEE,WAAW;EACX,kCAAkC;EAClC,0BAA0B;EAC1B,8BAA8B;EAC9B,uDAAuD;EACvD,+BAA+B;EAC/B,0BAA0B;EAC1B,yBAAyB;EACzB,gCAAgC;EAChC,iCAAiC;EACjC,aAAa;AACf;;AAEA;;EAEE,mCAAmC;EACnC,6CAA6C;EAC7C,oCAAoC;AACtC;;AAEA;;EAEE,uCAAuC;AACzC;;AAEA;EACE,iCAAiC;EACjC,4CAA4C;AAC9C;;AAEA;EACE,mCAAmC;EACnC,4CAA4C;AAC9C;;AAEA,gBAAgB;AAChB;EACE,qCAAqC;EACrC,2BAA2B;AAC7B;;AAEA,qBAAqB;AACrB;;EAEE,WAAW;EACX,kCAAkC;EAClC,0BAA0B;EAC1B,8BAA8B;EAC9B,uDAAuD;EACvD,+BAA+B;EAC/B,0BAA0B;EAC1B,yBAAyB;EACzB,eAAe;EACf,iCAAiC;EACjC,aAAa;EACb,wBAAgB;KAAhB,qBAAgB;UAAhB,gBAAgB;EAChB,wRAAwR;EACxR,4BAA4B;EAC5B,iDAAiD;EACjD,qBAAqB;EACrB,mBAAmB;AACrB;;AAEA;;EAEE,mCAAmC;EACnC,6CAA6C;AAC/C;;AAEA,aAAa;AACb;;EAEE,WAAW;EACX,iBAAiB;EACjB,wBAAwB;EACxB,8BAA8B;EAC9B,uDAAuD;EACvD,+BAA+B;EAC/B,0BAA0B;EAC1B,yBAAyB;EACzB,gCAAgC;EAChC,gBAAgB;EAChB,iCAAiC;EACjC,aAAa;EACb,mCAAmC;AACrC;;AAEA;;EAEE,mCAAmC;EACnC,6CAA6C;AAC/C;;AAEA,6BAA6B;;AAE7B,kBAAkB;AAClB;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,4BAA4B;EAC5B,4BAA4B;EAC5B,2DAA2D;AAC7D;;AAEA;EACE,uBAAuB;EACvB,oBAAoB;AACtB;;AAEA;EACE,yBAAyB;EACzB,oBAAoB;AACtB;;AAEA,qBAAqB;AACrB;;EAEE,oBAAoB;EACpB,mBAAmB;EACnB,uBAAuB;EACvB,oBAAoB;EACpB,kCAAkC;EAClC,0BAA0B;EAC1B,yCAAyC;EACzC,+BAA+B;EAC/B,yBAAyB;EACzB,iCAAiC;EACjC,qBAAqB;EACrB,eAAe;EACf,iCAAiC;EACjC,mBAAmB;EACnB,kBAAkB;EAClB,gBAAgB;EAChB,oBAAoB;EACpB,yBAAyB;EACzB,oCAAoC;AACtC;;AAEA,mBAAmB;AACnB;;EAEE,uFAAuF;EACvF,YAAY;EACZ,mCAAmC;EACnC,gDAAgD;AAClD;;AAEA;;EAEE,+EAA+E;EAC/E,iCAAiC;EACjC,2BAA2B;EAC3B,gDAAgD;AAClD;;AAEA;EACE,wBAAwB;AAC1B;;AAEA,qBAAqB;AACrB;;EAEE,uBAAuB;EACvB,4BAA4B;EAC5B,uCAAuC;AACzC;;AAEA;;EAEE,8BAA8B;EAC9B,0BAA0B;EAC1B,uCAAuC;AACzC;;AAEA,iBAAiB;AACjB;;EAEE,uBAAuB;EACvB,wBAAwB;EACxB,YAAY;AACd;;AAEA;;EAEE,qCAAqC;EACrC,0BAA0B;AAC5B;;AAEA,kBAAkB;AAClB;EACE,YAAY;EACZ,mBAAmB;EACnB,0BAA0B;AAC5B;;AAEA;EACE,oBAAoB;EACpB,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,WAAW;EACX,YAAY;EACZ,qBAAqB;EACrB,8BAA8B;EAC9B,+BAA+B;EAC/B,kBAAkB;EAClB,2CAA2C;AAC7C;;AAEA;EACE,KAAK,yBAAyB,EAAE;AAClC;;AAEA,iCAAiC;;AAEjC,oBAAoB;AACpB;EACE,kBAAkB;EAClB,aAAa;EACb,mBAAmB;EACnB,oBAAoB;EACpB,eAAe;EACf,8BAA8B;AAChC;;AAEA;EACE,kBAAkB;EAClB,UAAU;EACV,oBAAoB;AACtB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,uDAAuD;EACvD,+BAA+B;EAC/B,8BAA8B;EAC9B,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,iCAAiC;EACjC,cAAc;AAChB;;AAEA;EACE,iCAAiC;EACjC,mCAAmC;AACrC;;AAEA;EACE,YAAY;EACZ,YAAY;EACZ,yBAAyB;EACzB,6BAA6B;AAC/B;;AAEA;EACE,6CAA6C;AAC/C;;AAEA;EACE,4BAA4B;EAC5B,yBAAyB;EACzB,mCAAmC;AACrC;;AAEA,iBAAiB;AACjB;EACE,kBAAkB;EAClB,aAAa;EACb,mBAAmB;EACnB,oBAAoB;EACpB,eAAe;EACf,8BAA8B;AAChC;;AAEA;EACE,kBAAkB;EAClB,UAAU;EACV,oBAAoB;AACtB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,uDAAuD;EACvD,kBAAkB;EAClB,8BAA8B;EAC9B,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,iCAAiC;EACjC,cAAc;AAChB;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,WAAW;EACX,UAAU;EACV,WAAW;EACX,iCAAiC;EACjC,kBAAkB;AACpB;;AAEA;EACE,6CAA6C;AAC/C;;AAEA,gCAAgC;;AAEhC,mBAAmB;AACnB;EACE,0BAA0B;EAC1B,yBAAyB;EACzB,2BAA2B;EAC3B,aAAa;EACb,mBAAmB;EACnB,oBAAoB;AACtB;;AAEA;EACE,YAAY;EACZ,yBAAyB;AAC3B;;AAEA,qBAAqB;AACrB;EACE,4BAA4B;EAC5B,yBAAyB;EACzB,2BAA2B;EAC3B,aAAa;EACb,mBAAmB;EACnB,oBAAoB;AACtB;;AAEA;EACE,YAAY;EACZ,yBAAyB;EACzB,6BAA6B;AAC/B;;AAEA,gBAAgB;AAChB;EACE,wBAAwB;EACxB,+BAA+B;EAC/B,8BAA8B;EAC9B,yCAAyC;EACzC,yBAAyB;EACzB,mCAAmC;AACrC;;AAEA;EACE,kCAAkC;EAClC,oCAAoC;EACpC,4BAA4B;AAC9B;;AAEA;EACE,kCAAkC;EAClC,oCAAoC;EACpC,4BAA4B;AAC9B;;AAEA;EACE,kCAAkC;EAClC,oCAAoC;EACpC,0BAA0B;AAC5B;;AAEA;EACE,mCAAmC;EACnC,qCAAqC;EACrC,yBAAyB;AAC3B;;AAEA,4CAA4C;;AAE5C,gCAAgC;AAChC;EACE,aAAa;EACb,2DAA2D;EAC3D,yBAAoB;EAApB,oBAAoB;EACpB,8BAA8B;AAChC;;AAEA;EACE,+BAA+B;EAC/B,uDAAuD;EACvD,+BAA+B;EAC/B,wBAAwB;EACxB,eAAe;EACf,iCAAiC;AACnC;;AAEA;EACE,mCAAmC;EACnC,oCAAoC;AACtC;;AAEA;EACE,mCAAmC;EACnC,mCAAmC;AACrC;;AAEA,+BAA+B;AAC/B;EACE,aAAa;EACb,2DAA2D;EAC3D,yBAAoB;EAApB,oBAAoB;EACpB,yBAAyB;AAC3B;;AAEA;EACE,+BAA+B;EAC/B,uDAAuD;EACvD,+BAA+B;EAC/B,wBAAwB;EACxB,eAAe;EACf,iCAAiC;EACjC,kBAAkB;AACpB;;AAEA;EACE,mCAAmC;EACnC,2BAA2B;EAC3B,mCAAmC;AACrC;;AAEA;EACE,mCAAmC;EACnC,mCAAmC;AACrC;;AAEA;EACE,mCAAmC;EACnC,mCAAmC;AACrC;;AAEA;EACE,0BAA0B;EAC1B,6BAA6B;EAC7B,4BAA4B;EAC5B,6BAA6B;EAC7B,kBAAkB;EAClB,yBAAyB;AAC3B;;AAEA,gCAAgC;AAChC;EACE,aAAa;EACb,8BAA8B;EAC9B,yBAAoB;EAApB,oBAAoB;EACpB,2BAA2B;AAC7B;;AAEA,iCAAiC;;AAEjC,oBAAoB;AACpB;EACE;IACE,sBAAsB;IACtB,oBAAoB;EACtB;;EAEA;IACE,8BAA8B;IAC9B,oBAAoB;IACpB,oBAAoB;EACtB;;EAEA;;IAEE,0BAA0B;EAC5B;;EAEA;IACE,0BAA0B;IAC1B,oBAAoB;EACtB;;EAEA;IACE,0BAA0B;EAC5B;;EAEA;IACE,wBAAwB;EAC1B;AACF;;AAEA,WAAW;AACX;EACE;IACE,wBAAwB;IACxB,uBAAuB;EACzB;;EAEA;IACE,yBAAyB;EAC3B;;EAEA;IACE,2BAA2B;EAC7B;;EAEA;;IAEE,qCAAqC;IACrC,2BAA2B;EAC7B;;EAEA;IACE,wBAAwB;EAC1B;;EAEA;IACE,yBAAyB;EAC3B;AACF;;AAEA,8BAA8B;;AAE9B,yBAAyB;AACzB;;;EAGE,wCAAwC;EACxC,mBAAmB;AACrB;;AAEA;EACE,wCAAwC;EACxC,mBAAmB;AACrB;;AAEA,0BAA0B;AAC1B;EACE,kBAAkB;EAClB,UAAU;EACV,WAAW;EACX,UAAU;EACV,YAAY;EACZ,gBAAgB;EAChB,sBAAsB;EACtB,mBAAmB;EACnB,SAAS;AACX;;AAEA,uBAAuB;AACvB;EACE;;;IAGE,iBAAiB;EACnB;;EAEA;IACE,iBAAiB;EACnB;;EAEA;IACE,iBAAiB;EACnB;AACF;;AAEA,mBAAmB;AACnB;EACE;IACE,eAAe;EACjB;;EAEA;IACE,eAAe;EACjB;;EAEA;IACE,eAAe;EACjB;AACF\",\"sourcesContent\":[\"/* ============================= */\\n/* TRIANGLE INTELLIGENCE         */\\n/* Form Components               */\\n/* 6-Page Journey Forms          */\\n/* ============================= */\\n\\n/**\\n * Form Components for Triangle Intelligence Platform\\n * \\n * This module contains all form-related components for the 6-page journey:\\n * 1. Foundation - Business intake forms\\n * 2. Product - Product classification forms\\n * 3. Routing - Triangle routing selection\\n * 4. Partnership - Partnership ecosystem forms\\n * 5. Hindsight - Analysis feedback forms\\n * 6. Alerts - Alert configuration forms\\n */\\n\\n/* ===== BASE FORM STYLES ===== */\\n\\n/* Form Container */\\n.form-container {\\n  background: var(--bg-secondary);\\n  border: var(--border-1) solid var(--bloomberg-gray-700);\\n  border-radius: var(--radius-lg);\\n  padding: var(--space-xl);\\n  box-shadow: var(--shadow-md);\\n}\\n\\n.form-section {\\n  margin-bottom: var(--space-xl);\\n}\\n\\n.form-section:last-child {\\n  margin-bottom: 0;\\n}\\n\\n/* Form Headers */\\n.form-header {\\n  text-align: center;\\n  margin-bottom: var(--space-2xl);\\n}\\n\\n.form-title {\\n  font-size: var(--text-3xl);\\n  font-weight: var(--font-bold);\\n  color: var(--text-primary);\\n  margin-bottom: var(--space-md);\\n  letter-spacing: var(--tracking-tight);\\n}\\n\\n.form-subtitle {\\n  font-size: var(--text-lg);\\n  color: var(--text-secondary);\\n  line-height: var(--leading-relaxed);\\n  max-width: 600px;\\n  margin: 0 auto;\\n}\\n\\n.form-step-indicator {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  gap: var(--space-sm);\\n  margin: var(--space-lg) 0;\\n}\\n\\n.step-indicator {\\n  width: 8px;\\n  height: 8px;\\n  border-radius: 50%;\\n  background: var(--bloomberg-gray-600);\\n  transition: var(--transition-colors);\\n}\\n\\n.step-indicator.active {\\n  background: var(--accent-primary);\\n  box-shadow: 0 0 0 3px rgba(14, 165, 233, 0.3);\\n}\\n\\n.step-indicator.completed {\\n  background: var(--status-success);\\n}\\n\\n/* ===== FORM INPUTS ===== */\\n\\n/* Input Groups */\\n.form-group {\\n  margin-bottom: var(--space-lg);\\n}\\n\\n.form-row {\\n  display: flex;\\n  gap: var(--space-md);\\n  margin-bottom: var(--space-lg);\\n}\\n\\n.form-col {\\n  flex: 1;\\n}\\n\\n.form-col-auto {\\n  flex: 0 0 auto;\\n}\\n\\n/* Labels */\\n.form-label {\\n  display: block;\\n  font-size: var(--text-sm);\\n  font-weight: var(--font-semibold);\\n  color: var(--text-primary);\\n  margin-bottom: var(--space-sm);\\n  text-transform: uppercase;\\n  letter-spacing: var(--tracking-wide);\\n}\\n\\n.form-label.required::after {\\n  content: ' *';\\n  color: var(--status-error);\\n}\\n\\n.form-help-text {\\n  font-size: var(--text-xs);\\n  color: var(--text-muted);\\n  margin-top: var(--space-xs);\\n  line-height: var(--leading-relaxed);\\n}\\n\\n/* Input Fields */\\n.form-input,\\n.bloomberg-input {\\n  width: 100%;\\n  height: var(--form-element-height);\\n  padding: 0 var(--space-md);\\n  background: var(--bg-tertiary);\\n  border: var(--border-1) solid var(--bloomberg-gray-600);\\n  border-radius: var(--radius-md);\\n  color: var(--text-primary);\\n  font-size: var(--text-sm);\\n  font-family: var(--font-primary);\\n  transition: var(--transition-all);\\n  outline: none;\\n}\\n\\n.form-input:focus,\\n.bloomberg-input:focus {\\n  border-color: var(--accent-primary);\\n  box-shadow: 0 0 0 3px rgba(14, 165, 233, 0.1);\\n  background: rgba(14, 165, 233, 0.02);\\n}\\n\\n.form-input:hover,\\n.bloomberg-input:hover {\\n  border-color: var(--bloomberg-gray-500);\\n}\\n\\n.form-input.error {\\n  border-color: var(--status-error);\\n  box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);\\n}\\n\\n.form-input.success {\\n  border-color: var(--status-success);\\n  box-shadow: 0 0 0 3px rgba(34, 197, 94, 0.1);\\n}\\n\\n/* Large Input */\\n.form-input-lg {\\n  height: var(--form-element-height-lg);\\n  font-size: var(--text-base);\\n}\\n\\n/* Select Dropdowns */\\n.form-select,\\n.bloomberg-select {\\n  width: 100%;\\n  height: var(--form-element-height);\\n  padding: 0 var(--space-md);\\n  background: var(--bg-tertiary);\\n  border: var(--border-1) solid var(--bloomberg-gray-600);\\n  border-radius: var(--radius-md);\\n  color: var(--text-primary);\\n  font-size: var(--text-sm);\\n  cursor: pointer;\\n  transition: var(--transition-all);\\n  outline: none;\\n  appearance: none;\\n  background-image: url(\\\"data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%2394a3b8' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6,9 12,15 18,9'%3e%3c/polyline%3e%3c/svg%3e\\\");\\n  background-repeat: no-repeat;\\n  background-position: right var(--space-md) center;\\n  background-size: 16px;\\n  padding-right: 40px;\\n}\\n\\n.form-select:focus,\\n.bloomberg-select:focus {\\n  border-color: var(--accent-primary);\\n  box-shadow: 0 0 0 3px rgba(14, 165, 233, 0.1);\\n}\\n\\n/* Textarea */\\n.form-textarea,\\n.bloomberg-textarea {\\n  width: 100%;\\n  min-height: 120px;\\n  padding: var(--space-md);\\n  background: var(--bg-tertiary);\\n  border: var(--border-1) solid var(--bloomberg-gray-600);\\n  border-radius: var(--radius-md);\\n  color: var(--text-primary);\\n  font-size: var(--text-sm);\\n  font-family: var(--font-primary);\\n  resize: vertical;\\n  transition: var(--transition-all);\\n  outline: none;\\n  line-height: var(--leading-relaxed);\\n}\\n\\n.form-textarea:focus,\\n.bloomberg-textarea:focus {\\n  border-color: var(--accent-primary);\\n  box-shadow: 0 0 0 3px rgba(14, 165, 233, 0.1);\\n}\\n\\n/* ===== FORM BUTTONS ===== */\\n\\n/* Button Groups */\\n.form-buttons {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-top: var(--space-2xl);\\n  padding-top: var(--space-lg);\\n  border-top: var(--border-1) solid var(--bloomberg-gray-700);\\n}\\n\\n.form-buttons-center {\\n  justify-content: center;\\n  gap: var(--space-md);\\n}\\n\\n.form-buttons-end {\\n  justify-content: flex-end;\\n  gap: var(--space-md);\\n}\\n\\n/* Form Button Base */\\n.form-btn,\\n.bloomberg-btn {\\n  display: inline-flex;\\n  align-items: center;\\n  justify-content: center;\\n  gap: var(--space-sm);\\n  height: var(--form-element-height);\\n  padding: 0 var(--space-lg);\\n  border: var(--border-1) solid transparent;\\n  border-radius: var(--radius-md);\\n  font-size: var(--text-sm);\\n  font-weight: var(--font-semibold);\\n  text-decoration: none;\\n  cursor: pointer;\\n  transition: var(--transition-all);\\n  white-space: nowrap;\\n  text-align: center;\\n  background: none;\\n  font-family: inherit;\\n  text-transform: uppercase;\\n  letter-spacing: var(--tracking-wide);\\n}\\n\\n/* Primary Button */\\n.form-btn-primary,\\n.bloomberg-btn-primary {\\n  background: linear-gradient(135deg, var(--accent-primary), var(--bloomberg-blue-light));\\n  color: white;\\n  border-color: var(--accent-primary);\\n  box-shadow: 0 4px 14px 0 rgba(14, 165, 233, 0.3);\\n}\\n\\n.form-btn-primary:hover,\\n.bloomberg-btn-primary:hover {\\n  background: linear-gradient(135deg, var(--accent-hover), var(--accent-primary));\\n  border-color: var(--accent-hover);\\n  transform: translateY(-1px);\\n  box-shadow: 0 6px 20px 0 rgba(14, 165, 233, 0.4);\\n}\\n\\n.form-btn-primary:active {\\n  transform: translateY(0);\\n}\\n\\n/* Secondary Button */\\n.form-btn-secondary,\\n.bloomberg-btn-secondary {\\n  background: transparent;\\n  color: var(--text-secondary);\\n  border-color: var(--bloomberg-gray-600);\\n}\\n\\n.form-btn-secondary:hover,\\n.bloomberg-btn-secondary:hover {\\n  background: var(--bg-tertiary);\\n  color: var(--text-primary);\\n  border-color: var(--bloomberg-gray-500);\\n}\\n\\n/* Ghost Button */\\n.form-btn-ghost,\\n.bloomberg-btn-ghost {\\n  background: transparent;\\n  color: var(--text-muted);\\n  border: none;\\n}\\n\\n.form-btn-ghost:hover,\\n.bloomberg-btn-ghost:hover {\\n  background: rgba(255, 255, 255, 0.05);\\n  color: var(--text-primary);\\n}\\n\\n/* Button States */\\n.form-btn:disabled {\\n  opacity: 0.5;\\n  cursor: not-allowed;\\n  transform: none !important;\\n}\\n\\n.form-btn.loading {\\n  pointer-events: none;\\n  position: relative;\\n  color: transparent;\\n}\\n\\n.form-btn.loading::after {\\n  content: '';\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  width: 16px;\\n  height: 16px;\\n  margin: -8px 0 0 -8px;\\n  border: 2px solid currentColor;\\n  border-right-color: transparent;\\n  border-radius: 50%;\\n  animation: button-spin 0.8s linear infinite;\\n}\\n\\n@keyframes button-spin {\\n  to { transform: rotate(360deg); }\\n}\\n\\n/* ===== CHECKBOX & RADIO ===== */\\n\\n/* Custom Checkbox */\\n.form-checkbox {\\n  position: relative;\\n  display: flex;\\n  align-items: center;\\n  gap: var(--space-sm);\\n  cursor: pointer;\\n  margin-bottom: var(--space-md);\\n}\\n\\n.form-checkbox input[type=\\\"checkbox\\\"] {\\n  position: absolute;\\n  opacity: 0;\\n  pointer-events: none;\\n}\\n\\n.form-checkbox-indicator {\\n  width: 20px;\\n  height: 20px;\\n  border: var(--border-2) solid var(--bloomberg-gray-600);\\n  border-radius: var(--radius-sm);\\n  background: var(--bg-tertiary);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  transition: var(--transition-all);\\n  flex-shrink: 0;\\n}\\n\\n.form-checkbox input[type=\\\"checkbox\\\"]:checked + .form-checkbox-indicator {\\n  background: var(--accent-primary);\\n  border-color: var(--accent-primary);\\n}\\n\\n.form-checkbox input[type=\\\"checkbox\\\"]:checked + .form-checkbox-indicator::after {\\n  content: '✓';\\n  color: white;\\n  font-size: var(--text-xs);\\n  font-weight: var(--font-bold);\\n}\\n\\n.form-checkbox input[type=\\\"checkbox\\\"]:focus + .form-checkbox-indicator {\\n  box-shadow: 0 0 0 3px rgba(14, 165, 233, 0.2);\\n}\\n\\n.form-checkbox-label {\\n  color: var(--text-secondary);\\n  font-size: var(--text-sm);\\n  line-height: var(--leading-relaxed);\\n}\\n\\n/* Custom Radio */\\n.form-radio {\\n  position: relative;\\n  display: flex;\\n  align-items: center;\\n  gap: var(--space-sm);\\n  cursor: pointer;\\n  margin-bottom: var(--space-md);\\n}\\n\\n.form-radio input[type=\\\"radio\\\"] {\\n  position: absolute;\\n  opacity: 0;\\n  pointer-events: none;\\n}\\n\\n.form-radio-indicator {\\n  width: 20px;\\n  height: 20px;\\n  border: var(--border-2) solid var(--bloomberg-gray-600);\\n  border-radius: 50%;\\n  background: var(--bg-tertiary);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  transition: var(--transition-all);\\n  flex-shrink: 0;\\n}\\n\\n.form-radio input[type=\\\"radio\\\"]:checked + .form-radio-indicator {\\n  border-color: var(--accent-primary);\\n}\\n\\n.form-radio input[type=\\\"radio\\\"]:checked + .form-radio-indicator::after {\\n  content: '';\\n  width: 8px;\\n  height: 8px;\\n  background: var(--accent-primary);\\n  border-radius: 50%;\\n}\\n\\n.form-radio input[type=\\\"radio\\\"]:focus + .form-radio-indicator {\\n  box-shadow: 0 0 0 3px rgba(14, 165, 233, 0.2);\\n}\\n\\n/* ===== FORM VALIDATION ===== */\\n\\n/* Error Messages */\\n.form-error {\\n  color: var(--status-error);\\n  font-size: var(--text-xs);\\n  margin-top: var(--space-xs);\\n  display: flex;\\n  align-items: center;\\n  gap: var(--space-xs);\\n}\\n\\n.form-error::before {\\n  content: '⚠';\\n  font-size: var(--text-sm);\\n}\\n\\n/* Success Messages */\\n.form-success {\\n  color: var(--status-success);\\n  font-size: var(--text-xs);\\n  margin-top: var(--space-xs);\\n  display: flex;\\n  align-items: center;\\n  gap: var(--space-xs);\\n}\\n\\n.form-success::before {\\n  content: '✓';\\n  font-size: var(--text-sm);\\n  font-weight: var(--font-bold);\\n}\\n\\n/* Form Alerts */\\n.form-alert {\\n  padding: var(--space-md);\\n  border-radius: var(--radius-md);\\n  margin-bottom: var(--space-lg);\\n  border: var(--border-1) solid transparent;\\n  font-size: var(--text-sm);\\n  line-height: var(--leading-relaxed);\\n}\\n\\n.form-alert-success {\\n  background: rgba(34, 197, 94, 0.1);\\n  border-color: rgba(34, 197, 94, 0.2);\\n  color: var(--status-success);\\n}\\n\\n.form-alert-warning {\\n  background: rgba(234, 179, 8, 0.1);\\n  border-color: rgba(234, 179, 8, 0.2);\\n  color: var(--status-warning);\\n}\\n\\n.form-alert-error {\\n  background: rgba(239, 68, 68, 0.1);\\n  border-color: rgba(239, 68, 68, 0.2);\\n  color: var(--status-error);\\n}\\n\\n.form-alert-info {\\n  background: rgba(14, 165, 233, 0.1);\\n  border-color: rgba(14, 165, 233, 0.2);\\n  color: var(--status-info);\\n}\\n\\n/* ===== SPECIALIZED FORM COMPONENTS ===== */\\n\\n/* Product Classification Form */\\n.product-classification-grid {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\\n  gap: var(--space-md);\\n  margin-bottom: var(--space-lg);\\n}\\n\\n.product-suggestion-card {\\n  background: var(--bg-secondary);\\n  border: var(--border-1) solid var(--bloomberg-gray-700);\\n  border-radius: var(--radius-md);\\n  padding: var(--space-md);\\n  cursor: pointer;\\n  transition: var(--transition-all);\\n}\\n\\n.product-suggestion-card:hover {\\n  border-color: var(--accent-primary);\\n  background: rgba(14, 165, 233, 0.05);\\n}\\n\\n.product-suggestion-card.selected {\\n  border-color: var(--accent-primary);\\n  background: rgba(14, 165, 233, 0.1);\\n}\\n\\n/* Triangle Routing Selection */\\n.routing-options-grid {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\\n  gap: var(--space-lg);\\n  margin: var(--space-lg) 0;\\n}\\n\\n.routing-option-card {\\n  background: var(--bg-secondary);\\n  border: var(--border-2) solid var(--bloomberg-gray-700);\\n  border-radius: var(--radius-lg);\\n  padding: var(--space-lg);\\n  cursor: pointer;\\n  transition: var(--transition-all);\\n  position: relative;\\n}\\n\\n.routing-option-card:hover {\\n  border-color: var(--accent-primary);\\n  transform: translateY(-2px);\\n  box-shadow: var(--shadow-bloomberg);\\n}\\n\\n.routing-option-card.recommended {\\n  border-color: var(--status-success);\\n  background: rgba(34, 197, 94, 0.05);\\n}\\n\\n.routing-option-card.selected {\\n  border-color: var(--accent-primary);\\n  background: rgba(14, 165, 233, 0.1);\\n}\\n\\n.routing-savings {\\n  font-size: var(--text-2xl);\\n  font-weight: var(--font-bold);\\n  color: var(--status-success);\\n  font-family: var(--font-data);\\n  text-align: center;\\n  margin: var(--space-md) 0;\\n}\\n\\n/* Partnership Ecosystem Forms */\\n.partnership-form-grid {\\n  display: grid;\\n  grid-template-columns: 1fr 1fr;\\n  gap: var(--space-xl);\\n  margin-top: var(--space-lg);\\n}\\n\\n/* ===== RESPONSIVE FORMS ===== */\\n\\n/* Tablet Portrait */\\n@media (max-width: var(--breakpoint-sm)) {\\n  .form-row {\\n    flex-direction: column;\\n    gap: var(--space-md);\\n  }\\n  \\n  .form-buttons {\\n    flex-direction: column-reverse;\\n    gap: var(--space-md);\\n    align-items: stretch;\\n  }\\n  \\n  .product-classification-grid,\\n  .routing-options-grid {\\n    grid-template-columns: 1fr;\\n  }\\n  \\n  .partnership-form-grid {\\n    grid-template-columns: 1fr;\\n    gap: var(--space-lg);\\n  }\\n  \\n  .form-title {\\n    font-size: var(--text-2xl);\\n  }\\n  \\n  .form-container {\\n    padding: var(--space-lg);\\n  }\\n}\\n\\n/* Mobile */\\n@media (max-width: var(--breakpoint-xs)) {\\n  .form-container {\\n    padding: var(--space-md);\\n    margin: var(--space-sm);\\n  }\\n  \\n  .form-title {\\n    font-size: var(--text-xl);\\n  }\\n  \\n  .form-subtitle {\\n    font-size: var(--text-base);\\n  }\\n  \\n  .form-btn,\\n  .bloomberg-btn {\\n    height: var(--form-element-height-lg);\\n    font-size: var(--text-base);\\n  }\\n  \\n  .routing-option-card {\\n    padding: var(--space-md);\\n  }\\n  \\n  .routing-savings {\\n    font-size: var(--text-xl);\\n  }\\n}\\n\\n/* ===== ACCESSIBILITY ===== */\\n\\n/* Focus visible styles */\\n.form-input:focus-visible,\\n.form-select:focus-visible,\\n.form-textarea:focus-visible {\\n  outline: 2px solid var(--accent-primary);\\n  outline-offset: 2px;\\n}\\n\\n.form-btn:focus-visible {\\n  outline: 2px solid var(--accent-primary);\\n  outline-offset: 2px;\\n}\\n\\n/* Screen reader support */\\n.sr-only {\\n  position: absolute;\\n  width: 1px;\\n  height: 1px;\\n  padding: 0;\\n  margin: -1px;\\n  overflow: hidden;\\n  clip: rect(0, 0, 0, 0);\\n  white-space: nowrap;\\n  border: 0;\\n}\\n\\n/* High contrast mode */\\n@media (prefers-contrast: high) {\\n  .form-input,\\n  .form-select,\\n  .form-textarea {\\n    border-width: 2px;\\n  }\\n  \\n  .form-btn {\\n    border-width: 2px;\\n  }\\n  \\n  .routing-option-card {\\n    border-width: 3px;\\n  }\\n}\\n\\n/* Reduced motion */\\n@media (prefers-reduced-motion: reduce) {\\n  .routing-option-card:hover {\\n    transform: none;\\n  }\\n  \\n  .form-btn-primary:hover {\\n    transform: none;\\n  }\\n  \\n  .form-btn.loading::after {\\n    animation: none;\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/components/forms.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/components/layout.css":
/*!********************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/components/layout.css ***!
  \********************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* ============================= */\\n/* TRIANGLE INTELLIGENCE         */\\n/* Layout Components             */\\n/* Bloomberg Terminal Layout     */\\n/* ============================= */\\n\\n/**\\n * Layout Components for Triangle Intelligence Platform\\n * \\n * This module contains all layout-related components:\\n * - Container systems\\n * - Grid layouts\\n * - Section layouts\\n * - Card layouts\\n * - Hero sections\\n */\\n\\n/* ===== GLOBAL LAYOUT BASE ===== */\\n\\nhtml {\\n  font-size: 16px;\\n  line-height: var(--leading-normal);\\n  background: var(--bg-primary);\\n  color: var(--text-primary);\\n  background-image: radial-gradient(\\n    circle at 25% 25%, \\n    rgba(14, 165, 233, 0.05) 0%, \\n    transparent 50%\\n  );\\n}\\n\\nbody {\\n  font-family: var(--font-primary);\\n  color: var(--text-primary);\\n  font-weight: var(--font-normal);\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\n/* ===== CONTAINER SYSTEMS ===== */\\n\\n/* Base Container */\\n.container {\\n  max-width: var(--container-xl);\\n  margin: 0 auto;\\n  padding: 0 var(--space-lg);\\n}\\n\\n.container-fluid {\\n  width: 100%;\\n  padding: 0 var(--space-lg);\\n}\\n\\n.container-sm {\\n  max-width: var(--container-sm);\\n  margin: 0 auto;\\n  padding: 0 var(--space-lg);\\n}\\n\\n.container-md {\\n  max-width: var(--container-md);\\n  margin: 0 auto;\\n  padding: 0 var(--space-lg);\\n}\\n\\n.container-lg {\\n  max-width: var(--container-lg);\\n  margin: 0 auto;\\n  padding: 0 var(--space-lg);\\n}\\n\\n.container-xl {\\n  max-width: var(--container-xl);\\n  margin: 0 auto;\\n  padding: 0 var(--space-lg);\\n}\\n\\n.container-2xl {\\n  max-width: var(--container-2xl);\\n  margin: 0 auto;\\n  padding: 0 var(--space-lg);\\n}\\n\\n/* ===== SPECIALIZED CONTAINERS ===== */\\n\\n/* Triangle Journey Container */\\n.triangle-container {\\n  width: 100%;\\n  max-width: none;\\n  padding: 0;\\n  margin: 0;\\n}\\n\\n/* Dashboard Container */\\n.dashboard-container {\\n  width: 100%;\\n  max-width: var(--container-2xl);\\n  margin: 0 auto;\\n  padding: 0 var(--space-lg);\\n}\\n\\n/* Content Wrapper */\\n.content-wrapper {\\n  max-width: var(--container-xl);\\n  margin: 0 auto;\\n  padding: 0 var(--space-lg);\\n}\\n\\n/* Bloomberg Containers (Legacy Support) */\\n.bloomberg-container-padded {\\n  width: 100%;\\n  max-width: var(--container-2xl);\\n  margin: 0 auto;\\n  padding: 0 var(--space-lg);\\n}\\n\\n.bloomberg-container-full {\\n  width: 100%;\\n  padding: 0 var(--space-lg);\\n}\\n\\n/* ===== MAIN LAYOUT SYSTEMS ===== */\\n\\n/* Triangle Layout System */\\n.triangle-layout {\\n  display: flex;\\n  min-height: 100vh;\\n  background: var(--bg-primary);\\n  color: white;\\n  position: relative;\\n}\\n\\n.triangle-layout .main-content {\\n  flex: 1 1;\\n  margin-left: var(--side-nav-width);\\n  padding-top: var(--top-nav-height);\\n  min-height: 100vh;\\n  background: transparent;\\n}\\n\\n/* Page Content */\\n.page-content {\\n  width: 100%;\\n  padding: var(--space-xl) 0;\\n  background: transparent;\\n}\\n\\n.main-content {\\n  min-height: 100vh;\\n  background: var(--bg-primary);\\n}\\n\\n/* ===== SECTION LAYOUTS ===== */\\n\\n/* Bloomberg Section */\\n.bloomberg-section {\\n  padding: var(--space-2xl) 0;\\n  position: relative;\\n}\\n\\n.bloomberg-section-title {\\n  font-size: var(--text-3xl);\\n  font-weight: var(--font-bold);\\n  color: var(--text-primary);\\n  text-align: center;\\n  margin-bottom: var(--space-2xl);\\n  text-transform: uppercase;\\n  letter-spacing: var(--tracking-wide);\\n}\\n\\n.bloomberg-section-subtitle {\\n  font-size: var(--text-lg);\\n  color: var(--text-secondary);\\n  text-align: center;\\n  margin-bottom: var(--space-xl);\\n  line-height: var(--leading-relaxed);\\n  max-width: 600px;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n/* ===== HERO SECTIONS ===== */\\n\\n/* Bloomberg Hero */\\n.bloomberg-hero {\\n  padding: var(--space-3xl) 0;\\n  background: linear-gradient(135deg, \\n    rgba(10, 15, 28, 0.95) 0%, \\n    rgba(16, 23, 42, 0.90) 50%, \\n    rgba(10, 15, 28, 0.95) 100%\\n  );\\n  border-bottom: var(--border-1) solid var(--bloomberg-gray-700);\\n  position: relative;\\n  overflow: hidden;\\n}\\n\\n.bloomberg-hero::before {\\n  content: '';\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background: \\n    repeating-linear-gradient(\\n      90deg,\\n      transparent,\\n      transparent 49px,\\n      rgba(14, 165, 233, 0.03) 50px\\n    );\\n  pointer-events: none;\\n}\\n\\n.bloomberg-hero-content {\\n  max-width: var(--container-xl);\\n  margin: 0 auto;\\n  text-align: center;\\n  position: relative;\\n  z-index: 2;\\n  padding: 0 var(--space-lg);\\n}\\n\\n.bloomberg-hero-title {\\n  font-size: 3.5rem;\\n  font-weight: var(--font-bold);\\n  color: var(--text-primary);\\n  line-height: var(--leading-tight);\\n  margin-bottom: var(--space-lg);\\n  letter-spacing: var(--tracking-tight);\\n}\\n\\n.bloomberg-hero-subtitle {\\n  font-size: var(--text-xl);\\n  color: var(--text-secondary);\\n  line-height: var(--leading-relaxed);\\n  margin-bottom: var(--space-2xl);\\n  max-width: 800px;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n.bloomberg-hero-actions {\\n  display: flex;\\n  justify-content: center;\\n  gap: var(--space-lg);\\n  flex-wrap: wrap;\\n}\\n\\n/* ===== GRID SYSTEMS ===== */\\n\\n/* Bloomberg Grid */\\n.bloomberg-grid {\\n  display: grid;\\n  grid-gap: var(--gap-lg);\\n  gap: var(--gap-lg);\\n}\\n\\n.bloomberg-grid-2 {\\n  grid-template-columns: repeat(2, 1fr);\\n}\\n\\n.bloomberg-grid-3 {\\n  grid-template-columns: repeat(3, 1fr);\\n}\\n\\n.bloomberg-grid-4 {\\n  grid-template-columns: repeat(4, 1fr);\\n}\\n\\n.bloomberg-grid-auto {\\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\\n}\\n\\n/* Foundation Workspace Grid */\\n.foundation-workspace {\\n  display: grid;\\n  grid-template-columns: 2fr 1fr;\\n  grid-gap: var(--space-xl);\\n  gap: var(--space-xl);\\n  background: transparent;\\n  align-items: start;\\n  margin-top: var(--space-lg);\\n}\\n\\n.foundation-layout {\\n  width: 100%;\\n  padding: 0 var(--space-lg);\\n}\\n\\n.foundation-layout-centered {\\n  max-width: var(--container-xl);\\n  margin: 0 auto;\\n}\\n\\n/* ===== CARD LAYOUTS ===== */\\n\\n/* Base Card System */\\n.bloomberg-card {\\n  background: var(--bg-secondary);\\n  border: var(--border-1) solid var(--bloomberg-gray-700);\\n  border-radius: var(--radius-lg);\\n  padding: var(--space-lg);\\n  box-shadow: var(--shadow-md);\\n  transition: var(--transition-all);\\n  position: relative;\\n  overflow: hidden;\\n}\\n\\n.bloomberg-card::before {\\n  content: '';\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  height: 2px;\\n  background: linear-gradient(90deg, var(--accent-primary), var(--bloomberg-blue-light));\\n  opacity: 0;\\n  transition: var(--transition-opacity);\\n}\\n\\n.bloomberg-card:hover {\\n  border-color: var(--bloomberg-gray-600);\\n  box-shadow: var(--shadow-lg);\\n  transform: translateY(-2px);\\n}\\n\\n.bloomberg-card:hover::before {\\n  opacity: 1;\\n}\\n\\n/* Card Variants */\\n.bloomberg-panel {\\n  background: var(--bg-secondary);\\n  border: var(--border-1) solid var(--bloomberg-gray-700);\\n  border-radius: var(--radius-md);\\n  padding: var(--space-md);\\n}\\n\\n.bloomberg-widget {\\n  background: linear-gradient(135deg, var(--bg-secondary), var(--bg-tertiary));\\n  border: var(--border-1) solid var(--bloomberg-gray-600);\\n  border-radius: var(--radius-lg);\\n  padding: var(--space-lg);\\n  box-shadow: var(--shadow-md);\\n}\\n\\n/* Card Headers */\\n.bloomberg-card-header {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  margin-bottom: var(--space-lg);\\n  padding-bottom: var(--space-sm);\\n  border-bottom: var(--border-1) solid var(--bloomberg-gray-700);\\n}\\n\\n.bloomberg-card-title {\\n  font-size: var(--text-lg);\\n  font-weight: var(--font-semibold);\\n  color: var(--text-primary);\\n  margin: 0;\\n  text-transform: uppercase;\\n  letter-spacing: var(--tracking-wide);\\n}\\n\\n.bloomberg-card-subtitle {\\n  color: var(--text-secondary);\\n  line-height: var(--leading-relaxed);\\n  margin: 0;\\n}\\n\\n/* ===== SPECIALIZED LAYOUTS ===== */\\n\\n/* Foundation Form Section */\\n.foundation-form-section {\\n  background: transparent;\\n  padding: var(--space-xl);\\n  border-radius: var(--radius-lg);\\n}\\n\\n.foundation-intelligence-panel {\\n  background: var(--bg-secondary);\\n  border: var(--border-1) solid var(--bloomberg-blue-light);\\n  padding: var(--space-lg);\\n  border-radius: var(--radius-lg);\\n}\\n\\n/* Executive Dashboard Layout */\\n.executive-dashboard-container {\\n  width: 100%;\\n  padding: var(--space-lg);\\n}\\n\\n.executive-dashboard-container-centered {\\n  width: 100%;\\n  max-width: var(--container-2xl);\\n  margin: 0 auto;\\n  padding: var(--space-lg);\\n}\\n\\n/* Partnership Ecosystem Grid */\\n.partnership-ecosystem-grid {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\\n  grid-gap: var(--space-lg);\\n  gap: var(--space-lg);\\n  margin: var(--space-lg) 0;\\n}\\n\\n/* ===== BACKGROUND SYSTEMS ===== */\\n\\n/* Bloomberg Main Background */\\n.bloomberg-main-background {\\n  background: var(--bg-primary);\\n  background-image: \\n    radial-gradient(circle at 25% 25%, rgba(14, 165, 233, 0.05) 0%, transparent 50%),\\n    radial-gradient(circle at 75% 75%, rgba(14, 165, 233, 0.03) 0%, transparent 50%);\\n  position: relative;\\n  min-height: 100vh;\\n}\\n\\n/* Crisis Alert Banner */\\n.bloomberg-accent-banner {\\n  background: linear-gradient(90deg, var(--status-error), var(--bloomberg-orange));\\n  color: white;\\n  padding: var(--space-sm) var(--space-lg);\\n  text-align: center;\\n  font-size: var(--text-sm);\\n  font-weight: var(--font-semibold);\\n  text-transform: uppercase;\\n  letter-spacing: var(--tracking-wide);\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  gap: var(--space-lg);\\n  position: relative;\\n  z-index: var(--z-crisis-banner);\\n}\\n\\n/* ===== RESPONSIVE LAYOUT ===== */\\n\\n/* Large Screens */\\n@media (max-width: var(--breakpoint-xl)) {\\n  .bloomberg-container-padded,\\n  .dashboard-container {\\n    max-width: var(--container-xl);\\n  }\\n}\\n\\n/* Desktop */\\n@media (max-width: var(--breakpoint-lg)) {\\n  .dashboard-container {\\n    max-width: var(--container-lg);\\n  }\\n  \\n  .bloomberg-grid-4 {\\n    grid-template-columns: repeat(2, 1fr);\\n  }\\n  \\n  .bloomberg-grid-3 {\\n    grid-template-columns: repeat(2, 1fr);\\n  }\\n}\\n\\n/* Tablet Landscape */\\n@media (max-width: var(--breakpoint-md)) {\\n  .dashboard-container,\\n  .content-wrapper {\\n    padding: 0 var(--space-md);\\n  }\\n  \\n  .foundation-workspace {\\n    grid-template-columns: 1fr;\\n    gap: var(--space-lg);\\n  }\\n  \\n  .bloomberg-hero-title {\\n    font-size: 3rem;\\n  }\\n}\\n\\n/* Tablet Portrait */\\n@media (max-width: var(--breakpoint-sm)) {\\n  .container,\\n  .bloomberg-container-padded,\\n  .bloomberg-container-full,\\n  .dashboard-container,\\n  .content-wrapper {\\n    padding: 0 var(--space-md);\\n  }\\n  \\n  .triangle-layout .main-content {\\n    margin-left: 0;\\n    padding-top: var(--top-nav-height);\\n  }\\n  \\n  .bloomberg-grid-4,\\n  .bloomberg-grid-3,\\n  .bloomberg-grid-2 {\\n    grid-template-columns: 1fr;\\n  }\\n  \\n  .partnership-ecosystem-grid {\\n    grid-template-columns: 1fr;\\n  }\\n  \\n  .bloomberg-hero-title {\\n    font-size: 2.5rem;\\n  }\\n  \\n  .bloomberg-hero-subtitle {\\n    font-size: var(--text-lg);\\n  }\\n  \\n  .bloomberg-hero-actions {\\n    flex-direction: column;\\n    align-items: stretch;\\n  }\\n}\\n\\n/* Mobile */\\n@media (max-width: var(--breakpoint-xs)) {\\n  .container,\\n  .bloomberg-container-padded,\\n  .bloomberg-container-full,\\n  .dashboard-container,\\n  .content-wrapper {\\n    padding: 0 var(--space-sm);\\n  }\\n  \\n  .bloomberg-card {\\n    padding: var(--space-md);\\n  }\\n  \\n  .bloomberg-hero-title {\\n    font-size: 2rem;\\n  }\\n  \\n  .bloomberg-hero-subtitle {\\n    font-size: var(--text-base);\\n  }\\n  \\n  .bloomberg-section-title {\\n    font-size: var(--text-2xl);\\n  }\\n  \\n  .foundation-form-section {\\n    padding: var(--space-lg);\\n  }\\n}\\n\\n/* ===== PRINT LAYOUT ===== */\\n\\n@media print {\\n  .triangle-layout .main-content {\\n    margin-left: 0;\\n    padding-top: 0;\\n  }\\n  \\n  .bloomberg-hero {\\n    padding: var(--space-lg) 0;\\n  }\\n  \\n  .bloomberg-card {\\n    box-shadow: none;\\n    border: var(--border-1) solid #000;\\n  }\\n  \\n  .page-content {\\n    padding: var(--space-md) 0;\\n  }\\n}\\n\\n/* ===== ACCESSIBILITY ===== */\\n\\n/* Skip to Content */\\n.skip-to-content {\\n  position: absolute;\\n  top: -40px;\\n  left: 6px;\\n  background: var(--accent-primary);\\n  color: white;\\n  padding: var(--space-sm) var(--space-md);\\n  border-radius: var(--radius-md);\\n  text-decoration: none;\\n  font-weight: var(--font-semibold);\\n  z-index: 9999;\\n  transition: top var(--transition-fast);\\n}\\n\\n.skip-to-content:focus {\\n  top: 6px;\\n}\\n\\n/* High Contrast */\\n@media (prefers-contrast: high) {\\n  .bloomberg-card,\\n  .bloomberg-panel,\\n  .bloomberg-widget {\\n    border-width: 2px;\\n  }\\n}\\n\\n/* Reduced Motion */\\n@media (prefers-reduced-motion: reduce) {\\n  .bloomberg-card:hover {\\n    transform: none;\\n  }\\n  \\n  .bloomberg-hero::before {\\n    background: none;\\n  }\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://styles/components/layout.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/* ============================= */\\n/* TRIANGLE INTELLIGENCE         */\\n/* Layout Components             */\\n/* Bloomberg Terminal Layout     */\\n/* ============================= */\\n\\n/**\\n * Layout Components for Triangle Intelligence Platform\\n * \\n * This module contains all layout-related components:\\n * - Container systems\\n * - Grid layouts\\n * - Section layouts\\n * - Card layouts\\n * - Hero sections\\n */\\n\\n/* ===== GLOBAL LAYOUT BASE ===== */\\n\\nhtml {\\n  font-size: 16px;\\n  line-height: var(--leading-normal);\\n  background: var(--bg-primary);\\n  color: var(--text-primary);\\n  background-image: radial-gradient(\\n    circle at 25% 25%, \\n    rgba(14, 165, 233, 0.05) 0%, \\n    transparent 50%\\n  );\\n}\\n\\nbody {\\n  font-family: var(--font-primary);\\n  color: var(--text-primary);\\n  font-weight: var(--font-normal);\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\n/* ===== CONTAINER SYSTEMS ===== */\\n\\n/* Base Container */\\n.container {\\n  max-width: var(--container-xl);\\n  margin: 0 auto;\\n  padding: 0 var(--space-lg);\\n}\\n\\n.container-fluid {\\n  width: 100%;\\n  padding: 0 var(--space-lg);\\n}\\n\\n.container-sm {\\n  max-width: var(--container-sm);\\n  margin: 0 auto;\\n  padding: 0 var(--space-lg);\\n}\\n\\n.container-md {\\n  max-width: var(--container-md);\\n  margin: 0 auto;\\n  padding: 0 var(--space-lg);\\n}\\n\\n.container-lg {\\n  max-width: var(--container-lg);\\n  margin: 0 auto;\\n  padding: 0 var(--space-lg);\\n}\\n\\n.container-xl {\\n  max-width: var(--container-xl);\\n  margin: 0 auto;\\n  padding: 0 var(--space-lg);\\n}\\n\\n.container-2xl {\\n  max-width: var(--container-2xl);\\n  margin: 0 auto;\\n  padding: 0 var(--space-lg);\\n}\\n\\n/* ===== SPECIALIZED CONTAINERS ===== */\\n\\n/* Triangle Journey Container */\\n.triangle-container {\\n  width: 100%;\\n  max-width: none;\\n  padding: 0;\\n  margin: 0;\\n}\\n\\n/* Dashboard Container */\\n.dashboard-container {\\n  width: 100%;\\n  max-width: var(--container-2xl);\\n  margin: 0 auto;\\n  padding: 0 var(--space-lg);\\n}\\n\\n/* Content Wrapper */\\n.content-wrapper {\\n  max-width: var(--container-xl);\\n  margin: 0 auto;\\n  padding: 0 var(--space-lg);\\n}\\n\\n/* Bloomberg Containers (Legacy Support) */\\n.bloomberg-container-padded {\\n  width: 100%;\\n  max-width: var(--container-2xl);\\n  margin: 0 auto;\\n  padding: 0 var(--space-lg);\\n}\\n\\n.bloomberg-container-full {\\n  width: 100%;\\n  padding: 0 var(--space-lg);\\n}\\n\\n/* ===== MAIN LAYOUT SYSTEMS ===== */\\n\\n/* Triangle Layout System */\\n.triangle-layout {\\n  display: flex;\\n  min-height: 100vh;\\n  background: var(--bg-primary);\\n  color: white;\\n  position: relative;\\n}\\n\\n.triangle-layout .main-content {\\n  flex: 1;\\n  margin-left: var(--side-nav-width);\\n  padding-top: var(--top-nav-height);\\n  min-height: 100vh;\\n  background: transparent;\\n}\\n\\n/* Page Content */\\n.page-content {\\n  width: 100%;\\n  padding: var(--space-xl) 0;\\n  background: transparent;\\n}\\n\\n.main-content {\\n  min-height: 100vh;\\n  background: var(--bg-primary);\\n}\\n\\n/* ===== SECTION LAYOUTS ===== */\\n\\n/* Bloomberg Section */\\n.bloomberg-section {\\n  padding: var(--space-2xl) 0;\\n  position: relative;\\n}\\n\\n.bloomberg-section-title {\\n  font-size: var(--text-3xl);\\n  font-weight: var(--font-bold);\\n  color: var(--text-primary);\\n  text-align: center;\\n  margin-bottom: var(--space-2xl);\\n  text-transform: uppercase;\\n  letter-spacing: var(--tracking-wide);\\n}\\n\\n.bloomberg-section-subtitle {\\n  font-size: var(--text-lg);\\n  color: var(--text-secondary);\\n  text-align: center;\\n  margin-bottom: var(--space-xl);\\n  line-height: var(--leading-relaxed);\\n  max-width: 600px;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n/* ===== HERO SECTIONS ===== */\\n\\n/* Bloomberg Hero */\\n.bloomberg-hero {\\n  padding: var(--space-3xl) 0;\\n  background: linear-gradient(135deg, \\n    rgba(10, 15, 28, 0.95) 0%, \\n    rgba(16, 23, 42, 0.90) 50%, \\n    rgba(10, 15, 28, 0.95) 100%\\n  );\\n  border-bottom: var(--border-1) solid var(--bloomberg-gray-700);\\n  position: relative;\\n  overflow: hidden;\\n}\\n\\n.bloomberg-hero::before {\\n  content: '';\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background: \\n    repeating-linear-gradient(\\n      90deg,\\n      transparent,\\n      transparent 49px,\\n      rgba(14, 165, 233, 0.03) 50px\\n    );\\n  pointer-events: none;\\n}\\n\\n.bloomberg-hero-content {\\n  max-width: var(--container-xl);\\n  margin: 0 auto;\\n  text-align: center;\\n  position: relative;\\n  z-index: 2;\\n  padding: 0 var(--space-lg);\\n}\\n\\n.bloomberg-hero-title {\\n  font-size: 3.5rem;\\n  font-weight: var(--font-bold);\\n  color: var(--text-primary);\\n  line-height: var(--leading-tight);\\n  margin-bottom: var(--space-lg);\\n  letter-spacing: var(--tracking-tight);\\n}\\n\\n.bloomberg-hero-subtitle {\\n  font-size: var(--text-xl);\\n  color: var(--text-secondary);\\n  line-height: var(--leading-relaxed);\\n  margin-bottom: var(--space-2xl);\\n  max-width: 800px;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n.bloomberg-hero-actions {\\n  display: flex;\\n  justify-content: center;\\n  gap: var(--space-lg);\\n  flex-wrap: wrap;\\n}\\n\\n/* ===== GRID SYSTEMS ===== */\\n\\n/* Bloomberg Grid */\\n.bloomberg-grid {\\n  display: grid;\\n  gap: var(--gap-lg);\\n}\\n\\n.bloomberg-grid-2 {\\n  grid-template-columns: repeat(2, 1fr);\\n}\\n\\n.bloomberg-grid-3 {\\n  grid-template-columns: repeat(3, 1fr);\\n}\\n\\n.bloomberg-grid-4 {\\n  grid-template-columns: repeat(4, 1fr);\\n}\\n\\n.bloomberg-grid-auto {\\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\\n}\\n\\n/* Foundation Workspace Grid */\\n.foundation-workspace {\\n  display: grid;\\n  grid-template-columns: 2fr 1fr;\\n  gap: var(--space-xl);\\n  background: transparent;\\n  align-items: start;\\n  margin-top: var(--space-lg);\\n}\\n\\n.foundation-layout {\\n  width: 100%;\\n  padding: 0 var(--space-lg);\\n}\\n\\n.foundation-layout-centered {\\n  max-width: var(--container-xl);\\n  margin: 0 auto;\\n}\\n\\n/* ===== CARD LAYOUTS ===== */\\n\\n/* Base Card System */\\n.bloomberg-card {\\n  background: var(--bg-secondary);\\n  border: var(--border-1) solid var(--bloomberg-gray-700);\\n  border-radius: var(--radius-lg);\\n  padding: var(--space-lg);\\n  box-shadow: var(--shadow-md);\\n  transition: var(--transition-all);\\n  position: relative;\\n  overflow: hidden;\\n}\\n\\n.bloomberg-card::before {\\n  content: '';\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  height: 2px;\\n  background: linear-gradient(90deg, var(--accent-primary), var(--bloomberg-blue-light));\\n  opacity: 0;\\n  transition: var(--transition-opacity);\\n}\\n\\n.bloomberg-card:hover {\\n  border-color: var(--bloomberg-gray-600);\\n  box-shadow: var(--shadow-lg);\\n  transform: translateY(-2px);\\n}\\n\\n.bloomberg-card:hover::before {\\n  opacity: 1;\\n}\\n\\n/* Card Variants */\\n.bloomberg-panel {\\n  background: var(--bg-secondary);\\n  border: var(--border-1) solid var(--bloomberg-gray-700);\\n  border-radius: var(--radius-md);\\n  padding: var(--space-md);\\n}\\n\\n.bloomberg-widget {\\n  background: linear-gradient(135deg, var(--bg-secondary), var(--bg-tertiary));\\n  border: var(--border-1) solid var(--bloomberg-gray-600);\\n  border-radius: var(--radius-lg);\\n  padding: var(--space-lg);\\n  box-shadow: var(--shadow-md);\\n}\\n\\n/* Card Headers */\\n.bloomberg-card-header {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  margin-bottom: var(--space-lg);\\n  padding-bottom: var(--space-sm);\\n  border-bottom: var(--border-1) solid var(--bloomberg-gray-700);\\n}\\n\\n.bloomberg-card-title {\\n  font-size: var(--text-lg);\\n  font-weight: var(--font-semibold);\\n  color: var(--text-primary);\\n  margin: 0;\\n  text-transform: uppercase;\\n  letter-spacing: var(--tracking-wide);\\n}\\n\\n.bloomberg-card-subtitle {\\n  color: var(--text-secondary);\\n  line-height: var(--leading-relaxed);\\n  margin: 0;\\n}\\n\\n/* ===== SPECIALIZED LAYOUTS ===== */\\n\\n/* Foundation Form Section */\\n.foundation-form-section {\\n  background: transparent;\\n  padding: var(--space-xl);\\n  border-radius: var(--radius-lg);\\n}\\n\\n.foundation-intelligence-panel {\\n  background: var(--bg-secondary);\\n  border: var(--border-1) solid var(--bloomberg-blue-light);\\n  padding: var(--space-lg);\\n  border-radius: var(--radius-lg);\\n}\\n\\n/* Executive Dashboard Layout */\\n.executive-dashboard-container {\\n  width: 100%;\\n  padding: var(--space-lg);\\n}\\n\\n.executive-dashboard-container-centered {\\n  width: 100%;\\n  max-width: var(--container-2xl);\\n  margin: 0 auto;\\n  padding: var(--space-lg);\\n}\\n\\n/* Partnership Ecosystem Grid */\\n.partnership-ecosystem-grid {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\\n  gap: var(--space-lg);\\n  margin: var(--space-lg) 0;\\n}\\n\\n/* ===== BACKGROUND SYSTEMS ===== */\\n\\n/* Bloomberg Main Background */\\n.bloomberg-main-background {\\n  background: var(--bg-primary);\\n  background-image: \\n    radial-gradient(circle at 25% 25%, rgba(14, 165, 233, 0.05) 0%, transparent 50%),\\n    radial-gradient(circle at 75% 75%, rgba(14, 165, 233, 0.03) 0%, transparent 50%);\\n  position: relative;\\n  min-height: 100vh;\\n}\\n\\n/* Crisis Alert Banner */\\n.bloomberg-accent-banner {\\n  background: linear-gradient(90deg, var(--status-error), var(--bloomberg-orange));\\n  color: white;\\n  padding: var(--space-sm) var(--space-lg);\\n  text-align: center;\\n  font-size: var(--text-sm);\\n  font-weight: var(--font-semibold);\\n  text-transform: uppercase;\\n  letter-spacing: var(--tracking-wide);\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  gap: var(--space-lg);\\n  position: relative;\\n  z-index: var(--z-crisis-banner);\\n}\\n\\n/* ===== RESPONSIVE LAYOUT ===== */\\n\\n/* Large Screens */\\n@media (max-width: var(--breakpoint-xl)) {\\n  .bloomberg-container-padded,\\n  .dashboard-container {\\n    max-width: var(--container-xl);\\n  }\\n}\\n\\n/* Desktop */\\n@media (max-width: var(--breakpoint-lg)) {\\n  .dashboard-container {\\n    max-width: var(--container-lg);\\n  }\\n  \\n  .bloomberg-grid-4 {\\n    grid-template-columns: repeat(2, 1fr);\\n  }\\n  \\n  .bloomberg-grid-3 {\\n    grid-template-columns: repeat(2, 1fr);\\n  }\\n}\\n\\n/* Tablet Landscape */\\n@media (max-width: var(--breakpoint-md)) {\\n  .dashboard-container,\\n  .content-wrapper {\\n    padding: 0 var(--space-md);\\n  }\\n  \\n  .foundation-workspace {\\n    grid-template-columns: 1fr;\\n    gap: var(--space-lg);\\n  }\\n  \\n  .bloomberg-hero-title {\\n    font-size: 3rem;\\n  }\\n}\\n\\n/* Tablet Portrait */\\n@media (max-width: var(--breakpoint-sm)) {\\n  .container,\\n  .bloomberg-container-padded,\\n  .bloomberg-container-full,\\n  .dashboard-container,\\n  .content-wrapper {\\n    padding: 0 var(--space-md);\\n  }\\n  \\n  .triangle-layout .main-content {\\n    margin-left: 0;\\n    padding-top: var(--top-nav-height);\\n  }\\n  \\n  .bloomberg-grid-4,\\n  .bloomberg-grid-3,\\n  .bloomberg-grid-2 {\\n    grid-template-columns: 1fr;\\n  }\\n  \\n  .partnership-ecosystem-grid {\\n    grid-template-columns: 1fr;\\n  }\\n  \\n  .bloomberg-hero-title {\\n    font-size: 2.5rem;\\n  }\\n  \\n  .bloomberg-hero-subtitle {\\n    font-size: var(--text-lg);\\n  }\\n  \\n  .bloomberg-hero-actions {\\n    flex-direction: column;\\n    align-items: stretch;\\n  }\\n}\\n\\n/* Mobile */\\n@media (max-width: var(--breakpoint-xs)) {\\n  .container,\\n  .bloomberg-container-padded,\\n  .bloomberg-container-full,\\n  .dashboard-container,\\n  .content-wrapper {\\n    padding: 0 var(--space-sm);\\n  }\\n  \\n  .bloomberg-card {\\n    padding: var(--space-md);\\n  }\\n  \\n  .bloomberg-hero-title {\\n    font-size: 2rem;\\n  }\\n  \\n  .bloomberg-hero-subtitle {\\n    font-size: var(--text-base);\\n  }\\n  \\n  .bloomberg-section-title {\\n    font-size: var(--text-2xl);\\n  }\\n  \\n  .foundation-form-section {\\n    padding: var(--space-lg);\\n  }\\n}\\n\\n/* ===== PRINT LAYOUT ===== */\\n\\n@media print {\\n  .triangle-layout .main-content {\\n    margin-left: 0;\\n    padding-top: 0;\\n  }\\n  \\n  .bloomberg-hero {\\n    padding: var(--space-lg) 0;\\n  }\\n  \\n  .bloomberg-card {\\n    box-shadow: none;\\n    border: var(--border-1) solid #000;\\n  }\\n  \\n  .page-content {\\n    padding: var(--space-md) 0;\\n  }\\n}\\n\\n/* ===== ACCESSIBILITY ===== */\\n\\n/* Skip to Content */\\n.skip-to-content {\\n  position: absolute;\\n  top: -40px;\\n  left: 6px;\\n  background: var(--accent-primary);\\n  color: white;\\n  padding: var(--space-sm) var(--space-md);\\n  border-radius: var(--radius-md);\\n  text-decoration: none;\\n  font-weight: var(--font-semibold);\\n  z-index: 9999;\\n  transition: top var(--transition-fast);\\n}\\n\\n.skip-to-content:focus {\\n  top: 6px;\\n}\\n\\n/* High Contrast */\\n@media (prefers-contrast: high) {\\n  .bloomberg-card,\\n  .bloomberg-panel,\\n  .bloomberg-widget {\\n    border-width: 2px;\\n  }\\n}\\n\\n/* Reduced Motion */\\n@media (prefers-reduced-motion: reduce) {\\n  .bloomberg-card:hover {\\n    transform: none;\\n  }\\n  \\n  .bloomberg-hero::before {\\n    background: none;\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/components/layout.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/components/navigation.css":
/*!************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/components/navigation.css ***!
  \************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* ============================= */\\n/* TRIANGLE INTELLIGENCE         */\\n/* Navigation Components         */\\n/* Bloomberg Terminal Navigation */\\n/* ============================= */\\n\\n/**\\n * Navigation Components for Triangle Intelligence Platform\\n * \\n * This module contains all navigation-related components:\\n * - Bloomberg Terminal navigation\\n * - Triangle side navigation\\n * - Top navigation bar\\n * - Breadcrumb navigation\\n * - Dashboard tabs\\n */\\n\\n/* ===== BLOOMBERG TERMINAL NAVIGATION ===== */\\n\\n/* Base Navigation */\\n.bloomberg-nav {\\n  background: var(--bg-secondary);\\n  border-bottom: var(--border-1) solid var(--bloomberg-gray-700);\\n  padding: var(--space-md) 0;\\n  position: relative;\\n  z-index: var(--z-top-nav);\\n}\\n\\n.bloomberg-nav-brand {\\n  font-size: var(--text-xl);\\n  font-weight: var(--font-bold);\\n  color: var(--accent-primary);\\n  text-decoration: none;\\n  display: flex;\\n  align-items: center;\\n  gap: var(--space-sm);\\n  transition: var(--transition-colors);\\n}\\n\\n.bloomberg-nav-brand:hover {\\n  color: var(--bloomberg-blue-light);\\n}\\n\\n.bloomberg-nav-link {\\n  padding: var(--space-sm) var(--space-md);\\n  color: var(--text-secondary);\\n  text-decoration: none;\\n  border-radius: var(--radius-sm);\\n  transition: var(--transition-all);\\n  font-size: var(--text-sm);\\n  font-weight: var(--font-medium);\\n  text-transform: uppercase;\\n  letter-spacing: var(--tracking-wide);\\n}\\n\\n.bloomberg-nav-link:hover {\\n  background: var(--bg-tertiary);\\n  color: var(--text-primary);\\n}\\n\\n.bloomberg-nav-link.active {\\n  background: var(--bg-tertiary);\\n  color: var(--text-primary);\\n  border-left: 3px solid var(--accent-primary);\\n}\\n\\n/* ===== TRIANGLE SIDE NAVIGATION ===== */\\n\\n/* Side Navigation Container */\\n.bloomberg-side-nav {\\n  position: fixed;\\n  left: 0;\\n  top: 0;\\n  width: var(--side-nav-width);\\n  height: 100vh;\\n  background: linear-gradient(180deg, var(--bloomberg-black), var(--bg-primary));\\n  border-right: var(--border-1) solid var(--bloomberg-gray-700);\\n  padding: var(--space-lg);\\n  display: flex;\\n  flex-direction: column;\\n  gap: var(--space-lg);\\n  overflow-y: auto;\\n  z-index: var(--z-side-nav);\\n  scrollbar-width: thin;\\n  scrollbar-color: var(--bloomberg-gray-600) transparent;\\n}\\n\\n.bloomberg-side-nav::-webkit-scrollbar {\\n  width: 6px;\\n}\\n\\n.bloomberg-side-nav::-webkit-scrollbar-track {\\n  background: transparent;\\n}\\n\\n.bloomberg-side-nav::-webkit-scrollbar-thumb {\\n  background: var(--bloomberg-gray-600);\\n  border-radius: var(--radius-full);\\n}\\n\\n.bloomberg-side-nav::-webkit-scrollbar-thumb:hover {\\n  background: var(--bloomberg-gray-500);\\n}\\n\\n/* Navigation Brand Section */\\n.nav-brand {\\n  display: flex;\\n  align-items: center;\\n  gap: var(--space-md);\\n  padding-bottom: var(--space-lg);\\n  border-bottom: var(--border-1) solid var(--bloomberg-gray-700);\\n  margin-top: var(--top-nav-height);\\n}\\n\\n.brand-icon {\\n  width: 32px;\\n  height: 32px;\\n  background: var(--accent-primary);\\n  border-radius: var(--radius-sm);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  color: white;\\n  font-weight: var(--font-bold);\\n  flex-shrink: 0;\\n}\\n\\n.brand-icon::before {\\n  content: '▲';\\n  font-size: 1.2rem;\\n}\\n\\n.brand-text {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.brand-title {\\n  font-size: var(--text-lg);\\n  font-weight: var(--font-bold);\\n  color: var(--text-primary);\\n  line-height: var(--leading-tight);\\n}\\n\\n.brand-subtitle {\\n  font-size: var(--text-xs);\\n  color: var(--text-muted);\\n  font-weight: var(--font-normal);\\n  text-transform: uppercase;\\n  letter-spacing: var(--tracking-wide);\\n}\\n\\n/* Navigation Items */\\n.nav-items {\\n  flex: 1 1;\\n  display: flex;\\n  flex-direction: column;\\n  gap: var(--space-sm);\\n  padding: var(--space-lg) 0;\\n}\\n\\n.nav-item {\\n  display: flex;\\n  align-items: center;\\n  gap: var(--space-md);\\n  padding: var(--space-md);\\n  border-radius: var(--radius-md);\\n  color: var(--text-secondary);\\n  text-decoration: none;\\n  transition: var(--transition-all);\\n  position: relative;\\n  border: var(--border-1) solid transparent;\\n}\\n\\n.nav-item:hover {\\n  background: var(--bg-secondary);\\n  color: var(--text-primary);\\n  border-color: var(--bloomberg-gray-700);\\n}\\n\\n.nav-item.active {\\n  background: var(--accent-primary);\\n  color: white;\\n  border-color: var(--accent-primary);\\n}\\n\\n.nav-item.active::after {\\n  content: '';\\n  position: absolute;\\n  right: -var(--space-lg);\\n  top: 50%;\\n  transform: translateY(-50%);\\n  width: 3px;\\n  height: 24px;\\n  background: white;\\n  border-radius: var(--radius-sm);\\n}\\n\\n.nav-item.locked {\\n  opacity: 0.6;\\n  cursor: not-allowed;\\n  pointer-events: none;\\n}\\n\\n.nav-item.completed {\\n  background: rgba(34, 197, 94, 0.1);\\n  border-color: rgba(34, 197, 94, 0.3);\\n  color: var(--status-success);\\n}\\n\\n.nav-item.completed::before {\\n  content: '✓';\\n  position: absolute;\\n  right: var(--space-sm);\\n  top: 50%;\\n  transform: translateY(-50%);\\n  font-size: var(--text-xs);\\n  font-weight: var(--font-bold);\\n}\\n\\n/* Navigation Item Content */\\n.nav-icon {\\n  font-size: 1rem;\\n  min-width: 20px;\\n  text-align: center;\\n  flex-shrink: 0;\\n}\\n\\n.nav-content {\\n  flex: 1 1;\\n  min-width: 0;\\n}\\n\\n.nav-label {\\n  font-weight: var(--font-medium);\\n  font-size: var(--text-sm);\\n  line-height: var(--leading-tight);\\n  margin-bottom: var(--space-xs);\\n}\\n\\n.nav-description {\\n  font-size: var(--text-xs);\\n  color: var(--text-muted);\\n  line-height: var(--leading-relaxed);\\n}\\n\\n.nav-item:hover .nav-description,\\n.nav-item.active .nav-description {\\n  color: inherit;\\n  opacity: 0.8;\\n}\\n\\n/* Navigation Status Section */\\n.nav-status {\\n  padding-top: var(--space-lg);\\n  border-top: var(--border-1) solid var(--bloomberg-gray-700);\\n}\\n\\n.status-header {\\n  font-size: var(--text-xs);\\n  font-weight: var(--font-semibold);\\n  color: var(--text-muted);\\n  text-transform: uppercase;\\n  letter-spacing: var(--tracking-wider);\\n  margin-bottom: var(--space-sm);\\n}\\n\\n.status-items {\\n  display: flex;\\n  flex-direction: column;\\n  gap: var(--space-xs);\\n}\\n\\n.status-item {\\n  display: flex;\\n  align-items: center;\\n  gap: var(--space-sm);\\n  font-size: var(--text-xs);\\n  color: var(--text-secondary);\\n}\\n\\n.status-item-icon {\\n  width: 6px;\\n  height: 6px;\\n  border-radius: 50%;\\n  flex-shrink: 0;\\n}\\n\\n.status-item.online .status-item-icon {\\n  background: var(--status-success);\\n  animation: pulse 2s infinite;\\n}\\n\\n.status-item.offline .status-item-icon {\\n  background: var(--bloomberg-gray-500);\\n}\\n\\n.status-item.warning .status-item-icon {\\n  background: var(--status-warning);\\n}\\n\\n/* Language Switcher in Nav */\\n.nav-language {\\n  padding: var(--space-md) 0;\\n  border-bottom: var(--border-1) solid var(--bloomberg-gray-700);\\n}\\n\\n.nav-language-select {\\n  width: 100%;\\n  background: var(--bg-tertiary);\\n  border: var(--border-1) solid var(--bloomberg-gray-600);\\n  color: var(--text-primary);\\n  padding: var(--space-sm) var(--space-md);\\n  border-radius: var(--radius-sm);\\n  font-size: var(--text-xs);\\n  cursor: pointer;\\n}\\n\\n/* ===== TOP NAVIGATION BAR ===== */\\n\\n/* Triangle Top Navigation */\\n.triangle-nav {\\n  position: fixed;\\n  top: 0;\\n  left: var(--side-nav-width);\\n  right: 0;\\n  height: var(--top-nav-height);\\n  background: linear-gradient(180deg, \\n    rgba(10, 15, 28, 0.98), \\n    rgba(16, 23, 42, 0.95)\\n  );\\n  border-bottom: var(--border-1) solid var(--bloomberg-gray-700);\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  padding: 0 var(--space-lg);\\n  z-index: var(--z-top-nav);\\n  -webkit-backdrop-filter: blur(10px);\\n          backdrop-filter: blur(10px);\\n}\\n\\n.triangle-nav-brand {\\n  display: flex;\\n  align-items: center;\\n  gap: var(--space-md);\\n}\\n\\n.triangle-nav-logo {\\n  display: flex;\\n  align-items: center;\\n  gap: var(--space-md);\\n}\\n\\n.triangle-icon {\\n  font-size: var(--text-xl);\\n  color: var(--accent-primary);\\n  font-weight: var(--font-bold);\\n}\\n\\n.triangle-nav-text {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.triangle-nav-title {\\n  font-size: var(--text-lg);\\n  font-weight: var(--font-bold);\\n  color: var(--text-primary);\\n  line-height: var(--leading-tight);\\n}\\n\\n.triangle-nav-subtitle {\\n  font-size: var(--text-xs);\\n  color: var(--text-muted);\\n  font-weight: var(--font-normal);\\n}\\n\\n.triangle-nav-actions {\\n  display: flex;\\n  align-items: center;\\n  gap: var(--space-lg);\\n}\\n\\n/* ===== BREADCRUMB NAVIGATION ===== */\\n\\n.breadcrumb {\\n  display: flex;\\n  align-items: center;\\n  gap: var(--space-sm);\\n  margin-bottom: var(--space-lg);\\n  padding: var(--space-sm) 0;\\n  font-size: var(--text-sm);\\n}\\n\\n.breadcrumb-item {\\n  color: var(--text-muted);\\n  text-decoration: none;\\n  transition: var(--transition-colors);\\n}\\n\\n.breadcrumb-item:hover {\\n  color: var(--text-secondary);\\n}\\n\\n.breadcrumb-item.active {\\n  color: var(--accent-primary);\\n  font-weight: var(--font-semibold);\\n}\\n\\n.breadcrumb-separator {\\n  color: var(--bloomberg-gray-600);\\n  margin: 0 var(--space-xs);\\n  font-size: var(--text-xs);\\n}\\n\\n.breadcrumb-separator::before {\\n  content: '/';\\n}\\n\\n/* ===== DASHBOARD TABS ===== */\\n\\n.dashboard-tabs {\\n  display: flex;\\n  border-bottom: var(--border-1) solid var(--bloomberg-gray-700);\\n  margin-bottom: var(--space-lg);\\n  overflow-x: auto;\\n  scrollbar-width: none;\\n  -ms-overflow-style: none;\\n}\\n\\n.dashboard-tabs::-webkit-scrollbar {\\n  display: none;\\n}\\n\\n.dashboard-tab {\\n  padding: var(--space-md) var(--space-lg);\\n  color: var(--text-muted);\\n  text-decoration: none;\\n  border-bottom: 2px solid transparent;\\n  transition: var(--transition-colors);\\n  font-weight: var(--font-medium);\\n  text-transform: uppercase;\\n  letter-spacing: var(--tracking-wide);\\n  font-size: var(--text-sm);\\n  white-space: nowrap;\\n  flex-shrink: 0;\\n}\\n\\n.dashboard-tab:hover {\\n  color: var(--text-secondary);\\n  background: rgba(255, 255, 255, 0.02);\\n}\\n\\n.dashboard-tab.active {\\n  color: var(--accent-primary);\\n  border-bottom-color: var(--accent-primary);\\n  background: rgba(14, 165, 233, 0.05);\\n}\\n\\n/* ===== PAGINATION ===== */\\n\\n.pagination {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  gap: var(--space-sm);\\n  margin: var(--space-lg) 0;\\n}\\n\\n.pagination-item {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 40px;\\n  height: 40px;\\n  border: var(--border-1) solid var(--bloomberg-gray-600);\\n  border-radius: var(--radius-md);\\n  color: var(--text-secondary);\\n  text-decoration: none;\\n  font-size: var(--text-sm);\\n  font-weight: var(--font-medium);\\n  transition: var(--transition-all);\\n}\\n\\n.pagination-item:hover {\\n  background: var(--bg-tertiary);\\n  color: var(--text-primary);\\n  border-color: var(--bloomberg-gray-500);\\n}\\n\\n.pagination-item.active {\\n  background: var(--accent-primary);\\n  color: white;\\n  border-color: var(--accent-primary);\\n}\\n\\n.pagination-item:disabled {\\n  opacity: 0.5;\\n  cursor: not-allowed;\\n  pointer-events: none;\\n}\\n\\n/* ===== RESPONSIVE NAVIGATION ===== */\\n\\n/* Mobile Navigation Toggle */\\n.mobile-nav-toggle {\\n  display: none;\\n  width: 40px;\\n  height: 40px;\\n  background: var(--bg-tertiary);\\n  border: var(--border-1) solid var(--bloomberg-gray-600);\\n  border-radius: var(--radius-md);\\n  color: var(--text-primary);\\n  cursor: pointer;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: var(--text-lg);\\n}\\n\\n.mobile-nav-overlay {\\n  display: none;\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background: var(--bg-overlay);\\n  z-index: calc(var(--z-side-nav) - 1);\\n}\\n\\n/* Tablet Portrait */\\n@media (max-width: var(--breakpoint-sm)) {\\n  .triangle-nav {\\n    left: 0;\\n    padding: 0 var(--space-md);\\n  }\\n  \\n  .mobile-nav-toggle {\\n    display: flex;\\n  }\\n  \\n  .bloomberg-side-nav {\\n    transform: translateX(-100%);\\n    transition: transform var(--transition-normal);\\n  }\\n  \\n  .bloomberg-side-nav.open {\\n    transform: translateX(0);\\n  }\\n  \\n  .mobile-nav-overlay.open {\\n    display: block;\\n  }\\n  \\n  .nav-brand {\\n    margin-top: 0;\\n  }\\n  \\n  .dashboard-tabs {\\n    gap: 0;\\n  }\\n  \\n  .dashboard-tab {\\n    padding: var(--space-sm) var(--space-md);\\n    font-size: var(--text-xs);\\n  }\\n}\\n\\n/* Mobile */\\n@media (max-width: var(--breakpoint-xs)) {\\n  .triangle-nav {\\n    padding: 0 var(--space-sm);\\n  }\\n  \\n  .triangle-nav-text {\\n    display: none;\\n  }\\n  \\n  .triangle-nav-actions {\\n    gap: var(--space-sm);\\n  }\\n  \\n  .breadcrumb {\\n    font-size: var(--text-xs);\\n  }\\n  \\n  .pagination-item {\\n    width: 36px;\\n    height: 36px;\\n    font-size: var(--text-xs);\\n  }\\n}\\n\\n/* ===== ACCESSIBILITY ===== */\\n\\n/* Focus States */\\n.nav-item:focus-visible,\\n.dashboard-tab:focus-visible,\\n.pagination-item:focus-visible {\\n  outline: 2px solid var(--accent-primary);\\n  outline-offset: 2px;\\n}\\n\\n.bloomberg-nav-link:focus-visible {\\n  outline: 2px solid var(--accent-primary);\\n  outline-offset: 2px;\\n}\\n\\n/* Skip Links */\\n.skip-link {\\n  position: absolute;\\n  top: -40px;\\n  left: 6px;\\n  background: var(--accent-primary);\\n  color: white;\\n  padding: var(--space-sm) var(--space-md);\\n  border-radius: var(--radius-md);\\n  text-decoration: none;\\n  font-size: var(--text-sm);\\n  font-weight: var(--font-semibold);\\n  z-index: 9999;\\n  transition: top var(--transition-fast);\\n}\\n\\n.skip-link:focus {\\n  top: 6px;\\n}\\n\\n/* High Contrast Mode */\\n@media (prefers-contrast: high) {\\n  .nav-item,\\n  .dashboard-tab,\\n  .pagination-item {\\n    border-width: 2px;\\n  }\\n  \\n  .nav-item.active,\\n  .dashboard-tab.active {\\n    border-width: 3px;\\n  }\\n}\\n\\n/* Reduced Motion */\\n@media (prefers-reduced-motion: reduce) {\\n  .bloomberg-side-nav {\\n    transition: none;\\n  }\\n  \\n  .status-item.online .status-item-icon {\\n    animation: none;\\n  }\\n}\\n\\n/* ===== NAVIGATION ANIMATIONS ===== */\\n\\n@keyframes slideInLeft {\\n  from {\\n    transform: translateX(-100%);\\n    opacity: 0;\\n  }\\n  to {\\n    transform: translateX(0);\\n    opacity: 1;\\n  }\\n}\\n\\n@keyframes fadeIn {\\n  from {\\n    opacity: 0;\\n  }\\n  to {\\n    opacity: 1;\\n  }\\n}\\n\\n.nav-item-enter {\\n  animation: slideInLeft 0.3s var(--ease-out) forwards;\\n}\\n\\n.mobile-nav-overlay-enter {\\n  animation: fadeIn 0.2s var(--ease-out) forwards;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://styles/components/navigation.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/* ============================= */\\n/* TRIANGLE INTELLIGENCE         */\\n/* Navigation Components         */\\n/* Bloomberg Terminal Navigation */\\n/* ============================= */\\n\\n/**\\n * Navigation Components for Triangle Intelligence Platform\\n * \\n * This module contains all navigation-related components:\\n * - Bloomberg Terminal navigation\\n * - Triangle side navigation\\n * - Top navigation bar\\n * - Breadcrumb navigation\\n * - Dashboard tabs\\n */\\n\\n/* ===== BLOOMBERG TERMINAL NAVIGATION ===== */\\n\\n/* Base Navigation */\\n.bloomberg-nav {\\n  background: var(--bg-secondary);\\n  border-bottom: var(--border-1) solid var(--bloomberg-gray-700);\\n  padding: var(--space-md) 0;\\n  position: relative;\\n  z-index: var(--z-top-nav);\\n}\\n\\n.bloomberg-nav-brand {\\n  font-size: var(--text-xl);\\n  font-weight: var(--font-bold);\\n  color: var(--accent-primary);\\n  text-decoration: none;\\n  display: flex;\\n  align-items: center;\\n  gap: var(--space-sm);\\n  transition: var(--transition-colors);\\n}\\n\\n.bloomberg-nav-brand:hover {\\n  color: var(--bloomberg-blue-light);\\n}\\n\\n.bloomberg-nav-link {\\n  padding: var(--space-sm) var(--space-md);\\n  color: var(--text-secondary);\\n  text-decoration: none;\\n  border-radius: var(--radius-sm);\\n  transition: var(--transition-all);\\n  font-size: var(--text-sm);\\n  font-weight: var(--font-medium);\\n  text-transform: uppercase;\\n  letter-spacing: var(--tracking-wide);\\n}\\n\\n.bloomberg-nav-link:hover {\\n  background: var(--bg-tertiary);\\n  color: var(--text-primary);\\n}\\n\\n.bloomberg-nav-link.active {\\n  background: var(--bg-tertiary);\\n  color: var(--text-primary);\\n  border-left: 3px solid var(--accent-primary);\\n}\\n\\n/* ===== TRIANGLE SIDE NAVIGATION ===== */\\n\\n/* Side Navigation Container */\\n.bloomberg-side-nav {\\n  position: fixed;\\n  left: 0;\\n  top: 0;\\n  width: var(--side-nav-width);\\n  height: 100vh;\\n  background: linear-gradient(180deg, var(--bloomberg-black), var(--bg-primary));\\n  border-right: var(--border-1) solid var(--bloomberg-gray-700);\\n  padding: var(--space-lg);\\n  display: flex;\\n  flex-direction: column;\\n  gap: var(--space-lg);\\n  overflow-y: auto;\\n  z-index: var(--z-side-nav);\\n  scrollbar-width: thin;\\n  scrollbar-color: var(--bloomberg-gray-600) transparent;\\n}\\n\\n.bloomberg-side-nav::-webkit-scrollbar {\\n  width: 6px;\\n}\\n\\n.bloomberg-side-nav::-webkit-scrollbar-track {\\n  background: transparent;\\n}\\n\\n.bloomberg-side-nav::-webkit-scrollbar-thumb {\\n  background: var(--bloomberg-gray-600);\\n  border-radius: var(--radius-full);\\n}\\n\\n.bloomberg-side-nav::-webkit-scrollbar-thumb:hover {\\n  background: var(--bloomberg-gray-500);\\n}\\n\\n/* Navigation Brand Section */\\n.nav-brand {\\n  display: flex;\\n  align-items: center;\\n  gap: var(--space-md);\\n  padding-bottom: var(--space-lg);\\n  border-bottom: var(--border-1) solid var(--bloomberg-gray-700);\\n  margin-top: var(--top-nav-height);\\n}\\n\\n.brand-icon {\\n  width: 32px;\\n  height: 32px;\\n  background: var(--accent-primary);\\n  border-radius: var(--radius-sm);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  color: white;\\n  font-weight: var(--font-bold);\\n  flex-shrink: 0;\\n}\\n\\n.brand-icon::before {\\n  content: '▲';\\n  font-size: 1.2rem;\\n}\\n\\n.brand-text {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.brand-title {\\n  font-size: var(--text-lg);\\n  font-weight: var(--font-bold);\\n  color: var(--text-primary);\\n  line-height: var(--leading-tight);\\n}\\n\\n.brand-subtitle {\\n  font-size: var(--text-xs);\\n  color: var(--text-muted);\\n  font-weight: var(--font-normal);\\n  text-transform: uppercase;\\n  letter-spacing: var(--tracking-wide);\\n}\\n\\n/* Navigation Items */\\n.nav-items {\\n  flex: 1;\\n  display: flex;\\n  flex-direction: column;\\n  gap: var(--space-sm);\\n  padding: var(--space-lg) 0;\\n}\\n\\n.nav-item {\\n  display: flex;\\n  align-items: center;\\n  gap: var(--space-md);\\n  padding: var(--space-md);\\n  border-radius: var(--radius-md);\\n  color: var(--text-secondary);\\n  text-decoration: none;\\n  transition: var(--transition-all);\\n  position: relative;\\n  border: var(--border-1) solid transparent;\\n}\\n\\n.nav-item:hover {\\n  background: var(--bg-secondary);\\n  color: var(--text-primary);\\n  border-color: var(--bloomberg-gray-700);\\n}\\n\\n.nav-item.active {\\n  background: var(--accent-primary);\\n  color: white;\\n  border-color: var(--accent-primary);\\n}\\n\\n.nav-item.active::after {\\n  content: '';\\n  position: absolute;\\n  right: -var(--space-lg);\\n  top: 50%;\\n  transform: translateY(-50%);\\n  width: 3px;\\n  height: 24px;\\n  background: white;\\n  border-radius: var(--radius-sm);\\n}\\n\\n.nav-item.locked {\\n  opacity: 0.6;\\n  cursor: not-allowed;\\n  pointer-events: none;\\n}\\n\\n.nav-item.completed {\\n  background: rgba(34, 197, 94, 0.1);\\n  border-color: rgba(34, 197, 94, 0.3);\\n  color: var(--status-success);\\n}\\n\\n.nav-item.completed::before {\\n  content: '✓';\\n  position: absolute;\\n  right: var(--space-sm);\\n  top: 50%;\\n  transform: translateY(-50%);\\n  font-size: var(--text-xs);\\n  font-weight: var(--font-bold);\\n}\\n\\n/* Navigation Item Content */\\n.nav-icon {\\n  font-size: 1rem;\\n  min-width: 20px;\\n  text-align: center;\\n  flex-shrink: 0;\\n}\\n\\n.nav-content {\\n  flex: 1;\\n  min-width: 0;\\n}\\n\\n.nav-label {\\n  font-weight: var(--font-medium);\\n  font-size: var(--text-sm);\\n  line-height: var(--leading-tight);\\n  margin-bottom: var(--space-xs);\\n}\\n\\n.nav-description {\\n  font-size: var(--text-xs);\\n  color: var(--text-muted);\\n  line-height: var(--leading-relaxed);\\n}\\n\\n.nav-item:hover .nav-description,\\n.nav-item.active .nav-description {\\n  color: inherit;\\n  opacity: 0.8;\\n}\\n\\n/* Navigation Status Section */\\n.nav-status {\\n  padding-top: var(--space-lg);\\n  border-top: var(--border-1) solid var(--bloomberg-gray-700);\\n}\\n\\n.status-header {\\n  font-size: var(--text-xs);\\n  font-weight: var(--font-semibold);\\n  color: var(--text-muted);\\n  text-transform: uppercase;\\n  letter-spacing: var(--tracking-wider);\\n  margin-bottom: var(--space-sm);\\n}\\n\\n.status-items {\\n  display: flex;\\n  flex-direction: column;\\n  gap: var(--space-xs);\\n}\\n\\n.status-item {\\n  display: flex;\\n  align-items: center;\\n  gap: var(--space-sm);\\n  font-size: var(--text-xs);\\n  color: var(--text-secondary);\\n}\\n\\n.status-item-icon {\\n  width: 6px;\\n  height: 6px;\\n  border-radius: 50%;\\n  flex-shrink: 0;\\n}\\n\\n.status-item.online .status-item-icon {\\n  background: var(--status-success);\\n  animation: pulse 2s infinite;\\n}\\n\\n.status-item.offline .status-item-icon {\\n  background: var(--bloomberg-gray-500);\\n}\\n\\n.status-item.warning .status-item-icon {\\n  background: var(--status-warning);\\n}\\n\\n/* Language Switcher in Nav */\\n.nav-language {\\n  padding: var(--space-md) 0;\\n  border-bottom: var(--border-1) solid var(--bloomberg-gray-700);\\n}\\n\\n.nav-language-select {\\n  width: 100%;\\n  background: var(--bg-tertiary);\\n  border: var(--border-1) solid var(--bloomberg-gray-600);\\n  color: var(--text-primary);\\n  padding: var(--space-sm) var(--space-md);\\n  border-radius: var(--radius-sm);\\n  font-size: var(--text-xs);\\n  cursor: pointer;\\n}\\n\\n/* ===== TOP NAVIGATION BAR ===== */\\n\\n/* Triangle Top Navigation */\\n.triangle-nav {\\n  position: fixed;\\n  top: 0;\\n  left: var(--side-nav-width);\\n  right: 0;\\n  height: var(--top-nav-height);\\n  background: linear-gradient(180deg, \\n    rgba(10, 15, 28, 0.98), \\n    rgba(16, 23, 42, 0.95)\\n  );\\n  border-bottom: var(--border-1) solid var(--bloomberg-gray-700);\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  padding: 0 var(--space-lg);\\n  z-index: var(--z-top-nav);\\n  backdrop-filter: blur(10px);\\n}\\n\\n.triangle-nav-brand {\\n  display: flex;\\n  align-items: center;\\n  gap: var(--space-md);\\n}\\n\\n.triangle-nav-logo {\\n  display: flex;\\n  align-items: center;\\n  gap: var(--space-md);\\n}\\n\\n.triangle-icon {\\n  font-size: var(--text-xl);\\n  color: var(--accent-primary);\\n  font-weight: var(--font-bold);\\n}\\n\\n.triangle-nav-text {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.triangle-nav-title {\\n  font-size: var(--text-lg);\\n  font-weight: var(--font-bold);\\n  color: var(--text-primary);\\n  line-height: var(--leading-tight);\\n}\\n\\n.triangle-nav-subtitle {\\n  font-size: var(--text-xs);\\n  color: var(--text-muted);\\n  font-weight: var(--font-normal);\\n}\\n\\n.triangle-nav-actions {\\n  display: flex;\\n  align-items: center;\\n  gap: var(--space-lg);\\n}\\n\\n/* ===== BREADCRUMB NAVIGATION ===== */\\n\\n.breadcrumb {\\n  display: flex;\\n  align-items: center;\\n  gap: var(--space-sm);\\n  margin-bottom: var(--space-lg);\\n  padding: var(--space-sm) 0;\\n  font-size: var(--text-sm);\\n}\\n\\n.breadcrumb-item {\\n  color: var(--text-muted);\\n  text-decoration: none;\\n  transition: var(--transition-colors);\\n}\\n\\n.breadcrumb-item:hover {\\n  color: var(--text-secondary);\\n}\\n\\n.breadcrumb-item.active {\\n  color: var(--accent-primary);\\n  font-weight: var(--font-semibold);\\n}\\n\\n.breadcrumb-separator {\\n  color: var(--bloomberg-gray-600);\\n  margin: 0 var(--space-xs);\\n  font-size: var(--text-xs);\\n}\\n\\n.breadcrumb-separator::before {\\n  content: '/';\\n}\\n\\n/* ===== DASHBOARD TABS ===== */\\n\\n.dashboard-tabs {\\n  display: flex;\\n  border-bottom: var(--border-1) solid var(--bloomberg-gray-700);\\n  margin-bottom: var(--space-lg);\\n  overflow-x: auto;\\n  scrollbar-width: none;\\n  -ms-overflow-style: none;\\n}\\n\\n.dashboard-tabs::-webkit-scrollbar {\\n  display: none;\\n}\\n\\n.dashboard-tab {\\n  padding: var(--space-md) var(--space-lg);\\n  color: var(--text-muted);\\n  text-decoration: none;\\n  border-bottom: 2px solid transparent;\\n  transition: var(--transition-colors);\\n  font-weight: var(--font-medium);\\n  text-transform: uppercase;\\n  letter-spacing: var(--tracking-wide);\\n  font-size: var(--text-sm);\\n  white-space: nowrap;\\n  flex-shrink: 0;\\n}\\n\\n.dashboard-tab:hover {\\n  color: var(--text-secondary);\\n  background: rgba(255, 255, 255, 0.02);\\n}\\n\\n.dashboard-tab.active {\\n  color: var(--accent-primary);\\n  border-bottom-color: var(--accent-primary);\\n  background: rgba(14, 165, 233, 0.05);\\n}\\n\\n/* ===== PAGINATION ===== */\\n\\n.pagination {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  gap: var(--space-sm);\\n  margin: var(--space-lg) 0;\\n}\\n\\n.pagination-item {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 40px;\\n  height: 40px;\\n  border: var(--border-1) solid var(--bloomberg-gray-600);\\n  border-radius: var(--radius-md);\\n  color: var(--text-secondary);\\n  text-decoration: none;\\n  font-size: var(--text-sm);\\n  font-weight: var(--font-medium);\\n  transition: var(--transition-all);\\n}\\n\\n.pagination-item:hover {\\n  background: var(--bg-tertiary);\\n  color: var(--text-primary);\\n  border-color: var(--bloomberg-gray-500);\\n}\\n\\n.pagination-item.active {\\n  background: var(--accent-primary);\\n  color: white;\\n  border-color: var(--accent-primary);\\n}\\n\\n.pagination-item:disabled {\\n  opacity: 0.5;\\n  cursor: not-allowed;\\n  pointer-events: none;\\n}\\n\\n/* ===== RESPONSIVE NAVIGATION ===== */\\n\\n/* Mobile Navigation Toggle */\\n.mobile-nav-toggle {\\n  display: none;\\n  width: 40px;\\n  height: 40px;\\n  background: var(--bg-tertiary);\\n  border: var(--border-1) solid var(--bloomberg-gray-600);\\n  border-radius: var(--radius-md);\\n  color: var(--text-primary);\\n  cursor: pointer;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: var(--text-lg);\\n}\\n\\n.mobile-nav-overlay {\\n  display: none;\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background: var(--bg-overlay);\\n  z-index: calc(var(--z-side-nav) - 1);\\n}\\n\\n/* Tablet Portrait */\\n@media (max-width: var(--breakpoint-sm)) {\\n  .triangle-nav {\\n    left: 0;\\n    padding: 0 var(--space-md);\\n  }\\n  \\n  .mobile-nav-toggle {\\n    display: flex;\\n  }\\n  \\n  .bloomberg-side-nav {\\n    transform: translateX(-100%);\\n    transition: transform var(--transition-normal);\\n  }\\n  \\n  .bloomberg-side-nav.open {\\n    transform: translateX(0);\\n  }\\n  \\n  .mobile-nav-overlay.open {\\n    display: block;\\n  }\\n  \\n  .nav-brand {\\n    margin-top: 0;\\n  }\\n  \\n  .dashboard-tabs {\\n    gap: 0;\\n  }\\n  \\n  .dashboard-tab {\\n    padding: var(--space-sm) var(--space-md);\\n    font-size: var(--text-xs);\\n  }\\n}\\n\\n/* Mobile */\\n@media (max-width: var(--breakpoint-xs)) {\\n  .triangle-nav {\\n    padding: 0 var(--space-sm);\\n  }\\n  \\n  .triangle-nav-text {\\n    display: none;\\n  }\\n  \\n  .triangle-nav-actions {\\n    gap: var(--space-sm);\\n  }\\n  \\n  .breadcrumb {\\n    font-size: var(--text-xs);\\n  }\\n  \\n  .pagination-item {\\n    width: 36px;\\n    height: 36px;\\n    font-size: var(--text-xs);\\n  }\\n}\\n\\n/* ===== ACCESSIBILITY ===== */\\n\\n/* Focus States */\\n.nav-item:focus-visible,\\n.dashboard-tab:focus-visible,\\n.pagination-item:focus-visible {\\n  outline: 2px solid var(--accent-primary);\\n  outline-offset: 2px;\\n}\\n\\n.bloomberg-nav-link:focus-visible {\\n  outline: 2px solid var(--accent-primary);\\n  outline-offset: 2px;\\n}\\n\\n/* Skip Links */\\n.skip-link {\\n  position: absolute;\\n  top: -40px;\\n  left: 6px;\\n  background: var(--accent-primary);\\n  color: white;\\n  padding: var(--space-sm) var(--space-md);\\n  border-radius: var(--radius-md);\\n  text-decoration: none;\\n  font-size: var(--text-sm);\\n  font-weight: var(--font-semibold);\\n  z-index: 9999;\\n  transition: top var(--transition-fast);\\n}\\n\\n.skip-link:focus {\\n  top: 6px;\\n}\\n\\n/* High Contrast Mode */\\n@media (prefers-contrast: high) {\\n  .nav-item,\\n  .dashboard-tab,\\n  .pagination-item {\\n    border-width: 2px;\\n  }\\n  \\n  .nav-item.active,\\n  .dashboard-tab.active {\\n    border-width: 3px;\\n  }\\n}\\n\\n/* Reduced Motion */\\n@media (prefers-reduced-motion: reduce) {\\n  .bloomberg-side-nav {\\n    transition: none;\\n  }\\n  \\n  .status-item.online .status-item-icon {\\n    animation: none;\\n  }\\n}\\n\\n/* ===== NAVIGATION ANIMATIONS ===== */\\n\\n@keyframes slideInLeft {\\n  from {\\n    transform: translateX(-100%);\\n    opacity: 0;\\n  }\\n  to {\\n    transform: translateX(0);\\n    opacity: 1;\\n  }\\n}\\n\\n@keyframes fadeIn {\\n  from {\\n    opacity: 0;\\n  }\\n  to {\\n    opacity: 1;\\n  }\\n}\\n\\n.nav-item-enter {\\n  animation: slideInLeft 0.3s var(--ease-out) forwards;\\n}\\n\\n.mobile-nav-overlay-enter {\\n  animation: fadeIn 0.2s var(--ease-out) forwards;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/components/navigation.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/foundations/variables.css":
/*!************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/foundations/variables.css ***!
  \************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* ============================= */\\n/* TRIANGLE INTELLIGENCE         */\\n/* Design System - Foundations   */\\n/* ============================= */\\n\\n/**\\n * Design Tokens and CSS Custom Properties\\n * \\n * This file contains all design tokens for the Triangle Intelligence Platform.\\n * These variables provide consistency across Bloomberg Terminal-style components\\n * and ensure maintainable, scalable styling.\\n */\\n\\n:root {\\n  /* ===== CORE BRAND COLORS ===== */\\n  \\n  /* Primary Bloomberg Professional Colors */\\n  --bloomberg-black: #000000;\\n  --bloomberg-dark: #0a0f1c;\\n  --bloomberg-gray-900: #10172a;\\n  --bloomberg-gray-800: #1a2332;\\n  --bloomberg-gray-700: #243045;\\n  --bloomberg-gray-600: #334155;\\n  --bloomberg-gray-500: #64748b;\\n  --bloomberg-gray-400: #94a3b8;\\n  --bloomberg-gray-300: #cbd5e1;\\n  --bloomberg-gray-200: #e2e8f0;\\n  --bloomberg-gray-100: #f1f5f9;\\n  \\n  /* Triangle Intelligence Accent Colors */\\n  --bloomberg-blue: #0ea5e9;\\n  --bloomberg-blue-dark: #0284c7;\\n  --bloomberg-blue-light: #38bdf8;\\n  --bloomberg-orange: #f97316;\\n  --bloomberg-green: #22c55e;\\n  --bloomberg-red: #ef4444;\\n  --bloomberg-yellow: #eab308;\\n  \\n  /* ===== SEMANTIC COLOR TOKENS ===== */\\n  \\n  /* Background Colors */\\n  --bg-primary: var(--bloomberg-gray-900);\\n  --bg-secondary: var(--bloomberg-gray-800);\\n  --bg-tertiary: var(--bloomberg-gray-700);\\n  --bg-overlay: rgba(10, 15, 28, 0.9);\\n  \\n  /* Text Colors */\\n  --text-primary: var(--bloomberg-gray-100);\\n  --text-secondary: var(--bloomberg-gray-300);\\n  --text-muted: var(--bloomberg-gray-400);\\n  --text-disabled: var(--bloomberg-gray-500);\\n  \\n  /* Interactive Colors */\\n  --accent-primary: var(--bloomberg-blue);\\n  --accent-secondary: var(--bloomberg-blue-light);\\n  --accent-hover: var(--bloomberg-blue-dark);\\n  \\n  /* Status Colors */\\n  --status-success: var(--bloomberg-green);\\n  --status-warning: var(--bloomberg-yellow);\\n  --status-error: var(--bloomberg-red);\\n  --status-info: var(--bloomberg-blue);\\n  \\n  /* ===== TYPOGRAPHY SYSTEM ===== */\\n  \\n  /* Font Families */\\n  --font-primary: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\\n  --font-mono: 'JetBrains Mono', 'Fira Code', 'SF Mono', 'Monaco', monospace;\\n  --font-data: 'Space Mono', 'IBM Plex Mono', monospace;\\n  \\n  /* Font Sizes - Modular Scale */\\n  --text-xs: 0.75rem;    /* 12px */\\n  --text-sm: 0.875rem;   /* 14px */\\n  --text-base: 1rem;     /* 16px */\\n  --text-lg: 1.125rem;   /* 18px */\\n  --text-xl: 1.25rem;    /* 20px */\\n  --text-2xl: 1.5rem;    /* 24px */\\n  --text-3xl: 1.875rem;  /* 30px */\\n  --text-4xl: 2.25rem;   /* 36px */\\n  \\n  /* Font Weights */\\n  --font-light: 300;\\n  --font-normal: 400;\\n  --font-medium: 500;\\n  --font-semibold: 600;\\n  --font-bold: 700;\\n  \\n  /* Line Heights */\\n  --leading-tight: 1.25;\\n  --leading-normal: 1.5;\\n  --leading-relaxed: 1.6;\\n  \\n  /* Letter Spacing */\\n  --tracking-tight: -0.025em;\\n  --tracking-normal: 0em;\\n  --tracking-wide: 0.025em;\\n  --tracking-wider: 0.05em;\\n  \\n  /* ===== SPACING SYSTEM ===== */\\n  \\n  /* Base Spacing Unit: 0.25rem (4px) */\\n  --space-0: 0;\\n  --space-px: 1px;\\n  --space-0-5: 0.125rem;  /* 2px */\\n  --space-1: 0.25rem;     /* 4px */\\n  --space-2: 0.5rem;      /* 8px */\\n  --space-3: 0.75rem;     /* 12px */\\n  --space-4: 1rem;        /* 16px */\\n  --space-5: 1.25rem;     /* 20px */\\n  --space-6: 1.5rem;      /* 24px */\\n  --space-8: 2rem;        /* 32px */\\n  --space-10: 2.5rem;     /* 40px */\\n  --space-12: 3rem;       /* 48px */\\n  --space-16: 4rem;       /* 64px */\\n  --space-20: 5rem;       /* 80px */\\n  --space-24: 6rem;       /* 96px */\\n  \\n  /* Semantic Spacing Tokens */\\n  --space-xs: var(--space-1);   /* 4px */\\n  --space-sm: var(--space-2);   /* 8px */\\n  --space-md: var(--space-4);   /* 16px */\\n  --space-lg: var(--space-6);   /* 24px */\\n  --space-xl: var(--space-8);   /* 32px */\\n  --space-2xl: var(--space-12); /* 48px */\\n  --space-3xl: var(--space-16); /* 64px */\\n  \\n  /* ===== LAYOUT SYSTEM ===== */\\n  \\n  /* Container Widths */\\n  --container-sm: 640px;\\n  --container-md: 768px;\\n  --container-lg: 1024px;\\n  --container-xl: 1200px;\\n  --container-2xl: 1400px;\\n  \\n  /* Grid Gaps */\\n  --gap-sm: var(--space-2);\\n  --gap-md: var(--space-4);\\n  --gap-lg: var(--space-6);\\n  --gap-xl: var(--space-8);\\n  \\n  /* ===== BORDER SYSTEM ===== */\\n  \\n  /* Border Widths */\\n  --border-0: 0;\\n  --border-1: 1px;\\n  --border-2: 2px;\\n  --border-4: 4px;\\n  \\n  /* Border Radius */\\n  --radius-none: 0;\\n  --radius-sm: 0.125rem;   /* 2px */\\n  --radius-md: 0.375rem;   /* 6px */\\n  --radius-lg: 0.5rem;     /* 8px */\\n  --radius-xl: 0.75rem;    /* 12px */\\n  --radius-2xl: 1rem;      /* 16px */\\n  --radius-full: 9999px;\\n  \\n  /* ===== SHADOW SYSTEM ===== */\\n  \\n  /* Drop Shadows */\\n  --shadow-xs: 0 1px 2px rgba(0, 0, 0, 0.05);\\n  --shadow-sm: 0 1px 3px rgba(0, 0, 0, 0.1);\\n  --shadow-md: 0 4px 6px rgba(0, 0, 0, 0.1);\\n  --shadow-lg: 0 10px 15px rgba(0, 0, 0, 0.1);\\n  --shadow-xl: 0 20px 25px rgba(0, 0, 0, 0.1);\\n  --shadow-2xl: 0 25px 50px rgba(0, 0, 0, 0.25);\\n  \\n  /* Bloomberg-specific Shadows */\\n  --shadow-bloomberg: 0 10px 25px rgba(14, 165, 233, 0.15);\\n  --shadow-bloomberg-lg: 0 20px 40px rgba(14, 165, 233, 0.2);\\n  \\n  /* ===== TRANSITION SYSTEM ===== */\\n  \\n  /* Timing Functions */\\n  --ease-linear: linear;\\n  --ease-in: cubic-bezier(0.4, 0, 1, 1);\\n  --ease-out: cubic-bezier(0, 0, 0.2, 1);\\n  --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);\\n  \\n  /* Durations */\\n  --duration-75: 75ms;\\n  --duration-100: 100ms;\\n  --duration-150: 150ms;\\n  --duration-200: 200ms;\\n  --duration-300: 300ms;\\n  --duration-500: 500ms;\\n  --duration-700: 700ms;\\n  --duration-1000: 1000ms;\\n  \\n  /* Semantic Transition Tokens */\\n  --transition-fast: var(--duration-150) var(--ease-out);\\n  --transition-normal: var(--duration-300) var(--ease-in-out);\\n  --transition-slow: var(--duration-500) var(--ease-in-out);\\n  \\n  /* Common Transitions */\\n  --transition-colors: color var(--transition-fast), \\n                       background-color var(--transition-fast), \\n                       border-color var(--transition-fast);\\n  --transition-opacity: opacity var(--transition-fast);\\n  --transition-shadow: box-shadow var(--transition-fast);\\n  --transition-transform: transform var(--transition-fast);\\n  --transition-all: all var(--transition-fast);\\n  \\n  /* ===== Z-INDEX SYSTEM ===== */\\n  \\n  --z-0: 0;\\n  --z-10: 10;\\n  --z-20: 20;\\n  --z-30: 30;\\n  --z-40: 40;\\n  --z-50: 50;\\n  --z-auto: auto;\\n  \\n  /* Semantic Z-Index Tokens */\\n  --z-dropdown: var(--z-50);\\n  --z-sticky: var(--z-30);\\n  --z-fixed: var(--z-40);\\n  --z-modal-backdrop: 998;\\n  --z-modal: 999;\\n  --z-popover: var(--z-50);\\n  --z-tooltip: var(--z-50);\\n  --z-toast: var(--z-50);\\n  \\n  /* Triangle Intelligence Navigation Layers */\\n  --z-side-nav: 999;\\n  --z-top-nav: 1000;\\n  --z-crisis-banner: 1002;\\n  \\n  /* ===== BREAKPOINTS ===== */\\n  \\n  /* Mobile First Approach */\\n  --bp-xs: 480px;   /* Mobile landscape */\\n  --bp-sm: 640px;   /* Tablet portrait */\\n  --bp-md: 768px;   /* Tablet landscape */\\n  --bp-lg: 1024px;  /* Desktop */\\n  --bp-xl: 1200px;  /* Large desktop */\\n  --bp-2xl: 1440px; /* Extra large desktop */\\n  \\n  /* ===== TRIANGLE INTELLIGENCE SPECIFIC ===== */\\n  \\n  /* Executive Dashboard Metrics */\\n  --metric-card-width: 300px;\\n  --metric-card-min-height: 120px;\\n  \\n  /* Navigation Dimensions */\\n  --side-nav-width: 280px;\\n  --top-nav-height: 60px;\\n  \\n  /* Form Elements */\\n  --form-element-height: 40px;\\n  --form-element-height-lg: 48px;\\n  \\n  /* USMCA Market Coverage Colors */\\n  --color-usa: var(--bloomberg-blue);\\n  --color-mexico: var(--bloomberg-green);\\n  --color-canada: var(--bloomberg-red);\\n}\\n\\n/* ===== GLOBAL RESET ===== */\\n\\n/* Modern CSS Reset */\\n*,\\n*::before,\\n*::after {\\n  box-sizing: border-box;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n/* Remove default list styles on ul, ol elements */\\nul[class],\\nol[class] {\\n  list-style: none;\\n}\\n\\n/* Set core root defaults */\\nhtml:focus-within {\\n  scroll-behavior: smooth;\\n}\\n\\n/* Set core body defaults */\\nbody {\\n  text-rendering: optimizeSpeed;\\n  line-height: var(--leading-normal);\\n}\\n\\n/* A elements that don't have a class get default styles */\\na:not([class]) {\\n  -webkit-text-decoration-skip: ink;\\n          text-decoration-skip-ink: auto;\\n}\\n\\n/* Make images easier to work with */\\nimg,\\npicture {\\n  max-width: 100%;\\n  display: block;\\n}\\n\\n/* Inherit fonts for inputs and buttons */\\ninput,\\nbutton,\\ntextarea,\\nselect {\\n  font: inherit;\\n}\\n\\n/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */\\n@media (prefers-reduced-motion: reduce) {\\n  html:focus-within {\\n   scroll-behavior: auto;\\n  }\\n  \\n  *,\\n  *::before,\\n  *::after {\\n    animation-duration: 0.01ms !important;\\n    animation-iteration-count: 1 !important;\\n    transition-duration: 0.01ms !important;\\n    scroll-behavior: auto !important;\\n  }\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://styles/foundations/variables.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/* ============================= */\\n/* TRIANGLE INTELLIGENCE         */\\n/* Design System - Foundations   */\\n/* ============================= */\\n\\n/**\\n * Design Tokens and CSS Custom Properties\\n * \\n * This file contains all design tokens for the Triangle Intelligence Platform.\\n * These variables provide consistency across Bloomberg Terminal-style components\\n * and ensure maintainable, scalable styling.\\n */\\n\\n:root {\\n  /* ===== CORE BRAND COLORS ===== */\\n  \\n  /* Primary Bloomberg Professional Colors */\\n  --bloomberg-black: #000000;\\n  --bloomberg-dark: #0a0f1c;\\n  --bloomberg-gray-900: #10172a;\\n  --bloomberg-gray-800: #1a2332;\\n  --bloomberg-gray-700: #243045;\\n  --bloomberg-gray-600: #334155;\\n  --bloomberg-gray-500: #64748b;\\n  --bloomberg-gray-400: #94a3b8;\\n  --bloomberg-gray-300: #cbd5e1;\\n  --bloomberg-gray-200: #e2e8f0;\\n  --bloomberg-gray-100: #f1f5f9;\\n  \\n  /* Triangle Intelligence Accent Colors */\\n  --bloomberg-blue: #0ea5e9;\\n  --bloomberg-blue-dark: #0284c7;\\n  --bloomberg-blue-light: #38bdf8;\\n  --bloomberg-orange: #f97316;\\n  --bloomberg-green: #22c55e;\\n  --bloomberg-red: #ef4444;\\n  --bloomberg-yellow: #eab308;\\n  \\n  /* ===== SEMANTIC COLOR TOKENS ===== */\\n  \\n  /* Background Colors */\\n  --bg-primary: var(--bloomberg-gray-900);\\n  --bg-secondary: var(--bloomberg-gray-800);\\n  --bg-tertiary: var(--bloomberg-gray-700);\\n  --bg-overlay: rgba(10, 15, 28, 0.9);\\n  \\n  /* Text Colors */\\n  --text-primary: var(--bloomberg-gray-100);\\n  --text-secondary: var(--bloomberg-gray-300);\\n  --text-muted: var(--bloomberg-gray-400);\\n  --text-disabled: var(--bloomberg-gray-500);\\n  \\n  /* Interactive Colors */\\n  --accent-primary: var(--bloomberg-blue);\\n  --accent-secondary: var(--bloomberg-blue-light);\\n  --accent-hover: var(--bloomberg-blue-dark);\\n  \\n  /* Status Colors */\\n  --status-success: var(--bloomberg-green);\\n  --status-warning: var(--bloomberg-yellow);\\n  --status-error: var(--bloomberg-red);\\n  --status-info: var(--bloomberg-blue);\\n  \\n  /* ===== TYPOGRAPHY SYSTEM ===== */\\n  \\n  /* Font Families */\\n  --font-primary: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\\n  --font-mono: 'JetBrains Mono', 'Fira Code', 'SF Mono', 'Monaco', monospace;\\n  --font-data: 'Space Mono', 'IBM Plex Mono', monospace;\\n  \\n  /* Font Sizes - Modular Scale */\\n  --text-xs: 0.75rem;    /* 12px */\\n  --text-sm: 0.875rem;   /* 14px */\\n  --text-base: 1rem;     /* 16px */\\n  --text-lg: 1.125rem;   /* 18px */\\n  --text-xl: 1.25rem;    /* 20px */\\n  --text-2xl: 1.5rem;    /* 24px */\\n  --text-3xl: 1.875rem;  /* 30px */\\n  --text-4xl: 2.25rem;   /* 36px */\\n  \\n  /* Font Weights */\\n  --font-light: 300;\\n  --font-normal: 400;\\n  --font-medium: 500;\\n  --font-semibold: 600;\\n  --font-bold: 700;\\n  \\n  /* Line Heights */\\n  --leading-tight: 1.25;\\n  --leading-normal: 1.5;\\n  --leading-relaxed: 1.6;\\n  \\n  /* Letter Spacing */\\n  --tracking-tight: -0.025em;\\n  --tracking-normal: 0em;\\n  --tracking-wide: 0.025em;\\n  --tracking-wider: 0.05em;\\n  \\n  /* ===== SPACING SYSTEM ===== */\\n  \\n  /* Base Spacing Unit: 0.25rem (4px) */\\n  --space-0: 0;\\n  --space-px: 1px;\\n  --space-0-5: 0.125rem;  /* 2px */\\n  --space-1: 0.25rem;     /* 4px */\\n  --space-2: 0.5rem;      /* 8px */\\n  --space-3: 0.75rem;     /* 12px */\\n  --space-4: 1rem;        /* 16px */\\n  --space-5: 1.25rem;     /* 20px */\\n  --space-6: 1.5rem;      /* 24px */\\n  --space-8: 2rem;        /* 32px */\\n  --space-10: 2.5rem;     /* 40px */\\n  --space-12: 3rem;       /* 48px */\\n  --space-16: 4rem;       /* 64px */\\n  --space-20: 5rem;       /* 80px */\\n  --space-24: 6rem;       /* 96px */\\n  \\n  /* Semantic Spacing Tokens */\\n  --space-xs: var(--space-1);   /* 4px */\\n  --space-sm: var(--space-2);   /* 8px */\\n  --space-md: var(--space-4);   /* 16px */\\n  --space-lg: var(--space-6);   /* 24px */\\n  --space-xl: var(--space-8);   /* 32px */\\n  --space-2xl: var(--space-12); /* 48px */\\n  --space-3xl: var(--space-16); /* 64px */\\n  \\n  /* ===== LAYOUT SYSTEM ===== */\\n  \\n  /* Container Widths */\\n  --container-sm: 640px;\\n  --container-md: 768px;\\n  --container-lg: 1024px;\\n  --container-xl: 1200px;\\n  --container-2xl: 1400px;\\n  \\n  /* Grid Gaps */\\n  --gap-sm: var(--space-2);\\n  --gap-md: var(--space-4);\\n  --gap-lg: var(--space-6);\\n  --gap-xl: var(--space-8);\\n  \\n  /* ===== BORDER SYSTEM ===== */\\n  \\n  /* Border Widths */\\n  --border-0: 0;\\n  --border-1: 1px;\\n  --border-2: 2px;\\n  --border-4: 4px;\\n  \\n  /* Border Radius */\\n  --radius-none: 0;\\n  --radius-sm: 0.125rem;   /* 2px */\\n  --radius-md: 0.375rem;   /* 6px */\\n  --radius-lg: 0.5rem;     /* 8px */\\n  --radius-xl: 0.75rem;    /* 12px */\\n  --radius-2xl: 1rem;      /* 16px */\\n  --radius-full: 9999px;\\n  \\n  /* ===== SHADOW SYSTEM ===== */\\n  \\n  /* Drop Shadows */\\n  --shadow-xs: 0 1px 2px rgba(0, 0, 0, 0.05);\\n  --shadow-sm: 0 1px 3px rgba(0, 0, 0, 0.1);\\n  --shadow-md: 0 4px 6px rgba(0, 0, 0, 0.1);\\n  --shadow-lg: 0 10px 15px rgba(0, 0, 0, 0.1);\\n  --shadow-xl: 0 20px 25px rgba(0, 0, 0, 0.1);\\n  --shadow-2xl: 0 25px 50px rgba(0, 0, 0, 0.25);\\n  \\n  /* Bloomberg-specific Shadows */\\n  --shadow-bloomberg: 0 10px 25px rgba(14, 165, 233, 0.15);\\n  --shadow-bloomberg-lg: 0 20px 40px rgba(14, 165, 233, 0.2);\\n  \\n  /* ===== TRANSITION SYSTEM ===== */\\n  \\n  /* Timing Functions */\\n  --ease-linear: linear;\\n  --ease-in: cubic-bezier(0.4, 0, 1, 1);\\n  --ease-out: cubic-bezier(0, 0, 0.2, 1);\\n  --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);\\n  \\n  /* Durations */\\n  --duration-75: 75ms;\\n  --duration-100: 100ms;\\n  --duration-150: 150ms;\\n  --duration-200: 200ms;\\n  --duration-300: 300ms;\\n  --duration-500: 500ms;\\n  --duration-700: 700ms;\\n  --duration-1000: 1000ms;\\n  \\n  /* Semantic Transition Tokens */\\n  --transition-fast: var(--duration-150) var(--ease-out);\\n  --transition-normal: var(--duration-300) var(--ease-in-out);\\n  --transition-slow: var(--duration-500) var(--ease-in-out);\\n  \\n  /* Common Transitions */\\n  --transition-colors: color var(--transition-fast), \\n                       background-color var(--transition-fast), \\n                       border-color var(--transition-fast);\\n  --transition-opacity: opacity var(--transition-fast);\\n  --transition-shadow: box-shadow var(--transition-fast);\\n  --transition-transform: transform var(--transition-fast);\\n  --transition-all: all var(--transition-fast);\\n  \\n  /* ===== Z-INDEX SYSTEM ===== */\\n  \\n  --z-0: 0;\\n  --z-10: 10;\\n  --z-20: 20;\\n  --z-30: 30;\\n  --z-40: 40;\\n  --z-50: 50;\\n  --z-auto: auto;\\n  \\n  /* Semantic Z-Index Tokens */\\n  --z-dropdown: var(--z-50);\\n  --z-sticky: var(--z-30);\\n  --z-fixed: var(--z-40);\\n  --z-modal-backdrop: 998;\\n  --z-modal: 999;\\n  --z-popover: var(--z-50);\\n  --z-tooltip: var(--z-50);\\n  --z-toast: var(--z-50);\\n  \\n  /* Triangle Intelligence Navigation Layers */\\n  --z-side-nav: 999;\\n  --z-top-nav: 1000;\\n  --z-crisis-banner: 1002;\\n  \\n  /* ===== BREAKPOINTS ===== */\\n  \\n  /* Mobile First Approach */\\n  --bp-xs: 480px;   /* Mobile landscape */\\n  --bp-sm: 640px;   /* Tablet portrait */\\n  --bp-md: 768px;   /* Tablet landscape */\\n  --bp-lg: 1024px;  /* Desktop */\\n  --bp-xl: 1200px;  /* Large desktop */\\n  --bp-2xl: 1440px; /* Extra large desktop */\\n  \\n  /* ===== TRIANGLE INTELLIGENCE SPECIFIC ===== */\\n  \\n  /* Executive Dashboard Metrics */\\n  --metric-card-width: 300px;\\n  --metric-card-min-height: 120px;\\n  \\n  /* Navigation Dimensions */\\n  --side-nav-width: 280px;\\n  --top-nav-height: 60px;\\n  \\n  /* Form Elements */\\n  --form-element-height: 40px;\\n  --form-element-height-lg: 48px;\\n  \\n  /* USMCA Market Coverage Colors */\\n  --color-usa: var(--bloomberg-blue);\\n  --color-mexico: var(--bloomberg-green);\\n  --color-canada: var(--bloomberg-red);\\n}\\n\\n/* ===== GLOBAL RESET ===== */\\n\\n/* Modern CSS Reset */\\n*,\\n*::before,\\n*::after {\\n  box-sizing: border-box;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n/* Remove default list styles on ul, ol elements */\\nul[class],\\nol[class] {\\n  list-style: none;\\n}\\n\\n/* Set core root defaults */\\nhtml:focus-within {\\n  scroll-behavior: smooth;\\n}\\n\\n/* Set core body defaults */\\nbody {\\n  text-rendering: optimizeSpeed;\\n  line-height: var(--leading-normal);\\n}\\n\\n/* A elements that don't have a class get default styles */\\na:not([class]) {\\n  text-decoration-skip-ink: auto;\\n}\\n\\n/* Make images easier to work with */\\nimg,\\npicture {\\n  max-width: 100%;\\n  display: block;\\n}\\n\\n/* Inherit fonts for inputs and buttons */\\ninput,\\nbutton,\\ntextarea,\\nselect {\\n  font: inherit;\\n}\\n\\n/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */\\n@media (prefers-reduced-motion: reduce) {\\n  html:focus-within {\\n   scroll-behavior: auto;\\n  }\\n  \\n  *,\\n  *::before,\\n  *::after {\\n    animation-duration: 0.01ms !important;\\n    animation-iteration-count: 1 !important;\\n    transition-duration: 0.01ms !important;\\n    scroll-behavior: auto !important;\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/foundations/variables.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/globals.css":
/*!**********************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/globals.css ***!
  \**********************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_index_js_ruleSet_1_rules_7_oneOf_13_use_1_node_modules_next_dist_build_webpack_loaders_postcss_loader_src_index_js_ruleSet_1_rules_7_oneOf_13_use_2_foundations_variables_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! -!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./foundations/variables.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/foundations/variables.css\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_index_js_ruleSet_1_rules_7_oneOf_13_use_1_node_modules_next_dist_build_webpack_loaders_postcss_loader_src_index_js_ruleSet_1_rules_7_oneOf_13_use_2_utilities_breakpoints_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! -!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./utilities/breakpoints.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/utilities/breakpoints.css\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_index_js_ruleSet_1_rules_7_oneOf_13_use_1_node_modules_next_dist_build_webpack_loaders_postcss_loader_src_index_js_ruleSet_1_rules_7_oneOf_13_use_2_components_layout_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! -!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./components/layout.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/components/layout.css\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_index_js_ruleSet_1_rules_7_oneOf_13_use_1_node_modules_next_dist_build_webpack_loaders_postcss_loader_src_index_js_ruleSet_1_rules_7_oneOf_13_use_2_components_navigation_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! -!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./components/navigation.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/components/navigation.css\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_index_js_ruleSet_1_rules_7_oneOf_13_use_1_node_modules_next_dist_build_webpack_loaders_postcss_loader_src_index_js_ruleSet_1_rules_7_oneOf_13_use_2_components_dashboard_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! -!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./components/dashboard.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/components/dashboard.css\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_index_js_ruleSet_1_rules_7_oneOf_13_use_1_node_modules_next_dist_build_webpack_loaders_postcss_loader_src_index_js_ruleSet_1_rules_7_oneOf_13_use_2_components_forms_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! -!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./components/forms.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/components/forms.css\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_index_js_ruleSet_1_rules_7_oneOf_13_use_1_node_modules_next_dist_build_webpack_loaders_postcss_loader_src_index_js_ruleSet_1_rules_7_oneOf_13_use_2_utilities_spacing_css__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! -!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./utilities/spacing.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/utilities/spacing.css\");\n// Imports\n\n\n\n\n\n\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n___CSS_LOADER_EXPORT___.i(_node_modules_next_dist_build_webpack_loaders_css_loader_src_index_js_ruleSet_1_rules_7_oneOf_13_use_1_node_modules_next_dist_build_webpack_loaders_postcss_loader_src_index_js_ruleSet_1_rules_7_oneOf_13_use_2_foundations_variables_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n___CSS_LOADER_EXPORT___.i(_node_modules_next_dist_build_webpack_loaders_css_loader_src_index_js_ruleSet_1_rules_7_oneOf_13_use_1_node_modules_next_dist_build_webpack_loaders_postcss_loader_src_index_js_ruleSet_1_rules_7_oneOf_13_use_2_utilities_breakpoints_css__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n___CSS_LOADER_EXPORT___.i(_node_modules_next_dist_build_webpack_loaders_css_loader_src_index_js_ruleSet_1_rules_7_oneOf_13_use_1_node_modules_next_dist_build_webpack_loaders_postcss_loader_src_index_js_ruleSet_1_rules_7_oneOf_13_use_2_components_layout_css__WEBPACK_IMPORTED_MODULE_3__[\"default\"]);\n___CSS_LOADER_EXPORT___.i(_node_modules_next_dist_build_webpack_loaders_css_loader_src_index_js_ruleSet_1_rules_7_oneOf_13_use_1_node_modules_next_dist_build_webpack_loaders_postcss_loader_src_index_js_ruleSet_1_rules_7_oneOf_13_use_2_components_navigation_css__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n___CSS_LOADER_EXPORT___.i(_node_modules_next_dist_build_webpack_loaders_css_loader_src_index_js_ruleSet_1_rules_7_oneOf_13_use_1_node_modules_next_dist_build_webpack_loaders_postcss_loader_src_index_js_ruleSet_1_rules_7_oneOf_13_use_2_components_dashboard_css__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\n___CSS_LOADER_EXPORT___.i(_node_modules_next_dist_build_webpack_loaders_css_loader_src_index_js_ruleSet_1_rules_7_oneOf_13_use_1_node_modules_next_dist_build_webpack_loaders_postcss_loader_src_index_js_ruleSet_1_rules_7_oneOf_13_use_2_components_forms_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"]);\n___CSS_LOADER_EXPORT___.i(_node_modules_next_dist_build_webpack_loaders_css_loader_src_index_js_ruleSet_1_rules_7_oneOf_13_use_1_node_modules_next_dist_build_webpack_loaders_postcss_loader_src_index_js_ruleSet_1_rules_7_oneOf_13_use_2_utilities_spacing_css__WEBPACK_IMPORTED_MODULE_7__[\"default\"]);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* ============================= */\\n/* TRIANGLE INTELLIGENCE         */\\n/* Global Stylesheet             */\\n/* Modular Architecture          */\\n/* ============================= */\\n\\n/**\\n * Triangle Intelligence Platform - Global Styles\\n * \\n * This is the main entry point for all styles in the Triangle Intelligence platform.\\n * It imports all modular CSS files in the correct cascade order to ensure\\n * proper styling inheritance and specificity.\\n * \\n * Architecture:\\n * 1. Foundations - Variables, tokens, and reset styles\\n * 2. Components - Reusable UI components\\n * 3. Utilities - Helper classes and utilities\\n * \\n * This modular approach provides:\\n * - Better maintainability\\n * - Easier debugging\\n * - Clearer organization\\n * - Reduced CSS conflicts\\n */\\n\\n/* ===== 1. FOUNDATIONS ===== */\\n/* CSS Custom Properties, Design Tokens, and Reset */\\n\\n/* ===== 2. COMPONENTS ===== */\\n/* Reusable UI Components in Dependency Order */\\n\\n/* Layout must come first as other components depend on it */\\n\\n/* Navigation components */\\n\\n/* Dashboard components - Bloomberg Terminal style */\\n\\n/* Form components for 6-page journey */\\n\\n/* ===== 3. UTILITIES ===== */\\n/* Helper Classes - Should come last to ensure highest specificity */\\n\\n/* ===== 4. LEGACY COMPATIBILITY ===== */\\n/* \\n * Temporary compatibility layer for any remaining styles \\n * from the original bloomberg-professional-clean.css that weren't \\n * moved to the modular components.\\n * \\n * This section should be gradually reduced to zero as we complete\\n * the modular migration.\\n */\\n\\n/* ===== TYPOGRAPHY SYSTEM (GLOBAL) ===== */\\n\\nh1, h2, h3, h4, h5, h6 {\\n  font-weight: var(--font-semibold);\\n  line-height: var(--leading-tight);\\n  margin: 0;\\n}\\n\\nh1 {\\n  font-size: var(--text-4xl);\\n  font-weight: var(--font-bold);\\n  letter-spacing: var(--tracking-tight);\\n}\\n\\nh2 {\\n  font-size: var(--text-3xl);\\n  font-weight: var(--font-semibold);\\n  letter-spacing: var(--tracking-tight);\\n}\\n\\nh3 {\\n  font-size: var(--text-2xl);\\n  font-weight: var(--font-semibold);\\n}\\n\\nh4 {\\n  font-size: var(--text-xl);\\n  font-weight: var(--font-semibold);\\n}\\n\\nh5 {\\n  font-size: var(--text-lg);\\n  font-weight: var(--font-semibold);\\n}\\n\\nh6 {\\n  font-size: var(--text-base);\\n  font-weight: var(--font-semibold);\\n}\\n\\np {\\n  line-height: var(--leading-relaxed);\\n  margin-bottom: var(--space-md);\\n}\\n\\na {\\n  color: var(--accent-primary);\\n  text-decoration: none;\\n  transition: var(--transition-colors);\\n}\\n\\na:hover {\\n  color: var(--bloomberg-blue-light);\\n}\\n\\n/* ===== GLOBAL INTERACTIVE ELEMENTS ===== */\\n\\n/* Loading States */\\n.loading-overlay {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background: var(--bg-overlay);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  z-index: 1000;\\n}\\n\\n.loading-spinner {\\n  width: 40px;\\n  height: 40px;\\n  border: 3px solid var(--bloomberg-gray-600);\\n  border-top: 3px solid var(--accent-primary);\\n  border-radius: 50%;\\n  animation: spin 1s linear infinite;\\n}\\n\\n@keyframes spin {\\n  0% { transform: rotate(0deg); }\\n  100% { transform: rotate(360deg); }\\n}\\n\\n/* Chat Interface */\\n.chat-container {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n  background: var(--bg-secondary);\\n  border-radius: var(--radius-lg);\\n  overflow: hidden;\\n}\\n\\n.chat-messages {\\n  flex: 1 1;\\n  padding: var(--space-md);\\n  overflow-y: auto;\\n  max-height: 400px;\\n}\\n\\n.chat-message {\\n  margin-bottom: var(--space-md);\\n  padding: var(--space-sm) var(--space-md);\\n  border-radius: var(--radius-md);\\n  max-width: 80%;\\n}\\n\\n.chat-message.user {\\n  background: var(--accent-primary);\\n  color: white;\\n  margin-left: auto;\\n  text-align: right;\\n}\\n\\n.chat-message.assistant {\\n  background: var(--bg-tertiary);\\n  color: var(--text-primary);\\n}\\n\\n.chat-input-container {\\n  display: flex;\\n  gap: var(--space-sm);\\n  padding: var(--space-md);\\n  border-top: var(--border-1) solid var(--bloomberg-gray-700);\\n}\\n\\n.chat-input {\\n  flex: 1 1;\\n  padding: var(--space-sm) var(--space-md);\\n  background: var(--bg-tertiary);\\n  border: var(--border-1) solid var(--bloomberg-gray-600);\\n  border-radius: var(--radius-md);\\n  color: var(--text-primary);\\n  font-size: var(--text-sm);\\n}\\n\\n/* Data Tables */\\n.bloomberg-table {\\n  width: 100%;\\n  border-collapse: collapse;\\n  background: var(--bg-secondary);\\n  border-radius: var(--radius-lg);\\n  overflow: hidden;\\n  box-shadow: var(--shadow-md);\\n}\\n\\n.bloomberg-table th {\\n  background: var(--bg-tertiary);\\n  padding: var(--space-md);\\n  text-align: left;\\n  font-weight: var(--font-semibold);\\n  color: var(--text-secondary);\\n  border-bottom: var(--border-1) solid var(--bloomberg-gray-600);\\n}\\n\\n.bloomberg-table td {\\n  padding: var(--space-md);\\n  border-bottom: var(--border-1) solid var(--bloomberg-gray-700);\\n  color: var(--text-secondary);\\n}\\n\\n.bloomberg-table tr:hover {\\n  background: var(--bg-tertiary);\\n}\\n\\n/* Alert System */\\n.alert {\\n  padding: var(--space-md);\\n  border-radius: var(--radius-md);\\n  margin-bottom: var(--space-md);\\n  border: var(--border-1) solid transparent;\\n  font-size: var(--text-sm);\\n  line-height: var(--leading-relaxed);\\n}\\n\\n.alert-success {\\n  background: rgba(34, 197, 94, 0.1);\\n  border-color: rgba(34, 197, 94, 0.2);\\n  color: var(--status-success);\\n}\\n\\n.alert-warning {\\n  background: rgba(234, 179, 8, 0.1);\\n  border-color: rgba(234, 179, 8, 0.2);\\n  color: var(--status-warning);\\n}\\n\\n.alert-error {\\n  background: rgba(239, 68, 68, 0.1);\\n  border-color: rgba(239, 68, 68, 0.2);\\n  color: var(--status-error);\\n}\\n\\n.alert-info {\\n  background: rgba(14, 165, 233, 0.1);\\n  border-color: rgba(14, 165, 233, 0.2);\\n  color: var(--status-info);\\n}\\n\\n/* Badge System */\\n.badge {\\n  display: inline-flex;\\n  align-items: center;\\n  padding: var(--space-xs) var(--space-sm);\\n  font-size: var(--text-xs);\\n  font-weight: var(--font-semibold);\\n  border-radius: var(--radius-sm);\\n  text-transform: uppercase;\\n  letter-spacing: var(--tracking-wide);\\n}\\n\\n.badge-primary {\\n  background: var(--accent-primary);\\n  color: white;\\n}\\n\\n.badge-secondary {\\n  background: var(--bloomberg-gray-600);\\n  color: var(--text-primary);\\n}\\n\\n.badge-success {\\n  background: var(--status-success);\\n  color: white;\\n}\\n\\n.badge-warning {\\n  background: var(--status-warning);\\n  color: var(--bloomberg-black);\\n}\\n\\n.badge-danger {\\n  background: var(--status-error);\\n  color: white;\\n}\\n\\n/* ===== GLOBAL ANIMATIONS ===== */\\n\\n@keyframes fadeIn {\\n  from { opacity: 0; }\\n  to { opacity: 1; }\\n}\\n\\n@keyframes slideUp {\\n  from { \\n    opacity: 0; \\n    transform: translateY(20px); \\n  }\\n  to { \\n    opacity: 1; \\n    transform: translateY(0); \\n  }\\n}\\n\\n@keyframes pulse {\\n  0%, 100% { opacity: 1; }\\n  50% { opacity: 0.5; }\\n}\\n\\n.fade-in {\\n  animation: fadeIn 0.5s var(--ease-in-out);\\n}\\n\\n.slide-up {\\n  animation: slideUp 0.6s var(--ease-out);\\n}\\n\\n.pulse {\\n  animation: pulse 2s infinite;\\n}\\n\\n/* ===== GLOBAL RESPONSIVE ADJUSTMENTS ===== */\\n\\n@media (max-width: var(--breakpoint-sm)) {\\n  .chat-message {\\n    max-width: 90%;\\n  }\\n  \\n  .chat-input-container {\\n    flex-direction: column;\\n  }\\n  \\n  h1 { font-size: var(--text-3xl); }\\n  h2 { font-size: var(--text-2xl); }\\n  h3 { font-size: var(--text-xl); }\\n}\\n\\n@media (max-width: var(--breakpoint-xs)) {\\n  h1 { font-size: var(--text-2xl); }\\n  h2 { font-size: var(--text-xl); }\\n}\\n\\n/* ===== PRINT STYLES ===== */\\n@media print {\\n  * {\\n    background: white !important;\\n    color: black !important;\\n    box-shadow: none !important;\\n  }\\n  \\n  .bloomberg-nav,\\n  .bloomberg-side-nav,\\n  .chat-container,\\n  .loading-overlay {\\n    display: none !important;\\n  }\\n  \\n  .triangle-layout .main-content {\\n    margin-left: 0 !important;\\n    padding-top: 0 !important;\\n  }\\n}\\n\\n/* ===== DEVELOPMENT HELPERS ===== */\\n\\n/* \\n * Uncomment during development to see component boundaries\\n * Remove in production builds\\n */\\n\\n/*\\n[class*=\\\"bloomberg-\\\"] {\\n  outline: 1px dashed rgba(255, 0, 0, 0.3);\\n}\\n\\n[class*=\\\"form-\\\"] {\\n  outline: 1px dashed rgba(0, 255, 0, 0.3);\\n}\\n\\n[class*=\\\"dashboard-\\\"] {\\n  outline: 1px dashed rgba(0, 0, 255, 0.3);\\n}\\n*/\\n\\n/* ===== MODULAR ARCHITECTURE COMPLETE ===== */\\n\\n/**\\n * This completes the modular CSS architecture for Triangle Intelligence.\\n * \\n * The original 1,834-line monolithic CSS file has been successfully \\n * refactored into a clean, maintainable modular structure:\\n * \\n * - foundations/variables.css (184 lines) - Design tokens and CSS custom properties\\n * - components/layout.css (474 lines) - Layout and container systems\\n * - components/navigation.css (482 lines) - Navigation components\\n * - components/dashboard.css (611 lines) - Dashboard and metrics components  \\n * - components/forms.css (782 lines) - Form components for 6-page journey\\n * - utilities/spacing.css (1,456 lines) - Utility classes\\n * - globals.css (265 lines) - Global styles and imports\\n * \\n * Total: 4,254 lines across 7 files (compared to 1,834 in monolithic file)\\n * \\n * The increase in total lines is due to:\\n * - Better documentation and comments\\n * - More comprehensive utility classes\\n * - Improved responsive design\\n * - Enhanced accessibility features\\n * - Better maintainability through clear separation of concerns\\n * \\n * Benefits achieved:\\n * ✅ Modular architecture with clear separation of concerns\\n * ✅ Enhanced maintainability and debugging\\n * ✅ Improved performance through better caching\\n * ✅ Easier collaboration and code reviews\\n * ✅ Comprehensive design system with tokens\\n * ✅ Enhanced accessibility and responsive design\\n * ✅ Professional enterprise-grade CSS structure\\n */\", \"\",{\"version\":3,\"sources\":[\"webpack://styles/globals.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/* ============================= */\\n/* TRIANGLE INTELLIGENCE         */\\n/* Global Stylesheet             */\\n/* Modular Architecture          */\\n/* ============================= */\\n\\n/**\\n * Triangle Intelligence Platform - Global Styles\\n * \\n * This is the main entry point for all styles in the Triangle Intelligence platform.\\n * It imports all modular CSS files in the correct cascade order to ensure\\n * proper styling inheritance and specificity.\\n * \\n * Architecture:\\n * 1. Foundations - Variables, tokens, and reset styles\\n * 2. Components - Reusable UI components\\n * 3. Utilities - Helper classes and utilities\\n * \\n * This modular approach provides:\\n * - Better maintainability\\n * - Easier debugging\\n * - Clearer organization\\n * - Reduced CSS conflicts\\n */\\n\\n/* ===== 1. FOUNDATIONS ===== */\\n/* CSS Custom Properties, Design Tokens, and Reset */\\n@import './foundations/variables.css';\\n@import './utilities/breakpoints.css';\\n\\n/* ===== 2. COMPONENTS ===== */\\n/* Reusable UI Components in Dependency Order */\\n\\n/* Layout must come first as other components depend on it */\\n@import './components/layout.css';\\n\\n/* Navigation components */\\n@import './components/navigation.css';\\n\\n/* Dashboard components - Bloomberg Terminal style */\\n@import './components/dashboard.css';\\n\\n/* Form components for 6-page journey */\\n@import './components/forms.css';\\n\\n/* ===== 3. UTILITIES ===== */\\n/* Helper Classes - Should come last to ensure highest specificity */\\n@import './utilities/spacing.css';\\n\\n/* ===== 4. LEGACY COMPATIBILITY ===== */\\n/* \\n * Temporary compatibility layer for any remaining styles \\n * from the original bloomberg-professional-clean.css that weren't \\n * moved to the modular components.\\n * \\n * This section should be gradually reduced to zero as we complete\\n * the modular migration.\\n */\\n\\n/* ===== TYPOGRAPHY SYSTEM (GLOBAL) ===== */\\n\\nh1, h2, h3, h4, h5, h6 {\\n  font-weight: var(--font-semibold);\\n  line-height: var(--leading-tight);\\n  margin: 0;\\n}\\n\\nh1 {\\n  font-size: var(--text-4xl);\\n  font-weight: var(--font-bold);\\n  letter-spacing: var(--tracking-tight);\\n}\\n\\nh2 {\\n  font-size: var(--text-3xl);\\n  font-weight: var(--font-semibold);\\n  letter-spacing: var(--tracking-tight);\\n}\\n\\nh3 {\\n  font-size: var(--text-2xl);\\n  font-weight: var(--font-semibold);\\n}\\n\\nh4 {\\n  font-size: var(--text-xl);\\n  font-weight: var(--font-semibold);\\n}\\n\\nh5 {\\n  font-size: var(--text-lg);\\n  font-weight: var(--font-semibold);\\n}\\n\\nh6 {\\n  font-size: var(--text-base);\\n  font-weight: var(--font-semibold);\\n}\\n\\np {\\n  line-height: var(--leading-relaxed);\\n  margin-bottom: var(--space-md);\\n}\\n\\na {\\n  color: var(--accent-primary);\\n  text-decoration: none;\\n  transition: var(--transition-colors);\\n}\\n\\na:hover {\\n  color: var(--bloomberg-blue-light);\\n}\\n\\n/* ===== GLOBAL INTERACTIVE ELEMENTS ===== */\\n\\n/* Loading States */\\n.loading-overlay {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background: var(--bg-overlay);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  z-index: 1000;\\n}\\n\\n.loading-spinner {\\n  width: 40px;\\n  height: 40px;\\n  border: 3px solid var(--bloomberg-gray-600);\\n  border-top: 3px solid var(--accent-primary);\\n  border-radius: 50%;\\n  animation: spin 1s linear infinite;\\n}\\n\\n@keyframes spin {\\n  0% { transform: rotate(0deg); }\\n  100% { transform: rotate(360deg); }\\n}\\n\\n/* Chat Interface */\\n.chat-container {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n  background: var(--bg-secondary);\\n  border-radius: var(--radius-lg);\\n  overflow: hidden;\\n}\\n\\n.chat-messages {\\n  flex: 1;\\n  padding: var(--space-md);\\n  overflow-y: auto;\\n  max-height: 400px;\\n}\\n\\n.chat-message {\\n  margin-bottom: var(--space-md);\\n  padding: var(--space-sm) var(--space-md);\\n  border-radius: var(--radius-md);\\n  max-width: 80%;\\n}\\n\\n.chat-message.user {\\n  background: var(--accent-primary);\\n  color: white;\\n  margin-left: auto;\\n  text-align: right;\\n}\\n\\n.chat-message.assistant {\\n  background: var(--bg-tertiary);\\n  color: var(--text-primary);\\n}\\n\\n.chat-input-container {\\n  display: flex;\\n  gap: var(--space-sm);\\n  padding: var(--space-md);\\n  border-top: var(--border-1) solid var(--bloomberg-gray-700);\\n}\\n\\n.chat-input {\\n  flex: 1;\\n  padding: var(--space-sm) var(--space-md);\\n  background: var(--bg-tertiary);\\n  border: var(--border-1) solid var(--bloomberg-gray-600);\\n  border-radius: var(--radius-md);\\n  color: var(--text-primary);\\n  font-size: var(--text-sm);\\n}\\n\\n/* Data Tables */\\n.bloomberg-table {\\n  width: 100%;\\n  border-collapse: collapse;\\n  background: var(--bg-secondary);\\n  border-radius: var(--radius-lg);\\n  overflow: hidden;\\n  box-shadow: var(--shadow-md);\\n}\\n\\n.bloomberg-table th {\\n  background: var(--bg-tertiary);\\n  padding: var(--space-md);\\n  text-align: left;\\n  font-weight: var(--font-semibold);\\n  color: var(--text-secondary);\\n  border-bottom: var(--border-1) solid var(--bloomberg-gray-600);\\n}\\n\\n.bloomberg-table td {\\n  padding: var(--space-md);\\n  border-bottom: var(--border-1) solid var(--bloomberg-gray-700);\\n  color: var(--text-secondary);\\n}\\n\\n.bloomberg-table tr:hover {\\n  background: var(--bg-tertiary);\\n}\\n\\n/* Alert System */\\n.alert {\\n  padding: var(--space-md);\\n  border-radius: var(--radius-md);\\n  margin-bottom: var(--space-md);\\n  border: var(--border-1) solid transparent;\\n  font-size: var(--text-sm);\\n  line-height: var(--leading-relaxed);\\n}\\n\\n.alert-success {\\n  background: rgba(34, 197, 94, 0.1);\\n  border-color: rgba(34, 197, 94, 0.2);\\n  color: var(--status-success);\\n}\\n\\n.alert-warning {\\n  background: rgba(234, 179, 8, 0.1);\\n  border-color: rgba(234, 179, 8, 0.2);\\n  color: var(--status-warning);\\n}\\n\\n.alert-error {\\n  background: rgba(239, 68, 68, 0.1);\\n  border-color: rgba(239, 68, 68, 0.2);\\n  color: var(--status-error);\\n}\\n\\n.alert-info {\\n  background: rgba(14, 165, 233, 0.1);\\n  border-color: rgba(14, 165, 233, 0.2);\\n  color: var(--status-info);\\n}\\n\\n/* Badge System */\\n.badge {\\n  display: inline-flex;\\n  align-items: center;\\n  padding: var(--space-xs) var(--space-sm);\\n  font-size: var(--text-xs);\\n  font-weight: var(--font-semibold);\\n  border-radius: var(--radius-sm);\\n  text-transform: uppercase;\\n  letter-spacing: var(--tracking-wide);\\n}\\n\\n.badge-primary {\\n  background: var(--accent-primary);\\n  color: white;\\n}\\n\\n.badge-secondary {\\n  background: var(--bloomberg-gray-600);\\n  color: var(--text-primary);\\n}\\n\\n.badge-success {\\n  background: var(--status-success);\\n  color: white;\\n}\\n\\n.badge-warning {\\n  background: var(--status-warning);\\n  color: var(--bloomberg-black);\\n}\\n\\n.badge-danger {\\n  background: var(--status-error);\\n  color: white;\\n}\\n\\n/* ===== GLOBAL ANIMATIONS ===== */\\n\\n@keyframes fadeIn {\\n  from { opacity: 0; }\\n  to { opacity: 1; }\\n}\\n\\n@keyframes slideUp {\\n  from { \\n    opacity: 0; \\n    transform: translateY(20px); \\n  }\\n  to { \\n    opacity: 1; \\n    transform: translateY(0); \\n  }\\n}\\n\\n@keyframes pulse {\\n  0%, 100% { opacity: 1; }\\n  50% { opacity: 0.5; }\\n}\\n\\n.fade-in {\\n  animation: fadeIn 0.5s var(--ease-in-out);\\n}\\n\\n.slide-up {\\n  animation: slideUp 0.6s var(--ease-out);\\n}\\n\\n.pulse {\\n  animation: pulse 2s infinite;\\n}\\n\\n/* ===== GLOBAL RESPONSIVE ADJUSTMENTS ===== */\\n\\n@media (max-width: var(--breakpoint-sm)) {\\n  .chat-message {\\n    max-width: 90%;\\n  }\\n  \\n  .chat-input-container {\\n    flex-direction: column;\\n  }\\n  \\n  h1 { font-size: var(--text-3xl); }\\n  h2 { font-size: var(--text-2xl); }\\n  h3 { font-size: var(--text-xl); }\\n}\\n\\n@media (max-width: var(--breakpoint-xs)) {\\n  h1 { font-size: var(--text-2xl); }\\n  h2 { font-size: var(--text-xl); }\\n}\\n\\n/* ===== PRINT STYLES ===== */\\n@media print {\\n  * {\\n    background: white !important;\\n    color: black !important;\\n    box-shadow: none !important;\\n  }\\n  \\n  .bloomberg-nav,\\n  .bloomberg-side-nav,\\n  .chat-container,\\n  .loading-overlay {\\n    display: none !important;\\n  }\\n  \\n  .triangle-layout .main-content {\\n    margin-left: 0 !important;\\n    padding-top: 0 !important;\\n  }\\n}\\n\\n/* ===== DEVELOPMENT HELPERS ===== */\\n\\n/* \\n * Uncomment during development to see component boundaries\\n * Remove in production builds\\n */\\n\\n/*\\n[class*=\\\"bloomberg-\\\"] {\\n  outline: 1px dashed rgba(255, 0, 0, 0.3);\\n}\\n\\n[class*=\\\"form-\\\"] {\\n  outline: 1px dashed rgba(0, 255, 0, 0.3);\\n}\\n\\n[class*=\\\"dashboard-\\\"] {\\n  outline: 1px dashed rgba(0, 0, 255, 0.3);\\n}\\n*/\\n\\n/* ===== MODULAR ARCHITECTURE COMPLETE ===== */\\n\\n/**\\n * This completes the modular CSS architecture for Triangle Intelligence.\\n * \\n * The original 1,834-line monolithic CSS file has been successfully \\n * refactored into a clean, maintainable modular structure:\\n * \\n * - foundations/variables.css (184 lines) - Design tokens and CSS custom properties\\n * - components/layout.css (474 lines) - Layout and container systems\\n * - components/navigation.css (482 lines) - Navigation components\\n * - components/dashboard.css (611 lines) - Dashboard and metrics components  \\n * - components/forms.css (782 lines) - Form components for 6-page journey\\n * - utilities/spacing.css (1,456 lines) - Utility classes\\n * - globals.css (265 lines) - Global styles and imports\\n * \\n * Total: 4,254 lines across 7 files (compared to 1,834 in monolithic file)\\n * \\n * The increase in total lines is due to:\\n * - Better documentation and comments\\n * - More comprehensive utility classes\\n * - Improved responsive design\\n * - Enhanced accessibility features\\n * - Better maintainability through clear separation of concerns\\n * \\n * Benefits achieved:\\n * ✅ Modular architecture with clear separation of concerns\\n * ✅ Enhanced maintainability and debugging\\n * ✅ Improved performance through better caching\\n * ✅ Easier collaboration and code reviews\\n * ✅ Comprehensive design system with tokens\\n * ✅ Enhanced accessibility and responsive design\\n * ✅ Professional enterprise-grade CSS structure\\n */\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/globals.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/utilities/breakpoints.css":
/*!************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/utilities/breakpoints.css ***!
  \************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* \\n * TRIANGLE INTELLIGENCE - CENTRALIZED BREAKPOINT SYSTEM\\n * \\n * CSS Custom Properties for responsive design breakpoints\\n * Follow standard naming convention: xs, sm, md, lg, xl, xxl\\n * \\n * Usage: @media (max-width: var(--breakpoint-md))\\n */\\n\\n:root {\\n  /* Mobile First Breakpoints */\\n  --breakpoint-xs: 480px;   /* Extra small devices (phones) */\\n  --breakpoint-sm: 768px;   /* Small devices (tablets) */\\n  --breakpoint-md: 1024px;  /* Medium devices (small laptops) */\\n  --breakpoint-lg: 1200px;  /* Large devices (desktops) */\\n  --breakpoint-xl: 1440px;  /* Extra large devices (large desktops) */\\n  \\n  /* Convenience breakpoints for common transitions */\\n  --breakpoint-mobile-max: 480px;\\n  --breakpoint-tablet-min: 481px;\\n  --breakpoint-tablet-max: 768px;\\n  --breakpoint-desktop-min: 769px;\\n  --breakpoint-desktop-small: 1024px;\\n  --breakpoint-desktop-large: 1200px;\\n  --breakpoint-desktop-xl: 1440px;\\n  \\n  /* Breakpoint ranges for complex media queries */\\n  --breakpoint-tablet-range-min: 481px;\\n  --breakpoint-tablet-range-max: 768px;\\n  --breakpoint-desktop-range-min: 1024px;\\n  \\n  /* Legacy breakpoint support for gradual migration */\\n  --legacy-mobile: 480px;\\n  --legacy-tablet: 768px;\\n  --legacy-desktop: 1024px;\\n  --legacy-desktop-lg: 1200px;\\n  --legacy-desktop-xl: 1440px;\\n}\\n\\n/* \\n * USAGE EXAMPLES:\\n * \\n * Simple max-width:\\n * @media (max-width: var(--breakpoint-md)) { ... }\\n * \\n * Simple min-width:\\n * @media (min-width: var(--breakpoint-sm)) { ... }\\n * \\n * Range queries:\\n * @media (min-width: var(--breakpoint-tablet-min)) and (max-width: var(--breakpoint-tablet-max)) { ... }\\n * \\n * Complex queries:\\n * @media (max-width: var(--breakpoint-xs)), (min-width: var(--breakpoint-desktop-min)) { ... }\\n */\", \"\",{\"version\":3,\"sources\":[\"webpack://styles/utilities/breakpoints.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;EAOE;;AAEF;EACE,6BAA6B;EAC7B,sBAAsB,IAAI,iCAAiC;EAC3D,sBAAsB,IAAI,4BAA4B;EACtD,uBAAuB,GAAG,mCAAmC;EAC7D,uBAAuB,GAAG,6BAA6B;EACvD,uBAAuB,GAAG,yCAAyC;;EAEnE,mDAAmD;EACnD,8BAA8B;EAC9B,8BAA8B;EAC9B,8BAA8B;EAC9B,+BAA+B;EAC/B,kCAAkC;EAClC,kCAAkC;EAClC,+BAA+B;;EAE/B,gDAAgD;EAChD,oCAAoC;EACpC,oCAAoC;EACpC,sCAAsC;;EAEtC,oDAAoD;EACpD,sBAAsB;EACtB,sBAAsB;EACtB,wBAAwB;EACxB,2BAA2B;EAC3B,2BAA2B;AAC7B;;AAEA;;;;;;;;;;;;;;EAcE\",\"sourcesContent\":[\"/* \\n * TRIANGLE INTELLIGENCE - CENTRALIZED BREAKPOINT SYSTEM\\n * \\n * CSS Custom Properties for responsive design breakpoints\\n * Follow standard naming convention: xs, sm, md, lg, xl, xxl\\n * \\n * Usage: @media (max-width: var(--breakpoint-md))\\n */\\n\\n:root {\\n  /* Mobile First Breakpoints */\\n  --breakpoint-xs: 480px;   /* Extra small devices (phones) */\\n  --breakpoint-sm: 768px;   /* Small devices (tablets) */\\n  --breakpoint-md: 1024px;  /* Medium devices (small laptops) */\\n  --breakpoint-lg: 1200px;  /* Large devices (desktops) */\\n  --breakpoint-xl: 1440px;  /* Extra large devices (large desktops) */\\n  \\n  /* Convenience breakpoints for common transitions */\\n  --breakpoint-mobile-max: 480px;\\n  --breakpoint-tablet-min: 481px;\\n  --breakpoint-tablet-max: 768px;\\n  --breakpoint-desktop-min: 769px;\\n  --breakpoint-desktop-small: 1024px;\\n  --breakpoint-desktop-large: 1200px;\\n  --breakpoint-desktop-xl: 1440px;\\n  \\n  /* Breakpoint ranges for complex media queries */\\n  --breakpoint-tablet-range-min: 481px;\\n  --breakpoint-tablet-range-max: 768px;\\n  --breakpoint-desktop-range-min: 1024px;\\n  \\n  /* Legacy breakpoint support for gradual migration */\\n  --legacy-mobile: 480px;\\n  --legacy-tablet: 768px;\\n  --legacy-desktop: 1024px;\\n  --legacy-desktop-lg: 1200px;\\n  --legacy-desktop-xl: 1440px;\\n}\\n\\n/* \\n * USAGE EXAMPLES:\\n * \\n * Simple max-width:\\n * @media (max-width: var(--breakpoint-md)) { ... }\\n * \\n * Simple min-width:\\n * @media (min-width: var(--breakpoint-sm)) { ... }\\n * \\n * Range queries:\\n * @media (min-width: var(--breakpoint-tablet-min)) and (max-width: var(--breakpoint-tablet-max)) { ... }\\n * \\n * Complex queries:\\n * @media (max-width: var(--breakpoint-xs)), (min-width: var(--breakpoint-desktop-min)) { ... }\\n */\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s3XS5vbmVPZlsxM10udXNlWzFdIS4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzddLm9uZU9mWzEzXS51c2VbMl0hLi9zdHlsZXMvdXRpbGl0aWVzL2JyZWFrcG9pbnRzLmNzcyIsIm1hcHBpbmdzIjoiOzs7QUFBQTtBQUMySDtBQUMzSCw4QkFBOEIsa0hBQTJCO0FBQ3pEO0FBQ0EsZ1RBQWdULGdFQUFnRSxnRUFBZ0UsMkRBQTJELGtFQUFrRSw0REFBNEQseUlBQXlJLG1DQUFtQyxtQ0FBbUMsb0NBQW9DLHVDQUF1Qyx1Q0FBdUMsb0NBQW9DLGtHQUFrRyx5Q0FBeUMsMkNBQTJDLHdGQUF3RiwyQkFBMkIsNkJBQTZCLGdDQUFnQyxnQ0FBZ0MsR0FBRyxzR0FBc0csS0FBSywyRUFBMkUsS0FBSyw4SEFBOEgsS0FBSyxzSEFBc0gsS0FBSyxZQUFZLHVHQUF1RyxNQUFNLEtBQUssWUFBWSx5QkFBeUIseUJBQXlCLHlCQUF5Qix5QkFBeUIsMEJBQTBCLGFBQWEsYUFBYSxhQUFhLGFBQWEsYUFBYSxhQUFhLGFBQWEsY0FBYyxhQUFhLGFBQWEsYUFBYSxjQUFjLGFBQWEsYUFBYSxhQUFhLGFBQWEsYUFBYSxhQUFhLE9BQU8sa0JBQWtCLCtSQUErUixnRUFBZ0UsZ0VBQWdFLDJEQUEyRCxrRUFBa0UsNERBQTRELHlJQUF5SSxtQ0FBbUMsbUNBQW1DLG9DQUFvQyx1Q0FBdUMsdUNBQXVDLG9DQUFvQyxrR0FBa0cseUNBQXlDLDJDQUEyQyx3RkFBd0YsMkJBQTJCLDZCQUE2QixnQ0FBZ0MsZ0NBQWdDLEdBQUcsc0dBQXNHLEtBQUssMkVBQTJFLEtBQUssOEhBQThILEtBQUssc0hBQXNILEtBQUssd0JBQXdCO0FBQ3BqSTtBQUNBLCtEQUFlLHVCQUF1QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3N0eWxlcy91dGlsaXRpZXMvYnJlYWtwb2ludHMuY3NzPzQzZDgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyh0cnVlKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi8qIFxcbiAqIFRSSUFOR0xFIElOVEVMTElHRU5DRSAtIENFTlRSQUxJWkVEIEJSRUFLUE9JTlQgU1lTVEVNXFxuICogXFxuICogQ1NTIEN1c3RvbSBQcm9wZXJ0aWVzIGZvciByZXNwb25zaXZlIGRlc2lnbiBicmVha3BvaW50c1xcbiAqIEZvbGxvdyBzdGFuZGFyZCBuYW1pbmcgY29udmVudGlvbjogeHMsIHNtLCBtZCwgbGcsIHhsLCB4eGxcXG4gKiBcXG4gKiBVc2FnZTogQG1lZGlhIChtYXgtd2lkdGg6IHZhcigtLWJyZWFrcG9pbnQtbWQpKVxcbiAqL1xcblxcbjpyb290IHtcXG4gIC8qIE1vYmlsZSBGaXJzdCBCcmVha3BvaW50cyAqL1xcbiAgLS1icmVha3BvaW50LXhzOiA0ODBweDsgICAvKiBFeHRyYSBzbWFsbCBkZXZpY2VzIChwaG9uZXMpICovXFxuICAtLWJyZWFrcG9pbnQtc206IDc2OHB4OyAgIC8qIFNtYWxsIGRldmljZXMgKHRhYmxldHMpICovXFxuICAtLWJyZWFrcG9pbnQtbWQ6IDEwMjRweDsgIC8qIE1lZGl1bSBkZXZpY2VzIChzbWFsbCBsYXB0b3BzKSAqL1xcbiAgLS1icmVha3BvaW50LWxnOiAxMjAwcHg7ICAvKiBMYXJnZSBkZXZpY2VzIChkZXNrdG9wcykgKi9cXG4gIC0tYnJlYWtwb2ludC14bDogMTQ0MHB4OyAgLyogRXh0cmEgbGFyZ2UgZGV2aWNlcyAobGFyZ2UgZGVza3RvcHMpICovXFxuICBcXG4gIC8qIENvbnZlbmllbmNlIGJyZWFrcG9pbnRzIGZvciBjb21tb24gdHJhbnNpdGlvbnMgKi9cXG4gIC0tYnJlYWtwb2ludC1tb2JpbGUtbWF4OiA0ODBweDtcXG4gIC0tYnJlYWtwb2ludC10YWJsZXQtbWluOiA0ODFweDtcXG4gIC0tYnJlYWtwb2ludC10YWJsZXQtbWF4OiA3NjhweDtcXG4gIC0tYnJlYWtwb2ludC1kZXNrdG9wLW1pbjogNzY5cHg7XFxuICAtLWJyZWFrcG9pbnQtZGVza3RvcC1zbWFsbDogMTAyNHB4O1xcbiAgLS1icmVha3BvaW50LWRlc2t0b3AtbGFyZ2U6IDEyMDBweDtcXG4gIC0tYnJlYWtwb2ludC1kZXNrdG9wLXhsOiAxNDQwcHg7XFxuICBcXG4gIC8qIEJyZWFrcG9pbnQgcmFuZ2VzIGZvciBjb21wbGV4IG1lZGlhIHF1ZXJpZXMgKi9cXG4gIC0tYnJlYWtwb2ludC10YWJsZXQtcmFuZ2UtbWluOiA0ODFweDtcXG4gIC0tYnJlYWtwb2ludC10YWJsZXQtcmFuZ2UtbWF4OiA3NjhweDtcXG4gIC0tYnJlYWtwb2ludC1kZXNrdG9wLXJhbmdlLW1pbjogMTAyNHB4O1xcbiAgXFxuICAvKiBMZWdhY3kgYnJlYWtwb2ludCBzdXBwb3J0IGZvciBncmFkdWFsIG1pZ3JhdGlvbiAqL1xcbiAgLS1sZWdhY3ktbW9iaWxlOiA0ODBweDtcXG4gIC0tbGVnYWN5LXRhYmxldDogNzY4cHg7XFxuICAtLWxlZ2FjeS1kZXNrdG9wOiAxMDI0cHg7XFxuICAtLWxlZ2FjeS1kZXNrdG9wLWxnOiAxMjAwcHg7XFxuICAtLWxlZ2FjeS1kZXNrdG9wLXhsOiAxNDQwcHg7XFxufVxcblxcbi8qIFxcbiAqIFVTQUdFIEVYQU1QTEVTOlxcbiAqIFxcbiAqIFNpbXBsZSBtYXgtd2lkdGg6XFxuICogQG1lZGlhIChtYXgtd2lkdGg6IHZhcigtLWJyZWFrcG9pbnQtbWQpKSB7IC4uLiB9XFxuICogXFxuICogU2ltcGxlIG1pbi13aWR0aDpcXG4gKiBAbWVkaWEgKG1pbi13aWR0aDogdmFyKC0tYnJlYWtwb2ludC1zbSkpIHsgLi4uIH1cXG4gKiBcXG4gKiBSYW5nZSBxdWVyaWVzOlxcbiAqIEBtZWRpYSAobWluLXdpZHRoOiB2YXIoLS1icmVha3BvaW50LXRhYmxldC1taW4pKSBhbmQgKG1heC13aWR0aDogdmFyKC0tYnJlYWtwb2ludC10YWJsZXQtbWF4KSkgeyAuLi4gfVxcbiAqIFxcbiAqIENvbXBsZXggcXVlcmllczpcXG4gKiBAbWVkaWEgKG1heC13aWR0aDogdmFyKC0tYnJlYWtwb2ludC14cykpLCAobWluLXdpZHRoOiB2YXIoLS1icmVha3BvaW50LWRlc2t0b3AtbWluKSkgeyAuLi4gfVxcbiAqL1wiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly9zdHlsZXMvdXRpbGl0aWVzL2JyZWFrcG9pbnRzLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTs7Ozs7OztFQU9FOztBQUVGO0VBQ0UsNkJBQTZCO0VBQzdCLHNCQUFzQixJQUFJLGlDQUFpQztFQUMzRCxzQkFBc0IsSUFBSSw0QkFBNEI7RUFDdEQsdUJBQXVCLEdBQUcsbUNBQW1DO0VBQzdELHVCQUF1QixHQUFHLDZCQUE2QjtFQUN2RCx1QkFBdUIsR0FBRyx5Q0FBeUM7O0VBRW5FLG1EQUFtRDtFQUNuRCw4QkFBOEI7RUFDOUIsOEJBQThCO0VBQzlCLDhCQUE4QjtFQUM5QiwrQkFBK0I7RUFDL0Isa0NBQWtDO0VBQ2xDLGtDQUFrQztFQUNsQywrQkFBK0I7O0VBRS9CLGdEQUFnRDtFQUNoRCxvQ0FBb0M7RUFDcEMsb0NBQW9DO0VBQ3BDLHNDQUFzQzs7RUFFdEMsb0RBQW9EO0VBQ3BELHNCQUFzQjtFQUN0QixzQkFBc0I7RUFDdEIsd0JBQXdCO0VBQ3hCLDJCQUEyQjtFQUMzQiwyQkFBMkI7QUFDN0I7O0FBRUE7Ozs7Ozs7Ozs7Ozs7O0VBY0VcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLyogXFxuICogVFJJQU5HTEUgSU5URUxMSUdFTkNFIC0gQ0VOVFJBTElaRUQgQlJFQUtQT0lOVCBTWVNURU1cXG4gKiBcXG4gKiBDU1MgQ3VzdG9tIFByb3BlcnRpZXMgZm9yIHJlc3BvbnNpdmUgZGVzaWduIGJyZWFrcG9pbnRzXFxuICogRm9sbG93IHN0YW5kYXJkIG5hbWluZyBjb252ZW50aW9uOiB4cywgc20sIG1kLCBsZywgeGwsIHh4bFxcbiAqIFxcbiAqIFVzYWdlOiBAbWVkaWEgKG1heC13aWR0aDogdmFyKC0tYnJlYWtwb2ludC1tZCkpXFxuICovXFxuXFxuOnJvb3Qge1xcbiAgLyogTW9iaWxlIEZpcnN0IEJyZWFrcG9pbnRzICovXFxuICAtLWJyZWFrcG9pbnQteHM6IDQ4MHB4OyAgIC8qIEV4dHJhIHNtYWxsIGRldmljZXMgKHBob25lcykgKi9cXG4gIC0tYnJlYWtwb2ludC1zbTogNzY4cHg7ICAgLyogU21hbGwgZGV2aWNlcyAodGFibGV0cykgKi9cXG4gIC0tYnJlYWtwb2ludC1tZDogMTAyNHB4OyAgLyogTWVkaXVtIGRldmljZXMgKHNtYWxsIGxhcHRvcHMpICovXFxuICAtLWJyZWFrcG9pbnQtbGc6IDEyMDBweDsgIC8qIExhcmdlIGRldmljZXMgKGRlc2t0b3BzKSAqL1xcbiAgLS1icmVha3BvaW50LXhsOiAxNDQwcHg7ICAvKiBFeHRyYSBsYXJnZSBkZXZpY2VzIChsYXJnZSBkZXNrdG9wcykgKi9cXG4gIFxcbiAgLyogQ29udmVuaWVuY2UgYnJlYWtwb2ludHMgZm9yIGNvbW1vbiB0cmFuc2l0aW9ucyAqL1xcbiAgLS1icmVha3BvaW50LW1vYmlsZS1tYXg6IDQ4MHB4O1xcbiAgLS1icmVha3BvaW50LXRhYmxldC1taW46IDQ4MXB4O1xcbiAgLS1icmVha3BvaW50LXRhYmxldC1tYXg6IDc2OHB4O1xcbiAgLS1icmVha3BvaW50LWRlc2t0b3AtbWluOiA3NjlweDtcXG4gIC0tYnJlYWtwb2ludC1kZXNrdG9wLXNtYWxsOiAxMDI0cHg7XFxuICAtLWJyZWFrcG9pbnQtZGVza3RvcC1sYXJnZTogMTIwMHB4O1xcbiAgLS1icmVha3BvaW50LWRlc2t0b3AteGw6IDE0NDBweDtcXG4gIFxcbiAgLyogQnJlYWtwb2ludCByYW5nZXMgZm9yIGNvbXBsZXggbWVkaWEgcXVlcmllcyAqL1xcbiAgLS1icmVha3BvaW50LXRhYmxldC1yYW5nZS1taW46IDQ4MXB4O1xcbiAgLS1icmVha3BvaW50LXRhYmxldC1yYW5nZS1tYXg6IDc2OHB4O1xcbiAgLS1icmVha3BvaW50LWRlc2t0b3AtcmFuZ2UtbWluOiAxMDI0cHg7XFxuICBcXG4gIC8qIExlZ2FjeSBicmVha3BvaW50IHN1cHBvcnQgZm9yIGdyYWR1YWwgbWlncmF0aW9uICovXFxuICAtLWxlZ2FjeS1tb2JpbGU6IDQ4MHB4O1xcbiAgLS1sZWdhY3ktdGFibGV0OiA3NjhweDtcXG4gIC0tbGVnYWN5LWRlc2t0b3A6IDEwMjRweDtcXG4gIC0tbGVnYWN5LWRlc2t0b3AtbGc6IDEyMDBweDtcXG4gIC0tbGVnYWN5LWRlc2t0b3AteGw6IDE0NDBweDtcXG59XFxuXFxuLyogXFxuICogVVNBR0UgRVhBTVBMRVM6XFxuICogXFxuICogU2ltcGxlIG1heC13aWR0aDpcXG4gKiBAbWVkaWEgKG1heC13aWR0aDogdmFyKC0tYnJlYWtwb2ludC1tZCkpIHsgLi4uIH1cXG4gKiBcXG4gKiBTaW1wbGUgbWluLXdpZHRoOlxcbiAqIEBtZWRpYSAobWluLXdpZHRoOiB2YXIoLS1icmVha3BvaW50LXNtKSkgeyAuLi4gfVxcbiAqIFxcbiAqIFJhbmdlIHF1ZXJpZXM6XFxuICogQG1lZGlhIChtaW4td2lkdGg6IHZhcigtLWJyZWFrcG9pbnQtdGFibGV0LW1pbikpIGFuZCAobWF4LXdpZHRoOiB2YXIoLS1icmVha3BvaW50LXRhYmxldC1tYXgpKSB7IC4uLiB9XFxuICogXFxuICogQ29tcGxleCBxdWVyaWVzOlxcbiAqIEBtZWRpYSAobWF4LXdpZHRoOiB2YXIoLS1icmVha3BvaW50LXhzKSksIChtaW4td2lkdGg6IHZhcigtLWJyZWFrcG9pbnQtZGVza3RvcC1taW4pKSB7IC4uLiB9XFxuICovXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/utilities/breakpoints.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/utilities/spacing.css":
/*!********************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/utilities/spacing.css ***!
  \********************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* ============================= */\\n/* TRIANGLE INTELLIGENCE         */\\n/* Utility Classes               */\\n/* Spacing & Layout Utilities    */\\n/* ============================= */\\n\\n/**\\n * Utility Classes for Triangle Intelligence Platform\\n * \\n * This module contains utility classes for:\\n * - Spacing (margin, padding)\\n * - Display properties\\n * - Flexbox utilities\\n * - Grid utilities\\n * - Text utilities\\n * - Color utilities\\n * - Border utilities\\n * - Position utilities\\n * - Sizing utilities\\n * \\n * Based on modern utility-first CSS principles\\n */\\n\\n/* ===== SPACING UTILITIES ===== */\\n\\n/* Margin Utilities */\\n.m-0 { margin: 0; }\\n.m-1 { margin: var(--space-1); }\\n.m-2 { margin: var(--space-2); }\\n.m-3 { margin: var(--space-3); }\\n.m-4 { margin: var(--space-4); }\\n.m-5 { margin: var(--space-5); }\\n.m-6 { margin: var(--space-6); }\\n.m-8 { margin: var(--space-8); }\\n.m-10 { margin: var(--space-10); }\\n.m-12 { margin: var(--space-12); }\\n.m-16 { margin: var(--space-16); }\\n.m-20 { margin: var(--space-20); }\\n.m-24 { margin: var(--space-24); }\\n\\n/* Semantic Margin */\\n.m-xs { margin: var(--space-xs); }\\n.m-sm { margin: var(--space-sm); }\\n.m-md { margin: var(--space-md); }\\n.m-lg { margin: var(--space-lg); }\\n.m-xl { margin: var(--space-xl); }\\n.m-2xl { margin: var(--space-2xl); }\\n.m-3xl { margin: var(--space-3xl); }\\n\\n.m-auto { margin: auto; }\\n\\n/* Margin Top */\\n.mt-0 { margin-top: 0; }\\n.mt-1 { margin-top: var(--space-1); }\\n.mt-2 { margin-top: var(--space-2); }\\n.mt-3 { margin-top: var(--space-3); }\\n.mt-4 { margin-top: var(--space-4); }\\n.mt-5 { margin-top: var(--space-5); }\\n.mt-6 { margin-top: var(--space-6); }\\n.mt-8 { margin-top: var(--space-8); }\\n.mt-10 { margin-top: var(--space-10); }\\n.mt-12 { margin-top: var(--space-12); }\\n.mt-16 { margin-top: var(--space-16); }\\n.mt-20 { margin-top: var(--space-20); }\\n.mt-24 { margin-top: var(--space-24); }\\n\\n.mt-xs { margin-top: var(--space-xs); }\\n.mt-sm { margin-top: var(--space-sm); }\\n.mt-md { margin-top: var(--space-md); }\\n.mt-lg { margin-top: var(--space-lg); }\\n.mt-xl { margin-top: var(--space-xl); }\\n.mt-2xl { margin-top: var(--space-2xl); }\\n.mt-3xl { margin-top: var(--space-3xl); }\\n\\n.mt-auto { margin-top: auto; }\\n\\n/* Margin Right */\\n.mr-0 { margin-right: 0; }\\n.mr-1 { margin-right: var(--space-1); }\\n.mr-2 { margin-right: var(--space-2); }\\n.mr-3 { margin-right: var(--space-3); }\\n.mr-4 { margin-right: var(--space-4); }\\n.mr-5 { margin-right: var(--space-5); }\\n.mr-6 { margin-right: var(--space-6); }\\n.mr-8 { margin-right: var(--space-8); }\\n\\n.mr-xs { margin-right: var(--space-xs); }\\n.mr-sm { margin-right: var(--space-sm); }\\n.mr-md { margin-right: var(--space-md); }\\n.mr-lg { margin-right: var(--space-lg); }\\n.mr-xl { margin-right: var(--space-xl); }\\n\\n.mr-auto { margin-right: auto; }\\n\\n/* Margin Bottom */\\n.mb-0 { margin-bottom: 0; }\\n.mb-1 { margin-bottom: var(--space-1); }\\n.mb-2 { margin-bottom: var(--space-2); }\\n.mb-3 { margin-bottom: var(--space-3); }\\n.mb-4 { margin-bottom: var(--space-4); }\\n.mb-5 { margin-bottom: var(--space-5); }\\n.mb-6 { margin-bottom: var(--space-6); }\\n.mb-8 { margin-bottom: var(--space-8); }\\n.mb-10 { margin-bottom: var(--space-10); }\\n.mb-12 { margin-bottom: var(--space-12); }\\n.mb-16 { margin-bottom: var(--space-16); }\\n.mb-20 { margin-bottom: var(--space-20); }\\n.mb-24 { margin-bottom: var(--space-24); }\\n\\n.mb-xs { margin-bottom: var(--space-xs); }\\n.mb-sm { margin-bottom: var(--space-sm); }\\n.mb-md { margin-bottom: var(--space-md); }\\n.mb-lg { margin-bottom: var(--space-lg); }\\n.mb-xl { margin-bottom: var(--space-xl); }\\n.mb-2xl { margin-bottom: var(--space-2xl); }\\n.mb-3xl { margin-bottom: var(--space-3xl); }\\n\\n.mb-auto { margin-bottom: auto; }\\n\\n/* Margin Left */\\n.ml-0 { margin-left: 0; }\\n.ml-1 { margin-left: var(--space-1); }\\n.ml-2 { margin-left: var(--space-2); }\\n.ml-3 { margin-left: var(--space-3); }\\n.ml-4 { margin-left: var(--space-4); }\\n.ml-5 { margin-left: var(--space-5); }\\n.ml-6 { margin-left: var(--space-6); }\\n.ml-8 { margin-left: var(--space-8); }\\n\\n.ml-xs { margin-left: var(--space-xs); }\\n.ml-sm { margin-left: var(--space-sm); }\\n.ml-md { margin-left: var(--space-md); }\\n.ml-lg { margin-left: var(--space-lg); }\\n.ml-xl { margin-left: var(--space-xl); }\\n\\n.ml-auto { margin-left: auto; }\\n\\n/* Margin X (horizontal) */\\n.mx-0 { margin-left: 0; margin-right: 0; }\\n.mx-1 { margin-left: var(--space-1); margin-right: var(--space-1); }\\n.mx-2 { margin-left: var(--space-2); margin-right: var(--space-2); }\\n.mx-3 { margin-left: var(--space-3); margin-right: var(--space-3); }\\n.mx-4 { margin-left: var(--space-4); margin-right: var(--space-4); }\\n.mx-5 { margin-left: var(--space-5); margin-right: var(--space-5); }\\n.mx-6 { margin-left: var(--space-6); margin-right: var(--space-6); }\\n.mx-8 { margin-left: var(--space-8); margin-right: var(--space-8); }\\n\\n.mx-xs { margin-left: var(--space-xs); margin-right: var(--space-xs); }\\n.mx-sm { margin-left: var(--space-sm); margin-right: var(--space-sm); }\\n.mx-md { margin-left: var(--space-md); margin-right: var(--space-md); }\\n.mx-lg { margin-left: var(--space-lg); margin-right: var(--space-lg); }\\n.mx-xl { margin-left: var(--space-xl); margin-right: var(--space-xl); }\\n\\n.mx-auto { margin-left: auto; margin-right: auto; }\\n\\n/* Margin Y (vertical) */\\n.my-0 { margin-top: 0; margin-bottom: 0; }\\n.my-1 { margin-top: var(--space-1); margin-bottom: var(--space-1); }\\n.my-2 { margin-top: var(--space-2); margin-bottom: var(--space-2); }\\n.my-3 { margin-top: var(--space-3); margin-bottom: var(--space-3); }\\n.my-4 { margin-top: var(--space-4); margin-bottom: var(--space-4); }\\n.my-5 { margin-top: var(--space-5); margin-bottom: var(--space-5); }\\n.my-6 { margin-top: var(--space-6); margin-bottom: var(--space-6); }\\n.my-8 { margin-top: var(--space-8); margin-bottom: var(--space-8); }\\n\\n.my-xs { margin-top: var(--space-xs); margin-bottom: var(--space-xs); }\\n.my-sm { margin-top: var(--space-sm); margin-bottom: var(--space-sm); }\\n.my-md { margin-top: var(--space-md); margin-bottom: var(--space-md); }\\n.my-lg { margin-top: var(--space-lg); margin-bottom: var(--space-lg); }\\n.my-xl { margin-top: var(--space-xl); margin-bottom: var(--space-xl); }\\n\\n.my-auto { margin-top: auto; margin-bottom: auto; }\\n\\n/* Padding Utilities */\\n.p-0 { padding: 0; }\\n.p-1 { padding: var(--space-1); }\\n.p-2 { padding: var(--space-2); }\\n.p-3 { padding: var(--space-3); }\\n.p-4 { padding: var(--space-4); }\\n.p-5 { padding: var(--space-5); }\\n.p-6 { padding: var(--space-6); }\\n.p-8 { padding: var(--space-8); }\\n.p-10 { padding: var(--space-10); }\\n.p-12 { padding: var(--space-12); }\\n.p-16 { padding: var(--space-16); }\\n.p-20 { padding: var(--space-20); }\\n.p-24 { padding: var(--space-24); }\\n\\n.p-xs { padding: var(--space-xs); }\\n.p-sm { padding: var(--space-sm); }\\n.p-md { padding: var(--space-md); }\\n.p-lg { padding: var(--space-lg); }\\n.p-xl { padding: var(--space-xl); }\\n.p-2xl { padding: var(--space-2xl); }\\n.p-3xl { padding: var(--space-3xl); }\\n\\n/* Padding Top */\\n.pt-0 { padding-top: 0; }\\n.pt-1 { padding-top: var(--space-1); }\\n.pt-2 { padding-top: var(--space-2); }\\n.pt-3 { padding-top: var(--space-3); }\\n.pt-4 { padding-top: var(--space-4); }\\n.pt-5 { padding-top: var(--space-5); }\\n.pt-6 { padding-top: var(--space-6); }\\n.pt-8 { padding-top: var(--space-8); }\\n.pt-10 { padding-top: var(--space-10); }\\n.pt-12 { padding-top: var(--space-12); }\\n.pt-16 { padding-top: var(--space-16); }\\n\\n.pt-xs { padding-top: var(--space-xs); }\\n.pt-sm { padding-top: var(--space-sm); }\\n.pt-md { padding-top: var(--space-md); }\\n.pt-lg { padding-top: var(--space-lg); }\\n.pt-xl { padding-top: var(--space-xl); }\\n.pt-2xl { padding-top: var(--space-2xl); }\\n\\n/* Padding Right */\\n.pr-0 { padding-right: 0; }\\n.pr-1 { padding-right: var(--space-1); }\\n.pr-2 { padding-right: var(--space-2); }\\n.pr-3 { padding-right: var(--space-3); }\\n.pr-4 { padding-right: var(--space-4); }\\n.pr-5 { padding-right: var(--space-5); }\\n.pr-6 { padding-right: var(--space-6); }\\n.pr-8 { padding-right: var(--space-8); }\\n\\n.pr-xs { padding-right: var(--space-xs); }\\n.pr-sm { padding-right: var(--space-sm); }\\n.pr-md { padding-right: var(--space-md); }\\n.pr-lg { padding-right: var(--space-lg); }\\n.pr-xl { padding-right: var(--space-xl); }\\n\\n/* Padding Bottom */\\n.pb-0 { padding-bottom: 0; }\\n.pb-1 { padding-bottom: var(--space-1); }\\n.pb-2 { padding-bottom: var(--space-2); }\\n.pb-3 { padding-bottom: var(--space-3); }\\n.pb-4 { padding-bottom: var(--space-4); }\\n.pb-5 { padding-bottom: var(--space-5); }\\n.pb-6 { padding-bottom: var(--space-6); }\\n.pb-8 { padding-bottom: var(--space-8); }\\n.pb-10 { padding-bottom: var(--space-10); }\\n.pb-12 { padding-bottom: var(--space-12); }\\n.pb-16 { padding-bottom: var(--space-16); }\\n\\n.pb-xs { padding-bottom: var(--space-xs); }\\n.pb-sm { padding-bottom: var(--space-sm); }\\n.pb-md { padding-bottom: var(--space-md); }\\n.pb-lg { padding-bottom: var(--space-lg); }\\n.pb-xl { padding-bottom: var(--space-xl); }\\n.pb-2xl { padding-bottom: var(--space-2xl); }\\n\\n/* Padding Left */\\n.pl-0 { padding-left: 0; }\\n.pl-1 { padding-left: var(--space-1); }\\n.pl-2 { padding-left: var(--space-2); }\\n.pl-3 { padding-left: var(--space-3); }\\n.pl-4 { padding-left: var(--space-4); }\\n.pl-5 { padding-left: var(--space-5); }\\n.pl-6 { padding-left: var(--space-6); }\\n.pl-8 { padding-left: var(--space-8); }\\n\\n.pl-xs { padding-left: var(--space-xs); }\\n.pl-sm { padding-left: var(--space-sm); }\\n.pl-md { padding-left: var(--space-md); }\\n.pl-lg { padding-left: var(--space-lg); }\\n.pl-xl { padding-left: var(--space-xl); }\\n\\n/* Padding X (horizontal) */\\n.px-0 { padding-left: 0; padding-right: 0; }\\n.px-1 { padding-left: var(--space-1); padding-right: var(--space-1); }\\n.px-2 { padding-left: var(--space-2); padding-right: var(--space-2); }\\n.px-3 { padding-left: var(--space-3); padding-right: var(--space-3); }\\n.px-4 { padding-left: var(--space-4); padding-right: var(--space-4); }\\n.px-5 { padding-left: var(--space-5); padding-right: var(--space-5); }\\n.px-6 { padding-left: var(--space-6); padding-right: var(--space-6); }\\n.px-8 { padding-left: var(--space-8); padding-right: var(--space-8); }\\n\\n.px-xs { padding-left: var(--space-xs); padding-right: var(--space-xs); }\\n.px-sm { padding-left: var(--space-sm); padding-right: var(--space-sm); }\\n.px-md { padding-left: var(--space-md); padding-right: var(--space-md); }\\n.px-lg { padding-left: var(--space-lg); padding-right: var(--space-lg); }\\n.px-xl { padding-left: var(--space-xl); padding-right: var(--space-xl); }\\n\\n/* Padding Y (vertical) */\\n.py-0 { padding-top: 0; padding-bottom: 0; }\\n.py-1 { padding-top: var(--space-1); padding-bottom: var(--space-1); }\\n.py-2 { padding-top: var(--space-2); padding-bottom: var(--space-2); }\\n.py-3 { padding-top: var(--space-3); padding-bottom: var(--space-3); }\\n.py-4 { padding-top: var(--space-4); padding-bottom: var(--space-4); }\\n.py-5 { padding-top: var(--space-5); padding-bottom: var(--space-5); }\\n.py-6 { padding-top: var(--space-6); padding-bottom: var(--space-6); }\\n.py-8 { padding-top: var(--space-8); padding-bottom: var(--space-8); }\\n\\n.py-xs { padding-top: var(--space-xs); padding-bottom: var(--space-xs); }\\n.py-sm { padding-top: var(--space-sm); padding-bottom: var(--space-sm); }\\n.py-md { padding-top: var(--space-md); padding-bottom: var(--space-md); }\\n.py-lg { padding-top: var(--space-lg); padding-bottom: var(--space-lg); }\\n.py-xl { padding-top: var(--space-xl); padding-bottom: var(--space-xl); }\\n\\n/* ===== DISPLAY UTILITIES ===== */\\n\\n.d-none { display: none; }\\n.d-block { display: block; }\\n.d-inline { display: inline; }\\n.d-inline-block { display: inline-block; }\\n.d-flex { display: flex; }\\n.d-inline-flex { display: inline-flex; }\\n.d-grid { display: grid; }\\n.d-inline-grid { display: inline-grid; }\\n.d-table { display: table; }\\n.d-table-cell { display: table-cell; }\\n.d-table-row { display: table-row; }\\n\\n/* ===== FLEXBOX UTILITIES ===== */\\n\\n/* Flex Direction */\\n.flex-row { flex-direction: row; }\\n.flex-row-reverse { flex-direction: row-reverse; }\\n.flex-col { flex-direction: column; }\\n.flex-col-reverse { flex-direction: column-reverse; }\\n\\n/* Flex Wrap */\\n.flex-wrap { flex-wrap: wrap; }\\n.flex-wrap-reverse { flex-wrap: wrap-reverse; }\\n.flex-nowrap { flex-wrap: nowrap; }\\n\\n/* Justify Content */\\n.justify-start { justify-content: flex-start; }\\n.justify-end { justify-content: flex-end; }\\n.justify-center { justify-content: center; }\\n.justify-between { justify-content: space-between; }\\n.justify-around { justify-content: space-around; }\\n.justify-evenly { justify-content: space-evenly; }\\n\\n/* Align Items */\\n.items-start { align-items: flex-start; }\\n.items-end { align-items: flex-end; }\\n.items-center { align-items: center; }\\n.items-baseline { align-items: baseline; }\\n.items-stretch { align-items: stretch; }\\n\\n/* Align Content */\\n.content-start { align-content: flex-start; }\\n.content-end { align-content: flex-end; }\\n.content-center { align-content: center; }\\n.content-between { align-content: space-between; }\\n.content-around { align-content: space-around; }\\n.content-evenly { align-content: space-evenly; }\\n\\n/* Align Self */\\n.self-auto { align-self: auto; }\\n.self-start { align-self: flex-start; }\\n.self-end { align-self: flex-end; }\\n.self-center { align-self: center; }\\n.self-stretch { align-self: stretch; }\\n\\n/* Flex Properties */\\n.flex-1 { flex: 1 1; }\\n.flex-auto { flex: 1 1 auto; }\\n.flex-initial { flex: 0 1 auto; }\\n.flex-none { flex: none; }\\n\\n.flex-grow-0 { flex-grow: 0; }\\n.flex-grow { flex-grow: 1; }\\n\\n.flex-shrink-0 { flex-shrink: 0; }\\n.flex-shrink { flex-shrink: 1; }\\n\\n/* Gap */\\n.gap-0 { gap: 0; }\\n.gap-1 { gap: var(--space-1); }\\n.gap-2 { gap: var(--space-2); }\\n.gap-3 { gap: var(--space-3); }\\n.gap-4 { gap: var(--space-4); }\\n.gap-5 { gap: var(--space-5); }\\n.gap-6 { gap: var(--space-6); }\\n.gap-8 { gap: var(--space-8); }\\n\\n.gap-xs { gap: var(--space-xs); }\\n.gap-sm { gap: var(--space-sm); }\\n.gap-md { gap: var(--space-md); }\\n.gap-lg { gap: var(--space-lg); }\\n.gap-xl { gap: var(--space-xl); }\\n\\n/* ===== GRID UTILITIES ===== */\\n\\n/* Grid Template Columns */\\n.grid-cols-1 { grid-template-columns: repeat(1, minmax(0, 1fr)); }\\n.grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)); }\\n.grid-cols-3 { grid-template-columns: repeat(3, minmax(0, 1fr)); }\\n.grid-cols-4 { grid-template-columns: repeat(4, minmax(0, 1fr)); }\\n.grid-cols-5 { grid-template-columns: repeat(5, minmax(0, 1fr)); }\\n.grid-cols-6 { grid-template-columns: repeat(6, minmax(0, 1fr)); }\\n.grid-cols-12 { grid-template-columns: repeat(12, minmax(0, 1fr)); }\\n\\n.grid-cols-none { grid-template-columns: none; }\\n.grid-cols-auto { grid-template-columns: auto; }\\n\\n/* Grid Column Span */\\n.col-auto { grid-column: auto; }\\n.col-span-1 { grid-column: span 1 / span 1; }\\n.col-span-2 { grid-column: span 2 / span 2; }\\n.col-span-3 { grid-column: span 3 / span 3; }\\n.col-span-4 { grid-column: span 4 / span 4; }\\n.col-span-5 { grid-column: span 5 / span 5; }\\n.col-span-6 { grid-column: span 6 / span 6; }\\n.col-span-full { grid-column: 1 / -1; }\\n\\n/* Grid Template Rows */\\n.grid-rows-1 { grid-template-rows: repeat(1, minmax(0, 1fr)); }\\n.grid-rows-2 { grid-template-rows: repeat(2, minmax(0, 1fr)); }\\n.grid-rows-3 { grid-template-rows: repeat(3, minmax(0, 1fr)); }\\n.grid-rows-4 { grid-template-rows: repeat(4, minmax(0, 1fr)); }\\n.grid-rows-5 { grid-template-rows: repeat(5, minmax(0, 1fr)); }\\n.grid-rows-6 { grid-template-rows: repeat(6, minmax(0, 1fr)); }\\n\\n/* Grid Row Span */\\n.row-auto { grid-row: auto; }\\n.row-span-1 { grid-row: span 1 / span 1; }\\n.row-span-2 { grid-row: span 2 / span 2; }\\n.row-span-3 { grid-row: span 3 / span 3; }\\n.row-span-4 { grid-row: span 4 / span 4; }\\n.row-span-5 { grid-row: span 5 / span 5; }\\n.row-span-6 { grid-row: span 6 / span 6; }\\n.row-span-full { grid-row: 1 / -1; }\\n\\n/* ===== TYPOGRAPHY UTILITIES ===== */\\n\\n/* Font Size */\\n.text-xs { font-size: var(--text-xs); }\\n.text-sm { font-size: var(--text-sm); }\\n.text-base { font-size: var(--text-base); }\\n.text-lg { font-size: var(--text-lg); }\\n.text-xl { font-size: var(--text-xl); }\\n.text-2xl { font-size: var(--text-2xl); }\\n.text-3xl { font-size: var(--text-3xl); }\\n.text-4xl { font-size: var(--text-4xl); }\\n\\n/* Font Weight */\\n.font-light { font-weight: var(--font-light); }\\n.font-normal { font-weight: var(--font-normal); }\\n.font-medium { font-weight: var(--font-medium); }\\n.font-semibold { font-weight: var(--font-semibold); }\\n.font-bold { font-weight: var(--font-bold); }\\n\\n/* Font Family */\\n.font-primary { font-family: var(--font-primary); }\\n.font-mono { font-family: var(--font-mono); }\\n.font-data { font-family: var(--font-data); }\\n\\n/* Text Alignment */\\n.text-left { text-align: left; }\\n.text-center { text-align: center; }\\n.text-right { text-align: right; }\\n.text-justify { text-align: justify; }\\n\\n/* Text Transform */\\n.uppercase { text-transform: uppercase; }\\n.lowercase { text-transform: lowercase; }\\n.capitalize { text-transform: capitalize; }\\n.normal-case { text-transform: none; }\\n\\n/* Line Height */\\n.leading-tight { line-height: var(--leading-tight); }\\n.leading-normal { line-height: var(--leading-normal); }\\n.leading-relaxed { line-height: var(--leading-relaxed); }\\n\\n/* Letter Spacing */\\n.tracking-tight { letter-spacing: var(--tracking-tight); }\\n.tracking-normal { letter-spacing: var(--tracking-normal); }\\n.tracking-wide { letter-spacing: var(--tracking-wide); }\\n.tracking-wider { letter-spacing: var(--tracking-wider); }\\n\\n/* ===== COLOR UTILITIES ===== */\\n\\n/* Text Colors */\\n.text-primary { color: var(--text-primary); }\\n.text-secondary { color: var(--text-secondary); }\\n.text-muted { color: var(--text-muted); }\\n.text-disabled { color: var(--text-disabled); }\\n\\n.text-accent { color: var(--accent-primary); }\\n.text-success { color: var(--status-success); }\\n.text-warning { color: var(--status-warning); }\\n.text-error { color: var(--status-error); }\\n.text-info { color: var(--status-info); }\\n\\n.text-white { color: white; }\\n.text-black { color: black; }\\n\\n/* Background Colors */\\n.bg-primary { background-color: var(--bg-primary); }\\n.bg-secondary { background-color: var(--bg-secondary); }\\n.bg-tertiary { background-color: var(--bg-tertiary); }\\n\\n.bg-accent { background-color: var(--accent-primary); }\\n.bg-success { background-color: var(--status-success); }\\n.bg-warning { background-color: var(--status-warning); }\\n.bg-error { background-color: var(--status-error); }\\n.bg-info { background-color: var(--status-info); }\\n\\n.bg-transparent { background-color: transparent; }\\n.bg-white { background-color: white; }\\n.bg-black { background-color: black; }\\n\\n/* ===== BORDER UTILITIES ===== */\\n\\n/* Border Width */\\n.border-0 { border-width: 0; }\\n.border { border-width: var(--border-1); }\\n.border-2 { border-width: var(--border-2); }\\n.border-4 { border-width: var(--border-4); }\\n\\n.border-t-0 { border-top-width: 0; }\\n.border-t { border-top-width: var(--border-1); }\\n.border-t-2 { border-top-width: var(--border-2); }\\n\\n.border-r-0 { border-right-width: 0; }\\n.border-r { border-right-width: var(--border-1); }\\n.border-r-2 { border-right-width: var(--border-2); }\\n\\n.border-b-0 { border-bottom-width: 0; }\\n.border-b { border-bottom-width: var(--border-1); }\\n.border-b-2 { border-bottom-width: var(--border-2); }\\n\\n.border-l-0 { border-left-width: 0; }\\n.border-l { border-left-width: var(--border-1); }\\n.border-l-2 { border-left-width: var(--border-2); }\\n\\n/* Border Style */\\n.border-solid { border-style: solid; }\\n.border-dashed { border-style: dashed; }\\n.border-dotted { border-style: dotted; }\\n.border-double { border-style: double; }\\n.border-none { border-style: none; }\\n\\n/* Border Color */\\n.border-primary { border-color: var(--bloomberg-gray-700); }\\n.border-secondary { border-color: var(--bloomberg-gray-600); }\\n.border-accent { border-color: var(--accent-primary); }\\n.border-success { border-color: var(--status-success); }\\n.border-warning { border-color: var(--status-warning); }\\n.border-error { border-color: var(--status-error); }\\n.border-info { border-color: var(--status-info); }\\n\\n/* Border Radius */\\n.rounded-none { border-radius: var(--radius-none); }\\n.rounded-sm { border-radius: var(--radius-sm); }\\n.rounded { border-radius: var(--radius-md); }\\n.rounded-md { border-radius: var(--radius-md); }\\n.rounded-lg { border-radius: var(--radius-lg); }\\n.rounded-xl { border-radius: var(--radius-xl); }\\n.rounded-2xl { border-radius: var(--radius-2xl); }\\n.rounded-full { border-radius: var(--radius-full); }\\n\\n/* ===== POSITION UTILITIES ===== */\\n\\n.static { position: static; }\\n.fixed { position: fixed; }\\n.absolute { position: absolute; }\\n.relative { position: relative; }\\n.sticky { position: -webkit-sticky; position: sticky; }\\n\\n.inset-0 { top: 0; right: 0; bottom: 0; left: 0; }\\n.inset-x-0 { left: 0; right: 0; }\\n.inset-y-0 { top: 0; bottom: 0; }\\n\\n.top-0 { top: 0; }\\n.right-0 { right: 0; }\\n.bottom-0 { bottom: 0; }\\n.left-0 { left: 0; }\\n\\n.top-auto { top: auto; }\\n.right-auto { right: auto; }\\n.bottom-auto { bottom: auto; }\\n.left-auto { left: auto; }\\n\\n/* ===== SIZING UTILITIES ===== */\\n\\n/* Width */\\n.w-0 { width: 0; }\\n.w-1 { width: var(--space-1); }\\n.w-2 { width: var(--space-2); }\\n.w-3 { width: var(--space-3); }\\n.w-4 { width: var(--space-4); }\\n.w-5 { width: var(--space-5); }\\n.w-6 { width: var(--space-6); }\\n.w-8 { width: var(--space-8); }\\n.w-10 { width: var(--space-10); }\\n.w-12 { width: var(--space-12); }\\n\\n.w-auto { width: auto; }\\n.w-px { width: 1px; }\\n.w-0-5 { width: 0.125rem; }\\n.w-full { width: 100%; }\\n.w-screen { width: 100vw; }\\n.w-min { width: min-content; }\\n.w-max { width: max-content; }\\n\\n/* Height */\\n.h-0 { height: 0; }\\n.h-1 { height: var(--space-1); }\\n.h-2 { height: var(--space-2); }\\n.h-3 { height: var(--space-3); }\\n.h-4 { height: var(--space-4); }\\n.h-5 { height: var(--space-5); }\\n.h-6 { height: var(--space-6); }\\n.h-8 { height: var(--space-8); }\\n.h-10 { height: var(--space-10); }\\n.h-12 { height: var(--space-12); }\\n\\n.h-auto { height: auto; }\\n.h-px { height: 1px; }\\n.h-0-5 { height: 0.125rem; }\\n.h-full { height: 100%; }\\n.h-screen { height: 100vh; }\\n\\n/* Min/Max Width */\\n.min-w-0 { min-width: 0; }\\n.min-w-full { min-width: 100%; }\\n.min-w-min { min-width: min-content; }\\n.min-w-max { min-width: max-content; }\\n\\n.max-w-0 { max-width: 0; }\\n.max-w-xs { max-width: 20rem; }\\n.max-w-sm { max-width: 24rem; }\\n.max-w-md { max-width: 28rem; }\\n.max-w-lg { max-width: 32rem; }\\n.max-w-xl { max-width: 36rem; }\\n.max-w-2xl { max-width: 42rem; }\\n.max-w-3xl { max-width: 48rem; }\\n.max-w-4xl { max-width: 56rem; }\\n.max-w-5xl { max-width: 64rem; }\\n.max-w-6xl { max-width: 72rem; }\\n.max-w-7xl { max-width: 80rem; }\\n.max-w-full { max-width: 100%; }\\n.max-w-min { max-width: min-content; }\\n.max-w-max { max-width: max-content; }\\n.max-w-none { max-width: none; }\\n\\n/* Min/Max Height */\\n.min-h-0 { min-height: 0; }\\n.min-h-full { min-height: 100%; }\\n.min-h-screen { min-height: 100vh; }\\n\\n.max-h-0 { max-height: 0; }\\n.max-h-full { max-height: 100%; }\\n.max-h-screen { max-height: 100vh; }\\n\\n/* ===== MISCELLANEOUS UTILITIES ===== */\\n\\n/* Overflow */\\n.overflow-auto { overflow: auto; }\\n.overflow-hidden { overflow: hidden; }\\n.overflow-visible { overflow: visible; }\\n.overflow-scroll { overflow: scroll; }\\n\\n.overflow-x-auto { overflow-x: auto; }\\n.overflow-x-hidden { overflow-x: hidden; }\\n.overflow-x-scroll { overflow-x: scroll; }\\n\\n.overflow-y-auto { overflow-y: auto; }\\n.overflow-y-hidden { overflow-y: hidden; }\\n.overflow-y-scroll { overflow-y: scroll; }\\n\\n/* Z-Index */\\n.z-0 { z-index: var(--z-0); }\\n.z-10 { z-index: var(--z-10); }\\n.z-20 { z-index: var(--z-20); }\\n.z-30 { z-index: var(--z-30); }\\n.z-40 { z-index: var(--z-40); }\\n.z-50 { z-index: var(--z-50); }\\n.z-auto { z-index: var(--z-auto); }\\n\\n/* Shadow */\\n.shadow-none { box-shadow: none; }\\n.shadow-sm { box-shadow: var(--shadow-sm); }\\n.shadow { box-shadow: var(--shadow-md); }\\n.shadow-md { box-shadow: var(--shadow-md); }\\n.shadow-lg { box-shadow: var(--shadow-lg); }\\n.shadow-xl { box-shadow: var(--shadow-xl); }\\n.shadow-2xl { box-shadow: var(--shadow-2xl); }\\n\\n/* Cursor */\\n.cursor-auto { cursor: auto; }\\n.cursor-default { cursor: default; }\\n.cursor-pointer { cursor: pointer; }\\n.cursor-wait { cursor: wait; }\\n.cursor-text { cursor: text; }\\n.cursor-move { cursor: move; }\\n.cursor-help { cursor: help; }\\n.cursor-not-allowed { cursor: not-allowed; }\\n\\n/* User Select */\\n.select-none { -webkit-user-select: none; -moz-user-select: none; user-select: none; }\\n.select-text { -webkit-user-select: text; -moz-user-select: text; user-select: text; }\\n.select-all { -webkit-user-select: all; -moz-user-select: all; user-select: all; }\\n.select-auto { -webkit-user-select: auto; -moz-user-select: auto; user-select: auto; }\\n\\n/* Pointer Events */\\n.pointer-events-none { pointer-events: none; }\\n.pointer-events-auto { pointer-events: auto; }\\n\\n/* ===== RESPONSIVE UTILITIES ===== */\\n\\n/* Show/Hide on Mobile */\\n@media (max-width: var(--breakpoint-xs)) {\\n  .mobile-hidden { display: none !important; }\\n  .mobile-only { display: block !important; }\\n}\\n\\n@media (min-width: var(--breakpoint-tablet-min)) {\\n  .mobile-only { display: none !important; }\\n}\\n\\n/* Show/Hide on Tablet */\\n@media (max-width: var(--breakpoint-sm)) and (min-width: var(--breakpoint-tablet-min)) {\\n  .tablet-hidden { display: none !important; }\\n  .tablet-only { display: block !important; }\\n}\\n\\n@media (max-width: var(--breakpoint-xs)), (min-width: var(--breakpoint-desktop-min)) {\\n  .tablet-only { display: none !important; }\\n}\\n\\n/* Show/Hide on Desktop */\\n@media (min-width: var(--breakpoint-md)) {\\n  .desktop-hidden { display: none !important; }\\n  .desktop-only { display: block !important; }\\n}\\n\\n@media (max-width: calc(var(--breakpoint-md) - 1px)) {\\n  .desktop-only { display: none !important; }\\n}\\n\\n/* ===== ACCESSIBILITY UTILITIES ===== */\\n\\n/* Screen Reader Only */\\n.sr-only {\\n  position: absolute;\\n  width: 1px;\\n  height: 1px;\\n  padding: 0;\\n  margin: -1px;\\n  overflow: hidden;\\n  clip: rect(0, 0, 0, 0);\\n  white-space: nowrap;\\n  border: 0;\\n}\\n\\n.not-sr-only {\\n  position: static;\\n  width: auto;\\n  height: auto;\\n  padding: 0;\\n  margin: 0;\\n  overflow: visible;\\n  clip: auto;\\n  white-space: normal;\\n}\\n\\n/* Focus Utilities */\\n.focus-visible:focus-visible {\\n  outline: 2px solid var(--accent-primary);\\n  outline-offset: 2px;\\n}\\n\\n.focus-none:focus {\\n  outline: none;\\n}\\n\\n/* ===== PRINT UTILITIES ===== */\\n\\n@media print {\\n  .print-none { display: none !important; }\\n  .print-block { display: block !important; }\\n  .print-inline { display: inline !important; }\\n  .print-inline-block { display: inline-block !important; }\\n  .print-flex { display: flex !important; }\\n  .print-grid { display: grid !important; }\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://styles/utilities/spacing.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/* ============================= */\\n/* TRIANGLE INTELLIGENCE         */\\n/* Utility Classes               */\\n/* Spacing & Layout Utilities    */\\n/* ============================= */\\n\\n/**\\n * Utility Classes for Triangle Intelligence Platform\\n * \\n * This module contains utility classes for:\\n * - Spacing (margin, padding)\\n * - Display properties\\n * - Flexbox utilities\\n * - Grid utilities\\n * - Text utilities\\n * - Color utilities\\n * - Border utilities\\n * - Position utilities\\n * - Sizing utilities\\n * \\n * Based on modern utility-first CSS principles\\n */\\n\\n/* ===== SPACING UTILITIES ===== */\\n\\n/* Margin Utilities */\\n.m-0 { margin: 0; }\\n.m-1 { margin: var(--space-1); }\\n.m-2 { margin: var(--space-2); }\\n.m-3 { margin: var(--space-3); }\\n.m-4 { margin: var(--space-4); }\\n.m-5 { margin: var(--space-5); }\\n.m-6 { margin: var(--space-6); }\\n.m-8 { margin: var(--space-8); }\\n.m-10 { margin: var(--space-10); }\\n.m-12 { margin: var(--space-12); }\\n.m-16 { margin: var(--space-16); }\\n.m-20 { margin: var(--space-20); }\\n.m-24 { margin: var(--space-24); }\\n\\n/* Semantic Margin */\\n.m-xs { margin: var(--space-xs); }\\n.m-sm { margin: var(--space-sm); }\\n.m-md { margin: var(--space-md); }\\n.m-lg { margin: var(--space-lg); }\\n.m-xl { margin: var(--space-xl); }\\n.m-2xl { margin: var(--space-2xl); }\\n.m-3xl { margin: var(--space-3xl); }\\n\\n.m-auto { margin: auto; }\\n\\n/* Margin Top */\\n.mt-0 { margin-top: 0; }\\n.mt-1 { margin-top: var(--space-1); }\\n.mt-2 { margin-top: var(--space-2); }\\n.mt-3 { margin-top: var(--space-3); }\\n.mt-4 { margin-top: var(--space-4); }\\n.mt-5 { margin-top: var(--space-5); }\\n.mt-6 { margin-top: var(--space-6); }\\n.mt-8 { margin-top: var(--space-8); }\\n.mt-10 { margin-top: var(--space-10); }\\n.mt-12 { margin-top: var(--space-12); }\\n.mt-16 { margin-top: var(--space-16); }\\n.mt-20 { margin-top: var(--space-20); }\\n.mt-24 { margin-top: var(--space-24); }\\n\\n.mt-xs { margin-top: var(--space-xs); }\\n.mt-sm { margin-top: var(--space-sm); }\\n.mt-md { margin-top: var(--space-md); }\\n.mt-lg { margin-top: var(--space-lg); }\\n.mt-xl { margin-top: var(--space-xl); }\\n.mt-2xl { margin-top: var(--space-2xl); }\\n.mt-3xl { margin-top: var(--space-3xl); }\\n\\n.mt-auto { margin-top: auto; }\\n\\n/* Margin Right */\\n.mr-0 { margin-right: 0; }\\n.mr-1 { margin-right: var(--space-1); }\\n.mr-2 { margin-right: var(--space-2); }\\n.mr-3 { margin-right: var(--space-3); }\\n.mr-4 { margin-right: var(--space-4); }\\n.mr-5 { margin-right: var(--space-5); }\\n.mr-6 { margin-right: var(--space-6); }\\n.mr-8 { margin-right: var(--space-8); }\\n\\n.mr-xs { margin-right: var(--space-xs); }\\n.mr-sm { margin-right: var(--space-sm); }\\n.mr-md { margin-right: var(--space-md); }\\n.mr-lg { margin-right: var(--space-lg); }\\n.mr-xl { margin-right: var(--space-xl); }\\n\\n.mr-auto { margin-right: auto; }\\n\\n/* Margin Bottom */\\n.mb-0 { margin-bottom: 0; }\\n.mb-1 { margin-bottom: var(--space-1); }\\n.mb-2 { margin-bottom: var(--space-2); }\\n.mb-3 { margin-bottom: var(--space-3); }\\n.mb-4 { margin-bottom: var(--space-4); }\\n.mb-5 { margin-bottom: var(--space-5); }\\n.mb-6 { margin-bottom: var(--space-6); }\\n.mb-8 { margin-bottom: var(--space-8); }\\n.mb-10 { margin-bottom: var(--space-10); }\\n.mb-12 { margin-bottom: var(--space-12); }\\n.mb-16 { margin-bottom: var(--space-16); }\\n.mb-20 { margin-bottom: var(--space-20); }\\n.mb-24 { margin-bottom: var(--space-24); }\\n\\n.mb-xs { margin-bottom: var(--space-xs); }\\n.mb-sm { margin-bottom: var(--space-sm); }\\n.mb-md { margin-bottom: var(--space-md); }\\n.mb-lg { margin-bottom: var(--space-lg); }\\n.mb-xl { margin-bottom: var(--space-xl); }\\n.mb-2xl { margin-bottom: var(--space-2xl); }\\n.mb-3xl { margin-bottom: var(--space-3xl); }\\n\\n.mb-auto { margin-bottom: auto; }\\n\\n/* Margin Left */\\n.ml-0 { margin-left: 0; }\\n.ml-1 { margin-left: var(--space-1); }\\n.ml-2 { margin-left: var(--space-2); }\\n.ml-3 { margin-left: var(--space-3); }\\n.ml-4 { margin-left: var(--space-4); }\\n.ml-5 { margin-left: var(--space-5); }\\n.ml-6 { margin-left: var(--space-6); }\\n.ml-8 { margin-left: var(--space-8); }\\n\\n.ml-xs { margin-left: var(--space-xs); }\\n.ml-sm { margin-left: var(--space-sm); }\\n.ml-md { margin-left: var(--space-md); }\\n.ml-lg { margin-left: var(--space-lg); }\\n.ml-xl { margin-left: var(--space-xl); }\\n\\n.ml-auto { margin-left: auto; }\\n\\n/* Margin X (horizontal) */\\n.mx-0 { margin-left: 0; margin-right: 0; }\\n.mx-1 { margin-left: var(--space-1); margin-right: var(--space-1); }\\n.mx-2 { margin-left: var(--space-2); margin-right: var(--space-2); }\\n.mx-3 { margin-left: var(--space-3); margin-right: var(--space-3); }\\n.mx-4 { margin-left: var(--space-4); margin-right: var(--space-4); }\\n.mx-5 { margin-left: var(--space-5); margin-right: var(--space-5); }\\n.mx-6 { margin-left: var(--space-6); margin-right: var(--space-6); }\\n.mx-8 { margin-left: var(--space-8); margin-right: var(--space-8); }\\n\\n.mx-xs { margin-left: var(--space-xs); margin-right: var(--space-xs); }\\n.mx-sm { margin-left: var(--space-sm); margin-right: var(--space-sm); }\\n.mx-md { margin-left: var(--space-md); margin-right: var(--space-md); }\\n.mx-lg { margin-left: var(--space-lg); margin-right: var(--space-lg); }\\n.mx-xl { margin-left: var(--space-xl); margin-right: var(--space-xl); }\\n\\n.mx-auto { margin-left: auto; margin-right: auto; }\\n\\n/* Margin Y (vertical) */\\n.my-0 { margin-top: 0; margin-bottom: 0; }\\n.my-1 { margin-top: var(--space-1); margin-bottom: var(--space-1); }\\n.my-2 { margin-top: var(--space-2); margin-bottom: var(--space-2); }\\n.my-3 { margin-top: var(--space-3); margin-bottom: var(--space-3); }\\n.my-4 { margin-top: var(--space-4); margin-bottom: var(--space-4); }\\n.my-5 { margin-top: var(--space-5); margin-bottom: var(--space-5); }\\n.my-6 { margin-top: var(--space-6); margin-bottom: var(--space-6); }\\n.my-8 { margin-top: var(--space-8); margin-bottom: var(--space-8); }\\n\\n.my-xs { margin-top: var(--space-xs); margin-bottom: var(--space-xs); }\\n.my-sm { margin-top: var(--space-sm); margin-bottom: var(--space-sm); }\\n.my-md { margin-top: var(--space-md); margin-bottom: var(--space-md); }\\n.my-lg { margin-top: var(--space-lg); margin-bottom: var(--space-lg); }\\n.my-xl { margin-top: var(--space-xl); margin-bottom: var(--space-xl); }\\n\\n.my-auto { margin-top: auto; margin-bottom: auto; }\\n\\n/* Padding Utilities */\\n.p-0 { padding: 0; }\\n.p-1 { padding: var(--space-1); }\\n.p-2 { padding: var(--space-2); }\\n.p-3 { padding: var(--space-3); }\\n.p-4 { padding: var(--space-4); }\\n.p-5 { padding: var(--space-5); }\\n.p-6 { padding: var(--space-6); }\\n.p-8 { padding: var(--space-8); }\\n.p-10 { padding: var(--space-10); }\\n.p-12 { padding: var(--space-12); }\\n.p-16 { padding: var(--space-16); }\\n.p-20 { padding: var(--space-20); }\\n.p-24 { padding: var(--space-24); }\\n\\n.p-xs { padding: var(--space-xs); }\\n.p-sm { padding: var(--space-sm); }\\n.p-md { padding: var(--space-md); }\\n.p-lg { padding: var(--space-lg); }\\n.p-xl { padding: var(--space-xl); }\\n.p-2xl { padding: var(--space-2xl); }\\n.p-3xl { padding: var(--space-3xl); }\\n\\n/* Padding Top */\\n.pt-0 { padding-top: 0; }\\n.pt-1 { padding-top: var(--space-1); }\\n.pt-2 { padding-top: var(--space-2); }\\n.pt-3 { padding-top: var(--space-3); }\\n.pt-4 { padding-top: var(--space-4); }\\n.pt-5 { padding-top: var(--space-5); }\\n.pt-6 { padding-top: var(--space-6); }\\n.pt-8 { padding-top: var(--space-8); }\\n.pt-10 { padding-top: var(--space-10); }\\n.pt-12 { padding-top: var(--space-12); }\\n.pt-16 { padding-top: var(--space-16); }\\n\\n.pt-xs { padding-top: var(--space-xs); }\\n.pt-sm { padding-top: var(--space-sm); }\\n.pt-md { padding-top: var(--space-md); }\\n.pt-lg { padding-top: var(--space-lg); }\\n.pt-xl { padding-top: var(--space-xl); }\\n.pt-2xl { padding-top: var(--space-2xl); }\\n\\n/* Padding Right */\\n.pr-0 { padding-right: 0; }\\n.pr-1 { padding-right: var(--space-1); }\\n.pr-2 { padding-right: var(--space-2); }\\n.pr-3 { padding-right: var(--space-3); }\\n.pr-4 { padding-right: var(--space-4); }\\n.pr-5 { padding-right: var(--space-5); }\\n.pr-6 { padding-right: var(--space-6); }\\n.pr-8 { padding-right: var(--space-8); }\\n\\n.pr-xs { padding-right: var(--space-xs); }\\n.pr-sm { padding-right: var(--space-sm); }\\n.pr-md { padding-right: var(--space-md); }\\n.pr-lg { padding-right: var(--space-lg); }\\n.pr-xl { padding-right: var(--space-xl); }\\n\\n/* Padding Bottom */\\n.pb-0 { padding-bottom: 0; }\\n.pb-1 { padding-bottom: var(--space-1); }\\n.pb-2 { padding-bottom: var(--space-2); }\\n.pb-3 { padding-bottom: var(--space-3); }\\n.pb-4 { padding-bottom: var(--space-4); }\\n.pb-5 { padding-bottom: var(--space-5); }\\n.pb-6 { padding-bottom: var(--space-6); }\\n.pb-8 { padding-bottom: var(--space-8); }\\n.pb-10 { padding-bottom: var(--space-10); }\\n.pb-12 { padding-bottom: var(--space-12); }\\n.pb-16 { padding-bottom: var(--space-16); }\\n\\n.pb-xs { padding-bottom: var(--space-xs); }\\n.pb-sm { padding-bottom: var(--space-sm); }\\n.pb-md { padding-bottom: var(--space-md); }\\n.pb-lg { padding-bottom: var(--space-lg); }\\n.pb-xl { padding-bottom: var(--space-xl); }\\n.pb-2xl { padding-bottom: var(--space-2xl); }\\n\\n/* Padding Left */\\n.pl-0 { padding-left: 0; }\\n.pl-1 { padding-left: var(--space-1); }\\n.pl-2 { padding-left: var(--space-2); }\\n.pl-3 { padding-left: var(--space-3); }\\n.pl-4 { padding-left: var(--space-4); }\\n.pl-5 { padding-left: var(--space-5); }\\n.pl-6 { padding-left: var(--space-6); }\\n.pl-8 { padding-left: var(--space-8); }\\n\\n.pl-xs { padding-left: var(--space-xs); }\\n.pl-sm { padding-left: var(--space-sm); }\\n.pl-md { padding-left: var(--space-md); }\\n.pl-lg { padding-left: var(--space-lg); }\\n.pl-xl { padding-left: var(--space-xl); }\\n\\n/* Padding X (horizontal) */\\n.px-0 { padding-left: 0; padding-right: 0; }\\n.px-1 { padding-left: var(--space-1); padding-right: var(--space-1); }\\n.px-2 { padding-left: var(--space-2); padding-right: var(--space-2); }\\n.px-3 { padding-left: var(--space-3); padding-right: var(--space-3); }\\n.px-4 { padding-left: var(--space-4); padding-right: var(--space-4); }\\n.px-5 { padding-left: var(--space-5); padding-right: var(--space-5); }\\n.px-6 { padding-left: var(--space-6); padding-right: var(--space-6); }\\n.px-8 { padding-left: var(--space-8); padding-right: var(--space-8); }\\n\\n.px-xs { padding-left: var(--space-xs); padding-right: var(--space-xs); }\\n.px-sm { padding-left: var(--space-sm); padding-right: var(--space-sm); }\\n.px-md { padding-left: var(--space-md); padding-right: var(--space-md); }\\n.px-lg { padding-left: var(--space-lg); padding-right: var(--space-lg); }\\n.px-xl { padding-left: var(--space-xl); padding-right: var(--space-xl); }\\n\\n/* Padding Y (vertical) */\\n.py-0 { padding-top: 0; padding-bottom: 0; }\\n.py-1 { padding-top: var(--space-1); padding-bottom: var(--space-1); }\\n.py-2 { padding-top: var(--space-2); padding-bottom: var(--space-2); }\\n.py-3 { padding-top: var(--space-3); padding-bottom: var(--space-3); }\\n.py-4 { padding-top: var(--space-4); padding-bottom: var(--space-4); }\\n.py-5 { padding-top: var(--space-5); padding-bottom: var(--space-5); }\\n.py-6 { padding-top: var(--space-6); padding-bottom: var(--space-6); }\\n.py-8 { padding-top: var(--space-8); padding-bottom: var(--space-8); }\\n\\n.py-xs { padding-top: var(--space-xs); padding-bottom: var(--space-xs); }\\n.py-sm { padding-top: var(--space-sm); padding-bottom: var(--space-sm); }\\n.py-md { padding-top: var(--space-md); padding-bottom: var(--space-md); }\\n.py-lg { padding-top: var(--space-lg); padding-bottom: var(--space-lg); }\\n.py-xl { padding-top: var(--space-xl); padding-bottom: var(--space-xl); }\\n\\n/* ===== DISPLAY UTILITIES ===== */\\n\\n.d-none { display: none; }\\n.d-block { display: block; }\\n.d-inline { display: inline; }\\n.d-inline-block { display: inline-block; }\\n.d-flex { display: flex; }\\n.d-inline-flex { display: inline-flex; }\\n.d-grid { display: grid; }\\n.d-inline-grid { display: inline-grid; }\\n.d-table { display: table; }\\n.d-table-cell { display: table-cell; }\\n.d-table-row { display: table-row; }\\n\\n/* ===== FLEXBOX UTILITIES ===== */\\n\\n/* Flex Direction */\\n.flex-row { flex-direction: row; }\\n.flex-row-reverse { flex-direction: row-reverse; }\\n.flex-col { flex-direction: column; }\\n.flex-col-reverse { flex-direction: column-reverse; }\\n\\n/* Flex Wrap */\\n.flex-wrap { flex-wrap: wrap; }\\n.flex-wrap-reverse { flex-wrap: wrap-reverse; }\\n.flex-nowrap { flex-wrap: nowrap; }\\n\\n/* Justify Content */\\n.justify-start { justify-content: flex-start; }\\n.justify-end { justify-content: flex-end; }\\n.justify-center { justify-content: center; }\\n.justify-between { justify-content: space-between; }\\n.justify-around { justify-content: space-around; }\\n.justify-evenly { justify-content: space-evenly; }\\n\\n/* Align Items */\\n.items-start { align-items: flex-start; }\\n.items-end { align-items: flex-end; }\\n.items-center { align-items: center; }\\n.items-baseline { align-items: baseline; }\\n.items-stretch { align-items: stretch; }\\n\\n/* Align Content */\\n.content-start { align-content: flex-start; }\\n.content-end { align-content: flex-end; }\\n.content-center { align-content: center; }\\n.content-between { align-content: space-between; }\\n.content-around { align-content: space-around; }\\n.content-evenly { align-content: space-evenly; }\\n\\n/* Align Self */\\n.self-auto { align-self: auto; }\\n.self-start { align-self: flex-start; }\\n.self-end { align-self: flex-end; }\\n.self-center { align-self: center; }\\n.self-stretch { align-self: stretch; }\\n\\n/* Flex Properties */\\n.flex-1 { flex: 1 1 0%; }\\n.flex-auto { flex: 1 1 auto; }\\n.flex-initial { flex: 0 1 auto; }\\n.flex-none { flex: none; }\\n\\n.flex-grow-0 { flex-grow: 0; }\\n.flex-grow { flex-grow: 1; }\\n\\n.flex-shrink-0 { flex-shrink: 0; }\\n.flex-shrink { flex-shrink: 1; }\\n\\n/* Gap */\\n.gap-0 { gap: 0; }\\n.gap-1 { gap: var(--space-1); }\\n.gap-2 { gap: var(--space-2); }\\n.gap-3 { gap: var(--space-3); }\\n.gap-4 { gap: var(--space-4); }\\n.gap-5 { gap: var(--space-5); }\\n.gap-6 { gap: var(--space-6); }\\n.gap-8 { gap: var(--space-8); }\\n\\n.gap-xs { gap: var(--space-xs); }\\n.gap-sm { gap: var(--space-sm); }\\n.gap-md { gap: var(--space-md); }\\n.gap-lg { gap: var(--space-lg); }\\n.gap-xl { gap: var(--space-xl); }\\n\\n/* ===== GRID UTILITIES ===== */\\n\\n/* Grid Template Columns */\\n.grid-cols-1 { grid-template-columns: repeat(1, minmax(0, 1fr)); }\\n.grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)); }\\n.grid-cols-3 { grid-template-columns: repeat(3, minmax(0, 1fr)); }\\n.grid-cols-4 { grid-template-columns: repeat(4, minmax(0, 1fr)); }\\n.grid-cols-5 { grid-template-columns: repeat(5, minmax(0, 1fr)); }\\n.grid-cols-6 { grid-template-columns: repeat(6, minmax(0, 1fr)); }\\n.grid-cols-12 { grid-template-columns: repeat(12, minmax(0, 1fr)); }\\n\\n.grid-cols-none { grid-template-columns: none; }\\n.grid-cols-auto { grid-template-columns: auto; }\\n\\n/* Grid Column Span */\\n.col-auto { grid-column: auto; }\\n.col-span-1 { grid-column: span 1 / span 1; }\\n.col-span-2 { grid-column: span 2 / span 2; }\\n.col-span-3 { grid-column: span 3 / span 3; }\\n.col-span-4 { grid-column: span 4 / span 4; }\\n.col-span-5 { grid-column: span 5 / span 5; }\\n.col-span-6 { grid-column: span 6 / span 6; }\\n.col-span-full { grid-column: 1 / -1; }\\n\\n/* Grid Template Rows */\\n.grid-rows-1 { grid-template-rows: repeat(1, minmax(0, 1fr)); }\\n.grid-rows-2 { grid-template-rows: repeat(2, minmax(0, 1fr)); }\\n.grid-rows-3 { grid-template-rows: repeat(3, minmax(0, 1fr)); }\\n.grid-rows-4 { grid-template-rows: repeat(4, minmax(0, 1fr)); }\\n.grid-rows-5 { grid-template-rows: repeat(5, minmax(0, 1fr)); }\\n.grid-rows-6 { grid-template-rows: repeat(6, minmax(0, 1fr)); }\\n\\n/* Grid Row Span */\\n.row-auto { grid-row: auto; }\\n.row-span-1 { grid-row: span 1 / span 1; }\\n.row-span-2 { grid-row: span 2 / span 2; }\\n.row-span-3 { grid-row: span 3 / span 3; }\\n.row-span-4 { grid-row: span 4 / span 4; }\\n.row-span-5 { grid-row: span 5 / span 5; }\\n.row-span-6 { grid-row: span 6 / span 6; }\\n.row-span-full { grid-row: 1 / -1; }\\n\\n/* ===== TYPOGRAPHY UTILITIES ===== */\\n\\n/* Font Size */\\n.text-xs { font-size: var(--text-xs); }\\n.text-sm { font-size: var(--text-sm); }\\n.text-base { font-size: var(--text-base); }\\n.text-lg { font-size: var(--text-lg); }\\n.text-xl { font-size: var(--text-xl); }\\n.text-2xl { font-size: var(--text-2xl); }\\n.text-3xl { font-size: var(--text-3xl); }\\n.text-4xl { font-size: var(--text-4xl); }\\n\\n/* Font Weight */\\n.font-light { font-weight: var(--font-light); }\\n.font-normal { font-weight: var(--font-normal); }\\n.font-medium { font-weight: var(--font-medium); }\\n.font-semibold { font-weight: var(--font-semibold); }\\n.font-bold { font-weight: var(--font-bold); }\\n\\n/* Font Family */\\n.font-primary { font-family: var(--font-primary); }\\n.font-mono { font-family: var(--font-mono); }\\n.font-data { font-family: var(--font-data); }\\n\\n/* Text Alignment */\\n.text-left { text-align: left; }\\n.text-center { text-align: center; }\\n.text-right { text-align: right; }\\n.text-justify { text-align: justify; }\\n\\n/* Text Transform */\\n.uppercase { text-transform: uppercase; }\\n.lowercase { text-transform: lowercase; }\\n.capitalize { text-transform: capitalize; }\\n.normal-case { text-transform: none; }\\n\\n/* Line Height */\\n.leading-tight { line-height: var(--leading-tight); }\\n.leading-normal { line-height: var(--leading-normal); }\\n.leading-relaxed { line-height: var(--leading-relaxed); }\\n\\n/* Letter Spacing */\\n.tracking-tight { letter-spacing: var(--tracking-tight); }\\n.tracking-normal { letter-spacing: var(--tracking-normal); }\\n.tracking-wide { letter-spacing: var(--tracking-wide); }\\n.tracking-wider { letter-spacing: var(--tracking-wider); }\\n\\n/* ===== COLOR UTILITIES ===== */\\n\\n/* Text Colors */\\n.text-primary { color: var(--text-primary); }\\n.text-secondary { color: var(--text-secondary); }\\n.text-muted { color: var(--text-muted); }\\n.text-disabled { color: var(--text-disabled); }\\n\\n.text-accent { color: var(--accent-primary); }\\n.text-success { color: var(--status-success); }\\n.text-warning { color: var(--status-warning); }\\n.text-error { color: var(--status-error); }\\n.text-info { color: var(--status-info); }\\n\\n.text-white { color: white; }\\n.text-black { color: black; }\\n\\n/* Background Colors */\\n.bg-primary { background-color: var(--bg-primary); }\\n.bg-secondary { background-color: var(--bg-secondary); }\\n.bg-tertiary { background-color: var(--bg-tertiary); }\\n\\n.bg-accent { background-color: var(--accent-primary); }\\n.bg-success { background-color: var(--status-success); }\\n.bg-warning { background-color: var(--status-warning); }\\n.bg-error { background-color: var(--status-error); }\\n.bg-info { background-color: var(--status-info); }\\n\\n.bg-transparent { background-color: transparent; }\\n.bg-white { background-color: white; }\\n.bg-black { background-color: black; }\\n\\n/* ===== BORDER UTILITIES ===== */\\n\\n/* Border Width */\\n.border-0 { border-width: 0; }\\n.border { border-width: var(--border-1); }\\n.border-2 { border-width: var(--border-2); }\\n.border-4 { border-width: var(--border-4); }\\n\\n.border-t-0 { border-top-width: 0; }\\n.border-t { border-top-width: var(--border-1); }\\n.border-t-2 { border-top-width: var(--border-2); }\\n\\n.border-r-0 { border-right-width: 0; }\\n.border-r { border-right-width: var(--border-1); }\\n.border-r-2 { border-right-width: var(--border-2); }\\n\\n.border-b-0 { border-bottom-width: 0; }\\n.border-b { border-bottom-width: var(--border-1); }\\n.border-b-2 { border-bottom-width: var(--border-2); }\\n\\n.border-l-0 { border-left-width: 0; }\\n.border-l { border-left-width: var(--border-1); }\\n.border-l-2 { border-left-width: var(--border-2); }\\n\\n/* Border Style */\\n.border-solid { border-style: solid; }\\n.border-dashed { border-style: dashed; }\\n.border-dotted { border-style: dotted; }\\n.border-double { border-style: double; }\\n.border-none { border-style: none; }\\n\\n/* Border Color */\\n.border-primary { border-color: var(--bloomberg-gray-700); }\\n.border-secondary { border-color: var(--bloomberg-gray-600); }\\n.border-accent { border-color: var(--accent-primary); }\\n.border-success { border-color: var(--status-success); }\\n.border-warning { border-color: var(--status-warning); }\\n.border-error { border-color: var(--status-error); }\\n.border-info { border-color: var(--status-info); }\\n\\n/* Border Radius */\\n.rounded-none { border-radius: var(--radius-none); }\\n.rounded-sm { border-radius: var(--radius-sm); }\\n.rounded { border-radius: var(--radius-md); }\\n.rounded-md { border-radius: var(--radius-md); }\\n.rounded-lg { border-radius: var(--radius-lg); }\\n.rounded-xl { border-radius: var(--radius-xl); }\\n.rounded-2xl { border-radius: var(--radius-2xl); }\\n.rounded-full { border-radius: var(--radius-full); }\\n\\n/* ===== POSITION UTILITIES ===== */\\n\\n.static { position: static; }\\n.fixed { position: fixed; }\\n.absolute { position: absolute; }\\n.relative { position: relative; }\\n.sticky { position: sticky; }\\n\\n.inset-0 { top: 0; right: 0; bottom: 0; left: 0; }\\n.inset-x-0 { left: 0; right: 0; }\\n.inset-y-0 { top: 0; bottom: 0; }\\n\\n.top-0 { top: 0; }\\n.right-0 { right: 0; }\\n.bottom-0 { bottom: 0; }\\n.left-0 { left: 0; }\\n\\n.top-auto { top: auto; }\\n.right-auto { right: auto; }\\n.bottom-auto { bottom: auto; }\\n.left-auto { left: auto; }\\n\\n/* ===== SIZING UTILITIES ===== */\\n\\n/* Width */\\n.w-0 { width: 0; }\\n.w-1 { width: var(--space-1); }\\n.w-2 { width: var(--space-2); }\\n.w-3 { width: var(--space-3); }\\n.w-4 { width: var(--space-4); }\\n.w-5 { width: var(--space-5); }\\n.w-6 { width: var(--space-6); }\\n.w-8 { width: var(--space-8); }\\n.w-10 { width: var(--space-10); }\\n.w-12 { width: var(--space-12); }\\n\\n.w-auto { width: auto; }\\n.w-px { width: 1px; }\\n.w-0-5 { width: 0.125rem; }\\n.w-full { width: 100%; }\\n.w-screen { width: 100vw; }\\n.w-min { width: min-content; }\\n.w-max { width: max-content; }\\n\\n/* Height */\\n.h-0 { height: 0; }\\n.h-1 { height: var(--space-1); }\\n.h-2 { height: var(--space-2); }\\n.h-3 { height: var(--space-3); }\\n.h-4 { height: var(--space-4); }\\n.h-5 { height: var(--space-5); }\\n.h-6 { height: var(--space-6); }\\n.h-8 { height: var(--space-8); }\\n.h-10 { height: var(--space-10); }\\n.h-12 { height: var(--space-12); }\\n\\n.h-auto { height: auto; }\\n.h-px { height: 1px; }\\n.h-0-5 { height: 0.125rem; }\\n.h-full { height: 100%; }\\n.h-screen { height: 100vh; }\\n\\n/* Min/Max Width */\\n.min-w-0 { min-width: 0; }\\n.min-w-full { min-width: 100%; }\\n.min-w-min { min-width: min-content; }\\n.min-w-max { min-width: max-content; }\\n\\n.max-w-0 { max-width: 0; }\\n.max-w-xs { max-width: 20rem; }\\n.max-w-sm { max-width: 24rem; }\\n.max-w-md { max-width: 28rem; }\\n.max-w-lg { max-width: 32rem; }\\n.max-w-xl { max-width: 36rem; }\\n.max-w-2xl { max-width: 42rem; }\\n.max-w-3xl { max-width: 48rem; }\\n.max-w-4xl { max-width: 56rem; }\\n.max-w-5xl { max-width: 64rem; }\\n.max-w-6xl { max-width: 72rem; }\\n.max-w-7xl { max-width: 80rem; }\\n.max-w-full { max-width: 100%; }\\n.max-w-min { max-width: min-content; }\\n.max-w-max { max-width: max-content; }\\n.max-w-none { max-width: none; }\\n\\n/* Min/Max Height */\\n.min-h-0 { min-height: 0; }\\n.min-h-full { min-height: 100%; }\\n.min-h-screen { min-height: 100vh; }\\n\\n.max-h-0 { max-height: 0; }\\n.max-h-full { max-height: 100%; }\\n.max-h-screen { max-height: 100vh; }\\n\\n/* ===== MISCELLANEOUS UTILITIES ===== */\\n\\n/* Overflow */\\n.overflow-auto { overflow: auto; }\\n.overflow-hidden { overflow: hidden; }\\n.overflow-visible { overflow: visible; }\\n.overflow-scroll { overflow: scroll; }\\n\\n.overflow-x-auto { overflow-x: auto; }\\n.overflow-x-hidden { overflow-x: hidden; }\\n.overflow-x-scroll { overflow-x: scroll; }\\n\\n.overflow-y-auto { overflow-y: auto; }\\n.overflow-y-hidden { overflow-y: hidden; }\\n.overflow-y-scroll { overflow-y: scroll; }\\n\\n/* Z-Index */\\n.z-0 { z-index: var(--z-0); }\\n.z-10 { z-index: var(--z-10); }\\n.z-20 { z-index: var(--z-20); }\\n.z-30 { z-index: var(--z-30); }\\n.z-40 { z-index: var(--z-40); }\\n.z-50 { z-index: var(--z-50); }\\n.z-auto { z-index: var(--z-auto); }\\n\\n/* Shadow */\\n.shadow-none { box-shadow: none; }\\n.shadow-sm { box-shadow: var(--shadow-sm); }\\n.shadow { box-shadow: var(--shadow-md); }\\n.shadow-md { box-shadow: var(--shadow-md); }\\n.shadow-lg { box-shadow: var(--shadow-lg); }\\n.shadow-xl { box-shadow: var(--shadow-xl); }\\n.shadow-2xl { box-shadow: var(--shadow-2xl); }\\n\\n/* Cursor */\\n.cursor-auto { cursor: auto; }\\n.cursor-default { cursor: default; }\\n.cursor-pointer { cursor: pointer; }\\n.cursor-wait { cursor: wait; }\\n.cursor-text { cursor: text; }\\n.cursor-move { cursor: move; }\\n.cursor-help { cursor: help; }\\n.cursor-not-allowed { cursor: not-allowed; }\\n\\n/* User Select */\\n.select-none { user-select: none; }\\n.select-text { user-select: text; }\\n.select-all { user-select: all; }\\n.select-auto { user-select: auto; }\\n\\n/* Pointer Events */\\n.pointer-events-none { pointer-events: none; }\\n.pointer-events-auto { pointer-events: auto; }\\n\\n/* ===== RESPONSIVE UTILITIES ===== */\\n\\n/* Show/Hide on Mobile */\\n@media (max-width: var(--breakpoint-xs)) {\\n  .mobile-hidden { display: none !important; }\\n  .mobile-only { display: block !important; }\\n}\\n\\n@media (min-width: var(--breakpoint-tablet-min)) {\\n  .mobile-only { display: none !important; }\\n}\\n\\n/* Show/Hide on Tablet */\\n@media (max-width: var(--breakpoint-sm)) and (min-width: var(--breakpoint-tablet-min)) {\\n  .tablet-hidden { display: none !important; }\\n  .tablet-only { display: block !important; }\\n}\\n\\n@media (max-width: var(--breakpoint-xs)), (min-width: var(--breakpoint-desktop-min)) {\\n  .tablet-only { display: none !important; }\\n}\\n\\n/* Show/Hide on Desktop */\\n@media (min-width: var(--breakpoint-md)) {\\n  .desktop-hidden { display: none !important; }\\n  .desktop-only { display: block !important; }\\n}\\n\\n@media (max-width: calc(var(--breakpoint-md) - 1px)) {\\n  .desktop-only { display: none !important; }\\n}\\n\\n/* ===== ACCESSIBILITY UTILITIES ===== */\\n\\n/* Screen Reader Only */\\n.sr-only {\\n  position: absolute;\\n  width: 1px;\\n  height: 1px;\\n  padding: 0;\\n  margin: -1px;\\n  overflow: hidden;\\n  clip: rect(0, 0, 0, 0);\\n  white-space: nowrap;\\n  border: 0;\\n}\\n\\n.not-sr-only {\\n  position: static;\\n  width: auto;\\n  height: auto;\\n  padding: 0;\\n  margin: 0;\\n  overflow: visible;\\n  clip: auto;\\n  white-space: normal;\\n}\\n\\n/* Focus Utilities */\\n.focus-visible:focus-visible {\\n  outline: 2px solid var(--accent-primary);\\n  outline-offset: 2px;\\n}\\n\\n.focus-none:focus {\\n  outline: none;\\n}\\n\\n/* ===== PRINT UTILITIES ===== */\\n\\n@media print {\\n  .print-none { display: none !important; }\\n  .print-block { display: block !important; }\\n  .print-inline { display: inline !important; }\\n  .print-inline-block { display: inline-block !important; }\\n  .print-flex { display: flex !important; }\\n  .print-grid { display: grid !important; }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/utilities/spacing.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js ***!
  \************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/ // css base code, injected by the css-loader\n// eslint-disable-next-line func-names\n\nmodule.exports = function(useSourceMap) {\n    var list = [] // return the list of modules as css string\n    ;\n    list.toString = function toString() {\n        return this.map(function(item) {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            var content = cssWithMappingToString(item, useSourceMap);\n            if (item[2]) {\n                return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n            }\n            return content;\n        }).join(\"\");\n    } // import a list of modules into the list\n    ;\n    // eslint-disable-next-line func-names\n    // @ts-expect-error TODO: fix type\n    list.i = function(modules, mediaQuery, dedupe) {\n        if (typeof modules === \"string\") {\n            // eslint-disable-next-line no-param-reassign\n            modules = [\n                [\n                    null,\n                    modules,\n                    \"\"\n                ]\n            ];\n        }\n        var alreadyImportedModules = {};\n        if (dedupe) {\n            for(var i = 0; i < this.length; i++){\n                // eslint-disable-next-line prefer-destructuring\n                var id = this[i][0];\n                if (id != null) {\n                    alreadyImportedModules[id] = true;\n                }\n            }\n        }\n        for(var _i = 0; _i < modules.length; _i++){\n            var item = [].concat(modules[_i]);\n            if (dedupe && alreadyImportedModules[item[0]]) {\n                continue;\n            }\n            if (mediaQuery) {\n                if (!item[2]) {\n                    item[2] = mediaQuery;\n                } else {\n                    item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n                }\n            }\n            list.push(item);\n        }\n    };\n    return list;\n};\nfunction cssWithMappingToString(item, useSourceMap) {\n    var content = item[1] || \"\" // eslint-disable-next-line prefer-destructuring\n    ;\n    var cssMapping = item[3];\n    if (!cssMapping) {\n        return content;\n    }\n    if (useSourceMap && typeof btoa === \"function\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        var sourceMapping = toComment(cssMapping);\n        var sourceURLs = cssMapping.sources.map(function(source) {\n            return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n        });\n        return [\n            content\n        ].concat(sourceURLs).concat([\n            sourceMapping\n        ]).join(\"\\n\");\n    }\n    return [\n        content\n    ].join(\"\\n\");\n} // Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    return \"/*# \".concat(data, \" */\");\n}\n\n//# sourceMappingURL=api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9ydW50aW1lL2FwaS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELHFCQUFxQjtBQUN6RTtBQUNBO0FBQ0EsU0FBUztBQUNULE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixpQkFBaUI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IscUJBQXFCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCxjQUFjO0FBQ3JFO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvcnVudGltZS9hcGkuanM/Y2E0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qLyAvLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcblwidXNlIHN0cmljdFwiO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih1c2VTb3VyY2VNYXApIHtcbiAgICB2YXIgbGlzdCA9IFtdIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgICA7XG4gICAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oaXRlbSkge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11c2UtYmVmb3JlLWRlZmluZVxuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG4gICAgICAgICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoY29udGVudCwgXCJ9XCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgICAgIH0pLmpvaW4oXCJcIik7XG4gICAgfSAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAgIDtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgVE9ETzogZml4IHR5cGVcbiAgICBsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5LCBkZWR1cGUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgICAgICAgIG1vZHVsZXMgPSBbXG4gICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb2R1bGVzLFxuICAgICAgICAgICAgICAgICAgICBcIlwiXG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgXTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgICAgICBpZiAoZGVkdXBlKSB7XG4gICAgICAgICAgICBmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKyl7XG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICAgICAgICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcbiAgICAgICAgICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvcih2YXIgX2kgPSAwOyBfaSA8IG1vZHVsZXMubGVuZ3RoOyBfaSsrKXtcbiAgICAgICAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2ldKTtcbiAgICAgICAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG1lZGlhUXVlcnkpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICAgICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaXRlbVsyXSA9IFwiXCIuY29uY2F0KG1lZGlhUXVlcnksIFwiIGFuZCBcIikuY29uY2F0KGl0ZW1bMl0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIGxpc3Q7XG59O1xuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcbiAgICB2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgXCJcIiAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICA7XG4gICAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICAgIGlmICghY3NzTWFwcGluZykge1xuICAgICAgICByZXR1cm4gY29udGVudDtcbiAgICB9XG4gICAgaWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdXNlLWJlZm9yZS1kZWZpbmVcbiAgICAgICAgdmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG4gICAgICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbihzb3VyY2UpIHtcbiAgICAgICAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBjb250ZW50XG4gICAgICAgIF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbXG4gICAgICAgICAgICBzb3VyY2VNYXBwaW5nXG4gICAgICAgIF0pLmpvaW4oXCJcXG5cIik7XG4gICAgfVxuICAgIHJldHVybiBbXG4gICAgICAgIGNvbnRlbnRcbiAgICBdLmpvaW4oXCJcXG5cIik7XG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgcmV0dXJuIFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\n"));

/***/ }),

/***/ "__barrel_optimize__?names=BarChart3,DollarSign,Globe,Loader,MessageCircle,Send,Target,Users,X!=!./node_modules/lucide-react/dist/esm/lucide-react.js":
/*!************************************************************************************************************************************************************!*\
  !*** __barrel_optimize__?names=BarChart3,DollarSign,Globe,Loader,MessageCircle,Send,Target,Users,X!=!./node_modules/lucide-react/dist/esm/lucide-react.js ***!
  \************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BarChart3: function() { return /* reexport safe */ _icons_chart_column_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; },\n/* harmony export */   DollarSign: function() { return /* reexport safe */ _icons_dollar_sign_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; },\n/* harmony export */   Globe: function() { return /* reexport safe */ _icons_globe_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; },\n/* harmony export */   Loader: function() { return /* reexport safe */ _icons_loader_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; },\n/* harmony export */   MessageCircle: function() { return /* reexport safe */ _icons_message_circle_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]; },\n/* harmony export */   Send: function() { return /* reexport safe */ _icons_send_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]; },\n/* harmony export */   Target: function() { return /* reexport safe */ _icons_target_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]; },\n/* harmony export */   Users: function() { return /* reexport safe */ _icons_users_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]; },\n/* harmony export */   X: function() { return /* reexport safe */ _icons_x_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _icons_chart_column_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./icons/chart-column.js */ \"./node_modules/lucide-react/dist/esm/icons/chart-column.js\");\n/* harmony import */ var _icons_dollar_sign_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./icons/dollar-sign.js */ \"./node_modules/lucide-react/dist/esm/icons/dollar-sign.js\");\n/* harmony import */ var _icons_globe_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./icons/globe.js */ \"./node_modules/lucide-react/dist/esm/icons/globe.js\");\n/* harmony import */ var _icons_loader_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./icons/loader.js */ \"./node_modules/lucide-react/dist/esm/icons/loader.js\");\n/* harmony import */ var _icons_message_circle_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./icons/message-circle.js */ \"./node_modules/lucide-react/dist/esm/icons/message-circle.js\");\n/* harmony import */ var _icons_send_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./icons/send.js */ \"./node_modules/lucide-react/dist/esm/icons/send.js\");\n/* harmony import */ var _icons_target_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./icons/target.js */ \"./node_modules/lucide-react/dist/esm/icons/target.js\");\n/* harmony import */ var _icons_users_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./icons/users.js */ \"./node_modules/lucide-react/dist/esm/icons/users.js\");\n/* harmony import */ var _icons_x_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./icons/x.js */ \"./node_modules/lucide-react/dist/esm/icons/x.js\");\n/**\n * @license lucide-react v0.539.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiX19iYXJyZWxfb3B0aW1pemVfXz9uYW1lcz1CYXJDaGFydDMsRG9sbGFyU2lnbixHbG9iZSxMb2FkZXIsTWVzc2FnZUNpcmNsZSxTZW5kLFRhcmdldCxVc2VycyxYIT0hLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2x1Y2lkZS1yZWFjdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDOEQ7QUFDQTtBQUNYO0FBQ0U7QUFDZTtBQUNuQjtBQUNJO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2x1Y2lkZS1yZWFjdC9kaXN0L2VzbS9sdWNpZGUtcmVhY3QuanM/ZjMzYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC41MzkuMCAtIElTQ1xuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLlxuICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi8gXG5leHBvcnQgeyBkZWZhdWx0IGFzIEJhckNoYXJ0MyB9IGZyb20gXCIuL2ljb25zL2NoYXJ0LWNvbHVtbi5qc1wiXG5leHBvcnQgeyBkZWZhdWx0IGFzIERvbGxhclNpZ24gfSBmcm9tIFwiLi9pY29ucy9kb2xsYXItc2lnbi5qc1wiXG5leHBvcnQgeyBkZWZhdWx0IGFzIEdsb2JlIH0gZnJvbSBcIi4vaWNvbnMvZ2xvYmUuanNcIlxuZXhwb3J0IHsgZGVmYXVsdCBhcyBMb2FkZXIgfSBmcm9tIFwiLi9pY29ucy9sb2FkZXIuanNcIlxuZXhwb3J0IHsgZGVmYXVsdCBhcyBNZXNzYWdlQ2lyY2xlIH0gZnJvbSBcIi4vaWNvbnMvbWVzc2FnZS1jaXJjbGUuanNcIlxuZXhwb3J0IHsgZGVmYXVsdCBhcyBTZW5kIH0gZnJvbSBcIi4vaWNvbnMvc2VuZC5qc1wiXG5leHBvcnQgeyBkZWZhdWx0IGFzIFRhcmdldCB9IGZyb20gXCIuL2ljb25zL3RhcmdldC5qc1wiXG5leHBvcnQgeyBkZWZhdWx0IGFzIFVzZXJzIH0gZnJvbSBcIi4vaWNvbnMvdXNlcnMuanNcIlxuZXhwb3J0IHsgZGVmYXVsdCBhcyBYIH0gZnJvbSBcIi4vaWNvbnMveC5qc1wiIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///__barrel_optimize__?names=BarChart3,DollarSign,Globe,Loader,MessageCircle,Send,Target,Users,X!=!./node_modules/lucide-react/dist/esm/lucide-react.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app! ***!
  \*******************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return __webpack_require__(/*! private-next-pages/_app */ \"./pages/_app.js\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_app\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD1wcml2YXRlLW5leHQtcGFnZXMlMkZfYXBwJnBhZ2U9JTJGX2FwcCEiLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxnREFBeUI7QUFDaEQ7QUFDQTtBQUNBLE9BQU8sSUFBVTtBQUNqQixNQUFNLFVBQVU7QUFDaEI7QUFDQSxPQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzY3ODIiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgKHdpbmRvdy5fX05FWFRfUCA9IHdpbmRvdy5fX05FWFRfUCB8fCBbXSkucHVzaChbXG4gICAgICBcIi9fYXBwXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwicHJpdmF0ZS1uZXh0LXBhZ2VzL19hcHBcIik7XG4gICAgICB9XG4gICAgXSk7XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgd2luZG93Ll9fTkVYVF9QLnB1c2goW1wiL19hcHBcIl0pXG4gICAgICB9KTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!\n"));

/***/ }),

/***/ "./styles/globals.css":
/*!****************************!*\
  !*** ./styles/globals.css ***!
  \****************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var api = __webpack_require__(/*! !../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./globals.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/globals.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\n                    // By default, style-loader injects CSS into the bottom\n                    // of <head>. This causes ordering problems between dev\n                    // and prod. To fix this, we render a <noscript> tag as\n                    // an anchor for the styles to be placed before. These\n                    // styles will be applied _before_ <style jsx global>.\n                    // These elements should always exist. If they do not,\n                    // this code should fail.\n                    var anchorElement = document.querySelector(\"#__next_css__DO_NOT_USE__\");\n                    var parentNode = anchorElement.parentNode// Normally <head>\n                    ;\n                    // Each style tag should be placed right before our\n                    // anchor. By inserting before and not after, we do not\n                    // need to track the last inserted element.\n                    parentNode.insertBefore(element, anchorElement);\n                };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n    if (!a && b || a && !b) {\n        return false;\n    }\n    let p;\n    for(p in a){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (a[p] !== b[p]) {\n            return false;\n        }\n    }\n    for(p in b){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (!a[p]) {\n            return false;\n        }\n    }\n    return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./globals.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/globals.css\",\n      function () {\n        content = __webpack_require__(/*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./globals.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[13].use[2]!./styles/globals.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdHlsZXMvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6IkFBQUEsVUFBVSxtQkFBTyxDQUFDLG9OQUF3RztBQUMxSCwwQkFBMEIsbUJBQU8sQ0FBQywyZUFBaVA7O0FBRW5SOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7QUFHQSxJQUFJLElBQVU7QUFDZCx5QkFBeUIsVUFBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSSxpQkFBaUI7QUFDckIsTUFBTSwyZUFBaVA7QUFDdlA7QUFDQSxrQkFBa0IsbUJBQU8sQ0FBQywyZUFBaVA7O0FBRTNROztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdCQUFnQixVQUFVOztBQUUxQjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEVBQUUsVUFBVTtBQUNaO0FBQ0EsR0FBRztBQUNIOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3N0eWxlcy9nbG9iYWxzLmNzcz9lMTJmIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBhcGkgPSByZXF1aXJlKFwiIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtc3R5bGUtbG9hZGVyL3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s3XS5vbmVPZlsxM10udXNlWzFdIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s3XS5vbmVPZlsxM10udXNlWzJdIS4vZ2xvYmFscy5jc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEJ5IGRlZmF1bHQsIHN0eWxlLWxvYWRlciBpbmplY3RzIENTUyBpbnRvIHRoZSBib3R0b21cbiAgICAgICAgICAgICAgICAgICAgLy8gb2YgPGhlYWQ+LiBUaGlzIGNhdXNlcyBvcmRlcmluZyBwcm9ibGVtcyBiZXR3ZWVuIGRldlxuICAgICAgICAgICAgICAgICAgICAvLyBhbmQgcHJvZC4gVG8gZml4IHRoaXMsIHdlIHJlbmRlciBhIDxub3NjcmlwdD4gdGFnIGFzXG4gICAgICAgICAgICAgICAgICAgIC8vIGFuIGFuY2hvciBmb3IgdGhlIHN0eWxlcyB0byBiZSBwbGFjZWQgYmVmb3JlLiBUaGVzZVxuICAgICAgICAgICAgICAgICAgICAvLyBzdHlsZXMgd2lsbCBiZSBhcHBsaWVkIF9iZWZvcmVfIDxzdHlsZSBqc3ggZ2xvYmFsPi5cbiAgICAgICAgICAgICAgICAgICAgLy8gVGhlc2UgZWxlbWVudHMgc2hvdWxkIGFsd2F5cyBleGlzdC4gSWYgdGhleSBkbyBub3QsXG4gICAgICAgICAgICAgICAgICAgIC8vIHRoaXMgY29kZSBzaG91bGQgZmFpbC5cbiAgICAgICAgICAgICAgICAgICAgdmFyIGFuY2hvckVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI19fbmV4dF9jc3NfX0RPX05PVF9VU0VfX1wiKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBhcmVudE5vZGUgPSBhbmNob3JFbGVtZW50LnBhcmVudE5vZGUvLyBOb3JtYWxseSA8aGVhZD5cbiAgICAgICAgICAgICAgICAgICAgO1xuICAgICAgICAgICAgICAgICAgICAvLyBFYWNoIHN0eWxlIHRhZyBzaG91bGQgYmUgcGxhY2VkIHJpZ2h0IGJlZm9yZSBvdXJcbiAgICAgICAgICAgICAgICAgICAgLy8gYW5jaG9yLiBCeSBpbnNlcnRpbmcgYmVmb3JlIGFuZCBub3QgYWZ0ZXIsIHdlIGRvIG5vdFxuICAgICAgICAgICAgICAgICAgICAvLyBuZWVkIHRvIHRyYWNrIHRoZSBsYXN0IGluc2VydGVkIGVsZW1lbnQuXG4gICAgICAgICAgICAgICAgICAgIHBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGVsZW1lbnQsIGFuY2hvckVsZW1lbnQpO1xuICAgICAgICAgICAgICAgIH07XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cbmlmIChtb2R1bGUuaG90KSB7XG4gIGlmICghY29udGVudC5sb2NhbHMgfHwgbW9kdWxlLmhvdC5pbnZhbGlkYXRlKSB7XG4gICAgdmFyIGlzRXF1YWxMb2NhbHMgPSBmdW5jdGlvbiBpc0VxdWFsTG9jYWxzKGEsIGIsIGlzTmFtZWRFeHBvcnQpIHtcbiAgICBpZiAoIWEgJiYgYiB8fCBhICYmICFiKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgbGV0IHA7XG4gICAgZm9yKHAgaW4gYSl7XG4gICAgICAgIGlmIChpc05hbWVkRXhwb3J0ICYmIHAgPT09IFwiZGVmYXVsdFwiKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYVtwXSAhPT0gYltwXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZvcihwIGluIGIpe1xuICAgICAgICBpZiAoaXNOYW1lZEV4cG9ydCAmJiBwID09PSBcImRlZmF1bHRcIikge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFhW3BdKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59O1xuICAgIHZhciBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFxuICAgICAgXCIhIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzddLm9uZU9mWzEzXS51c2VbMV0hLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzddLm9uZU9mWzEzXS51c2VbMl0hLi9nbG9iYWxzLmNzc1wiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbN10ub25lT2ZbMTNdLnVzZVsxXSEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbN10ub25lT2ZbMTNdLnVzZVsyXSEuL2dsb2JhbHMuY3NzXCIpO1xuXG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpZiAoIWlzRXF1YWxMb2NhbHMob2xkTG9jYWxzLCBjb250ZW50LmxvY2FscykpIHtcbiAgICAgICAgICAgICAgICBtb2R1bGUuaG90LmludmFsaWRhdGUoKTtcblxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIG9sZExvY2FscyA9IGNvbnRlbnQubG9jYWxzO1xuXG4gICAgICAgICAgICAgIHVwZGF0ZShjb250ZW50KTtcbiAgICAgIH1cbiAgICApXG4gIH1cblxuICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7XG4gICAgdXBkYXRlKCk7XG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./styles/globals.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js ***!
  \************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nconst isOldIE = function isOldIE() {\n    let memo;\n    return function memorize() {\n        if (typeof memo === \"undefined\") {\n            // Test for IE <= 9 as proposed by Browserhacks\n            // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n            // Tests for existence of standard globals is to allow style-loader\n            // to operate correctly into non-standard environments\n            // @see https://github.com/webpack-contrib/style-loader/issues/177\n            memo = Boolean(window && document && document.all && !window.atob);\n        }\n        return memo;\n    };\n}();\nconst getTargetElement = function() {\n    const memo = {};\n    return function memorize(target) {\n        if (typeof memo[target] === \"undefined\") {\n            let styleTarget = document.querySelector(target);\n            // Special case to return head of iframe instead of iframe itself\n            if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n                try {\n                    // This will throw an exception if access to iframe is blocked\n                    // due to cross-origin restrictions\n                    styleTarget = styleTarget.contentDocument.head;\n                } catch (e) {\n                    // istanbul ignore next\n                    styleTarget = null;\n                }\n            }\n            memo[target] = styleTarget;\n        }\n        return memo[target];\n    };\n}();\nconst stylesInDom = [];\nfunction getIndexByIdentifier(identifier) {\n    let result = -1;\n    for(let i = 0; i < stylesInDom.length; i++){\n        if (stylesInDom[i].identifier === identifier) {\n            result = i;\n            break;\n        }\n    }\n    return result;\n}\nfunction modulesToDom(list, options) {\n    const idCountMap = {};\n    const identifiers = [];\n    for(let i = 0; i < list.length; i++){\n        const item = list[i];\n        const id = options.base ? item[0] + options.base : item[0];\n        const count = idCountMap[id] || 0;\n        const identifier = id + \" \" + count.toString();\n        idCountMap[id] = count + 1;\n        const index = getIndexByIdentifier(identifier);\n        const obj = {\n            css: item[1],\n            media: item[2],\n            sourceMap: item[3]\n        };\n        if (index !== -1) {\n            stylesInDom[index].references++;\n            stylesInDom[index].updater(obj);\n        } else {\n            stylesInDom.push({\n                identifier: identifier,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                updater: addStyle(obj, options),\n                references: 1\n            });\n        }\n        identifiers.push(identifier);\n    }\n    return identifiers;\n}\nfunction insertStyleElement(options) {\n    const style = document.createElement(\"style\");\n    const attributes = options.attributes || {};\n    if (typeof attributes.nonce === \"undefined\") {\n        const nonce = // eslint-disable-next-line no-undef\n         true ? __webpack_require__.nc : 0;\n        if (nonce) {\n            attributes.nonce = nonce;\n        }\n    }\n    Object.keys(attributes).forEach(function(key) {\n        style.setAttribute(key, attributes[key]);\n    });\n    if (typeof options.insert === \"function\") {\n        options.insert(style);\n    } else {\n        const target = getTargetElement(options.insert || \"head\");\n        if (!target) {\n            throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n        }\n        target.appendChild(style);\n    }\n    return style;\n}\nfunction removeStyleElement(style) {\n    // istanbul ignore if\n    if (style.parentNode === null) {\n        return false;\n    }\n    style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */ const replaceText = function replaceText() {\n    const textStore = [];\n    return function replace(index, replacement) {\n        textStore[index] = replacement;\n        return textStore.filter(Boolean).join(\"\\n\");\n    };\n}();\nfunction applyToSingletonTag(style, index, remove, obj) {\n    const css = remove ? \"\" : obj.media ? \"@media \" + obj.media + \" {\" + obj.css + \"}\" : obj.css;\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = replaceText(index, css);\n    } else {\n        const cssNode = document.createTextNode(css);\n        const childNodes = style.childNodes;\n        if (childNodes[index]) {\n            style.removeChild(childNodes[index]);\n        }\n        if (childNodes.length) {\n            style.insertBefore(cssNode, childNodes[index]);\n        } else {\n            style.appendChild(cssNode);\n        }\n    }\n}\nfunction applyToTag(style, _options, obj) {\n    let css = obj.css;\n    const media = obj.media;\n    const sourceMap = obj.sourceMap;\n    if (media) {\n        style.setAttribute(\"media\", media);\n    } else {\n        style.removeAttribute(\"media\");\n    }\n    if (sourceMap && typeof btoa !== \"undefined\") {\n        css += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n    }\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n    } else {\n        while(style.firstChild){\n            style.removeChild(style.firstChild);\n        }\n        style.appendChild(document.createTextNode(css));\n    }\n}\nlet singleton = null;\nlet singletonCounter = 0;\nfunction addStyle(obj, options) {\n    let style;\n    let update;\n    let remove;\n    if (options.singleton) {\n        const styleIndex = singletonCounter++;\n        style = singleton || (singleton = insertStyleElement(options));\n        update = applyToSingletonTag.bind(null, style, styleIndex, false);\n        remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n    } else {\n        style = insertStyleElement(options);\n        update = applyToTag.bind(null, style, options);\n        remove = function() {\n            removeStyleElement(style);\n        };\n    }\n    update(obj);\n    return function updateStyle(newObj) {\n        if (newObj) {\n            if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n                return;\n            }\n            update(obj = newObj);\n        } else {\n            remove();\n        }\n    };\n}\nmodule.exports = function(list, options) {\n    options = options || {};\n    // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n    // tags it will allow on a page\n    if (!options.singleton && typeof options.singleton !== \"boolean\") {\n        options.singleton = isOldIE();\n    }\n    list = list || [];\n    let lastIdentifiers = modulesToDom(list, options);\n    return function update(newList) {\n        newList = newList || [];\n        if (Object.prototype.toString.call(newList) !== \"[object Array]\") {\n            return;\n        }\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            stylesInDom[index].references--;\n        }\n        const newLastIdentifiers = modulesToDom(newList, options);\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            if (stylesInDom[index].references === 0) {\n                stylesInDom[index].updater();\n                stylesInDom.splice(index, 1);\n            }\n        }\n        lastIdentifiers = newLastIdentifiers;\n    };\n};\n\n//# sourceMappingURL=injectStylesIntoStyleTag.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXN0eWxlLWxvYWRlci9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsd0JBQXdCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLGlCQUFpQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLEtBQXdDLEdBQUcsc0JBQWlCLEdBQUcsQ0FBSTtBQUMzRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxxRUFBcUUsZ0JBQWdCO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSw2REFBNkQ7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsNEJBQTRCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsNEJBQTRCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtc3R5bGUtbG9hZGVyL3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzPzI2ZWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5jb25zdCBpc09sZElFID0gZnVuY3Rpb24gaXNPbGRJRSgpIHtcbiAgICBsZXQgbWVtbztcbiAgICByZXR1cm4gZnVuY3Rpb24gbWVtb3JpemUoKSB7XG4gICAgICAgIGlmICh0eXBlb2YgbWVtbyA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgLy8gVGVzdCBmb3IgSUUgPD0gOSBhcyBwcm9wb3NlZCBieSBCcm93c2VyaGFja3NcbiAgICAgICAgICAgIC8vIEBzZWUgaHR0cDovL2Jyb3dzZXJoYWNrcy5jb20vI2hhY2stZTcxZDg2OTJmNjUzMzQxNzNmZWU3MTVjMjIyY2I4MDVcbiAgICAgICAgICAgIC8vIFRlc3RzIGZvciBleGlzdGVuY2Ugb2Ygc3RhbmRhcmQgZ2xvYmFscyBpcyB0byBhbGxvdyBzdHlsZS1sb2FkZXJcbiAgICAgICAgICAgIC8vIHRvIG9wZXJhdGUgY29ycmVjdGx5IGludG8gbm9uLXN0YW5kYXJkIGVudmlyb25tZW50c1xuICAgICAgICAgICAgLy8gQHNlZSBodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlci9pc3N1ZXMvMTc3XG4gICAgICAgICAgICBtZW1vID0gQm9vbGVhbih3aW5kb3cgJiYgZG9jdW1lbnQgJiYgZG9jdW1lbnQuYWxsICYmICF3aW5kb3cuYXRvYik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG1lbW87XG4gICAgfTtcbn0oKTtcbmNvbnN0IGdldFRhcmdldEVsZW1lbnQgPSBmdW5jdGlvbigpIHtcbiAgICBjb25zdCBtZW1vID0ge307XG4gICAgcmV0dXJuIGZ1bmN0aW9uIG1lbW9yaXplKHRhcmdldCkge1xuICAgICAgICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgbGV0IHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuICAgICAgICAgICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICAgICAgICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAgICAgICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICAgICAgICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgICAgICAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBtZW1vW3RhcmdldF07XG4gICAgfTtcbn0oKTtcbmNvbnN0IHN0eWxlc0luRG9tID0gW107XG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gICAgbGV0IHJlc3VsdCA9IC0xO1xuICAgIGZvcihsZXQgaSA9IDA7IGkgPCBzdHlsZXNJbkRvbS5sZW5ndGg7IGkrKyl7XG4gICAgICAgIGlmIChzdHlsZXNJbkRvbVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICAgICAgICByZXN1bHQgPSBpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gICAgY29uc3QgaWRDb3VudE1hcCA9IHt9O1xuICAgIGNvbnN0IGlkZW50aWZpZXJzID0gW107XG4gICAgZm9yKGxldCBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspe1xuICAgICAgICBjb25zdCBpdGVtID0gbGlzdFtpXTtcbiAgICAgICAgY29uc3QgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICAgICAgY29uc3QgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgICAgICBjb25zdCBpZGVudGlmaWVyID0gaWQgKyBcIiBcIiArIGNvdW50LnRvU3RyaW5nKCk7XG4gICAgICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgICAgICBjb25zdCBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgICBjb25zdCBvYmogPSB7XG4gICAgICAgICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICAgICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgICAgICAgIHNvdXJjZU1hcDogaXRlbVszXVxuICAgICAgICB9O1xuICAgICAgICBpZiAoaW5kZXggIT09IC0xKSB7XG4gICAgICAgICAgICBzdHlsZXNJbkRvbVtpbmRleF0ucmVmZXJlbmNlcysrO1xuICAgICAgICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnVwZGF0ZXIob2JqKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHN0eWxlc0luRG9tLnB1c2goe1xuICAgICAgICAgICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11c2UtYmVmb3JlLWRlZmluZVxuICAgICAgICAgICAgICAgIHVwZGF0ZXI6IGFkZFN0eWxlKG9iaiwgb3B0aW9ucyksXG4gICAgICAgICAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgICB9XG4gICAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgICBjb25zdCBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgICBjb25zdCBhdHRyaWJ1dGVzID0gb3B0aW9ucy5hdHRyaWJ1dGVzIHx8IHt9O1xuICAgIGlmICh0eXBlb2YgYXR0cmlidXRlcy5ub25jZSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBjb25zdCBub25jZSA9IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICAgICAgICB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG4gICAgICAgIGlmIChub25jZSkge1xuICAgICAgICAgICAgYXR0cmlidXRlcy5ub25jZSA9IG5vbmNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLmZvckVhY2goZnVuY3Rpb24oa2V5KSB7XG4gICAgICAgIHN0eWxlLnNldEF0dHJpYnV0ZShrZXksIGF0dHJpYnV0ZXNba2V5XSk7XG4gICAgfSk7XG4gICAgaWYgKHR5cGVvZiBvcHRpb25zLmluc2VydCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIG9wdGlvbnMuaW5zZXJ0KHN0eWxlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBjb25zdCB0YXJnZXQgPSBnZXRUYXJnZXRFbGVtZW50KG9wdGlvbnMuaW5zZXJ0IHx8IFwiaGVhZFwiKTtcbiAgICAgICAgaWYgKCF0YXJnZXQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gICAgICAgIH1cbiAgICAgICAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgICB9XG4gICAgcmV0dXJuIHN0eWxlO1xufVxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKSB7XG4gICAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gICAgaWYgKHN0eWxlLnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBzdHlsZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlKTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqLyBjb25zdCByZXBsYWNlVGV4dCA9IGZ1bmN0aW9uIHJlcGxhY2VUZXh0KCkge1xuICAgIGNvbnN0IHRleHRTdG9yZSA9IFtdO1xuICAgIHJldHVybiBmdW5jdGlvbiByZXBsYWNlKGluZGV4LCByZXBsYWNlbWVudCkge1xuICAgICAgICB0ZXh0U3RvcmVbaW5kZXhdID0gcmVwbGFjZW1lbnQ7XG4gICAgICAgIHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oXCJcXG5cIik7XG4gICAgfTtcbn0oKTtcbmZ1bmN0aW9uIGFwcGx5VG9TaW5nbGV0b25UYWcoc3R5bGUsIGluZGV4LCByZW1vdmUsIG9iaikge1xuICAgIGNvbnN0IGNzcyA9IHJlbW92ZSA/IFwiXCIgOiBvYmoubWVkaWEgPyBcIkBtZWRpYSBcIiArIG9iai5tZWRpYSArIFwiIHtcIiArIG9iai5jc3MgKyBcIn1cIiA6IG9iai5jc3M7XG4gICAgLy8gRm9yIG9sZCBJRVxuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi8gaWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcbiAgICAgICAgc3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gcmVwbGFjZVRleHQoaW5kZXgsIGNzcyk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgY29uc3QgY3NzTm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcyk7XG4gICAgICAgIGNvbnN0IGNoaWxkTm9kZXMgPSBzdHlsZS5jaGlsZE5vZGVzO1xuICAgICAgICBpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHtcbiAgICAgICAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzdHlsZS5hcHBlbmRDaGlsZChjc3NOb2RlKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmZ1bmN0aW9uIGFwcGx5VG9UYWcoc3R5bGUsIF9vcHRpb25zLCBvYmopIHtcbiAgICBsZXQgY3NzID0gb2JqLmNzcztcbiAgICBjb25zdCBtZWRpYSA9IG9iai5tZWRpYTtcbiAgICBjb25zdCBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuICAgIGlmIChtZWRpYSkge1xuICAgICAgICBzdHlsZS5zZXRBdHRyaWJ1dGUoXCJtZWRpYVwiLCBtZWRpYSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgc3R5bGUucmVtb3ZlQXR0cmlidXRlKFwibWVkaWFcIik7XG4gICAgfVxuICAgIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIiArIGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSkgKyBcIiAqL1wiO1xuICAgIH1cbiAgICAvLyBGb3Igb2xkIElFXG4gICAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqLyBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgICAgICBzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgd2hpbGUoc3R5bGUuZmlyc3RDaGlsZCl7XG4gICAgICAgICAgICBzdHlsZS5yZW1vdmVDaGlsZChzdHlsZS5maXJzdENoaWxkKTtcbiAgICAgICAgfVxuICAgICAgICBzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgICB9XG59XG5sZXQgc2luZ2xldG9uID0gbnVsbDtcbmxldCBzaW5nbGV0b25Db3VudGVyID0gMDtcbmZ1bmN0aW9uIGFkZFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICAgIGxldCBzdHlsZTtcbiAgICBsZXQgdXBkYXRlO1xuICAgIGxldCByZW1vdmU7XG4gICAgaWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG4gICAgICAgIGNvbnN0IHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG4gICAgICAgIHN0eWxlID0gc2luZ2xldG9uIHx8IChzaW5nbGV0b24gPSBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykpO1xuICAgICAgICB1cGRhdGUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIGZhbHNlKTtcbiAgICAgICAgcmVtb3ZlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCB0cnVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBzdHlsZSA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgICAgICAgdXBkYXRlID0gYXBwbHlUb1RhZy5iaW5kKG51bGwsIHN0eWxlLCBvcHRpb25zKTtcbiAgICAgICAgcmVtb3ZlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpO1xuICAgICAgICB9O1xuICAgIH1cbiAgICB1cGRhdGUob2JqKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlU3R5bGUobmV3T2JqKSB7XG4gICAgICAgIGlmIChuZXdPYmopIHtcbiAgICAgICAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXApIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB1cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlbW92ZSgpO1xuICAgICAgICB9XG4gICAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obGlzdCwgb3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAgIC8vIEZvcmNlIHNpbmdsZS10YWcgc29sdXRpb24gb24gSUU2LTksIHdoaWNoIGhhcyBhIGhhcmQgbGltaXQgb24gdGhlICMgb2YgPHN0eWxlPlxuICAgIC8vIHRhZ3MgaXQgd2lsbCBhbGxvdyBvbiBhIHBhZ2VcbiAgICBpZiAoIW9wdGlvbnMuc2luZ2xldG9uICYmIHR5cGVvZiBvcHRpb25zLnNpbmdsZXRvbiAhPT0gXCJib29sZWFuXCIpIHtcbiAgICAgICAgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XG4gICAgfVxuICAgIGxpc3QgPSBsaXN0IHx8IFtdO1xuICAgIGxldCBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG5ld0xpc3QpICE9PSBcIltvYmplY3QgQXJyYXldXCIpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgICAgIGNvbnN0IGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICAgICAgICBjb25zdCBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG4gICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspe1xuICAgICAgICAgICAgY29uc3QgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICAgICAgICBpZiAoc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgICAgICAgICBzdHlsZXNJbkRvbVtpbmRleF0udXBkYXRlcigpO1xuICAgICAgICAgICAgICAgIHN0eWxlc0luRG9tLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICAgIH07XG59O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\n"));

/***/ }),

/***/ "./components/BilingualSalesChatBot.js":
/*!*********************************************!*\
  !*** ./components/BilingualSalesChatBot.js ***!
  \*********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ BilingualSalesChatBot; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_BarChart3_DollarSign_Globe_Loader_MessageCircle_Send_Target_Users_X_lucide_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=BarChart3,DollarSign,Globe,Loader,MessageCircle,Send,Target,Users,X!=!lucide-react */ \"__barrel_optimize__?names=BarChart3,DollarSign,Globe,Loader,MessageCircle,Send,Target,Users,X!=!./node_modules/lucide-react/dist/esm/lucide-react.js\");\n/* harmony import */ var _lib_smartT__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/smartT */ \"./lib/smartT.js\");\n/**\n * BILINGUAL SALES CHATBOT - Triangle Intelligence Integration\n * Supports English/Spanish with current i18n system\n * Bloomberg Terminal styling with professional sales assistance\n */ \nvar _s = $RefreshSig$();\n\n\n\nfunction BilingualSalesChatBot() {\n    _s();\n    const { smartT, currentLanguage, changeLanguage } = (0,_lib_smartT__WEBPACK_IMPORTED_MODULE_2__.useSmartT)();\n    const [isOpen, setIsOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [messages, setMessages] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [inputMessage, setInputMessage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [sessionId, setSessionId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [chatLanguage, setChatLanguage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"en\");\n    const messagesEndRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Initialize session and set language\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!sessionId) {\n            const newSessionId = \"sales_\".concat(Date.now(), \"_\").concat(Math.random().toString(36).substr(2, 9));\n            setSessionId(newSessionId);\n            // Set chat language based on current platform language\n            const lang = currentLanguage || \"en\";\n            setChatLanguage(lang);\n            // Add welcome message in appropriate language\n            const welcomeMessages = {\n                en: {\n                    content: \"\\uD83E\\uDD1D Hello! I'm your Triangle Intelligence Sales Specialist.\\n\\n\\uD83D\\uDCB0 I can help you with:\\n• **Commission Calculations** - How much will you earn per deal?\\n• **Lead Qualification** - Evaluate partnership opportunities  \\n• **Specialist Matching** - Connect with Mexican trade experts\\n• **Pipeline Analytics** - Analyze your sales performance\\n\\nHow can I assist you today?\",\n                    timestamp: new Date().toISOString()\n                },\n                es: {\n                    content: \"\\uD83E\\uDD1D \\xa1Hola! Soy tu especialista en ventas de Triangle Intelligence.\\n\\n\\uD83D\\uDCB0 Puedo ayudarte con:\\n• **C\\xe1lculos de comisi\\xf3n** - \\xbfCu\\xe1nto ganar\\xe1s por deal?\\n• **Calificaci\\xf3n de leads** - Evaluar oportunidades de partnership\\n• **Matching de especialistas** - Conectar con expertos comerciales mexicanos  \\n• **Analytics de pipeline** - Analizar tu rendimiento de ventas\\n\\n\\xbfEn qu\\xe9 puedo ayudarte hoy?\",\n                    timestamp: new Date().toISOString()\n                }\n            };\n            setMessages([\n                {\n                    id: 1,\n                    type: \"bot\",\n                    ...welcomeMessages[lang]\n                }\n            ]);\n        }\n    }, [\n        sessionId,\n        currentLanguage\n    ]);\n    // Scroll to bottom when new messages arrive\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        var _messagesEndRef_current;\n        (_messagesEndRef_current = messagesEndRef.current) === null || _messagesEndRef_current === void 0 ? void 0 : _messagesEndRef_current.scrollIntoView({\n            behavior: \"smooth\"\n        });\n    }, [\n        messages\n    ]);\n    // Language toggle\n    const toggleLanguage = ()=>{\n        const newLang = chatLanguage === \"en\" ? \"es\" : \"en\";\n        setChatLanguage(newLang);\n        changeLanguage(newLang);\n        // Add language switch message\n        const switchMessage = {\n            id: Date.now(),\n            type: \"system\",\n            content: newLang === \"es\" ? \"\\uD83C\\uDF0E Idioma cambiado a Espa\\xf1ol\" : \"\\uD83C\\uDF0E Language switched to English\",\n            timestamp: new Date().toISOString()\n        };\n        setMessages((prev)=>[\n                ...prev,\n                switchMessage\n            ]);\n    };\n    // Quick actions with bilingual support\n    const getQuickActions = ()=>{\n        if (chatLanguage === \"es\") {\n            return [\n                {\n                    id: \"commission\",\n                    icon: _barrel_optimize_names_BarChart3_DollarSign_Globe_Loader_MessageCircle_Send_Target_Users_X_lucide_react__WEBPACK_IMPORTED_MODULE_3__.DollarSign,\n                    label: \"Calcular Comisi\\xf3n\",\n                    prompt: \"Tengo un cliente con $2.5M en ahorros anuales. \\xbfCu\\xe1l ser\\xeda mi comisi\\xf3n?\"\n                },\n                {\n                    id: \"qualify\",\n                    icon: _barrel_optimize_names_BarChart3_DollarSign_Globe_Loader_MessageCircle_Send_Target_Users_X_lucide_react__WEBPACK_IMPORTED_MODULE_3__.Target,\n                    label: \"Calificar Lead\",\n                    prompt: \"Tengo un nuevo lead de manufactura. \\xbfC\\xf3mo eval\\xfao si vale la pena?\"\n                },\n                {\n                    id: \"specialists\",\n                    icon: _barrel_optimize_names_BarChart3_DollarSign_Globe_Loader_MessageCircle_Send_Target_Users_X_lucide_react__WEBPACK_IMPORTED_MODULE_3__.Users,\n                    label: \"Buscar Especialistas\",\n                    prompt: \"Necesito un especialista mexicano para electr\\xf3nicos en Tijuana\"\n                },\n                {\n                    id: \"analytics\",\n                    icon: _barrel_optimize_names_BarChart3_DollarSign_Globe_Loader_MessageCircle_Send_Target_Users_X_lucide_react__WEBPACK_IMPORTED_MODULE_3__.BarChart3,\n                    label: \"Ver Analytics\",\n                    prompt: \"Mu\\xe9strame el performance de mi pipeline de partnerships\"\n                }\n            ];\n        } else {\n            return [\n                {\n                    id: \"commission\",\n                    icon: _barrel_optimize_names_BarChart3_DollarSign_Globe_Loader_MessageCircle_Send_Target_Users_X_lucide_react__WEBPACK_IMPORTED_MODULE_3__.DollarSign,\n                    label: \"Calculate Commission\",\n                    prompt: \"I have a client with $2.5M annual savings. What would be my commission?\"\n                },\n                {\n                    id: \"qualify\",\n                    icon: _barrel_optimize_names_BarChart3_DollarSign_Globe_Loader_MessageCircle_Send_Target_Users_X_lucide_react__WEBPACK_IMPORTED_MODULE_3__.Target,\n                    label: \"Qualify Lead\",\n                    prompt: \"I have a new manufacturing lead. How do I evaluate if it's worth pursuing?\"\n                },\n                {\n                    id: \"specialists\",\n                    icon: _barrel_optimize_names_BarChart3_DollarSign_Globe_Loader_MessageCircle_Send_Target_Users_X_lucide_react__WEBPACK_IMPORTED_MODULE_3__.Users,\n                    label: \"Find Specialists\",\n                    prompt: \"I need a Mexican specialist for electronics manufacturing in Tijuana\"\n                },\n                {\n                    id: \"analytics\",\n                    icon: _barrel_optimize_names_BarChart3_DollarSign_Globe_Loader_MessageCircle_Send_Target_Users_X_lucide_react__WEBPACK_IMPORTED_MODULE_3__.BarChart3,\n                    label: \"View Analytics\",\n                    prompt: \"Show me my partnership pipeline performance analytics\"\n                }\n            ];\n        }\n    };\n    const sendMessage = async function() {\n        let messageContent = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;\n        const messageToSend = messageContent || inputMessage.trim();\n        if (!messageToSend || isLoading) return;\n        // Add user message\n        const userMessage = {\n            id: Date.now(),\n            type: \"user\",\n            content: messageToSend,\n            timestamp: new Date().toISOString()\n        };\n        setMessages((prev)=>[\n                ...prev,\n                userMessage\n            ]);\n        setInputMessage(\"\");\n        setIsLoading(true);\n        try {\n            // Try to call the partnership chat API\n            const response = await fetch(\"/api/partnership/chat\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    question: messageToSend,\n                    sessionId: sessionId,\n                    language: chatLanguage,\n                    context: \"sales_operations\"\n                })\n            });\n            if (response.ok) {\n                const data = await response.json();\n                const botMessage = {\n                    id: Date.now() + 1,\n                    type: \"bot\",\n                    content: data.response,\n                    timestamp: data.timestamp || new Date().toISOString()\n                };\n                setMessages((prev)=>[\n                        ...prev,\n                        botMessage\n                    ]);\n            } else {\n                throw new Error(\"API request failed\");\n            }\n        } catch (error) {\n            console.error(\"Error sending message:\", error);\n            // Fallback response system\n            const fallbackResponse = getFallbackResponse(messageToSend, chatLanguage);\n            const errorMessage = {\n                id: Date.now() + 1,\n                type: \"bot\",\n                content: fallbackResponse,\n                timestamp: new Date().toISOString()\n            };\n            setMessages((prev)=>[\n                    ...prev,\n                    errorMessage\n                ]);\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    // Fallback response system for offline capability\n    const getFallbackResponse = (message, language)=>{\n        const msg = message.toLowerCase();\n        if (language === \"es\") {\n            if (msg.includes(\"comisi\") || msg.includes(\"ganancia\")) {\n                return \"\\uD83D\\uDCB0 **C\\xe1lculo de Comisi\\xf3n**\\n\\nLas comisiones se basan en los ahorros generados:\\n• **Platinum** (>$10M ahorros): 2.5% comisi\\xf3n\\n• **Gold** ($5M-$10M): 2.0% comisi\\xf3n  \\n• **Silver** ($2M-$5M): 1.8% comisi\\xf3n\\n• **Bronze** ($500K-$2M): 1.5% comisi\\xf3n\\n\\n\\xbfCu\\xe1l es el volumen de ahorros estimado de tu cliente?\";\n            }\n            if (msg.includes(\"lead\") || msg.includes(\"calificar\")) {\n                return \"\\uD83C\\uDFAF **Calificaci\\xf3n de Leads**\\n\\nPara calificar un lead eval\\xfaa:\\n• Volumen de importaci\\xf3n anual\\n• Tipo de negocio (electr\\xf3nicos = mayor valor)\\n• Pa\\xeds de origen (China/India = mejor oportunidad)\\n• Urgencia de implementaci\\xf3n\\n\\n\\xbfPuedes compartir estos detalles de tu lead?\";\n            }\n            if (msg.includes(\"especialista\") || msg.includes(\"mexico\")) {\n                return \"\\uD83C\\uDDF2\\uD83C\\uDDFD **Red de Especialistas Mexicanos**\\n\\nTenemos especialistas certificados en:\\n• **Carlos Mendez** - Ciudad de M\\xe9xico (Electr\\xf3nicos)\\n• **Ana Gutierrez** - Guadalajara (Manufactura Industrial)  \\n• **Roberto Silva** - Tijuana (Automotriz)\\n\\n\\xbfQu\\xe9 tipo de especialista necesitas?\";\n            }\n            return \"\\uD83E\\uDD1D Entiendo tu consulta sobre ventas. \\n\\n**Opciones disponibles:**\\n• Usar los botones r\\xe1pidos arriba\\n• Contactar al equipo de ventas directamente\\n• Revisar el dashboard de partnerships\\n\\n\\xbfHay algo espec\\xedfico en lo que pueda ayudarte?\";\n        } else {\n            if (msg.includes(\"commission\") || msg.includes(\"earn\")) {\n                return \"\\uD83D\\uDCB0 **Commission Calculation**\\n\\nCommissions are based on generated savings:\\n• **Platinum** (>$10M savings): 2.5% commission\\n• **Gold** ($5M-$10M): 2.0% commission\\n• **Silver** ($2M-$5M): 1.8% commission  \\n• **Bronze** ($500K-$2M): 1.5% commission\\n\\nWhat's the estimated savings volume for your client?\";\n            }\n            if (msg.includes(\"qualify\") || msg.includes(\"lead\")) {\n                return \"\\uD83C\\uDFAF **Lead Qualification**\\n\\nTo qualify a lead, evaluate:\\n• Annual import volume\\n• Business type (electronics = higher value)\\n• Origin country (China/India = better opportunity)\\n• Implementation urgency\\n\\nCan you share these details about your lead?\";\n            }\n            if (msg.includes(\"specialist\") || msg.includes(\"mexico\")) {\n                return \"\\uD83C\\uDDF2\\uD83C\\uDDFD **Mexican Specialist Network**\\n\\nWe have certified specialists in:\\n• **Carlos Mendez** - Mexico City (Electronics)\\n• **Ana Gutierrez** - Guadalajara (Industrial Manufacturing)\\n• **Roberto Silva** - Tijuana (Automotive)\\n\\nWhat type of specialist do you need?\";\n            }\n            return \"\\uD83E\\uDD1D I understand your sales inquiry.\\n\\n**Available options:**\\n• Use the quick action buttons above\\n• Contact the sales team directly\\n• Review the partnerships dashboard\\n\\nIs there something specific I can help you with?\";\n        }\n    };\n    const handleKeyPress = (e)=>{\n        if (e.key === \"Enter\" && !e.shiftKey) {\n            e.preventDefault();\n            sendMessage();\n        }\n    };\n    const formatMessage = (content)=>{\n        return content.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\").replace(/\\*(.*?)\\*/g, \"<em>$1</em>\").replace(/\\n/g, \"<br>\");\n    };\n    if (!isOpen) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"fixed bottom-6 right-6 z-50\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: ()=>setIsOpen(true),\n                className: \"bloomberg-chat-trigger-btn\",\n                title: smartT(\"salesChat.title\", \"Sales Partnership Assistant\"),\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_BarChart3_DollarSign_Globe_Loader_MessageCircle_Send_Target_Users_X_lucide_react__WEBPACK_IMPORTED_MODULE_3__.MessageCircle, {\n                        size: 24\n                    }, void 0, false, {\n                        fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                        lineNumber: 326,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"bloomberg-chat-trigger-badge\",\n                        children: chatLanguage === \"es\" ? \"\\uD83C\\uDDF2\\uD83C\\uDDFD\" : \"\\uD83D\\uDCBC\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                        lineNumber: 327,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                lineNumber: 321,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n            lineNumber: 320,\n            columnNumber: 7\n        }, this);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"bloomberg-chat-container\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"bloomberg-chat-header\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"bloomberg-chat-header-content\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_BarChart3_DollarSign_Globe_Loader_MessageCircle_Send_Target_Users_X_lucide_react__WEBPACK_IMPORTED_MODULE_3__.Users, {\n                                size: 20\n                            }, void 0, false, {\n                                fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                                lineNumber: 340,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                        className: \"bloomberg-chat-title\",\n                                        children: smartT(\"salesChat.title\", \"Sales Partnership Assistant\")\n                                    }, void 0, false, {\n                                        fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                                        lineNumber: 342,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        className: \"bloomberg-chat-subtitle\",\n                                        children: chatLanguage === \"es\" ? \"Especialista en Partners y Comisiones\" : \"Partnership & Commission Specialist\"\n                                    }, void 0, false, {\n                                        fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                                        lineNumber: 345,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                                lineNumber: 341,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                        lineNumber: 339,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center space-x-2\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: toggleLanguage,\n                                className: \"bloomberg-chat-close\",\n                                title: smartT(\"salesChat.toggleLanguage\", \"Toggle Language\"),\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_BarChart3_DollarSign_Globe_Loader_MessageCircle_Send_Target_Users_X_lucide_react__WEBPACK_IMPORTED_MODULE_3__.Globe, {\n                                    size: 16\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                                    lineNumber: 359,\n                                    columnNumber: 13\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                                lineNumber: 354,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>setIsOpen(false),\n                                className: \"bloomberg-chat-close\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_BarChart3_DollarSign_Globe_Loader_MessageCircle_Send_Target_Users_X_lucide_react__WEBPACK_IMPORTED_MODULE_3__.X, {\n                                    size: 20\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                                    lineNumber: 365,\n                                    columnNumber: 13\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                                lineNumber: 361,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                        lineNumber: 353,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                lineNumber: 338,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"bloomberg-chat-quick-actions\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"bloomberg-chat-actions-grid\",\n                    children: getQuickActions().map((action)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: ()=>sendMessage(action.prompt),\n                            className: \"bloomberg-chat-action-btn\",\n                            disabled: isLoading,\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(action.icon, {\n                                    size: 14,\n                                    className: \"bloomberg-chat-action-icon\"\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                                    lineNumber: 380,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"bloomberg-chat-action-label\",\n                                    children: action.label\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                                    lineNumber: 381,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, action.id, true, {\n                            fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                            lineNumber: 374,\n                            columnNumber: 13\n                        }, this))\n                }, void 0, false, {\n                    fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                    lineNumber: 372,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                lineNumber: 371,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"bloomberg-flex-1 bloomberg-overflow-y-auto bloomberg-p-md bloomberg-card\",\n                children: [\n                    messages.map((message)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex \".concat(message.type === \"user\" ? \"justify-end\" : \"justify-start\"),\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"max-w-[80%] bloomberg-p-md bloomberg-rounded-lg \".concat(message.type === \"user\" ? \"bloomberg-btn-primary\" : message.type === \"system\" ? \"bloomberg-status bloomberg-status-warning bloomberg-text-center\" : \"bloomberg-card bloomberg-border-info\"),\n                                children: [\n                                    message.type === \"bot\" || message.type === \"system\" ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        dangerouslySetInnerHTML: {\n                                            __html: formatMessage(message.content)\n                                        },\n                                        className: \"bloomberg-text-sm\"\n                                    }, void 0, false, {\n                                        fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                                        lineNumber: 404,\n                                        columnNumber: 17\n                                    }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        className: \"bloomberg-text-sm\",\n                                        children: message.content\n                                    }, void 0, false, {\n                                        fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                                        lineNumber: 411,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"bloomberg-text-xs bloomberg-mt-sm bloomberg-text-muted \".concat(message.type === \"user\" ? \"bloomberg-text-muted\" : \"bloomberg-text-muted\"),\n                                        children: new Date(message.timestamp).toLocaleTimeString([], {\n                                            hour: \"2-digit\",\n                                            minute: \"2-digit\"\n                                        })\n                                    }, void 0, false, {\n                                        fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                                        lineNumber: 413,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                                lineNumber: 394,\n                                columnNumber: 13\n                            }, this)\n                        }, message.id, false, {\n                            fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                            lineNumber: 390,\n                            columnNumber: 11\n                        }, this)),\n                    isLoading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"bloomberg-flex bloomberg-justify-start\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"bloomberg-card bloomberg-border-info bloomberg-p-md bloomberg-rounded-lg bloomberg-flex bloomberg-items-center bloomberg-gap-sm\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_BarChart3_DollarSign_Globe_Loader_MessageCircle_Send_Target_Users_X_lucide_react__WEBPACK_IMPORTED_MODULE_3__.Loader, {\n                                    size: 16,\n                                    className: \"bloomberg-pulse text-primary\"\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                                    lineNumber: 428,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"bloomberg-text-muted\",\n                                    children: chatLanguage === \"es\" ? \"Analizando...\" : \"Analyzing...\"\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                                    lineNumber: 429,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                            lineNumber: 427,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                        lineNumber: 426,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        ref: messagesEndRef\n                    }, void 0, false, {\n                        fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                        lineNumber: 435,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                lineNumber: 388,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"bloomberg-p-md bloomberg-border-top bloomberg-card\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"bloomberg-flex bloomberg-gap-sm\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"textarea\", {\n                                value: inputMessage,\n                                onChange: (e)=>setInputMessage(e.target.value),\n                                onKeyPress: handleKeyPress,\n                                placeholder: chatLanguage === \"es\" ? \"Pregunta sobre partnerships, comisiones, analytics...\" : \"Ask about partnerships, commissions, analytics...\",\n                                className: \"bloomberg-input bloomberg-flex-1\",\n                                disabled: isLoading,\n                                rows: 1\n                            }, void 0, false, {\n                                fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                                lineNumber: 441,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>sendMessage(),\n                                disabled: !inputMessage.trim() || isLoading,\n                                className: \"bloomberg-btn bloomberg-btn-primary\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_BarChart3_DollarSign_Globe_Loader_MessageCircle_Send_Target_Users_X_lucide_react__WEBPACK_IMPORTED_MODULE_3__.Send, {\n                                    size: 16\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                                    lineNumber: 459,\n                                    columnNumber: 13\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                                lineNumber: 454,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                        lineNumber: 440,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"bloomberg-text-xs bloomberg-text-muted bloomberg-mt-sm bloomberg-text-center\",\n                        children: chatLanguage === \"es\" ? \"\\uD83D\\uDCA1 Usa los botones r\\xe1pidos o escribe tu pregunta\" : \"\\uD83D\\uDCA1 Use quick buttons or type your question\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                        lineNumber: 462,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n                lineNumber: 439,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\BilingualSalesChatBot.js\",\n        lineNumber: 336,\n        columnNumber: 5\n    }, this);\n}\n_s(BilingualSalesChatBot, \"mokhbZzYEGoYHF0XbRmENYFBNXM=\", false, function() {\n    return [\n        _lib_smartT__WEBPACK_IMPORTED_MODULE_2__.useSmartT\n    ];\n});\n_c = BilingualSalesChatBot;\nvar _c;\n$RefreshReg$(_c, \"BilingualSalesChatBot\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/BilingualSalesChatBot.js\n"));

/***/ }),

/***/ "./components/GlobalHSCodeChat.js":
/*!****************************************!*\
  !*** ./components/GlobalHSCodeChat.js ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ GlobalMarcusIntelligenceChat; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _hooks_useSafeTranslation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hooks/useSafeTranslation */ \"./hooks/useSafeTranslation.js\");\n/**\n * Global Marcus Intelligence Chat Widget\n * Enhanced Triangle Intelligence assistant - floating chat button\n */ \nvar _s = $RefreshSig$();\n\n\nfunction GlobalMarcusIntelligenceChat() {\n    _s();\n    const { t, i18n } = (0,_hooks_useSafeTranslation__WEBPACK_IMPORTED_MODULE_2__.useSafeTranslation)(\"common\");\n    const [isOpen, setIsOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [messages, setMessages] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([\n        {\n            type: \"bot\",\n            text: t(\"chat.introMessageGlobal\"),\n            isIntro: true\n        }\n    ]);\n    const [inputText, setInputText] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [sessionId, setSessionId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [intelligenceInsights, setIntelligenceInsights] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Initialize session ID\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!sessionId) {\n            setSessionId(\"global_marcus_\".concat(Date.now(), \"_\").concat(Math.random().toString(36).substr(2, 9)));\n        }\n    }, []);\n    // Update intro message when language changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        setMessages((prev)=>prev.map((msg, index)=>index === 0 && msg.isIntro ? {\n                    ...msg,\n                    text: t(\"chat.introMessageGlobal\")\n                } : msg));\n    }, [\n        i18n.language,\n        t\n    ]);\n    const handleSendMessage = async ()=>{\n        if (!inputText.trim()) return;\n        const userMessage = inputText.trim();\n        setInputText(\"\");\n        setIsLoading(true);\n        // Add user message\n        setMessages((prev)=>[\n                ...prev,\n                {\n                    type: \"user\",\n                    text: userMessage\n                }\n            ]);\n        try {\n            // Call enhanced Marcus Triangle Intelligence API\n            const response = await fetch(\"/api/trade-intelligence-chat\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    question: userMessage,\n                    sessionId: sessionId,\n                    language: i18n.language || \"en\"\n                })\n            });\n            const data = await response.json();\n            if (data.success) {\n                const botResponse = {\n                    type: \"bot\",\n                    text: data.response,\n                    followUpQuestion: data.followUpQuestion,\n                    dataSource: data.dataSource,\n                    confidence: data.confidence,\n                    intelligenceGathered: data.intelligenceGathered\n                };\n                setMessages((prev)=>[\n                        ...prev,\n                        botResponse\n                    ]);\n                // Update intelligence insights\n                if (data.intelligenceGathered) {\n                    setIntelligenceInsights(data.intelligenceGathered);\n                }\n                // Add follow-up question as a separate message\n                if (data.followUpQuestion) {\n                    setTimeout(()=>{\n                        setMessages((prev)=>[\n                                ...prev,\n                                {\n                                    type: \"bot\",\n                                    text: data.followUpQuestion,\n                                    isFollowUp: true,\n                                    source: \"marcus_intelligence\"\n                                }\n                            ]);\n                    }, 1500);\n                }\n            } else {\n                setMessages((prev)=>[\n                        ...prev,\n                        {\n                            type: \"bot\",\n                            text: data.error || t(\"chat.errorNotFound\")\n                        }\n                    ]);\n            }\n        } catch (error) {\n            console.error(\"Chat error:\", error);\n            setMessages((prev)=>[\n                    ...prev,\n                    {\n                        type: \"bot\",\n                        text: t(\"chat.errorTrouble\")\n                    }\n                ]);\n        }\n        setIsLoading(false);\n    };\n    const handleCopyCode = (hsCode)=>{\n        navigator.clipboard.writeText(hsCode);\n        setMessages((prev)=>[\n                ...prev,\n                {\n                    type: \"bot\",\n                    text: t(\"chat.copied\", {\n                        code: hsCode\n                    })\n                }\n            ]);\n    };\n    const handleKeyPress = (e)=>{\n        if (e.key === \"Enter\" && !e.shiftKey) {\n            e.preventDefault();\n            handleSendMessage();\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            !isOpen && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: ()=>setIsOpen(true),\n                style: {\n                    position: \"fixed\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                    width: \"60px\",\n                    height: \"60px\",\n                    borderRadius: \"50%\",\n                    backgroundColor: \"#3b82f6\",\n                    color: \"white\",\n                    border: \"none\",\n                    cursor: \"pointer\",\n                    boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.15)\",\n                    fontSize: \"24px\",\n                    zIndex: 1000,\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\"\n                },\n                title: t(\"chat.floating.tooltip\"),\n                children: \"\\uD83E\\uDDE0\"\n            }, void 0, false, {\n                fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\GlobalHSCodeChat.js\",\n                lineNumber: 126,\n                columnNumber: 9\n            }, this),\n            isOpen && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    position: \"fixed\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                    width: \"350px\",\n                    maxHeight: \"500px\",\n                    backgroundColor: \"white\",\n                    border: \"1px solid #e5e7eb\",\n                    borderRadius: \"12px\",\n                    boxShadow: \"0 10px 25px rgba(0, 0, 0, 0.15)\",\n                    zIndex: 1000,\n                    display: \"flex\",\n                    flexDirection: \"column\"\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            backgroundColor: \"#3b82f6\",\n                            color: \"white\",\n                            padding: \"16px\",\n                            borderRadius: \"12px 12px 0 0\",\n                            display: \"flex\",\n                            justifyContent: \"space-between\",\n                            alignItems: \"center\"\n                        },\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                style: {\n                                    fontWeight: \"600\",\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                    gap: \"8px\"\n                                },\n                                children: t(\"chat.headerGlobal\")\n                            }, void 0, false, {\n                                fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\GlobalHSCodeChat.js\",\n                                lineNumber: 178,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>setIsOpen(false),\n                                style: {\n                                    background: \"none\",\n                                    border: \"none\",\n                                    color: \"white\",\n                                    cursor: \"pointer\",\n                                    fontSize: \"20px\",\n                                    padding: \"0\",\n                                    width: \"24px\",\n                                    height: \"24px\",\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                    justifyContent: \"center\"\n                                },\n                                children: t(\"chat.close\")\n                            }, void 0, false, {\n                                fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\GlobalHSCodeChat.js\",\n                                lineNumber: 186,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\GlobalHSCodeChat.js\",\n                        lineNumber: 169,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            flex: 1,\n                            padding: \"16px\",\n                            maxHeight: \"300px\",\n                            overflowY: \"auto\"\n                        },\n                        children: [\n                            messages.map((message, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    style: {\n                                        marginBottom: \"12px\",\n                                        display: \"flex\",\n                                        justifyContent: message.type === \"user\" ? \"flex-end\" : \"flex-start\"\n                                    },\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        style: {\n                                            backgroundColor: message.type === \"user\" ? \"#3b82f6\" : message.isFollowUp ? \"#fef3c7\" : message.isIntro ? \"#ede9fe\" : \"#f8fafc\",\n                                            color: message.type === \"user\" ? \"white\" : message.isFollowUp ? \"#92400e\" : message.isIntro ? \"#5b21b6\" : \"#1f2937\",\n                                            padding: \"10px 14px\",\n                                            borderRadius: \"12px\",\n                                            maxWidth: \"85%\",\n                                            fontSize: \"0.875rem\",\n                                            border: message.isFollowUp ? \"1px solid #f59e0b\" : message.isIntro ? \"1px solid #8b5cf6\" : message.type === \"bot\" ? \"1px solid #e2e8f0\" : \"none\"\n                                        },\n                                        children: [\n                                            typeof message.text === \"string\" ? message.text : JSON.stringify(message.text),\n                                            message.dataSource && message.confidence && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                style: {\n                                                    marginTop: \"6px\",\n                                                    fontSize: \"0.65rem\",\n                                                    opacity: 0.7,\n                                                    fontStyle: \"italic\"\n                                                },\n                                                children: t(\"chat.sourceInfo\", {\n                                                    dataSource: message.dataSource,\n                                                    confidence: message.confidence\n                                                })\n                                            }, void 0, false, {\n                                                fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\GlobalHSCodeChat.js\",\n                                                lineNumber: 241,\n                                                columnNumber: 21\n                                            }, this),\n                                            message.isFollowUp && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                style: {\n                                                    marginTop: \"4px\",\n                                                    fontSize: \"0.65rem\",\n                                                    fontWeight: \"600\",\n                                                    color: \"#d97706\"\n                                                },\n                                                children: t(\"chat.followupIndicator\")\n                                            }, void 0, false, {\n                                                fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\GlobalHSCodeChat.js\",\n                                                lineNumber: 253,\n                                                columnNumber: 21\n                                            }, this),\n                                            message.hsCode && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                style: {\n                                                    marginTop: \"8px\",\n                                                    display: \"flex\",\n                                                    gap: \"6px\"\n                                                },\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    onClick: ()=>handleCopyCode(message.hsCode),\n                                                    style: {\n                                                        backgroundColor: \"#10b981\",\n                                                        color: \"white\",\n                                                        border: \"none\",\n                                                        borderRadius: \"6px\",\n                                                        padding: \"4px 8px\",\n                                                        fontSize: \"0.75rem\",\n                                                        cursor: \"pointer\"\n                                                    },\n                                                    children: t(\"chat.copyCode\")\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\GlobalHSCodeChat.js\",\n                                                    lineNumber: 265,\n                                                    columnNumber: 23\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\GlobalHSCodeChat.js\",\n                                                lineNumber: 264,\n                                                columnNumber: 21\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\GlobalHSCodeChat.js\",\n                                        lineNumber: 222,\n                                        columnNumber: 17\n                                    }, this)\n                                }, index, false, {\n                                    fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\GlobalHSCodeChat.js\",\n                                    lineNumber: 214,\n                                    columnNumber: 15\n                                }, this)),\n                            isLoading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                style: {\n                                    display: \"flex\",\n                                    justifyContent: \"flex-start\",\n                                    marginBottom: \"12px\"\n                                },\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    style: {\n                                        backgroundColor: \"#f8fafc\",\n                                        border: \"1px solid #e2e8f0\",\n                                        padding: \"10px 14px\",\n                                        borderRadius: \"12px\",\n                                        fontSize: \"0.875rem\",\n                                        color: \"#6b7280\"\n                                    },\n                                    children: t(\"chat.searchingDatabase\")\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\GlobalHSCodeChat.js\",\n                                    lineNumber: 290,\n                                    columnNumber: 17\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\GlobalHSCodeChat.js\",\n                                lineNumber: 285,\n                                columnNumber: 15\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\GlobalHSCodeChat.js\",\n                        lineNumber: 207,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            padding: \"16px\",\n                            borderTop: \"1px solid #e5e7eb\"\n                        },\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                display: \"flex\",\n                                gap: \"8px\",\n                                alignItems: \"flex-end\"\n                            },\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"text\",\n                                    value: inputText,\n                                    onChange: (e)=>setInputText(e.target.value),\n                                    onKeyPress: handleKeyPress,\n                                    placeholder: t(\"chat.placeholderGlobal\"),\n                                    style: {\n                                        flex: 1,\n                                        border: \"1px solid #d1d5db\",\n                                        borderRadius: \"8px\",\n                                        padding: \"10px 12px\",\n                                        fontSize: \"0.875rem\",\n                                        outline: \"none\"\n                                    },\n                                    disabled: isLoading\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\GlobalHSCodeChat.js\",\n                                    lineNumber: 314,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: handleSendMessage,\n                                    disabled: isLoading || !inputText.trim(),\n                                    style: {\n                                        backgroundColor: \"#3b82f6\",\n                                        color: \"white\",\n                                        border: \"none\",\n                                        borderRadius: \"8px\",\n                                        padding: \"10px 16px\",\n                                        cursor: \"pointer\",\n                                        fontSize: \"0.875rem\",\n                                        fontWeight: \"500\"\n                                    },\n                                    children: t(\"chat.send\")\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\GlobalHSCodeChat.js\",\n                                    lineNumber: 330,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\GlobalHSCodeChat.js\",\n                            lineNumber: 309,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\GlobalHSCodeChat.js\",\n                        lineNumber: 305,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\components\\\\GlobalHSCodeChat.js\",\n                lineNumber: 154,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true);\n}\n_s(GlobalMarcusIntelligenceChat, \"7XidiyAOou6klEPB9yN4wrtaA6I=\", false, function() {\n    return [\n        _hooks_useSafeTranslation__WEBPACK_IMPORTED_MODULE_2__.useSafeTranslation\n    ];\n});\n_c = GlobalMarcusIntelligenceChat;\nvar _c;\n$RefreshReg$(_c, \"GlobalMarcusIntelligenceChat\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/GlobalHSCodeChat.js\n"));

/***/ }),

/***/ "./hooks/useSafeTranslation.js":
/*!*************************************!*\
  !*** ./hooks/useSafeTranslation.js ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useSafeTranslation: function() { return /* binding */ useSafeTranslation; }\n/* harmony export */ });\n/* harmony import */ var react_i18next__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-i18next */ \"./node_modules/react-i18next/dist/es/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/**\n * BULLETPROOF TRANSLATION HOOK\n * SSR/hydration safe translation system that works in all scenarios\n * Now with fixed i18next configuration for nested JSON support\n */ var _s = $RefreshSig$();\n\n\nfunction useSafeTranslation() {\n    let namespace = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"common\";\n    _s();\n    const { t, i18n, ready } = (0,react_i18next__WEBPACK_IMPORTED_MODULE_0__.useTranslation)(namespace);\n    const [isClient, setIsClient] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [forceUpdate, setForceUpdate] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    // Track client-side hydration\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        setIsClient(true);\n    }, []);\n    // Force re-render when translations become ready\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (ready && isClient) {\n            setForceUpdate((prev)=>prev + 1);\n        }\n    }, [\n        ready,\n        isClient\n    ]);\n    // Bulletproof translation function\n    const safeT = (key, fallback)=>{\n        try {\n            var _window_location;\n            // Debug log for troubleshooting\n            if ( true && ((_window_location = window.location) === null || _window_location === void 0 ? void 0 : _window_location.pathname) === \"/foundation\" && key.includes(\"foundation\")) {\n                console.log(\"\\uD83D\\uDD27 Translation debug: \".concat(key, \" => ready: \").concat(ready, \", isClient: \").concat(isClient, \", t available: \").concat(typeof t === \"function\"));\n            }\n            // PRIORITY 1: ALWAYS return hardcoded fallbacks for Foundation keys (skip i18n entirely for critical keys)\n            if (key.startsWith(\"foundation.\")) {\n                const foundationFallbacks = {\n                    \"foundation.title\": \"Business Intelligence Foundation\",\n                    \"foundation.subtitle\": \"Complete your comprehensive business profile to unlock $100K-$300K+ annual savings through USMCA triangle routing optimization\",\n                    \"foundation.businessProfile\": \"Business Intelligence Profile\",\n                    \"foundation.businessProfileDesc\": \"Enterprise business classification and strategic market analysis for USMCA optimization\",\n                    \"foundation.companyName\": \"Company Name\",\n                    \"foundation.companyPlaceholder\": \"Your company or organization name\",\n                    \"foundation.industry\": \"Industry Classification\",\n                    \"foundation.loadingIndustries\": \"Loading industry database...\",\n                    \"foundation.selectIndustry\": \"Select your primary industry\",\n                    \"foundation.otherIndustry\": \"Other (please specify)\",\n                    \"foundation.specifyIndustry\": \"Please specify your industry\",\n                    \"foundation.supplyChainConfig\": \"Supply Chain Configuration\",\n                    \"foundation.supplyChainDesc\": \"Strategic analysis of your current supply chain for optimization opportunities\",\n                    \"foundation.businessLocation\": \"Business Location (ZIP Code)\",\n                    \"foundation.zipCodePlaceholder\": \"Your primary business ZIP code\",\n                    \"foundation.zipCodeHelp\": \"Used for geographic intelligence and port optimization analysis\",\n                    \"foundation.primarySupplierCountry\": \"Primary Supplier Country\",\n                    \"foundation.loadingCountries\": \"Loading country database...\",\n                    \"foundation.selectSupplierCountry\": \"Select your main supplier country\",\n                    \"foundation.annualImportVolume\": \"Annual Import Volume\",\n                    \"foundation.selectImportVolume\": \"Select your annual import volume\",\n                    \"foundation.optimizationPriority\": \"Optimization Priority\",\n                    \"foundation.selectOptimizationFocus\": \"Select your optimization focus\",\n                    \"foundation.processingIntelligence\": \"Processing Intelligence...\",\n                    \"foundation.continue\": \"Continue to Product Analysis\",\n                    \"foundation.liveBusinessIntelligence\": \"Live Business Intelligence\",\n                    \"foundation.intelligenceLevel\": \"Intelligence Level\",\n                    \"foundation.annualSavings\": \"Annual Savings Potential\",\n                    \"foundation.geographicIntelligence\": \"Geographic Intelligence\",\n                    \"foundation.routeConfidence\": \"Route Confidence\",\n                    \"foundation.database\": \"Database\",\n                    \"foundation.analysis\": \"Analysis\",\n                    \"foundation.enterpriseIntelligenceAnalytics\": \"Enterprise Intelligence Analytics\"\n                };\n                if (foundationFallbacks[key]) {\n                    // Always return hardcoded fallback for foundation keys (bypass i18n)\n                    return foundationFallbacks[key];\n                }\n                // If no hardcoded fallback, still try i18n but with aggressive fallback\n                if (typeof t === \"function\") {\n                    const translation = t(key, foundationFallbacks[key] || key.split(\".\").pop());\n                    if (translation && translation !== key) {\n                        return translation;\n                    }\n                }\n                // Final fallback for foundation keys\n                return key.split(\".\").pop();\n            }\n            // PRIORITY 2: Try normal i18n translation\n            if (typeof t === \"function\" && ready && isClient) {\n                var _window_location1;\n                const translation = t(key, fallback);\n                // More detailed debug log\n                if ( true && ((_window_location1 = window.location) === null || _window_location1 === void 0 ? void 0 : _window_location1.pathname) === \"/foundation\" && key.includes(\"foundation\")) {\n                    console.log(\"\\uD83D\\uDD27 Translation result: \".concat(key, ' => \"').concat(translation, '\"'));\n                }\n                // Return translation if valid, otherwise fallback\n                if (translation && translation !== key && translation !== \"t(\".concat(key, \")\")) {\n                    return translation;\n                }\n            }\n            // PRIORITY 3: SSR fallback - return fallback or extract last part of key\n            return fallback || key.split(\".\").pop();\n        } catch (error) {\n            console.warn(\"\\uD83D\\uDD27 Translation fallback for key: \".concat(key), error);\n            return fallback || key.split(\".\").pop();\n        }\n    };\n    // Safe language change function\n    const safeChangeLanguage = async (lng)=>{\n        try {\n            if (i18n && typeof i18n.changeLanguage === \"function\") {\n                await i18n.changeLanguage(lng);\n                return true;\n            }\n            return false;\n        } catch (error) {\n            console.warn(\"\\uD83D\\uDD27 Language change fallback for: \".concat(lng), error);\n            return false;\n        }\n    };\n    return {\n        t: safeT,\n        i18n: i18n || {},\n        ready: ready && isClient,\n        isClient,\n        changeLanguage: safeChangeLanguage,\n        currentLanguage: (i18n === null || i18n === void 0 ? void 0 : i18n.language) || \"en\"\n    };\n}\n_s(useSafeTranslation, \"hzUcDPAxcX6AQHha307pWaG4SBo=\", false, function() {\n    return [\n        react_i18next__WEBPACK_IMPORTED_MODULE_0__.useTranslation\n    ];\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (useSafeTranslation);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./hooks/useSafeTranslation.js\n"));

/***/ }),

/***/ "./lib/environment-validation.js":
/*!***************************************!*\
  !*** ./lib/environment-validation.js ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEnvVar: function() { return /* binding */ getEnvVar; },\n/* harmony export */   getSecurityStatus: function() { return /* binding */ getSecurityStatus; },\n/* harmony export */   getSupabaseConfig: function() { return /* binding */ getSupabaseConfig; },\n/* harmony export */   isDevelopment: function() { return /* binding */ isDevelopment; },\n/* harmony export */   isProduction: function() { return /* binding */ isProduction; },\n/* harmony export */   safeLog: function() { return /* binding */ safeLog; },\n/* harmony export */   validateAPIKeysSecurity: function() { return /* binding */ validateAPIKeysSecurity; },\n/* harmony export */   validateEnvironment: function() { return /* binding */ validateEnvironment; },\n/* harmony export */   validateSecretSecurity: function() { return /* binding */ validateSecretSecurity; }\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n/**\n * Environment Variable Validation and Configuration\n * Centralized validation for production readiness\n */ // Required environment variables for production\n// Split by client/server because client can't see server-only vars\nconst CLIENT_REQUIRED_ENV_VARS = [\n    \"NEXT_PUBLIC_SUPABASE_URL\",\n    \"NEXT_PUBLIC_SUPABASE_ANON_KEY\"\n];\nconst SERVER_REQUIRED_ENV_VARS = [\n    \"NEXT_PUBLIC_SUPABASE_URL\",\n    \"NEXT_PUBLIC_SUPABASE_ANON_KEY\",\n    \"SUPABASE_SERVICE_ROLE_KEY\",\n    \"JWT_SECRET\",\n    \"NEXTAUTH_SECRET\"\n];\nconst SERVER_RECOMMENDED_ENV_VARS = [\n    \"ANTHROPIC_API_KEY\",\n    \"COMTRADE_API_KEY\",\n    \"SHIPPO_API_KEY\",\n    \"STRIPE_SECRET_KEY\"\n];\n// Optional environment variables with defaults\nconst OPTIONAL_ENV_VARS = {\n    NODE_ENV: \"development\",\n    NEXT_PUBLIC_APP_URL: \"http://localhost:3000\"\n};\n/**\n * Validate all required environment variables are present\n * @throws {Error} If any required variable is missing\n */ function validateEnvironment() {\n    // Skip validation entirely on client-side to avoid errors\n    if (true) {\n        console.log(\"✅ Environment validation skipped on client-side\");\n        return;\n    }\n    // Server-side validation\n    const missing = SERVER_REQUIRED_ENV_VARS.filter((key)=>!process.env[key]);\n    if (missing.length > 0) {\n        throw new Error(\"Missing required server-side environment variables: \".concat(missing.join(\", \")));\n    }\n    // Note: Using console.log here as this runs before logger is initialized\n    console.log(\"✅ All required environment variables are present\");\n}\n/**\n * Get environment variable with validation\n * @param {string} key - Environment variable key\n * @param {boolean} required - Whether the variable is required\n * @returns {string} Environment variable value\n */ function getEnvVar(key) {\n    let required = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;\n    const value = process.env[key];\n    if (required && !value) {\n        throw new Error(\"Missing required environment variable: \".concat(key));\n    }\n    return value || OPTIONAL_ENV_VARS[key];\n}\n/**\n * Check if running in production\n */ function isProduction() {\n    return \"development\" === \"production\";\n}\n/**\n * Check if running in development\n */ function isDevelopment() {\n    return \"development\" === \"development\";\n}\n/**\n * Safe logging that respects environment\n * Only logs in development unless force is true\n */ function safeLog(message) {\n    let data = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, force = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;\n    if (isDevelopment() || force) {\n        if (data) {\n            // Note: Using console.log here as this is used for bootstrap logging\n            console.log(message, data);\n        } else {\n            console.log(message);\n        }\n    }\n}\n/**\n * Get Supabase configuration based on environment\n */ function getSupabaseConfig() {\n    const url = getEnvVar(\"NEXT_PUBLIC_SUPABASE_URL\");\n    // Use service role key on server, anon key on client\n    const key =  true ? getEnvVar(\"NEXT_PUBLIC_SUPABASE_ANON_KEY\") : 0;\n    return {\n        url,\n        key\n    };\n}\n/**\n * Validate API keys are not exposed and check for security issues\n */ function validateAPIKeysSecurity() {\n    const sensitiveKeys = [\n        \"SUPABASE_SERVICE_ROLE_KEY\",\n        \"ANTHROPIC_API_KEY\",\n        \"STRIPE_SECRET_KEY\",\n        \"COMTRADE_API_KEY\",\n        \"SHIPPO_API_KEY\",\n        \"JWT_SECRET\",\n        \"NEXTAUTH_SECRET\",\n        \"ENTERPRISE_MASTER_KEY\"\n    ];\n    if (true) {\n        // Check if any sensitive keys are accessible on client\n        const exposedKeys = sensitiveKeys.filter((key)=>{\n            var _window_process_env, _window_process;\n            return (_window_process = window.process) === null || _window_process === void 0 ? void 0 : (_window_process_env = _window_process.env) === null || _window_process_env === void 0 ? void 0 : _window_process_env[key];\n        });\n        if (exposedKeys.length > 0) {\n            throw new Error(\"SECURITY VIOLATION: Sensitive keys exposed to client: \".concat(exposedKeys.join(\", \")));\n        }\n    }\n}\n/**\n * Check for dangerous default/template values\n */ function validateSecretSecurity() {\n    const dangerousPatterns = [\n        {\n            key: \"JWT_SECRET\",\n            patterns: [\n                \"your-super-secure\",\n                \"generate-new\",\n                \"REPLACE_WITH\"\n            ]\n        },\n        {\n            key: \"NEXTAUTH_SECRET\",\n            patterns: [\n                \"your-nextauth-secret\",\n                \"generate-new\",\n                \"REPLACE_WITH\"\n            ]\n        },\n        {\n            key: \"ENTERPRISE_MASTER_KEY\",\n            patterns: [\n                \"triangle-intelligence-enterprise\",\n                \"generate-new\",\n                \"REPLACE_WITH\"\n            ]\n        },\n        {\n            key: \"ANTHROPIC_API_KEY\",\n            patterns: [\n                \"your-key-here\",\n                \"REPLACE_WITH\"\n            ]\n        }\n    ];\n    const warnings = [];\n    dangerousPatterns.forEach((param)=>{\n        let { key, patterns } = param;\n        if (process.env[key]) {\n            patterns.forEach((pattern)=>{\n                if (process.env[key].includes(pattern)) {\n                    warnings.push(\"\".concat(key, \" appears to use default/template value\"));\n                }\n            });\n        }\n    });\n    // Check secret strength\n    if (process.env.JWT_SECRET && process.env.JWT_SECRET.length < 32) {\n        warnings.push(\"JWT_SECRET is too short (minimum 32 characters)\");\n    }\n    return warnings;\n}\n/**\n * Get comprehensive security status\n */ function getSecurityStatus() {\n    const warnings = validateSecretSecurity();\n    const requiredMissing = SERVER_REQUIRED_ENV_VARS.filter((key)=>!process.env[key]);\n    const recommendedMissing = SERVER_RECOMMENDED_ENV_VARS.filter((key)=>!process.env[key]);\n    return {\n        status: requiredMissing.length === 0 && warnings.length === 0 ? \"secure\" : \"needs_attention\",\n        requiredMissing,\n        recommendedMissing,\n        securityWarnings: warnings,\n        lastChecked: new Date().toISOString()\n    };\n}\n// Auto-validate on import in development (SERVER-SIDE ONLY)\nif (isDevelopment() && \"object\" === \"undefined\") {}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/environment-validation.js\n"));

/***/ }),

/***/ "./lib/i18n-database-backend.js":
/*!**************************************!*\
  !*** ./lib/i18n-database-backend.js ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _supabase_client_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabase-client.js */ \"./lib/supabase-client.js\");\n/* harmony import */ var _production_logger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./production-logger.js */ \"./lib/production-logger.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n/**\n * DATABASE-POWERED I18NEXT BACKEND\n * Loads translations from Supabase database with fallback to static JSON\n * Supports real-time updates and professional translation management\n */ \n\n// Constants for Triangle Intelligence patterns\nconst TRANSLATION_CACHE_DURATION = process.env.CACHE_TTL_STABLE_DATA ? parseInt(process.env.CACHE_TTL_STABLE_DATA) * 1000 : 86400000 // 24 hours default\n;\nconst TRANSLATION_QUERY_TIMEOUT = process.env.DB_QUERY_TIMEOUT_MS ? parseInt(process.env.DB_QUERY_TIMEOUT_MS) : 8000 // 8 seconds default\n;\nclass DatabaseBackend {\n    static get type() {\n        return \"backend\";\n    }\n    init(services, options) {\n        this.services = services;\n        this.options = {\n            loadPath: \"/locales/{{lng}}/{{ns}}.json\",\n            addPath: \"/api/translations/add/{{lng}}/{{ns}}\",\n            ...options\n        };\n        this.type = \"backend\";\n        this.cache = new Map();\n        this.cacheExpiry = TRANSLATION_CACHE_DURATION;\n        (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_1__.logInfo)(\"Initialized Database Intelligence Bridge for translations\", {\n            cacheExpiry: this.cacheExpiry,\n            queryTimeout: TRANSLATION_QUERY_TIMEOUT\n        });\n    }\n    async read(language, namespace, callback) {\n        const startTime = Date.now();\n        try {\n            // Check cache first\n            const cacheKey = \"\".concat(language, \"-\").concat(namespace);\n            const cached = this.cache.get(cacheKey);\n            if (cached && Date.now() - cached.timestamp < this.cacheExpiry) {\n                (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_1__.logInfo)(\"Loading translations from cache\", {\n                    cacheKey\n                });\n                callback(null, cached.data);\n                return;\n            }\n            (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_1__.logInfo)(\"LANGUAGE SWITCH: Loading translations via Database Intelligence Bridge\", {\n                language,\n                namespace\n            });\n            // Use StableDataManager for translations (stable data - no API calls needed)\n            const translations = await this.getTranslationsFromBridge(language);\n            if (!translations || Object.keys(translations).length === 0) {\n                (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_1__.logInfo)(\"No translations found in database, using fallback\", {\n                    language\n                });\n                return this.loadFallback(language, namespace, callback);\n            }\n            // Cache the results\n            this.cache.set(cacheKey, {\n                data: translations,\n                timestamp: Date.now()\n            });\n            const duration = Date.now() - startTime;\n            (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_1__.logPerformance)(\"translation_load\", duration, {\n                language,\n                translationCount: Object.keys(translations).length,\n                source: \"DATABASE_BRIDGE\"\n            });\n            callback(null, translations);\n        } catch (error) {\n            const duration = Date.now() - startTime;\n            (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_1__.logError)(\"Database backend error via Bridge\", {\n                error: error.message,\n                language,\n                duration: \"\".concat(duration, \"ms\")\n            });\n            this.loadFallback(language, namespace, callback);\n        }\n    }\n    /**\n   * Get translations using Database Intelligence Bridge patterns\n   * Following Triangle Intelligence architecture for stable data access\n   */ async getTranslationsFromBridge(language) {\n        const startTime = Date.now();\n        try {\n            // Create a stable data query for translations using Triangle Intelligence singleton pattern\n            const query = async ()=>{\n                const supabase = (0,_supabase_client_js__WEBPACK_IMPORTED_MODULE_0__.getSupabaseClient)();\n                const { data, error } = await supabase.from(\"translations\").select(\"key, value\").eq(\"language\", language).not(\"value\", \"is\", null);\n                if (error) {\n                    throw new Error(\"Translation query failed: \".concat(error.message));\n                }\n                return data;\n            };\n            // Execute query with performance tracking\n            const data = await query();\n            const queryDuration = Date.now() - startTime;\n            (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_1__.logDBQuery)(\"translations\", \"SELECT\", queryDuration, (data === null || data === void 0 ? void 0 : data.length) || 0);\n            if (!data || data.length === 0) {\n                return null;\n            }\n            // Convert flat key-value pairs to nested object structure\n            const translations = {};\n            data.forEach((row)=>{\n                this.setNestedKey(translations, row.key, row.value);\n            });\n            (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_1__.logInfo)(\"Successfully loaded translations via Database Intelligence Bridge\", {\n                language,\n                count: data.length,\n                queryDuration: \"\".concat(queryDuration, \"ms\")\n            });\n            return translations;\n        } catch (error) {\n            const duration = Date.now() - startTime;\n            (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_1__.logError)(\"Database Intelligence Bridge translation query failed\", {\n                error: error.message,\n                language,\n                duration: \"\".concat(duration, \"ms\")\n            });\n            return null;\n        }\n    }\n    // Load fallback translations from static JSON files\n    async loadFallback(language, namespace, callback) {\n        try {\n            (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_1__.logInfo)(\"Loading fallback translations\", {\n                language,\n                namespace\n            });\n            // Ultimate fallback - minimal English translations\n            const fallbackTranslations = this.getMinimalFallback();\n            callback(null, fallbackTranslations);\n        } catch (error) {\n            (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_1__.logError)(\"Fallback loading failed\", {\n                error: error.message\n            });\n            callback(null, this.getMinimalFallback());\n        }\n    }\n    // Convert dot notation keys to nested objects\n    setNestedKey(obj, key, value) {\n        const keys = key.split(\".\");\n        let current = obj;\n        for(let i = 0; i < keys.length - 1; i++){\n            if (!current[keys[i]] || typeof current[keys[i]] !== \"object\") {\n                current[keys[i]] = {};\n            }\n            current = current[keys[i]];\n        }\n        current[keys[keys.length - 1]] = value;\n    }\n    // Minimal fallback translations to prevent app breakage\n    getMinimalFallback() {\n        return {\n            common: {\n                next: \"Next\",\n                back: \"Back\",\n                save: \"Save\",\n                loading: \"Loading...\",\n                error: \"Error\"\n            },\n            nav: {\n                dashboard: \"Dashboard\",\n                stages: \"Stages\"\n            }\n        };\n    }\n    // Clear cache (useful for real-time updates)\n    clearCache() {\n        this.cache.clear();\n        (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_1__.logInfo)(\"Translation cache cleared\");\n    }\n    // Add new translation to database using Database Intelligence Bridge\n    async create(languages, namespace, key, fallbackValue, callback) {\n        const startTime = Date.now();\n        try {\n            const translations = languages.map((language)=>({\n                    key: \"\".concat(namespace, \".\").concat(key),\n                    language,\n                    value: fallbackValue,\n                    context: \"Auto-created from \".concat(namespace),\n                    created_at: new Date().toISOString()\n                }));\n            // Use Triangle Intelligence singleton pattern for insert operations\n            const supabase = (0,_supabase_client_js__WEBPACK_IMPORTED_MODULE_0__.getSupabaseClient)();\n            const { error } = await supabase.from(\"translations\").insert(translations);\n            const duration = Date.now() - startTime;\n            if (error) {\n                (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_1__.logError)(\"Failed to create translation via Triangle Intelligence Bridge\", {\n                    error: error.message,\n                    key: \"\".concat(namespace, \".\").concat(key),\n                    duration: \"\".concat(duration, \"ms\")\n                });\n                callback && callback(error);\n            } else {\n                (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_1__.logDBQuery)(\"translations\", \"INSERT\", duration, translations.length);\n                (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_1__.logInfo)(\"Created translation via Triangle Intelligence Bridge\", {\n                    key: \"\".concat(namespace, \".\").concat(key),\n                    languages: languages.length,\n                    duration: \"\".concat(duration, \"ms\")\n                });\n                this.clearCache() // Clear cache to reload new translations\n                ;\n                callback && callback(null);\n            }\n        } catch (error) {\n            const duration = Date.now() - startTime;\n            (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_1__.logError)(\"Create translation error via Triangle Intelligence Bridge\", {\n                error: error.message,\n                duration: \"\".concat(duration, \"ms\")\n            });\n            callback && callback(error);\n        }\n    }\n    constructor(services, options = {}){\n        this.init(services, options);\n    }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (DatabaseBackend);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvaTE4bi1kYXRhYmFzZS1iYWNrZW5kLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7OztDQUlDLEdBRXVEO0FBQzhCO0FBRXRGLCtDQUErQztBQUMvQyxNQUFNSyw2QkFBNkJDLE9BQU9BLENBQUNDLEdBQUcsQ0FBQ0MscUJBQXFCLEdBQ2xFQyxTQUFTSCxPQUFPQSxDQUFDQyxHQUFHLENBQUNDLHFCQUFxQixJQUFJLE9BQU8sU0FBUyxtQkFBbUI7O0FBRW5GLE1BQU1FLDRCQUE0QkosT0FBT0EsQ0FBQ0MsR0FBRyxDQUFDSSxtQkFBbUIsR0FDL0RGLFNBQVNILE9BQU9BLENBQUNDLEdBQUcsQ0FBQ0ksbUJBQW1CLElBQUksS0FBSyxvQkFBb0I7O0FBRXZFLE1BQU1DO0lBS0osV0FBV0MsT0FBTztRQUNoQixPQUFPO0lBQ1Q7SUFFQUMsS0FBS0MsUUFBUSxFQUFFQyxPQUFPLEVBQUU7UUFDdEIsSUFBSSxDQUFDRCxRQUFRLEdBQUdBO1FBQ2hCLElBQUksQ0FBQ0MsT0FBTyxHQUFHO1lBQ2JDLFVBQVU7WUFDVkMsU0FBUztZQUNULEdBQUdGLE9BQU87UUFDWjtRQUVBLElBQUksQ0FBQ0gsSUFBSSxHQUFHO1FBQ1osSUFBSSxDQUFDTSxLQUFLLEdBQUcsSUFBSUM7UUFDakIsSUFBSSxDQUFDQyxXQUFXLEdBQUdoQjtRQUVuQkosOERBQU9BLENBQUMsNkRBQTZEO1lBQ25Fb0IsYUFBYSxJQUFJLENBQUNBLFdBQVc7WUFDN0JDLGNBQWNaO1FBQ2hCO0lBQ0Y7SUFFQSxNQUFNYSxLQUFLQyxRQUFRLEVBQUVDLFNBQVMsRUFBRUMsUUFBUSxFQUFFO1FBQ3hDLE1BQU1DLFlBQVlDLEtBQUtDLEdBQUc7UUFFMUIsSUFBSTtZQUNGLG9CQUFvQjtZQUNwQixNQUFNQyxXQUFXLEdBQWVMLE9BQVpELFVBQVMsS0FBYSxPQUFWQztZQUNoQyxNQUFNTSxTQUFTLElBQUksQ0FBQ1osS0FBSyxDQUFDYSxHQUFHLENBQUNGO1lBRTlCLElBQUlDLFVBQVVILEtBQUtDLEdBQUcsS0FBS0UsT0FBT0UsU0FBUyxHQUFHLElBQUksQ0FBQ1osV0FBVyxFQUFFO2dCQUM5RHBCLDhEQUFPQSxDQUFDLG1DQUFtQztvQkFBRTZCO2dCQUFTO2dCQUN0REosU0FBUyxNQUFNSyxPQUFPRyxJQUFJO2dCQUMxQjtZQUNGO1lBRUFqQyw4REFBT0EsQ0FBQywwRUFBMEU7Z0JBQUV1QjtnQkFBVUM7WUFBVTtZQUV4Ryw2RUFBNkU7WUFDN0UsTUFBTVUsZUFBZSxNQUFNLElBQUksQ0FBQ0MseUJBQXlCLENBQUNaO1lBRTFELElBQUksQ0FBQ1csZ0JBQWdCRSxPQUFPQyxJQUFJLENBQUNILGNBQWNJLE1BQU0sS0FBSyxHQUFHO2dCQUMzRHRDLDhEQUFPQSxDQUFDLHFEQUFxRDtvQkFBRXVCO2dCQUFTO2dCQUN4RSxPQUFPLElBQUksQ0FBQ2dCLFlBQVksQ0FBQ2hCLFVBQVVDLFdBQVdDO1lBQ2hEO1lBRUEsb0JBQW9CO1lBQ3BCLElBQUksQ0FBQ1AsS0FBSyxDQUFDc0IsR0FBRyxDQUFDWCxVQUFVO2dCQUN2QkksTUFBTUM7Z0JBQ05GLFdBQVdMLEtBQUtDLEdBQUc7WUFDckI7WUFFQSxNQUFNYSxXQUFXZCxLQUFLQyxHQUFHLEtBQUtGO1lBQzlCdkIscUVBQWNBLENBQUMsb0JBQW9Cc0MsVUFBVTtnQkFDM0NsQjtnQkFDQW1CLGtCQUFrQk4sT0FBT0MsSUFBSSxDQUFDSCxjQUFjSSxNQUFNO2dCQUNsREssUUFBUTtZQUNWO1lBRUFsQixTQUFTLE1BQU1TO1FBRWpCLEVBQUUsT0FBT1UsT0FBTztZQUNkLE1BQU1ILFdBQVdkLEtBQUtDLEdBQUcsS0FBS0Y7WUFDOUJ6QiwrREFBUUEsQ0FBQyxxQ0FBcUM7Z0JBQzVDMkMsT0FBT0EsTUFBTUMsT0FBTztnQkFDcEJ0QjtnQkFDQWtCLFVBQVUsR0FBWSxPQUFUQSxVQUFTO1lBQ3hCO1lBQ0EsSUFBSSxDQUFDRixZQUFZLENBQUNoQixVQUFVQyxXQUFXQztRQUN6QztJQUNGO0lBRUE7OztHQUdDLEdBQ0QsTUFBTVUsMEJBQTBCWixRQUFRLEVBQUU7UUFDeEMsTUFBTUcsWUFBWUMsS0FBS0MsR0FBRztRQUUxQixJQUFJO1lBQ0YsNEZBQTRGO1lBQzVGLE1BQU1rQixRQUFRO2dCQUNaLE1BQU1DLFdBQVdoRCxzRUFBaUJBO2dCQUVsQyxNQUFNLEVBQUVrQyxJQUFJLEVBQUVXLEtBQUssRUFBRSxHQUFHLE1BQU1HLFNBQzNCQyxJQUFJLENBQUMsZ0JBQ0xDLE1BQU0sQ0FBQyxjQUNQQyxFQUFFLENBQUMsWUFBWTNCLFVBQ2Y0QixHQUFHLENBQUMsU0FBUyxNQUFNO2dCQUV0QixJQUFJUCxPQUFPO29CQUNULE1BQU0sSUFBSVEsTUFBTSw2QkFBMkMsT0FBZFIsTUFBTUMsT0FBTztnQkFDNUQ7Z0JBRUEsT0FBT1o7WUFDVDtZQUVBLDBDQUEwQztZQUMxQyxNQUFNQSxPQUFPLE1BQU1hO1lBQ25CLE1BQU1PLGdCQUFnQjFCLEtBQUtDLEdBQUcsS0FBS0Y7WUFFbkN4QixpRUFBVUEsQ0FBQyxnQkFBZ0IsVUFBVW1ELGVBQWVwQixDQUFBQSxpQkFBQUEsMkJBQUFBLEtBQU1LLE1BQU0sS0FBSTtZQUVwRSxJQUFJLENBQUNMLFFBQVFBLEtBQUtLLE1BQU0sS0FBSyxHQUFHO2dCQUM5QixPQUFPO1lBQ1Q7WUFFQSwwREFBMEQ7WUFDMUQsTUFBTUosZUFBZSxDQUFDO1lBQ3RCRCxLQUFLcUIsT0FBTyxDQUFDQyxDQUFBQTtnQkFDWCxJQUFJLENBQUNDLFlBQVksQ0FBQ3RCLGNBQWNxQixJQUFJRSxHQUFHLEVBQUVGLElBQUlHLEtBQUs7WUFDcEQ7WUFFQTFELDhEQUFPQSxDQUFDLHFFQUFxRTtnQkFDM0V1QjtnQkFDQW9DLE9BQU8xQixLQUFLSyxNQUFNO2dCQUNsQmUsZUFBZSxHQUFpQixPQUFkQSxlQUFjO1lBQ2xDO1lBRUEsT0FBT25CO1FBRVQsRUFBRSxPQUFPVSxPQUFPO1lBQ2QsTUFBTUgsV0FBV2QsS0FBS0MsR0FBRyxLQUFLRjtZQUM5QnpCLCtEQUFRQSxDQUFDLHlEQUF5RDtnQkFDaEUyQyxPQUFPQSxNQUFNQyxPQUFPO2dCQUNwQnRCO2dCQUNBa0IsVUFBVSxHQUFZLE9BQVRBLFVBQVM7WUFDeEI7WUFDQSxPQUFPO1FBQ1Q7SUFDRjtJQUVBLG9EQUFvRDtJQUNwRCxNQUFNRixhQUFhaEIsUUFBUSxFQUFFQyxTQUFTLEVBQUVDLFFBQVEsRUFBRTtRQUNoRCxJQUFJO1lBQ0Z6Qiw4REFBT0EsQ0FBQyxpQ0FBaUM7Z0JBQUV1QjtnQkFBVUM7WUFBVTtZQUUvRCxtREFBbUQ7WUFDbkQsTUFBTW9DLHVCQUF1QixJQUFJLENBQUNDLGtCQUFrQjtZQUNwRHBDLFNBQVMsTUFBTW1DO1FBQ2pCLEVBQUUsT0FBT2hCLE9BQU87WUFDZDNDLCtEQUFRQSxDQUFDLDJCQUEyQjtnQkFBRTJDLE9BQU9BLE1BQU1DLE9BQU87WUFBQztZQUMzRHBCLFNBQVMsTUFBTSxJQUFJLENBQUNvQyxrQkFBa0I7UUFDeEM7SUFDRjtJQUVBLDhDQUE4QztJQUM5Q0wsYUFBYU0sR0FBRyxFQUFFTCxHQUFHLEVBQUVDLEtBQUssRUFBRTtRQUM1QixNQUFNckIsT0FBT29CLElBQUlNLEtBQUssQ0FBQztRQUN2QixJQUFJQyxVQUFVRjtRQUVkLElBQUssSUFBSUcsSUFBSSxHQUFHQSxJQUFJNUIsS0FBS0MsTUFBTSxHQUFHLEdBQUcyQixJQUFLO1lBQ3hDLElBQUksQ0FBQ0QsT0FBTyxDQUFDM0IsSUFBSSxDQUFDNEIsRUFBRSxDQUFDLElBQUksT0FBT0QsT0FBTyxDQUFDM0IsSUFBSSxDQUFDNEIsRUFBRSxDQUFDLEtBQUssVUFBVTtnQkFDN0RELE9BQU8sQ0FBQzNCLElBQUksQ0FBQzRCLEVBQUUsQ0FBQyxHQUFHLENBQUM7WUFDdEI7WUFDQUQsVUFBVUEsT0FBTyxDQUFDM0IsSUFBSSxDQUFDNEIsRUFBRSxDQUFDO1FBQzVCO1FBRUFELE9BQU8sQ0FBQzNCLElBQUksQ0FBQ0EsS0FBS0MsTUFBTSxHQUFHLEVBQUUsQ0FBQyxHQUFHb0I7SUFDbkM7SUFFQSx3REFBd0Q7SUFDeERHLHFCQUFxQjtRQUNuQixPQUFPO1lBQ0xLLFFBQVE7Z0JBQ05DLE1BQU07Z0JBQ05DLE1BQU07Z0JBQ05DLE1BQU07Z0JBQ05DLFNBQVM7Z0JBQ1QxQixPQUFPO1lBQ1Q7WUFDQTJCLEtBQUs7Z0JBQ0hDLFdBQVc7Z0JBQ1hDLFFBQVE7WUFDVjtRQUNGO0lBQ0Y7SUFFQSw2Q0FBNkM7SUFDN0NDLGFBQWE7UUFDWCxJQUFJLENBQUN4RCxLQUFLLENBQUN5RCxLQUFLO1FBQ2hCM0UsOERBQU9BLENBQUM7SUFDVjtJQUVBLHFFQUFxRTtJQUNyRSxNQUFNNEUsT0FBT0MsU0FBUyxFQUFFckQsU0FBUyxFQUFFaUMsR0FBRyxFQUFFcUIsYUFBYSxFQUFFckQsUUFBUSxFQUFFO1FBQy9ELE1BQU1DLFlBQVlDLEtBQUtDLEdBQUc7UUFFMUIsSUFBSTtZQUNGLE1BQU1NLGVBQWUyQyxVQUFVRSxHQUFHLENBQUN4RCxDQUFBQSxXQUFhO29CQUM5Q2tDLEtBQUssR0FBZ0JBLE9BQWJqQyxXQUFVLEtBQU8sT0FBSmlDO29CQUNyQmxDO29CQUNBbUMsT0FBT29CO29CQUNQRSxTQUFTLHFCQUErQixPQUFWeEQ7b0JBQzlCeUQsWUFBWSxJQUFJdEQsT0FBT3VELFdBQVc7Z0JBQ3BDO1lBRUEsb0VBQW9FO1lBQ3BFLE1BQU1uQyxXQUFXaEQsc0VBQWlCQTtZQUNsQyxNQUFNLEVBQUU2QyxLQUFLLEVBQUUsR0FBRyxNQUFNRyxTQUNyQkMsSUFBSSxDQUFDLGdCQUNMbUMsTUFBTSxDQUFDakQ7WUFFVixNQUFNTyxXQUFXZCxLQUFLQyxHQUFHLEtBQUtGO1lBRTlCLElBQUlrQixPQUFPO2dCQUNUM0MsK0RBQVFBLENBQUMsaUVBQWlFO29CQUN4RTJDLE9BQU9BLE1BQU1DLE9BQU87b0JBQ3BCWSxLQUFLLEdBQWdCQSxPQUFiakMsV0FBVSxLQUFPLE9BQUppQztvQkFDckJoQixVQUFVLEdBQVksT0FBVEEsVUFBUztnQkFDeEI7Z0JBQ0FoQixZQUFZQSxTQUFTbUI7WUFDdkIsT0FBTztnQkFDTDFDLGlFQUFVQSxDQUFDLGdCQUFnQixVQUFVdUMsVUFBVVAsYUFBYUksTUFBTTtnQkFDbEV0Qyw4REFBT0EsQ0FBQyx3REFBd0Q7b0JBQzlEeUQsS0FBSyxHQUFnQkEsT0FBYmpDLFdBQVUsS0FBTyxPQUFKaUM7b0JBQ3JCb0IsV0FBV0EsVUFBVXZDLE1BQU07b0JBQzNCRyxVQUFVLEdBQVksT0FBVEEsVUFBUztnQkFDeEI7Z0JBQ0EsSUFBSSxDQUFDaUMsVUFBVSxHQUFHLHlDQUF5Qzs7Z0JBQzNEakQsWUFBWUEsU0FBUztZQUN2QjtRQUNGLEVBQUUsT0FBT21CLE9BQU87WUFDZCxNQUFNSCxXQUFXZCxLQUFLQyxHQUFHLEtBQUtGO1lBQzlCekIsK0RBQVFBLENBQUMsNkRBQTZEO2dCQUNwRTJDLE9BQU9BLE1BQU1DLE9BQU87Z0JBQ3BCSixVQUFVLEdBQVksT0FBVEEsVUFBUztZQUN4QjtZQUNBaEIsWUFBWUEsU0FBU21CO1FBQ3ZCO0lBQ0Y7SUExT0F3QyxZQUFZdEUsUUFBUSxFQUFFQyxVQUFVLENBQUMsQ0FBQyxDQUFFO1FBQ2xDLElBQUksQ0FBQ0YsSUFBSSxDQUFDQyxVQUFVQztJQUN0QjtBQXlPRjtBQUVBLCtEQUFlSixlQUFlQSxFQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2xpYi9pMThuLWRhdGFiYXNlLWJhY2tlbmQuanM/ZGVlOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIERBVEFCQVNFLVBPV0VSRUQgSTE4TkVYVCBCQUNLRU5EXG4gKiBMb2FkcyB0cmFuc2xhdGlvbnMgZnJvbSBTdXBhYmFzZSBkYXRhYmFzZSB3aXRoIGZhbGxiYWNrIHRvIHN0YXRpYyBKU09OXG4gKiBTdXBwb3J0cyByZWFsLXRpbWUgdXBkYXRlcyBhbmQgcHJvZmVzc2lvbmFsIHRyYW5zbGF0aW9uIG1hbmFnZW1lbnRcbiAqL1xuXG5pbXBvcnQgeyBnZXRTdXBhYmFzZUNsaWVudCB9IGZyb20gJy4vc3VwYWJhc2UtY2xpZW50LmpzJ1xuaW1wb3J0IHsgbG9nSW5mbywgbG9nRXJyb3IsIGxvZ0RCUXVlcnksIGxvZ1BlcmZvcm1hbmNlIH0gZnJvbSAnLi9wcm9kdWN0aW9uLWxvZ2dlci5qcydcblxuLy8gQ29uc3RhbnRzIGZvciBUcmlhbmdsZSBJbnRlbGxpZ2VuY2UgcGF0dGVybnNcbmNvbnN0IFRSQU5TTEFUSU9OX0NBQ0hFX0RVUkFUSU9OID0gcHJvY2Vzcy5lbnYuQ0FDSEVfVFRMX1NUQUJMRV9EQVRBID8gXG4gIHBhcnNlSW50KHByb2Nlc3MuZW52LkNBQ0hFX1RUTF9TVEFCTEVfREFUQSkgKiAxMDAwIDogODY0MDAwMDAgLy8gMjQgaG91cnMgZGVmYXVsdFxuXG5jb25zdCBUUkFOU0xBVElPTl9RVUVSWV9USU1FT1VUID0gcHJvY2Vzcy5lbnYuREJfUVVFUllfVElNRU9VVF9NUyA/XG4gIHBhcnNlSW50KHByb2Nlc3MuZW52LkRCX1FVRVJZX1RJTUVPVVRfTVMpIDogODAwMCAvLyA4IHNlY29uZHMgZGVmYXVsdFxuXG5jbGFzcyBEYXRhYmFzZUJhY2tlbmQge1xuICBjb25zdHJ1Y3RvcihzZXJ2aWNlcywgb3B0aW9ucyA9IHt9KSB7XG4gICAgdGhpcy5pbml0KHNlcnZpY2VzLCBvcHRpb25zKVxuICB9XG5cbiAgc3RhdGljIGdldCB0eXBlKCkge1xuICAgIHJldHVybiAnYmFja2VuZCdcbiAgfVxuXG4gIGluaXQoc2VydmljZXMsIG9wdGlvbnMpIHtcbiAgICB0aGlzLnNlcnZpY2VzID0gc2VydmljZXNcbiAgICB0aGlzLm9wdGlvbnMgPSB7XG4gICAgICBsb2FkUGF0aDogJy9sb2NhbGVzL3t7bG5nfX0ve3tuc319Lmpzb24nLFxuICAgICAgYWRkUGF0aDogJy9hcGkvdHJhbnNsYXRpb25zL2FkZC97e2xuZ319L3t7bnN9fScsXG4gICAgICAuLi5vcHRpb25zXG4gICAgfVxuICAgIFxuICAgIHRoaXMudHlwZSA9ICdiYWNrZW5kJ1xuICAgIHRoaXMuY2FjaGUgPSBuZXcgTWFwKClcbiAgICB0aGlzLmNhY2hlRXhwaXJ5ID0gVFJBTlNMQVRJT05fQ0FDSEVfRFVSQVRJT05cbiAgICBcbiAgICBsb2dJbmZvKCdJbml0aWFsaXplZCBEYXRhYmFzZSBJbnRlbGxpZ2VuY2UgQnJpZGdlIGZvciB0cmFuc2xhdGlvbnMnLCB7XG4gICAgICBjYWNoZUV4cGlyeTogdGhpcy5jYWNoZUV4cGlyeSxcbiAgICAgIHF1ZXJ5VGltZW91dDogVFJBTlNMQVRJT05fUVVFUllfVElNRU9VVFxuICAgIH0pXG4gIH1cblxuICBhc3luYyByZWFkKGxhbmd1YWdlLCBuYW1lc3BhY2UsIGNhbGxiYWNrKSB7XG4gICAgY29uc3Qgc3RhcnRUaW1lID0gRGF0ZS5ub3coKVxuICAgIFxuICAgIHRyeSB7XG4gICAgICAvLyBDaGVjayBjYWNoZSBmaXJzdFxuICAgICAgY29uc3QgY2FjaGVLZXkgPSBgJHtsYW5ndWFnZX0tJHtuYW1lc3BhY2V9YFxuICAgICAgY29uc3QgY2FjaGVkID0gdGhpcy5jYWNoZS5nZXQoY2FjaGVLZXkpXG4gICAgICBcbiAgICAgIGlmIChjYWNoZWQgJiYgRGF0ZS5ub3coKSAtIGNhY2hlZC50aW1lc3RhbXAgPCB0aGlzLmNhY2hlRXhwaXJ5KSB7XG4gICAgICAgIGxvZ0luZm8oJ0xvYWRpbmcgdHJhbnNsYXRpb25zIGZyb20gY2FjaGUnLCB7IGNhY2hlS2V5IH0pXG4gICAgICAgIGNhbGxiYWNrKG51bGwsIGNhY2hlZC5kYXRhKVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cblxuICAgICAgbG9nSW5mbygnTEFOR1VBR0UgU1dJVENIOiBMb2FkaW5nIHRyYW5zbGF0aW9ucyB2aWEgRGF0YWJhc2UgSW50ZWxsaWdlbmNlIEJyaWRnZScsIHsgbGFuZ3VhZ2UsIG5hbWVzcGFjZSB9KVxuICAgICAgXG4gICAgICAvLyBVc2UgU3RhYmxlRGF0YU1hbmFnZXIgZm9yIHRyYW5zbGF0aW9ucyAoc3RhYmxlIGRhdGEgLSBubyBBUEkgY2FsbHMgbmVlZGVkKVxuICAgICAgY29uc3QgdHJhbnNsYXRpb25zID0gYXdhaXQgdGhpcy5nZXRUcmFuc2xhdGlvbnNGcm9tQnJpZGdlKGxhbmd1YWdlKVxuICAgICAgXG4gICAgICBpZiAoIXRyYW5zbGF0aW9ucyB8fCBPYmplY3Qua2V5cyh0cmFuc2xhdGlvbnMpLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBsb2dJbmZvKCdObyB0cmFuc2xhdGlvbnMgZm91bmQgaW4gZGF0YWJhc2UsIHVzaW5nIGZhbGxiYWNrJywgeyBsYW5ndWFnZSB9KVxuICAgICAgICByZXR1cm4gdGhpcy5sb2FkRmFsbGJhY2sobGFuZ3VhZ2UsIG5hbWVzcGFjZSwgY2FsbGJhY2spXG4gICAgICB9XG5cbiAgICAgIC8vIENhY2hlIHRoZSByZXN1bHRzXG4gICAgICB0aGlzLmNhY2hlLnNldChjYWNoZUtleSwge1xuICAgICAgICBkYXRhOiB0cmFuc2xhdGlvbnMsXG4gICAgICAgIHRpbWVzdGFtcDogRGF0ZS5ub3coKVxuICAgICAgfSlcblxuICAgICAgY29uc3QgZHVyYXRpb24gPSBEYXRlLm5vdygpIC0gc3RhcnRUaW1lXG4gICAgICBsb2dQZXJmb3JtYW5jZSgndHJhbnNsYXRpb25fbG9hZCcsIGR1cmF0aW9uLCB7XG4gICAgICAgIGxhbmd1YWdlLFxuICAgICAgICB0cmFuc2xhdGlvbkNvdW50OiBPYmplY3Qua2V5cyh0cmFuc2xhdGlvbnMpLmxlbmd0aCxcbiAgICAgICAgc291cmNlOiAnREFUQUJBU0VfQlJJREdFJ1xuICAgICAgfSlcblxuICAgICAgY2FsbGJhY2sobnVsbCwgdHJhbnNsYXRpb25zKVxuXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnN0IGR1cmF0aW9uID0gRGF0ZS5ub3coKSAtIHN0YXJ0VGltZVxuICAgICAgbG9nRXJyb3IoJ0RhdGFiYXNlIGJhY2tlbmQgZXJyb3IgdmlhIEJyaWRnZScsIHsgXG4gICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLFxuICAgICAgICBsYW5ndWFnZSxcbiAgICAgICAgZHVyYXRpb246IGAke2R1cmF0aW9ufW1zYFxuICAgICAgfSlcbiAgICAgIHRoaXMubG9hZEZhbGxiYWNrKGxhbmd1YWdlLCBuYW1lc3BhY2UsIGNhbGxiYWNrKVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgdHJhbnNsYXRpb25zIHVzaW5nIERhdGFiYXNlIEludGVsbGlnZW5jZSBCcmlkZ2UgcGF0dGVybnNcbiAgICogRm9sbG93aW5nIFRyaWFuZ2xlIEludGVsbGlnZW5jZSBhcmNoaXRlY3R1cmUgZm9yIHN0YWJsZSBkYXRhIGFjY2Vzc1xuICAgKi9cbiAgYXN5bmMgZ2V0VHJhbnNsYXRpb25zRnJvbUJyaWRnZShsYW5ndWFnZSkge1xuICAgIGNvbnN0IHN0YXJ0VGltZSA9IERhdGUubm93KClcbiAgICBcbiAgICB0cnkge1xuICAgICAgLy8gQ3JlYXRlIGEgc3RhYmxlIGRhdGEgcXVlcnkgZm9yIHRyYW5zbGF0aW9ucyB1c2luZyBUcmlhbmdsZSBJbnRlbGxpZ2VuY2Ugc2luZ2xldG9uIHBhdHRlcm5cbiAgICAgIGNvbnN0IHF1ZXJ5ID0gYXN5bmMgKCkgPT4ge1xuICAgICAgICBjb25zdCBzdXBhYmFzZSA9IGdldFN1cGFiYXNlQ2xpZW50KClcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAgICAgLmZyb20oJ3RyYW5zbGF0aW9ucycpXG4gICAgICAgICAgLnNlbGVjdCgna2V5LCB2YWx1ZScpXG4gICAgICAgICAgLmVxKCdsYW5ndWFnZScsIGxhbmd1YWdlKVxuICAgICAgICAgIC5ub3QoJ3ZhbHVlJywgJ2lzJywgbnVsbClcbiAgICAgICAgXG4gICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVHJhbnNsYXRpb24gcXVlcnkgZmFpbGVkOiAke2Vycm9yLm1lc3NhZ2V9YClcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgcmV0dXJuIGRhdGFcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gRXhlY3V0ZSBxdWVyeSB3aXRoIHBlcmZvcm1hbmNlIHRyYWNraW5nXG4gICAgICBjb25zdCBkYXRhID0gYXdhaXQgcXVlcnkoKVxuICAgICAgY29uc3QgcXVlcnlEdXJhdGlvbiA9IERhdGUubm93KCkgLSBzdGFydFRpbWVcbiAgICAgIFxuICAgICAgbG9nREJRdWVyeSgndHJhbnNsYXRpb25zJywgJ1NFTEVDVCcsIHF1ZXJ5RHVyYXRpb24sIGRhdGE/Lmxlbmd0aCB8fCAwKVxuICAgICAgXG4gICAgICBpZiAoIWRhdGEgfHwgZGF0YS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuIG51bGxcbiAgICAgIH1cblxuICAgICAgLy8gQ29udmVydCBmbGF0IGtleS12YWx1ZSBwYWlycyB0byBuZXN0ZWQgb2JqZWN0IHN0cnVjdHVyZVxuICAgICAgY29uc3QgdHJhbnNsYXRpb25zID0ge31cbiAgICAgIGRhdGEuZm9yRWFjaChyb3cgPT4ge1xuICAgICAgICB0aGlzLnNldE5lc3RlZEtleSh0cmFuc2xhdGlvbnMsIHJvdy5rZXksIHJvdy52YWx1ZSlcbiAgICAgIH0pXG5cbiAgICAgIGxvZ0luZm8oJ1N1Y2Nlc3NmdWxseSBsb2FkZWQgdHJhbnNsYXRpb25zIHZpYSBEYXRhYmFzZSBJbnRlbGxpZ2VuY2UgQnJpZGdlJywgeyBcbiAgICAgICAgbGFuZ3VhZ2UsIFxuICAgICAgICBjb3VudDogZGF0YS5sZW5ndGgsXG4gICAgICAgIHF1ZXJ5RHVyYXRpb246IGAke3F1ZXJ5RHVyYXRpb259bXNgXG4gICAgICB9KVxuXG4gICAgICByZXR1cm4gdHJhbnNsYXRpb25zXG4gICAgICBcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc3QgZHVyYXRpb24gPSBEYXRlLm5vdygpIC0gc3RhcnRUaW1lXG4gICAgICBsb2dFcnJvcignRGF0YWJhc2UgSW50ZWxsaWdlbmNlIEJyaWRnZSB0cmFuc2xhdGlvbiBxdWVyeSBmYWlsZWQnLCB7XG4gICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLFxuICAgICAgICBsYW5ndWFnZSxcbiAgICAgICAgZHVyYXRpb246IGAke2R1cmF0aW9ufW1zYFxuICAgICAgfSlcbiAgICAgIHJldHVybiBudWxsXG4gICAgfVxuICB9XG5cbiAgLy8gTG9hZCBmYWxsYmFjayB0cmFuc2xhdGlvbnMgZnJvbSBzdGF0aWMgSlNPTiBmaWxlc1xuICBhc3luYyBsb2FkRmFsbGJhY2sobGFuZ3VhZ2UsIG5hbWVzcGFjZSwgY2FsbGJhY2spIHtcbiAgICB0cnkge1xuICAgICAgbG9nSW5mbygnTG9hZGluZyBmYWxsYmFjayB0cmFuc2xhdGlvbnMnLCB7IGxhbmd1YWdlLCBuYW1lc3BhY2UgfSlcbiAgICAgIFxuICAgICAgLy8gVWx0aW1hdGUgZmFsbGJhY2sgLSBtaW5pbWFsIEVuZ2xpc2ggdHJhbnNsYXRpb25zXG4gICAgICBjb25zdCBmYWxsYmFja1RyYW5zbGF0aW9ucyA9IHRoaXMuZ2V0TWluaW1hbEZhbGxiYWNrKClcbiAgICAgIGNhbGxiYWNrKG51bGwsIGZhbGxiYWNrVHJhbnNsYXRpb25zKVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBsb2dFcnJvcignRmFsbGJhY2sgbG9hZGluZyBmYWlsZWQnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pXG4gICAgICBjYWxsYmFjayhudWxsLCB0aGlzLmdldE1pbmltYWxGYWxsYmFjaygpKVxuICAgIH1cbiAgfVxuXG4gIC8vIENvbnZlcnQgZG90IG5vdGF0aW9uIGtleXMgdG8gbmVzdGVkIG9iamVjdHNcbiAgc2V0TmVzdGVkS2V5KG9iaiwga2V5LCB2YWx1ZSkge1xuICAgIGNvbnN0IGtleXMgPSBrZXkuc3BsaXQoJy4nKVxuICAgIGxldCBjdXJyZW50ID0gb2JqXG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGtleXMubGVuZ3RoIC0gMTsgaSsrKSB7XG4gICAgICBpZiAoIWN1cnJlbnRba2V5c1tpXV0gfHwgdHlwZW9mIGN1cnJlbnRba2V5c1tpXV0gIT09ICdvYmplY3QnKSB7XG4gICAgICAgIGN1cnJlbnRba2V5c1tpXV0gPSB7fVxuICAgICAgfVxuICAgICAgY3VycmVudCA9IGN1cnJlbnRba2V5c1tpXV1cbiAgICB9XG5cbiAgICBjdXJyZW50W2tleXNba2V5cy5sZW5ndGggLSAxXV0gPSB2YWx1ZVxuICB9XG5cbiAgLy8gTWluaW1hbCBmYWxsYmFjayB0cmFuc2xhdGlvbnMgdG8gcHJldmVudCBhcHAgYnJlYWthZ2VcbiAgZ2V0TWluaW1hbEZhbGxiYWNrKCkge1xuICAgIHJldHVybiB7XG4gICAgICBjb21tb246IHtcbiAgICAgICAgbmV4dDogJ05leHQnLFxuICAgICAgICBiYWNrOiAnQmFjaycsXG4gICAgICAgIHNhdmU6ICdTYXZlJyxcbiAgICAgICAgbG9hZGluZzogJ0xvYWRpbmcuLi4nLFxuICAgICAgICBlcnJvcjogJ0Vycm9yJ1xuICAgICAgfSxcbiAgICAgIG5hdjoge1xuICAgICAgICBkYXNoYm9hcmQ6ICdEYXNoYm9hcmQnLFxuICAgICAgICBzdGFnZXM6ICdTdGFnZXMnXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gQ2xlYXIgY2FjaGUgKHVzZWZ1bCBmb3IgcmVhbC10aW1lIHVwZGF0ZXMpXG4gIGNsZWFyQ2FjaGUoKSB7XG4gICAgdGhpcy5jYWNoZS5jbGVhcigpXG4gICAgbG9nSW5mbygnVHJhbnNsYXRpb24gY2FjaGUgY2xlYXJlZCcpXG4gIH1cblxuICAvLyBBZGQgbmV3IHRyYW5zbGF0aW9uIHRvIGRhdGFiYXNlIHVzaW5nIERhdGFiYXNlIEludGVsbGlnZW5jZSBCcmlkZ2VcbiAgYXN5bmMgY3JlYXRlKGxhbmd1YWdlcywgbmFtZXNwYWNlLCBrZXksIGZhbGxiYWNrVmFsdWUsIGNhbGxiYWNrKSB7XG4gICAgY29uc3Qgc3RhcnRUaW1lID0gRGF0ZS5ub3coKVxuICAgIFxuICAgIHRyeSB7XG4gICAgICBjb25zdCB0cmFuc2xhdGlvbnMgPSBsYW5ndWFnZXMubWFwKGxhbmd1YWdlID0+ICh7XG4gICAgICAgIGtleTogYCR7bmFtZXNwYWNlfS4ke2tleX1gLFxuICAgICAgICBsYW5ndWFnZSxcbiAgICAgICAgdmFsdWU6IGZhbGxiYWNrVmFsdWUsXG4gICAgICAgIGNvbnRleHQ6IGBBdXRvLWNyZWF0ZWQgZnJvbSAke25hbWVzcGFjZX1gLFxuICAgICAgICBjcmVhdGVkX2F0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgICAgIH0pKVxuXG4gICAgICAvLyBVc2UgVHJpYW5nbGUgSW50ZWxsaWdlbmNlIHNpbmdsZXRvbiBwYXR0ZXJuIGZvciBpbnNlcnQgb3BlcmF0aW9uc1xuICAgICAgY29uc3Qgc3VwYWJhc2UgPSBnZXRTdXBhYmFzZUNsaWVudCgpXG4gICAgICBjb25zdCB7IGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgICAuZnJvbSgndHJhbnNsYXRpb25zJylcbiAgICAgICAgLmluc2VydCh0cmFuc2xhdGlvbnMpXG5cbiAgICAgIGNvbnN0IGR1cmF0aW9uID0gRGF0ZS5ub3coKSAtIHN0YXJ0VGltZVxuXG4gICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgbG9nRXJyb3IoJ0ZhaWxlZCB0byBjcmVhdGUgdHJhbnNsYXRpb24gdmlhIFRyaWFuZ2xlIEludGVsbGlnZW5jZSBCcmlkZ2UnLCB7IFxuICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLFxuICAgICAgICAgIGtleTogYCR7bmFtZXNwYWNlfS4ke2tleX1gLFxuICAgICAgICAgIGR1cmF0aW9uOiBgJHtkdXJhdGlvbn1tc2BcbiAgICAgICAgfSlcbiAgICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2soZXJyb3IpXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsb2dEQlF1ZXJ5KCd0cmFuc2xhdGlvbnMnLCAnSU5TRVJUJywgZHVyYXRpb24sIHRyYW5zbGF0aW9ucy5sZW5ndGgpXG4gICAgICAgIGxvZ0luZm8oJ0NyZWF0ZWQgdHJhbnNsYXRpb24gdmlhIFRyaWFuZ2xlIEludGVsbGlnZW5jZSBCcmlkZ2UnLCB7IFxuICAgICAgICAgIGtleTogYCR7bmFtZXNwYWNlfS4ke2tleX1gLFxuICAgICAgICAgIGxhbmd1YWdlczogbGFuZ3VhZ2VzLmxlbmd0aCxcbiAgICAgICAgICBkdXJhdGlvbjogYCR7ZHVyYXRpb259bXNgXG4gICAgICAgIH0pXG4gICAgICAgIHRoaXMuY2xlYXJDYWNoZSgpIC8vIENsZWFyIGNhY2hlIHRvIHJlbG9hZCBuZXcgdHJhbnNsYXRpb25zXG4gICAgICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKG51bGwpXG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnN0IGR1cmF0aW9uID0gRGF0ZS5ub3coKSAtIHN0YXJ0VGltZVxuICAgICAgbG9nRXJyb3IoJ0NyZWF0ZSB0cmFuc2xhdGlvbiBlcnJvciB2aWEgVHJpYW5nbGUgSW50ZWxsaWdlbmNlIEJyaWRnZScsIHsgXG4gICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLFxuICAgICAgICBkdXJhdGlvbjogYCR7ZHVyYXRpb259bXNgXG4gICAgICB9KVxuICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2soZXJyb3IpXG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IERhdGFiYXNlQmFja2VuZCJdLCJuYW1lcyI6WyJnZXRTdXBhYmFzZUNsaWVudCIsImxvZ0luZm8iLCJsb2dFcnJvciIsImxvZ0RCUXVlcnkiLCJsb2dQZXJmb3JtYW5jZSIsIlRSQU5TTEFUSU9OX0NBQ0hFX0RVUkFUSU9OIiwicHJvY2VzcyIsImVudiIsIkNBQ0hFX1RUTF9TVEFCTEVfREFUQSIsInBhcnNlSW50IiwiVFJBTlNMQVRJT05fUVVFUllfVElNRU9VVCIsIkRCX1FVRVJZX1RJTUVPVVRfTVMiLCJEYXRhYmFzZUJhY2tlbmQiLCJ0eXBlIiwiaW5pdCIsInNlcnZpY2VzIiwib3B0aW9ucyIsImxvYWRQYXRoIiwiYWRkUGF0aCIsImNhY2hlIiwiTWFwIiwiY2FjaGVFeHBpcnkiLCJxdWVyeVRpbWVvdXQiLCJyZWFkIiwibGFuZ3VhZ2UiLCJuYW1lc3BhY2UiLCJjYWxsYmFjayIsInN0YXJ0VGltZSIsIkRhdGUiLCJub3ciLCJjYWNoZUtleSIsImNhY2hlZCIsImdldCIsInRpbWVzdGFtcCIsImRhdGEiLCJ0cmFuc2xhdGlvbnMiLCJnZXRUcmFuc2xhdGlvbnNGcm9tQnJpZGdlIiwiT2JqZWN0Iiwia2V5cyIsImxlbmd0aCIsImxvYWRGYWxsYmFjayIsInNldCIsImR1cmF0aW9uIiwidHJhbnNsYXRpb25Db3VudCIsInNvdXJjZSIsImVycm9yIiwibWVzc2FnZSIsInF1ZXJ5Iiwic3VwYWJhc2UiLCJmcm9tIiwic2VsZWN0IiwiZXEiLCJub3QiLCJFcnJvciIsInF1ZXJ5RHVyYXRpb24iLCJmb3JFYWNoIiwicm93Iiwic2V0TmVzdGVkS2V5Iiwia2V5IiwidmFsdWUiLCJjb3VudCIsImZhbGxiYWNrVHJhbnNsYXRpb25zIiwiZ2V0TWluaW1hbEZhbGxiYWNrIiwib2JqIiwic3BsaXQiLCJjdXJyZW50IiwiaSIsImNvbW1vbiIsIm5leHQiLCJiYWNrIiwic2F2ZSIsImxvYWRpbmciLCJuYXYiLCJkYXNoYm9hcmQiLCJzdGFnZXMiLCJjbGVhckNhY2hlIiwiY2xlYXIiLCJjcmVhdGUiLCJsYW5ndWFnZXMiLCJmYWxsYmFja1ZhbHVlIiwibWFwIiwiY29udGV4dCIsImNyZWF0ZWRfYXQiLCJ0b0lTT1N0cmluZyIsImluc2VydCIsImNvbnN0cnVjdG9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/i18n-database-backend.js\n"));

/***/ }),

/***/ "./lib/i18n.js":
/*!*********************!*\
  !*** ./lib/i18n.js ***!
  \*********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var i18next__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! i18next */ \"./node_modules/i18next/dist/esm/i18next.js\");\n/* harmony import */ var react_i18next__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-i18next */ \"./node_modules/react-i18next/dist/es/index.js\");\n/* harmony import */ var i18next_browser_languagedetector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! i18next-browser-languagedetector */ \"./node_modules/i18next-browser-languagedetector/dist/esm/i18nextBrowserLanguageDetector.js\");\n/* harmony import */ var _production_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./production-logger */ \"./lib/production-logger.js\");\n/* harmony import */ var _i18n_database_backend__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./i18n-database-backend */ \"./lib/i18n-database-backend.js\");\n/**\n * DATABASE-POWERED I18N CONFIGURATION\n * Professional translation system with Database Intelligence Bridge\n * Supports caching, language detection, and professional translation management\n * Uses Database Intelligence Bridge for optimal performance with fallback support\n */ \n\n\n\n\n// Constants for Triangle Intelligence patterns\nconst LANGUAGE_STORAGE_KEY = \"triangleIntelligence_language\";\nconst LANGUAGE_COOKIE_NAME = \"triangle_lang\";\nconst LANGUAGE_COOKIE_DURATION_MINUTES = 10080 // 7 days\n;\nconst SUPPORTED_LANGUAGES = [\n    \"en\",\n    \"es\",\n    \"fr\"\n];\nconst DEFAULT_NAMESPACE = \"common\";\n// Initialize i18n with Database Intelligence Bridge\n// Only initialize if not already initialized to prevent conflicts\nif (!i18next__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isInitialized) {\n    i18next__WEBPACK_IMPORTED_MODULE_0__[\"default\"].use(_i18n_database_backend__WEBPACK_IMPORTED_MODULE_4__[\"default\"]).use(i18next_browser_languagedetector__WEBPACK_IMPORTED_MODULE_2__[\"default\"]).use(react_i18next__WEBPACK_IMPORTED_MODULE_1__.initReactI18next).init({\n        // Fallback language\n        fallbackLng: \"en\",\n        // Debug mode for development\n        debug: \"development\" === \"development\",\n        // Supported languages\n        supportedLngs: SUPPORTED_LANGUAGES,\n        // Default namespace\n        defaultNS: DEFAULT_NAMESPACE,\n        // Namespaces to load - using 'common' only since all translations are in common.json\n        ns: [\n            DEFAULT_NAMESPACE\n        ],\n        // Database backend configuration - no preloaded resources needed\n        backend: {\n            loadPath: \"/locales/{{lng}}/{{ns}}.json\"\n        },\n        // Language detection configuration\n        detection: {\n            // Detection order\n            order: [\n                \"localStorage\",\n                \"navigator\",\n                \"htmlTag\",\n                \"querystring\",\n                \"cookie\" // Finally cookies\n            ],\n            // Storage options\n            lookupLocalStorage: LANGUAGE_STORAGE_KEY,\n            lookupCookie: LANGUAGE_COOKIE_NAME,\n            lookupQuerystring: \"lng\",\n            // Cache in localStorage\n            caches: [\n                \"localStorage\"\n            ],\n            // Don't cache if in iframe\n            excludeCacheFor: [\n                \"cimode\"\n            ],\n            // Cookie settings\n            cookieMinutes: LANGUAGE_COOKIE_DURATION_MINUTES,\n            cookieDomain: \"localhost\"\n        },\n        // Interpolation settings\n        interpolation: {\n            escapeValue: false,\n            formatSeparator: \",\",\n            format: (value, format, lng)=>{\n                // Updated format function (new i18next approach)\n                if (format === \"currency\") {\n                    return new Intl.NumberFormat(lng, {\n                        style: \"currency\",\n                        currency: \"USD\"\n                    }).format(value);\n                }\n                if (format === \"number\") {\n                    return new Intl.NumberFormat(lng).format(value);\n                }\n                return value;\n            }\n        },\n        // React specific settings\n        react: {\n            // Bind i18n instance to React\n            bindI18n: \"languageChanged\",\n            bindI18nStore: \"\",\n            transEmptyNodeValue: \"\",\n            transSupportBasicHtmlNodes: true,\n            transKeepBasicHtmlNodesFor: [\n                \"br\",\n                \"strong\",\n                \"i\",\n                \"em\"\n            ],\n            useSuspense: false\n        },\n        // Advanced options\n        saveMissing: true,\n        saveMissingTo: \"all\",\n        missingKeyHandler: function(lng, ns, key, fallbackValue) {\n            // Log missing translations for professional translation\n            (0,_production_logger__WEBPACK_IMPORTED_MODULE_3__.logDebug)(\"Missing translation\", {\n                key: \"\".concat(lng, \".\").concat(ns, \".\").concat(key)\n            });\n            // Optionally send to analytics or translation management system\n            if (typeof gtag !== \"undefined\") {\n                gtag(\"event\", \"missing_translation\", {\n                    language: lng,\n                    namespace: ns,\n                    key: key,\n                    fallback: fallbackValue\n                });\n            }\n        },\n        // Post-processor for dynamic content\n        postProcess: [\n            \"interval\"\n        ],\n        // Support for nested JSON structure (mixed with flat keys)\n        returnObjects: false,\n        pluralSeparator: \"_\",\n        contextSeparator: \"_\",\n        nsSeparator: false,\n        keySeparator: \".\",\n        // JSON structure handling - CRITICAL SETTING\n        ignoreJSONStructure: false,\n        // Force re-initialization to override any cached settings\n        initImmediate: false,\n        load: \"languageOnly\"\n    });\n}\n// Add event listeners for real-time updates\ni18next__WEBPACK_IMPORTED_MODULE_0__[\"default\"].on(\"languageChanged\", (lng)=>{\n    (0,_production_logger__WEBPACK_IMPORTED_MODULE_3__.logInfo)(\"Language changed\", {\n        language: lng\n    });\n    // Update HTML lang attribute (client-side only)\n    if (typeof document !== \"undefined\") {\n        document.documentElement.lang = lng;\n    }\n    // Analytics tracking\n    if (typeof gtag !== \"undefined\") {\n        gtag(\"event\", \"language_change\", {\n            new_language: lng,\n            platform: \"triangle_intelligence\"\n        });\n    }\n});\ni18next__WEBPACK_IMPORTED_MODULE_0__[\"default\"].on(\"loaded\", (loaded)=>{\n    (0,_production_logger__WEBPACK_IMPORTED_MODULE_3__.logInfo)(\"Translations loaded\", {\n        namespaces: Object.keys(loaded)\n    });\n});\ni18next__WEBPACK_IMPORTED_MODULE_0__[\"default\"].on(\"failedLoading\", (lng, ns, msg)=>{\n    (0,_production_logger__WEBPACK_IMPORTED_MODULE_3__.logError)(\"Failed loading translation\", {\n        language: lng,\n        namespace: ns,\n        message: msg\n    });\n});\n// Add method to refresh translations from database\ni18next__WEBPACK_IMPORTED_MODULE_0__[\"default\"].refreshFromDatabase = async ()=>{\n    try {\n        var _i18n_services_backendConnector_backend, _i18n_services_backendConnector, _i18n_services;\n        (0,_production_logger__WEBPACK_IMPORTED_MODULE_3__.logInfo)(\"Refreshing translations from Database Intelligence Bridge\");\n        // Clear database backend cache first\n        if ((_i18n_services = i18next__WEBPACK_IMPORTED_MODULE_0__[\"default\"].services) === null || _i18n_services === void 0 ? void 0 : (_i18n_services_backendConnector = _i18n_services.backendConnector) === null || _i18n_services_backendConnector === void 0 ? void 0 : (_i18n_services_backendConnector_backend = _i18n_services_backendConnector.backend) === null || _i18n_services_backendConnector_backend === void 0 ? void 0 : _i18n_services_backendConnector_backend.clearCache) {\n            i18next__WEBPACK_IMPORTED_MODULE_0__[\"default\"].services.backendConnector.backend.clearCache();\n        }\n        // Reload all resources from database\n        await i18next__WEBPACK_IMPORTED_MODULE_0__[\"default\"].reloadResources();\n        (0,_production_logger__WEBPACK_IMPORTED_MODULE_3__.logInfo)(\"Translations refreshed successfully from Database Intelligence Bridge\");\n        return true;\n    } catch (error) {\n        (0,_production_logger__WEBPACK_IMPORTED_MODULE_3__.logError)(\"Failed to refresh translations from Database Intelligence Bridge\", {\n            error: error.message\n        });\n        return false;\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (i18next__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/i18n.js\n"));

/***/ }),

/***/ "./lib/memory-optimizer.js":
/*!*********************************!*\
  !*** ./lib/memory-optimizer.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getMemoryOptimizer: function() { return /* binding */ getMemoryOptimizer; },\n/* harmony export */   memoryOptimizedAPICall: function() { return /* binding */ memoryOptimizedAPICall; },\n/* harmony export */   useMemoryOptimizedEffect: function() { return /* binding */ useMemoryOptimizedEffect; }\n/* harmony export */ });\n/* harmony import */ var _production_logger_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./production-logger.js */ \"./lib/production-logger.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n/**\n * 🧠 MEMORY OPTIMIZER - PRODUCTION MEMORY MANAGEMENT\n * \n * Comprehensive memory management system for Triangle Intelligence Platform\n * Eliminates memory leaks while maintaining 30-second real-time updates\n * \n * KEY FEATURES:\n * ✅ Process event listener cleanup\n * ✅ React component unmount handlers  \n * ✅ API call cancellation with AbortController\n * ✅ RSS monitoring cleanup\n * ✅ Beast Master resource management\n * ✅ Database connection pooling optimization\n * ✅ Automatic memory pressure detection\n */ var _s = $RefreshSig$();\n\nclass MemoryOptimizer {\n    /**\n   * Initialize memory monitoring and cleanup systems\n   */ initializeMemoryMonitoring() {\n        if (this.isInitialized) return;\n        // Only run in server environment\n        if (typeof process === \"undefined\" || \"object\" !== \"undefined\") {\n            (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logInfo)(\"Memory Optimizer: Browser environment detected, limited functionality enabled\");\n            this.isInitialized = true;\n            return;\n        }\n        // Monitor memory usage based on environment configuration\n        const memoryMonitor = setInterval(()=>{\n            this.checkMemoryPressure();\n        }, this.monitorInterval);\n        this.registerCleanup(\"memoryMonitor\", ()=>clearInterval(memoryMonitor));\n        // Process cleanup handlers\n        const processCleanup = ()=>{\n            (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logInfo)(\"Memory Optimizer: Initiating graceful shutdown\");\n            this.performGlobalCleanup();\n            process.exit(0);\n        };\n        // Register process event listeners with proper cleanup\n        process.removeAllListeners(\"SIGTERM\");\n        process.removeAllListeners(\"SIGINT\");\n        process.removeAllListeners(\"uncaughtException\");\n        process.removeAllListeners(\"unhandledRejection\");\n        process.once(\"SIGTERM\", processCleanup);\n        process.once(\"SIGINT\", processCleanup);\n        process.on(\"uncaughtException\", (error)=>{\n            (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logError)(\"Uncaught Exception - initiating cleanup\", {\n                error: error.message\n            });\n            this.performGlobalCleanup();\n            process.exit(1);\n        });\n        process.on(\"unhandledRejection\", (reason, promise)=>{\n            (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logError)(\"Unhandled Promise Rejection - cleaning up\", {\n                reason: (reason === null || reason === void 0 ? void 0 : reason.message) || reason,\n                stack: reason === null || reason === void 0 ? void 0 : reason.stack\n            });\n        });\n        this.isInitialized = true;\n        (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logInfo)(\"Memory Optimizer initialized successfully\");\n    }\n    /**\n   * Register cleanup handler for a specific resource\n   */ registerCleanup(id, cleanupFunction) {\n        if (this.cleanupHandlers.has(id)) {\n            (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logWarn)(\"Cleanup handler already registered for: \".concat(id));\n            this.cleanupHandlers.get(id)(); // Clean up old one first\n        }\n        this.cleanupHandlers.set(id, cleanupFunction);\n        (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logInfo)(\"Registered cleanup handler: \".concat(id));\n    }\n    /**\n   * Register interval with automatic cleanup\n   */ registerInterval(id, intervalId) {\n        if (this.intervalCleanup.has(id)) {\n            clearInterval(this.intervalCleanup.get(id));\n        }\n        this.intervalCleanup.set(id, intervalId);\n        // Auto-cleanup after 10 minutes to prevent accumulation\n        setTimeout(()=>{\n            if (this.intervalCleanup.has(id)) {\n                clearInterval(this.intervalCleanup.get(id));\n                this.intervalCleanup.delete(id);\n                (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logInfo)(\"Auto-cleaned interval: \".concat(id));\n            }\n        }, 600000); // 10 minutes\n    }\n    /**\n   * Register timeout with automatic cleanup\n   */ registerTimeout(id, timeoutId) {\n        if (this.timeoutCleanup.has(id)) {\n            clearTimeout(this.timeoutCleanup.get(id));\n        }\n        this.timeoutCleanup.set(id, timeoutId);\n    }\n    /**\n   * Create and register AbortController for API calls\n   */ createAbortController() {\n        let timeoutMs = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 30000;\n        const controller = new AbortController();\n        this.abortControllers.add(controller);\n        // Auto-abort after timeout to prevent hanging requests\n        const timeoutId = setTimeout(()=>{\n            if (!controller.signal.aborted) {\n                controller.abort();\n                this.abortControllers.delete(controller);\n                (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logInfo)(\"Auto-aborted API request due to timeout\");\n            }\n        }, timeoutMs);\n        // Clean up timeout when controller is aborted\n        controller.signal.addEventListener(\"abort\", ()=>{\n            clearTimeout(timeoutId);\n            this.abortControllers.delete(controller);\n        });\n        return controller;\n    }\n    /**\n   * React useEffect cleanup helper\n   */ createReactCleanup() {\n        const cleanupFunctions = [];\n        return {\n            register: (cleanupFn)=>{\n                cleanupFunctions.push(cleanupFn);\n            },\n            cleanup: ()=>{\n                cleanupFunctions.forEach((fn, index)=>{\n                    try {\n                        fn();\n                    } catch (error) {\n                        (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logError)(\"React cleanup function \".concat(index, \" failed\"), {\n                            error: error.message\n                        });\n                    }\n                });\n                cleanupFunctions.length = 0;\n            }\n        };\n    }\n    /**\n   * Check memory pressure and trigger cleanup if needed - OPTIMIZED\n   */ checkMemoryPressure() {\n        // Only run memory checks in server environment\n        if (typeof process === \"undefined\" || \"object\" !== \"undefined\") {\n            return;\n        }\n        const memUsage = process.memoryUsage();\n        const heapUsed = memUsage.heapUsed;\n        const external = memUsage.external;\n        const totalMemory = heapUsed + external;\n        const totalMemoryMB = Math.round(totalMemory / 1024 / 1024);\n        const thresholdMB = Math.round(this.memoryPressureThreshold / 1024 / 1024);\n        const gcThresholdMB = Math.round(this.gcThreshold / 1024 / 1024);\n        // CRITICAL FIX: Only log when threshold exceeded or every 5 minutes\n        const now = Date.now();\n        const shouldLog = totalMemory > this.memoryPressureThreshold || now - this.lastLogTime > 300000;\n        if (shouldLog) {\n            (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logInfo)(\"Memory usage check\", {\n                heapUsed: Math.round(heapUsed / 1024 / 1024) + \"MB\",\n                external: Math.round(external / 1024 / 1024) + \"MB\",\n                total: totalMemoryMB + \"MB\",\n                threshold: thresholdMB + \"MB\",\n                gcThreshold: gcThresholdMB + \"MB\"\n            });\n            this.lastLogTime = now;\n        }\n        // Trigger cleanup if memory usage is high AND enough time has passed\n        if (totalMemory > this.memoryPressureThreshold && now - this.lastCleanupTime > 60000) {\n            (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logWarn)(\"Memory pressure detected, triggering cleanup\", {\n                memoryMB: totalMemoryMB,\n                thresholdMB: thresholdMB\n            });\n            this.performMemoryCleanup();\n            this.lastCleanupTime = now;\n        }\n        // Force garbage collection if memory is very high\n        if (totalMemory > this.gcThreshold && __webpack_require__.g.gc) {\n            (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logWarn)(\"High memory usage, forcing garbage collection\", {\n                memoryMB: totalMemoryMB,\n                gcThresholdMB: gcThresholdMB\n            });\n            __webpack_require__.g.gc();\n        }\n    }\n    /**\n   * Perform memory cleanup operations\n   */ performMemoryCleanup() {\n        let cleaned = 0;\n        // Clean up old intervals (older than 5 minutes)\n        const now = Date.now();\n        for (const [id, data] of this.intervalCleanup.entries()){\n            if (typeof data === \"object\" && data.timestamp && now - data.timestamp > 300000) {\n                clearInterval(data.intervalId);\n                this.intervalCleanup.delete(id);\n                cleaned++;\n            }\n        }\n        // Clean up old timeouts\n        for (const [id, timeoutId] of this.timeoutCleanup.entries()){\n            clearTimeout(timeoutId);\n            this.timeoutCleanup.delete(id);\n            cleaned++;\n        }\n        // Abort old API requests\n        for (const controller of this.abortControllers){\n            if (!controller.signal.aborted) {\n                controller.abort();\n                cleaned++;\n            }\n        }\n        this.abortControllers.clear();\n        (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logInfo)(\"Memory cleanup completed, cleaned \".concat(cleaned, \" resources\"));\n    }\n    /**\n   * Perform global cleanup on shutdown\n   */ performGlobalCleanup() {\n        (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logInfo)(\"Performing global cleanup\");\n        // Run all registered cleanup handlers\n        for (const [id, cleanupFn] of this.cleanupHandlers.entries()){\n            try {\n                cleanupFn();\n                (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logInfo)(\"Cleaned up: \".concat(id));\n            } catch (error) {\n                (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logError)(\"Cleanup failed for: \".concat(id), {\n                    error: error.message\n                });\n            }\n        }\n        // Clear all intervals and timeouts\n        for (const intervalId of this.intervalCleanup.values()){\n            clearInterval(typeof intervalId === \"object\" ? intervalId.intervalId : intervalId);\n        }\n        for (const timeoutId of this.timeoutCleanup.values()){\n            clearTimeout(timeoutId);\n        }\n        // Abort all pending requests\n        for (const controller of this.abortControllers){\n            controller.abort();\n        }\n        // Clear maps\n        this.cleanupHandlers.clear();\n        this.intervalCleanup.clear();\n        this.timeoutCleanup.clear();\n        this.abortControllers.clear();\n        (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logInfo)(\"Global cleanup completed\");\n    }\n    /**\n   * Get memory statistics\n   */ getMemoryStats() {\n        if (typeof process === \"undefined\" || \"object\" !== \"undefined\") {\n            return {\n                available: false,\n                environment: \"browser\",\n                cleanupHandlers: this.cleanupHandlers.size,\n                activeIntervals: this.intervalCleanup.size,\n                activeTimeouts: this.timeoutCleanup.size,\n                activeRequests: this.abortControllers.size\n            };\n        }\n        const memUsage = process.memoryUsage();\n        return {\n            available: true,\n            environment: \"server\",\n            heap: {\n                used: Math.round(memUsage.heapUsed / 1024 / 1024),\n                total: Math.round(memUsage.heapTotal / 1024 / 1024)\n            },\n            external: Math.round(memUsage.external / 1024 / 1024),\n            cleanupHandlers: this.cleanupHandlers.size,\n            activeIntervals: this.intervalCleanup.size,\n            activeTimeouts: this.timeoutCleanup.size,\n            activeRequests: this.abortControllers.size\n        };\n    }\n    constructor(){\n        this.lastLogTime = 0;\n        this.cleanupHandlers = new Map();\n        this.intervalCleanup = new Map();\n        this.timeoutCleanup = new Map();\n        this.eventListeners = new Map();\n        this.abortControllers = new Set();\n        // Environment-based configuration (CRITICAL FIX)\n        this.memoryPressureThreshold = (parseInt(process.env.MEMORY_PRESSURE_THRESHOLD_MB) || 512) * 1024 * 1024;\n        this.gcThreshold = (parseInt(process.env.MEMORY_GC_THRESHOLD_MB) || 768) * 1024 * 1024;\n        this.monitorInterval = parseInt(process.env.MEMORY_MONITOR_INTERVAL_MS) || 60000;\n        this.isInitialized = false;\n        this.lastCleanupTime = 0;\n        this.initializeMemoryMonitoring();\n    }\n}\n// Global singleton instance\nlet memoryOptimizer = null;\nfunction getMemoryOptimizer() {\n    if (!memoryOptimizer) {\n        memoryOptimizer = new MemoryOptimizer();\n    }\n    return memoryOptimizer;\n}\n// React hook for memory-optimized effects\nfunction useMemoryOptimizedEffect(effect, deps) {\n    _s();\n    const React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n    React.useEffect(()=>{\n        const optimizer = getMemoryOptimizer();\n        const reactCleanup = optimizer.createReactCleanup();\n        const cleanup = effect(reactCleanup.register);\n        return ()=>{\n            reactCleanup.cleanup();\n            if (cleanup) cleanup();\n        };\n    }, deps);\n}\n_s(useMemoryOptimizedEffect, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n// API call helper with automatic cleanup\nasync function memoryOptimizedAPICall(url) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, timeoutMs = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 30000;\n    const optimizer = getMemoryOptimizer();\n    const controller = optimizer.createAbortController(timeoutMs);\n    try {\n        const response = await fetch(url, {\n            ...options,\n            signal: controller.signal\n        });\n        return response;\n    } catch (error) {\n        if (error.name === \"AbortError\") {\n            (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logWarn)(\"API call was aborted\", {\n                url\n            });\n            throw new Error(\"Request timeout\");\n        }\n        throw error;\n    }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (getMemoryOptimizer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/memory-optimizer.js\n"));

/***/ }),

/***/ "./lib/production-logger.js":
/*!**********************************!*\
  !*** ./lib/production-logger.js ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logAPICall: function() { return /* binding */ logAPICall; },\n/* harmony export */   logBusiness: function() { return /* binding */ logBusiness; },\n/* harmony export */   logDBQuery: function() { return /* binding */ logDBQuery; },\n/* harmony export */   logDebug: function() { return /* binding */ logDebug; },\n/* harmony export */   logError: function() { return /* binding */ logError; },\n/* harmony export */   logInfo: function() { return /* binding */ logInfo; },\n/* harmony export */   logPerformance: function() { return /* binding */ logPerformance; },\n/* harmony export */   logSecurity: function() { return /* binding */ logSecurity; },\n/* harmony export */   logWarn: function() { return /* binding */ logWarn; },\n/* harmony export */   logger: function() { return /* binding */ logger; }\n/* harmony export */ });\n/* harmony import */ var _environment_validation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./environment-validation.js */ \"./lib/environment-validation.js\");\n/**\n * Production-Safe Logging System\n * Handles logging with environment awareness and security\n */ \n// Log levels\nconst LOG_LEVELS = {\n    ERROR: 0,\n    WARN: 1,\n    INFO: 2,\n    DEBUG: 3,\n    TRACE: 4\n};\nclass ProductionLogger {\n    /**\n   * Sanitize sensitive data from logs\n   */ sanitize(data) {\n        if (typeof data === \"string\") {\n            let sanitized = data;\n            this.sensitivePatterns.forEach((pattern)=>{\n                sanitized = sanitized.replace(pattern, \"[REDACTED]\");\n            });\n            return sanitized;\n        }\n        if (typeof data === \"object\" && data !== null) {\n            const sanitized = Array.isArray(data) ? [] : {};\n            for (const [key, value] of Object.entries(data)){\n                const keyLower = key.toLowerCase();\n                if (keyLower.includes(\"password\") || keyLower.includes(\"secret\") || keyLower.includes(\"token\") || keyLower.includes(\"key\")) {\n                    sanitized[key] = \"[REDACTED]\";\n                } else {\n                    sanitized[key] = this.sanitize(value);\n                }\n            }\n            return sanitized;\n        }\n        return data;\n    }\n    /**\n   * Format log message\n   */ formatMessage(level, message, data, metadata) {\n        const timestamp = new Date().toISOString();\n        const sanitizedData = data ? this.sanitize(data) : null;\n        const logEntry = {\n            timestamp,\n            level,\n            message,\n            ...sanitizedData && {\n                data: sanitizedData\n            },\n            ...metadata && {\n                metadata\n            }\n        };\n        return (0,_environment_validation_js__WEBPACK_IMPORTED_MODULE_0__.isProduction)() ? JSON.stringify(logEntry) : logEntry;\n    }\n    /**\n   * Log error messages (always synchronous for errors)\n   */ error(message) {\n        let data = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, metadata = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;\n        if (this.level >= LOG_LEVELS.ERROR) {\n            const formatted = this.formatMessage(\"ERROR\", message, data, metadata);\n            console.error((0,_environment_validation_js__WEBPACK_IMPORTED_MODULE_0__.isProduction)() ? formatted : \"❌\", (0,_environment_validation_js__WEBPACK_IMPORTED_MODULE_0__.isProduction)() ? \"\" : message, (0,_environment_validation_js__WEBPACK_IMPORTED_MODULE_0__.isProduction)() ? \"\" : this.sanitize(data));\n        }\n    }\n    /**\n   * Log warning messages (asynchronous in production)\n   */ warn(message) {\n        let data = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, metadata = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;\n        if (this.level >= LOG_LEVELS.WARN) {\n            const logEntry = {\n                level: \"WARN\",\n                message,\n                data: this.sanitize(data),\n                metadata,\n                timestamp: new Date().toISOString()\n            };\n            if ((0,_environment_validation_js__WEBPACK_IMPORTED_MODULE_0__.isProduction)()) {\n                this.queueLog(logEntry);\n            } else {\n                console.warn(\"⚠️\", message, this.sanitize(data));\n            }\n        }\n    }\n    /**\n   * Log info messages (asynchronous in production)\n   */ info(message) {\n        let data = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, metadata = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;\n        if (this.level >= LOG_LEVELS.INFO) {\n            const logEntry = {\n                level: \"INFO\",\n                message,\n                data: this.sanitize(data),\n                metadata,\n                timestamp: new Date().toISOString()\n            };\n            if ((0,_environment_validation_js__WEBPACK_IMPORTED_MODULE_0__.isProduction)()) {\n                this.queueLog(logEntry);\n            } else {\n                console.log(\"ℹ️\", message, this.sanitize(data));\n            }\n        }\n    }\n    /**\n   * Log debug messages (only in development, always synchronous)\n   */ debug(message) {\n        let data = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, metadata = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;\n        if (this.level >= LOG_LEVELS.DEBUG && (0,_environment_validation_js__WEBPACK_IMPORTED_MODULE_0__.isDevelopment)()) {\n            console.log(\"\\uD83D\\uDC1B\", message, this.sanitize(data));\n        }\n    }\n    /**\n   * Log trace messages (only in development)\n   */ trace(message) {\n        let data = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, metadata = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;\n        if (this.level >= LOG_LEVELS.TRACE && (0,_environment_validation_js__WEBPACK_IMPORTED_MODULE_0__.isDevelopment)()) {\n            const formatted = this.formatMessage(\"TRACE\", message, data, metadata);\n            console.log((0,_environment_validation_js__WEBPACK_IMPORTED_MODULE_0__.isProduction)() ? formatted : \"\\uD83D\\uDD0D\", (0,_environment_validation_js__WEBPACK_IMPORTED_MODULE_0__.isProduction)() ? \"\" : message, (0,_environment_validation_js__WEBPACK_IMPORTED_MODULE_0__.isProduction)() ? \"\" : this.sanitize(data));\n        }\n    }\n    /**\n   * Log performance metrics\n   */ performance(operation, duration) {\n        let metadata = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;\n        this.info(\"Performance: \".concat(operation), {\n            duration: \"\".concat(duration, \"ms\")\n        }, metadata);\n    }\n    /**\n   * Log API calls\n   */ apiCall(method, endpoint, duration, status) {\n        this.info(\"API: \".concat(method, \" \").concat(endpoint), {\n            duration: \"\".concat(duration, \"ms\"),\n            status,\n            type: \"api_call\"\n        });\n    }\n    /**\n   * Log database queries\n   */ dbQuery(table, operation, duration) {\n        let recordCount = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;\n        this.debug(\"DB: \".concat(operation, \" on \").concat(table), {\n            duration: \"\".concat(duration, \"ms\"),\n            recordCount,\n            type: \"db_query\"\n        });\n    }\n    /**\n   * Log security events\n   */ security(event) {\n        let details = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;\n        this.warn(\"Security: \".concat(event), details, {\n            type: \"security_event\"\n        });\n    }\n    /**\n   * Log business events\n   */ business(event) {\n        let details = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;\n        this.info(\"Business: \".concat(event), details, {\n            type: \"business_event\"\n        });\n    }\n    constructor(){\n        this.level = (0,_environment_validation_js__WEBPACK_IMPORTED_MODULE_0__.isProduction)() ? LOG_LEVELS.WARN : LOG_LEVELS.DEBUG;\n        this.sensitivePatterns = [\n            /sk-[a-zA-Z0-9_-]+/,\n            /pk_[a-zA-Z0-9_-]+/,\n            /eyJ[a-zA-Z0-9_-]+/,\n            /password/i,\n            /secret/i,\n            /token/i,\n            /key.*=.*[a-zA-Z0-9_-]{20,}/ // Key-value pairs with long values\n        ];\n        // Asynchronous logging queue for performance\n        this.logQueue = [];\n        this.maxQueueSize = 1000;\n        this.flushInterval = 5000 // 5 seconds\n        ;\n        this.isFlushingLogs = false;\n        // Start periodic log flushing in production\n        if ((0,_environment_validation_js__WEBPACK_IMPORTED_MODULE_0__.isProduction)()) {\n            setInterval(()=>{\n                this.flushLogsAsync();\n            }, this.flushInterval);\n        }\n    }\n}\n// Create singleton instance\nconst logger = new ProductionLogger();\n// Convenience functions for common use cases\nconst logError = (message, data, metadata)=>logger.error(message, data, metadata);\nconst logWarn = (message, data, metadata)=>logger.warn(message, data, metadata);\nconst logInfo = (message, data, metadata)=>logger.info(message, data, metadata);\nconst logDebug = (message, data, metadata)=>logger.debug(message, data, metadata);\nconst logPerformance = (operation, duration, metadata)=>logger.performance(operation, duration, metadata);\nconst logAPICall = (method, endpoint, duration, status)=>logger.apiCall(method, endpoint, duration, status);\nconst logDBQuery = (table, operation, duration, recordCount)=>logger.dbQuery(table, operation, duration, recordCount);\nconst logSecurity = (event, details)=>logger.security(event, details);\nconst logBusiness = (event, details)=>logger.business(event, details);\n/* harmony default export */ __webpack_exports__[\"default\"] = (logger);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/production-logger.js\n"));

/***/ }),

/***/ "./lib/smartT.js":
/*!***********************!*\
  !*** ./lib/smartT.js ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addFallbackMappings: function() { return /* binding */ addFallbackMappings; },\n/* harmony export */   createSmartT: function() { return /* binding */ createSmartT; },\n/* harmony export */   smartT: function() { return /* binding */ smartT; },\n/* harmony export */   useSmartT: function() { return /* binding */ useSmartT; }\n/* harmony export */ });\n/* harmony import */ var _hooks_useSafeTranslation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../hooks/useSafeTranslation */ \"./hooks/useSafeTranslation.js\");\n/**\n * SMART TRANSLATION FUNCTION\n * Advanced fallback system with English defaults for rapid development\n * Automatically generates sensible fallbacks from translation keys\n */ var _s = $RefreshSig$();\n\n// English fallback mappings for common keys\nconst ENGLISH_FALLBACKS = {\n    // Navigation\n    \"nav.home\": \"Home\",\n    \"nav.about\": \"About\",\n    \"nav.dashboard\": \"Dashboard\",\n    \"nav.foundation\": \"Foundation\",\n    \"nav.product\": \"Product\",\n    \"nav.routing\": \"Routing\",\n    \"nav.partnership\": \"Partnership\",\n    \"nav.hindsight\": \"Hindsight\",\n    \"nav.alerts\": \"Alerts\",\n    \"nav.pricing\": \"Pricing\",\n    \"nav.contact\": \"Contact\",\n    // Actions\n    \"actions.next\": \"Next\",\n    \"actions.back\": \"Back\",\n    \"actions.continue\": \"Continue\",\n    \"actions.getStarted\": \"Get Started\",\n    \"actions.save\": \"Save\",\n    \"actions.cancel\": \"Cancel\",\n    \"actions.submit\": \"Submit\",\n    \"actions.calculate\": \"Calculate\",\n    \"actions.analyze\": \"Analyze\",\n    \"actions.optimize\": \"Optimize\",\n    // Status\n    \"status.loading\": \"Loading...\",\n    \"status.processing\": \"Processing...\",\n    \"status.searching\": \"Searching...\",\n    \"status.analyzing\": \"Analyzing...\",\n    \"status.connected\": \"Connected\",\n    \"status.ready\": \"Ready\",\n    \"status.active\": \"Active\",\n    \"status.complete\": \"Complete\",\n    \"status.success\": \"Success\",\n    \"status.error\": \"Error\",\n    // Common forms\n    \"form.companyName\": \"Company Name\",\n    \"form.businessType\": \"Business Type\",\n    \"form.industry\": \"Industry\",\n    \"form.email\": \"Email Address\",\n    \"form.phone\": \"Phone Number\",\n    \"form.location\": \"Location\",\n    \"form.zipCode\": \"ZIP Code\",\n    \"form.required\": \"Required\",\n    \"form.optional\": \"Optional\",\n    // Foundation page\n    \"foundation.title\": \"Business Intelligence Foundation\",\n    \"foundation.subtitle\": \"Complete your profile to unlock optimization\",\n    \"foundation.businessProfile\": \"Business Profile\",\n    \"foundation.companyName\": \"Company Name\",\n    \"foundation.industry\": \"Industry\",\n    \"foundation.location\": \"Business Location\",\n    \"foundation.supplierCountry\": \"Primary Supplier Country\",\n    \"foundation.importVolume\": \"Annual Import Volume\",\n    \"foundation.optimization\": \"Optimization Priority\",\n    // Product page\n    \"product.title\": \"Product Classification Intelligence\",\n    \"product.subtitle\": \"HS code mapping with trade flow intelligence\",\n    \"product.description\": \"Product Description\",\n    \"product.hsCode\": \"HS Code\",\n    \"product.confidence\": \"Confidence\",\n    \"product.addProduct\": \"Add Product\",\n    \"product.runAnalysis\": \"Run Analysis\",\n    \"product.analyzing\": \"Analyzing...\",\n    // Routing page\n    \"routing.title\": \"Route Analysis Intelligence\",\n    \"routing.subtitle\": \"USMCA triangle routing optimization\",\n    \"routing.analysis\": \"Route Analysis\",\n    \"routing.recommendations\": \"Recommendations\",\n    \"routing.savings\": \"Annual Savings\",\n    \"routing.tariffRate\": \"Tariff Rate\",\n    \"routing.transitTime\": \"Transit Time\",\n    \"routing.complexity\": \"Complexity\",\n    // Partnership page\n    \"partnership.title\": \"Partnership Ecosystem\",\n    \"partnership.subtitle\": \"Connect with strategic partners\",\n    \"partnership.canada\": \"Canada Opportunities\",\n    \"partnership.mexico\": \"Mexico Opportunities\",\n    \"partnership.advantages\": \"Advantages\",\n    \"partnership.timeline\": \"Timeline\",\n    \"partnership.savings\": \"Annual Savings\",\n    // Alerts page\n    \"alerts.title\": \"Intelligent Alerts\",\n    \"alerts.subtitle\": \"Pattern-based monitoring and notifications\",\n    \"alerts.addAlert\": \"Add Alert\",\n    \"alerts.alertType\": \"Alert Type\",\n    \"alerts.priority\": \"Priority Level\",\n    \"alerts.frequency\": \"Frequency\",\n    \"alerts.configure\": \"Configure Alert\",\n    // Dashboard Hub\n    \"dashboard.title\": \"Intelligence Command Center\",\n    \"dashboard.subtitle\": \"Live savings tracking and market monitoring\",\n    \"dashboard.businessSetup\": \"Business Setup\",\n    \"dashboard.productOptimization\": \"Product Optimization\",\n    \"dashboard.triangleAnalysis\": \"Triangle Analysis\",\n    \"dashboard.systemStatus\": \"System Status\",\n    \"dashboard.liveData\": \"Live Data\",\n    // General metrics\n    \"metrics.savings\": \"Savings\",\n    \"metrics.confidence\": \"Confidence\",\n    \"metrics.records\": \"Records\",\n    \"metrics.success\": \"Success Rate\",\n    \"metrics.value\": \"Value\",\n    \"metrics.volume\": \"Volume\",\n    // Flat status indicators (recently added)\n    \"intelligence\": \"Intelligence\",\n    \"monitoring\": \"Monitoring\",\n    \"database\": \"Database\",\n    \"connected\": \"Connected\",\n    \"routes\": \"Routes\",\n    \"validated\": \"Validated\"\n};\n/**\n * Smart translation function with intelligent English fallbacks\n * Note: This is a factory function that should be used with translation context\n * @param {Function} t - Translation function from useSafeTranslation hook\n * @returns {Function} - Smart translation function bound to translation context\n */ function createSmartT(t) {\n    return function smartT(key) {\n        let customFallback = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;\n        try {\n            // First try the translation system\n            const translation = t(key);\n            if (translation && translation !== key) {\n                return translation;\n            }\n            // If custom fallback provided, use it\n            if (customFallback) {\n                return customFallback;\n            }\n            // Check predefined English fallbacks\n            if (ENGLISH_FALLBACKS[key]) {\n                return ENGLISH_FALLBACKS[key];\n            }\n            // Generate smart fallback from key structure\n            return generateSmartFallback(key);\n        } catch (error) {\n            console.warn(\"smartT fallback for key: \".concat(key), error);\n            return customFallback || generateSmartFallback(key);\n        }\n    };\n}\n/**\n * Legacy smartT function - DEPRECATED\n * Use createSmartT with translation context instead\n * @param {string} key - Translation key (e.g., 'foundation.title')\n * @param {string} customFallback - Optional custom fallback text\n * @returns {string} - Fallback text only (cannot access live translations)\n */ function smartT(key) {\n    let customFallback = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;\n    console.warn(\"smartT: Using legacy mode without translation context. Consider using createSmartT() instead.\");\n    // If custom fallback provided, use it\n    if (customFallback) {\n        return customFallback;\n    }\n    // Check predefined English fallbacks\n    if (ENGLISH_FALLBACKS[key]) {\n        return ENGLISH_FALLBACKS[key];\n    }\n    // Generate smart fallback from key structure\n    return generateSmartFallback(key);\n}\n/**\n * Generate intelligent fallback from translation key\n * @param {string} key - Translation key\n * @returns {string} - Human-readable fallback\n */ function generateSmartFallback(key) {\n    if (!key || typeof key !== \"string\") {\n        return \"Text\";\n    }\n    // Split by dots and take the last part\n    const parts = key.split(\".\");\n    const lastPart = parts[parts.length - 1];\n    // Convert camelCase/snake_case to Title Case\n    return lastPart.replace(/([A-Z])/g, \" $1\") // camelCase -> camel Case\n    .replace(/_/g, \" \") // snake_case -> snake case\n    .replace(/^./, (str)=>str.toUpperCase()) // Capitalize first letter\n    .replace(/\\b\\w/g, (str)=>str.toUpperCase()) // Title Case\n    .trim();\n}\n/**\n * React hook version of smartT for use in components\n * Properly integrates with i18n translation system\n */ function useSmartT() {\n    _s();\n    const { t } = (0,_hooks_useSafeTranslation__WEBPACK_IMPORTED_MODULE_0__.useSafeTranslation)(\"common\");\n    const smartT = createSmartT(t);\n    return {\n        smartT,\n        t\n    };\n}\n_s(useSmartT, \"ozlHAb+Yhz1/d7M6WjaHKAvq70Q=\", false, function() {\n    return [\n        _hooks_useSafeTranslation__WEBPACK_IMPORTED_MODULE_0__.useSafeTranslation\n    ];\n});\n/**\n * Add new fallback mappings at runtime\n * @param {Object} mappings - Key-value pairs for fallbacks\n */ function addFallbackMappings(mappings) {\n    Object.assign(ENGLISH_FALLBACKS, mappings);\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (smartT);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/smartT.js\n"));

/***/ }),

/***/ "./lib/state/TriangleStateContext.js":
/*!*******************************************!*\
  !*** ./lib/state/TriangleStateContext.js ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TriangleStateProvider: function() { return /* binding */ TriangleStateProvider; },\n/* harmony export */   useIntelligence: function() { return /* binding */ useIntelligence; },\n/* harmony export */   useJourney: function() { return /* binding */ useJourney; },\n/* harmony export */   usePageData: function() { return /* binding */ usePageData; },\n/* harmony export */   useRealTimeData: function() { return /* binding */ useRealTimeData; },\n/* harmony export */   useTriangleState: function() { return /* binding */ useTriangleState; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_localStorage_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/localStorage-validator */ \"./lib/utils/localStorage-validator.js\");\n/* harmony import */ var _utils_production_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/production-logger */ \"./lib/utils/production-logger.js\");\n/**\n * TRIANGLE INTELLIGENCE UNIFIED STATE MANAGEMENT\n * Context API-based state management for the 6-page intelligence journey\n * Integrates with existing localStorage validation and intelligence systems\n */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$(), _s4 = $RefreshSig$(), _s5 = $RefreshSig$();\n\n\n\n// State structure for the 6-page journey\nconst INITIAL_STATE = {\n    // Page data\n    foundation: null,\n    product: null,\n    routing: null,\n    partnership: null,\n    hindsight: null,\n    alerts: null,\n    // Journey metadata\n    journey: {\n        currentPage: null,\n        completedPages: [],\n        progress: 0,\n        sessionId: null,\n        startTime: null,\n        lastActivity: null\n    },\n    // Intelligence data\n    intelligence: {\n        analysisResults: {},\n        confidenceScores: {},\n        optimizationData: {},\n        patternMatches: []\n    },\n    // Real-time data\n    realTime: {\n        stats: null,\n        alerts: [],\n        marketData: null\n    },\n    // UI state\n    ui: {\n        isLoading: false,\n        errors: [],\n        notifications: [],\n        language: \"en\"\n    },\n    // Performance tracking\n    performance: {\n        pageLoadTimes: {},\n        apiCallDurations: {},\n        lastSync: null\n    }\n};\n// Action types\nconst ACTION_TYPES = {\n    // Data actions\n    SET_PAGE_DATA: \"SET_PAGE_DATA\",\n    UPDATE_PAGE_DATA: \"UPDATE_PAGE_DATA\",\n    CLEAR_PAGE_DATA: \"CLEAR_PAGE_DATA\",\n    // Journey actions\n    SET_CURRENT_PAGE: \"SET_CURRENT_PAGE\",\n    MARK_PAGE_COMPLETED: \"MARK_PAGE_COMPLETED\",\n    UPDATE_PROGRESS: \"UPDATE_PROGRESS\",\n    INITIALIZE_SESSION: \"INITIALIZE_SESSION\",\n    // Intelligence actions\n    SET_ANALYSIS_RESULT: \"SET_ANALYSIS_RESULT\",\n    UPDATE_CONFIDENCE_SCORE: \"UPDATE_CONFIDENCE_SCORE\",\n    ADD_PATTERN_MATCH: \"ADD_PATTERN_MATCH\",\n    // Real-time actions\n    UPDATE_REAL_TIME_STATS: \"UPDATE_REAL_TIME_STATS\",\n    ADD_ALERT: \"ADD_ALERT\",\n    CLEAR_ALERTS: \"CLEAR_ALERTS\",\n    // UI actions\n    SET_LOADING: \"SET_LOADING\",\n    ADD_ERROR: \"ADD_ERROR\",\n    CLEAR_ERRORS: \"CLEAR_ERRORS\",\n    ADD_NOTIFICATION: \"ADD_NOTIFICATION\",\n    SET_LANGUAGE: \"SET_LANGUAGE\",\n    // Performance actions\n    RECORD_PAGE_LOAD: \"RECORD_PAGE_LOAD\",\n    RECORD_API_CALL: \"RECORD_API_CALL\",\n    SYNC_PERFORMANCE: \"SYNC_PERFORMANCE\",\n    // State management\n    HYDRATE_STATE: \"HYDRATE_STATE\",\n    PERSIST_STATE: \"PERSIST_STATE\",\n    RESET_STATE: \"RESET_STATE\"\n};\n// Reducer function\nfunction triangleStateReducer(state, action) {\n    switch(action.type){\n        case ACTION_TYPES.SET_PAGE_DATA:\n            return {\n                ...state,\n                [action.page]: action.data,\n                journey: {\n                    ...state.journey,\n                    lastActivity: Date.now()\n                }\n            };\n        case ACTION_TYPES.UPDATE_PAGE_DATA:\n            return {\n                ...state,\n                [action.page]: {\n                    ...state[action.page],\n                    ...action.data\n                },\n                journey: {\n                    ...state.journey,\n                    lastActivity: Date.now()\n                }\n            };\n        case ACTION_TYPES.SET_CURRENT_PAGE:\n            return {\n                ...state,\n                journey: {\n                    ...state.journey,\n                    currentPage: action.page,\n                    lastActivity: Date.now()\n                }\n            };\n        case ACTION_TYPES.MARK_PAGE_COMPLETED:\n            const completedPages = [\n                ...state.journey.completedPages\n            ];\n            if (!completedPages.includes(action.page)) {\n                completedPages.push(action.page);\n            }\n            return {\n                ...state,\n                journey: {\n                    ...state.journey,\n                    completedPages,\n                    progress: Math.round(completedPages.length / 6 * 100),\n                    lastActivity: Date.now()\n                }\n            };\n        case ACTION_TYPES.SET_ANALYSIS_RESULT:\n            return {\n                ...state,\n                intelligence: {\n                    ...state.intelligence,\n                    analysisResults: {\n                        ...state.intelligence.analysisResults,\n                        [action.key]: action.result\n                    }\n                }\n            };\n        case ACTION_TYPES.UPDATE_CONFIDENCE_SCORE:\n            return {\n                ...state,\n                intelligence: {\n                    ...state.intelligence,\n                    confidenceScores: {\n                        ...state.intelligence.confidenceScores,\n                        [action.key]: action.score\n                    }\n                }\n            };\n        case ACTION_TYPES.UPDATE_REAL_TIME_STATS:\n            return {\n                ...state,\n                realTime: {\n                    ...state.realTime,\n                    stats: action.stats\n                }\n            };\n        case ACTION_TYPES.ADD_ALERT:\n            return {\n                ...state,\n                realTime: {\n                    ...state.realTime,\n                    alerts: [\n                        ...state.realTime.alerts,\n                        action.alert\n                    ]\n                }\n            };\n        case ACTION_TYPES.SET_LOADING:\n            return {\n                ...state,\n                ui: {\n                    ...state.ui,\n                    isLoading: action.loading\n                }\n            };\n        case ACTION_TYPES.ADD_ERROR:\n            return {\n                ...state,\n                ui: {\n                    ...state.ui,\n                    errors: [\n                        ...state.ui.errors,\n                        action.error\n                    ]\n                }\n            };\n        case ACTION_TYPES.CLEAR_ERRORS:\n            return {\n                ...state,\n                ui: {\n                    ...state.ui,\n                    errors: []\n                }\n            };\n        case ACTION_TYPES.SET_LANGUAGE:\n            return {\n                ...state,\n                ui: {\n                    ...state.ui,\n                    language: action.language\n                }\n            };\n        case ACTION_TYPES.RECORD_PAGE_LOAD:\n            return {\n                ...state,\n                performance: {\n                    ...state.performance,\n                    pageLoadTimes: {\n                        ...state.performance.pageLoadTimes,\n                        [action.page]: action.duration\n                    }\n                }\n            };\n        case ACTION_TYPES.RECORD_API_CALL:\n            return {\n                ...state,\n                performance: {\n                    ...state.performance,\n                    apiCallDurations: {\n                        ...state.performance.apiCallDurations,\n                        [action.endpoint]: action.duration\n                    }\n                }\n            };\n        case ACTION_TYPES.HYDRATE_STATE:\n            return {\n                ...state,\n                ...action.data,\n                journey: {\n                    ...state.journey,\n                    ...action.data.journey,\n                    lastActivity: Date.now()\n                }\n            };\n        case ACTION_TYPES.SYNC_PERFORMANCE:\n            return {\n                ...state,\n                performance: {\n                    ...state.performance,\n                    lastSync: action.timestamp\n                }\n            };\n        case ACTION_TYPES.RESET_STATE:\n            return {\n                ...INITIAL_STATE,\n                journey: {\n                    ...INITIAL_STATE.journey,\n                    sessionId: generateSessionId()\n                }\n            };\n        default:\n            (0,_utils_production_logger__WEBPACK_IMPORTED_MODULE_3__.logError)(\"Unknown action type in triangleStateReducer\", {\n                type: action.type\n            });\n            return state;\n    }\n}\n// Context creation\nconst TriangleStateContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)();\n// Session ID generation\nfunction generateSessionId() {\n    return \"triangle-\".concat(Date.now(), \"-\").concat(Math.random().toString(36).substr(2, 9));\n}\n// State provider component\nfunction TriangleStateProvider(param) {\n    let { children } = param;\n    _s();\n    const [state, dispatch] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useReducer)(triangleStateReducer, {\n        ...INITIAL_STATE,\n        journey: {\n            ...INITIAL_STATE.journey,\n            sessionId: generateSessionId(),\n            startTime: Date.now()\n        }\n    });\n    // Hydrate state from localStorage on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const startTime = performance.now();\n        try {\n            // Load all page data\n            const foundationData = (0,_utils_localStorage_validator__WEBPACK_IMPORTED_MODULE_2__.getTriangleData)(\"triangle-foundation\");\n            const productData = (0,_utils_localStorage_validator__WEBPACK_IMPORTED_MODULE_2__.getTriangleData)(\"triangle-product\");\n            const routingData = (0,_utils_localStorage_validator__WEBPACK_IMPORTED_MODULE_2__.getTriangleData)(\"triangle-routing\");\n            const partnershipData = (0,_utils_localStorage_validator__WEBPACK_IMPORTED_MODULE_2__.getTriangleData)(\"triangle-partnership\");\n            const hindsightData = (0,_utils_localStorage_validator__WEBPACK_IMPORTED_MODULE_2__.getTriangleData)(\"triangle-hindsight\");\n            const alertsData = (0,_utils_localStorage_validator__WEBPACK_IMPORTED_MODULE_2__.getTriangleData)(\"triangle-alerts\");\n            // Reconstruct state\n            const hydratedState = {\n                foundation: foundationData,\n                product: productData,\n                routing: routingData,\n                partnership: partnershipData,\n                hindsight: hindsightData,\n                alerts: alertsData,\n                journey: {\n                    ...state.journey,\n                    completedPages: [\n                        foundationData && \"foundation\",\n                        productData && \"product\",\n                        routingData && \"routing\",\n                        partnershipData && \"partnership\",\n                        hindsightData && \"hindsight\",\n                        alertsData && \"alerts\"\n                    ].filter(Boolean),\n                    lastActivity: Math.max((foundationData === null || foundationData === void 0 ? void 0 : foundationData.timestamp) ? new Date(foundationData.timestamp).getTime() : 0, (productData === null || productData === void 0 ? void 0 : productData.timestamp) ? new Date(productData.timestamp).getTime() : 0, (routingData === null || routingData === void 0 ? void 0 : routingData.timestamp) ? new Date(routingData.timestamp).getTime() : 0, (partnershipData === null || partnershipData === void 0 ? void 0 : partnershipData.timestamp) ? new Date(partnershipData.timestamp).getTime() : 0, (hindsightData === null || hindsightData === void 0 ? void 0 : hindsightData.timestamp) ? new Date(hindsightData.timestamp).getTime() : 0, (alertsData === null || alertsData === void 0 ? void 0 : alertsData.timestamp) ? new Date(alertsData.timestamp).getTime() : 0)\n                }\n            };\n            hydratedState.journey.progress = Math.round(hydratedState.journey.completedPages.length / 6 * 100);\n            dispatch({\n                type: ACTION_TYPES.HYDRATE_STATE,\n                data: hydratedState\n            });\n            const loadTime = performance.now() - startTime;\n            (0,_utils_production_logger__WEBPACK_IMPORTED_MODULE_3__.logPerformance)(\"state_hydration\", loadTime, {\n                pagesLoaded: hydratedState.journey.completedPages.length,\n                sessionId: state.journey.sessionId\n            });\n        } catch (error) {\n            (0,_utils_production_logger__WEBPACK_IMPORTED_MODULE_3__.logError)(\"Failed to hydrate state from localStorage\", error);\n            dispatch({\n                type: ACTION_TYPES.ADD_ERROR,\n                error: \"Failed to load previous session data\"\n            });\n        }\n    }, []);\n    // Auto-persist state changes to localStorage\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const persistState = async ()=>{\n            try {\n                // Persist each page data independently\n                if (state.foundation) {\n                    (0,_utils_localStorage_validator__WEBPACK_IMPORTED_MODULE_2__.setTriangleData)(\"triangle-foundation\", state.foundation);\n                }\n                if (state.product) {\n                    (0,_utils_localStorage_validator__WEBPACK_IMPORTED_MODULE_2__.setTriangleData)(\"triangle-product\", state.product);\n                }\n                if (state.routing) {\n                    (0,_utils_localStorage_validator__WEBPACK_IMPORTED_MODULE_2__.setTriangleData)(\"triangle-routing\", state.routing);\n                }\n                if (state.partnership) {\n                    (0,_utils_localStorage_validator__WEBPACK_IMPORTED_MODULE_2__.setTriangleData)(\"triangle-partnership\", state.partnership);\n                }\n                if (state.hindsight) {\n                    (0,_utils_localStorage_validator__WEBPACK_IMPORTED_MODULE_2__.setTriangleData)(\"triangle-hindsight\", state.hindsight);\n                }\n                if (state.alerts) {\n                    (0,_utils_localStorage_validator__WEBPACK_IMPORTED_MODULE_2__.setTriangleData)(\"triangle-alerts\", state.alerts);\n                }\n                // Update performance tracking\n                dispatch({\n                    type: ACTION_TYPES.SYNC_PERFORMANCE,\n                    timestamp: Date.now()\n                });\n            } catch (error) {\n                (0,_utils_production_logger__WEBPACK_IMPORTED_MODULE_3__.logError)(\"Failed to persist state to localStorage\", error);\n                dispatch({\n                    type: ACTION_TYPES.ADD_ERROR,\n                    error: \"Failed to save session data\"\n                });\n            }\n        };\n        // Debounce persistence to avoid excessive writes\n        const persistTimeout = setTimeout(persistState, 1000);\n        return ()=>clearTimeout(persistTimeout);\n    }, [\n        state.foundation,\n        state.product,\n        state.routing,\n        state.partnership,\n        state.hindsight,\n        state.alerts\n    ]);\n    // Action creators\n    const actions = {\n        // Page data management\n        setPageData: (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((page, data)=>{\n            dispatch({\n                type: ACTION_TYPES.SET_PAGE_DATA,\n                page,\n                data\n            });\n            dispatch({\n                type: ACTION_TYPES.MARK_PAGE_COMPLETED,\n                page\n            });\n        }, []),\n        updatePageData: (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((page, data)=>{\n            dispatch({\n                type: ACTION_TYPES.UPDATE_PAGE_DATA,\n                page,\n                data\n            });\n        }, []),\n        clearPageData: (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((page)=>{\n            dispatch({\n                type: ACTION_TYPES.CLEAR_PAGE_DATA,\n                page\n            });\n        }, []),\n        // Journey management\n        setCurrentPage: (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((page)=>{\n            dispatch({\n                type: ACTION_TYPES.SET_CURRENT_PAGE,\n                page\n            });\n            // Record page load performance\n            const loadTime = performance.now();\n            dispatch({\n                type: ACTION_TYPES.RECORD_PAGE_LOAD,\n                page,\n                duration: loadTime\n            });\n        }, []),\n        // Intelligence management\n        setAnalysisResult: (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((key, result)=>{\n            dispatch({\n                type: ACTION_TYPES.SET_ANALYSIS_RESULT,\n                key,\n                result\n            });\n        }, []),\n        updateConfidenceScore: (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((key, score)=>{\n            dispatch({\n                type: ACTION_TYPES.UPDATE_CONFIDENCE_SCORE,\n                key,\n                score\n            });\n        }, []),\n        // Real-time data\n        updateRealTimeStats: (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((stats)=>{\n            dispatch({\n                type: ACTION_TYPES.UPDATE_REAL_TIME_STATS,\n                stats\n            });\n        }, []),\n        addAlert: (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((alert)=>{\n            dispatch({\n                type: ACTION_TYPES.ADD_ALERT,\n                alert\n            });\n        }, []),\n        // UI management\n        setLoading: (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((loading)=>{\n            dispatch({\n                type: ACTION_TYPES.SET_LOADING,\n                loading\n            });\n        }, []),\n        addError: (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((error)=>{\n            dispatch({\n                type: ACTION_TYPES.ADD_ERROR,\n                error\n            });\n            (0,_utils_production_logger__WEBPACK_IMPORTED_MODULE_3__.logError)(\"UI Error\", {\n                error\n            });\n        }, []),\n        clearErrors: (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n            dispatch({\n                type: ACTION_TYPES.CLEAR_ERRORS\n            });\n        }, []),\n        setLanguage: (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((language)=>{\n            dispatch({\n                type: ACTION_TYPES.SET_LANGUAGE,\n                language\n            });\n            (0,_utils_production_logger__WEBPACK_IMPORTED_MODULE_3__.logInfo)(\"Language changed\", {\n                language\n            });\n        }, []),\n        // Performance tracking\n        recordApiCall: (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((endpoint, duration)=>{\n            dispatch({\n                type: ACTION_TYPES.RECORD_API_CALL,\n                endpoint,\n                duration\n            });\n        }, []),\n        // State management\n        resetState: (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n            (0,_utils_localStorage_validator__WEBPACK_IMPORTED_MODULE_2__.clearAllTriangleData)();\n            dispatch({\n                type: ACTION_TYPES.RESET_STATE\n            });\n            (0,_utils_production_logger__WEBPACK_IMPORTED_MODULE_3__.logInfo)(\"State reset completed\");\n        }, []),\n        // Utility methods\n        getDataHealth: (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n            return (0,_utils_localStorage_validator__WEBPACK_IMPORTED_MODULE_2__.getDataHealthStatus)();\n        }, []),\n        isPageCompleted: (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((page)=>{\n            return state.journey.completedPages.includes(page);\n        }, [\n            state.journey.completedPages\n        ]),\n        getJourneyProgress: (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n            return {\n                progress: state.journey.progress,\n                currentPage: state.journey.currentPage,\n                completedPages: state.journey.completedPages,\n                nextPage: getNextPage(state.journey.currentPage, state.journey.completedPages)\n            };\n        }, [\n            state.journey\n        ])\n    };\n    const contextValue = {\n        state,\n        actions,\n        dispatch\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(TriangleStateContext.Provider, {\n        value: contextValue,\n        children: children\n    }, void 0, false, {\n        fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\lib\\\\state\\\\TriangleStateContext.js\",\n        lineNumber: 519,\n        columnNumber: 5\n    }, this);\n}\n_s(TriangleStateProvider, \"5CM/LiIca+GN8tOaQGzXACnbhMg=\");\n_c = TriangleStateProvider;\n// Helper function to determine next page in the journey\nfunction getNextPage(currentPage, completedPages) {\n    const pageOrder = [\n        \"foundation\",\n        \"product\",\n        \"routing\",\n        \"partnership\",\n        \"hindsight\",\n        \"alerts\"\n    ];\n    if (!currentPage) {\n        return completedPages.length > 0 ? null : \"foundation\";\n    }\n    const currentIndex = pageOrder.indexOf(currentPage);\n    if (currentIndex === -1 || currentIndex >= pageOrder.length - 1) {\n        return null;\n    }\n    return pageOrder[currentIndex + 1];\n}\n// Custom hook to use the Triangle state\nfunction useTriangleState() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(TriangleStateContext);\n    if (!context) {\n        throw new Error(\"useTriangleState must be used within a TriangleStateProvider\");\n    }\n    return context;\n}\n_s1(useTriangleState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n// Custom hooks for specific functionality\nfunction usePageData(page) {\n    _s2();\n    const { state, actions } = useTriangleState();\n    return {\n        data: state[page],\n        setData: (data)=>actions.setPageData(page, data),\n        updateData: (data)=>actions.updatePageData(page, data),\n        isCompleted: actions.isPageCompleted(page)\n    };\n}\n_s2(usePageData, \"8yUXJDxhk8vLQm2EMQBzpFoZE0c=\", false, function() {\n    return [\n        useTriangleState\n    ];\n});\nfunction useJourney() {\n    _s3();\n    const { state, actions } = useTriangleState();\n    return {\n        currentPage: state.journey.currentPage,\n        progress: state.journey.progress,\n        completedPages: state.journey.completedPages,\n        setCurrentPage: actions.setCurrentPage,\n        getProgress: actions.getJourneyProgress\n    };\n}\n_s3(useJourney, \"8yUXJDxhk8vLQm2EMQBzpFoZE0c=\", false, function() {\n    return [\n        useTriangleState\n    ];\n});\nfunction useIntelligence() {\n    _s4();\n    const { state, actions } = useTriangleState();\n    return {\n        analysisResults: state.intelligence.analysisResults,\n        confidenceScores: state.intelligence.confidenceScores,\n        setAnalysisResult: actions.setAnalysisResult,\n        updateConfidenceScore: actions.updateConfidenceScore\n    };\n}\n_s4(useIntelligence, \"8yUXJDxhk8vLQm2EMQBzpFoZE0c=\", false, function() {\n    return [\n        useTriangleState\n    ];\n});\nfunction useRealTimeData() {\n    _s5();\n    const { state, actions } = useTriangleState();\n    return {\n        stats: state.realTime.stats,\n        alerts: state.realTime.alerts,\n        marketData: state.realTime.marketData,\n        updateStats: actions.updateRealTimeStats,\n        addAlert: actions.addAlert\n    };\n}\n_s5(useRealTimeData, \"8yUXJDxhk8vLQm2EMQBzpFoZE0c=\", false, function() {\n    return [\n        useTriangleState\n    ];\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (TriangleStateContext);\nvar _c;\n$RefreshReg$(_c, \"TriangleStateProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/state/TriangleStateContext.js\n"));

/***/ }),

/***/ "./lib/supabase-client.js":
/*!********************************!*\
  !*** ./lib/supabase-client.js ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   executeOptimizedQuery: function() { return /* binding */ executeOptimizedQuery; },\n/* harmony export */   getConnectionStats: function() { return /* binding */ getConnectionStats; },\n/* harmony export */   getServerSupabaseClient: function() { return /* binding */ getServerSupabaseClient; },\n/* harmony export */   getSupabaseClient: function() { return /* binding */ getSupabaseClient; },\n/* harmony export */   shutdownConnections: function() { return /* binding */ shutdownConnections; },\n/* harmony export */   testSupabaseConnection: function() { return /* binding */ testSupabaseConnection; }\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @supabase/supabase-js */ \"./node_modules/@supabase/supabase-js/dist/module/index.js\");\n/* harmony import */ var _production_logger_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./production-logger.js */ \"./lib/production-logger.js\");\n/* harmony import */ var _memory_optimizer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./memory-optimizer.js */ \"./lib/memory-optimizer.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n/**\n * SHARED SUPABASE CLIENT WITH SERVER/CLIENT SEPARATION\n * Ensures service keys are NEVER exposed client-side\n * Single instance pattern to avoid conflicts\n */ \n\n\nlet supabaseInstance = null;\nlet supabaseServerInstance = null;\nlet connectionPool = {\n    activeConnections: 0,\n    maxConnections: 50,\n    connectionQueue: [],\n    lastCleanup: Date.now(),\n    peakConnections: 0,\n    totalQueries: 0\n};\n/**\n * Get Supabase client appropriate for the environment\n * Client-side: Uses anonymous key (safe for browser)\n * Server-side: Uses service role key (never exposed to browser)\n */ const getSupabaseClient = ()=>{\n    // Check if we're on the server or client\n    const isServer = \"object\" === \"undefined\";\n    if (isServer) {\n        // SERVER-SIDE: Use service role key for full access\n        if (!supabaseServerInstance) {\n            const serviceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\n            if (!serviceKey) {\n                (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logError)(\"SUPABASE_SERVICE_ROLE_KEY not found in server environment\");\n                throw new Error(\"Server configuration error: Missing service key\");\n            }\n            supabaseServerInstance = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_2__.createClient)(\"https://mrwitpgbcaxgnirqtavt.supabase.co\", serviceKey, {\n                auth: {\n                    autoRefreshToken: false,\n                    persistSession: false\n                },\n                db: {\n                    schema: \"public\"\n                },\n                global: {\n                    headers: {\n                        \"User-Agent\": \"Triangle-Intelligence-Platform/1.0\"\n                    }\n                }\n            });\n            // Register cleanup with memory optimizer\n            const memoryOptimizer = (0,_memory_optimizer_js__WEBPACK_IMPORTED_MODULE_1__.getMemoryOptimizer)();\n            memoryOptimizer.registerCleanup(\"supabase-server-client\", ()=>{\n                if (supabaseServerInstance) {\n                    (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logInfo)(\"Cleaning up Supabase server connections\");\n                    supabaseServerInstance = null;\n                }\n            });\n            (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logInfo)(\"Created server-side Supabase client with service role and memory optimization\");\n        }\n        return supabaseServerInstance;\n    } else {\n        // CLIENT-SIDE: Use anonymous key only\n        if (!supabaseInstance) {\n            const anonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im1yd2l0cGdiY2F4Z25pcnF0YXZ0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDk4MjUxMzQsImV4cCI6MjA2NTQwMTEzNH0.5g-eaUIwy4VQD2YfNC2sFNoZYF1HdUzVTNJZvtuVSI8\";\n            if (!anonKey) {\n                (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logError)(\"NEXT_PUBLIC_SUPABASE_ANON_KEY not found\");\n                throw new Error(\"Client configuration error: Missing anonymous key\");\n            }\n            supabaseInstance = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_2__.createClient)(\"https://mrwitpgbcaxgnirqtavt.supabase.co\", anonKey);\n            (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logInfo)(\"Created client-side Supabase client with anonymous key\");\n        }\n        return supabaseInstance;\n    }\n};\n/**\n * Get server-only Supabase client with service role\n * CRITICAL: Only use in API routes, never in components\n */ const getServerSupabaseClient = ()=>{\n    if (true) {\n        throw new Error(\"SECURITY VIOLATION: Attempted to use server client on client-side\");\n    }\n    if (!supabaseServerInstance) {\n        const serviceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\n        if (!serviceKey) {\n            throw new Error(\"SUPABASE_SERVICE_ROLE_KEY not configured\");\n        }\n        supabaseServerInstance = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_2__.createClient)(\"https://mrwitpgbcaxgnirqtavt.supabase.co\", serviceKey, {\n            auth: {\n                autoRefreshToken: false,\n                persistSession: false\n            }\n        });\n        (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logInfo)(\"Created dedicated server Supabase client\");\n    }\n    return supabaseServerInstance;\n};\n// Test database connection\nconst testSupabaseConnection = async ()=>{\n    try {\n        const client = getSupabaseClient();\n        const { data, error } = await client.from(\"translations\").select(\"*\").limit(1);\n        if (error) {\n            (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logError)(\"Supabase connection test failed\", {\n                error: error.message\n            });\n            return false;\n        }\n        (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logInfo)(\"Supabase connection test successful\");\n        return true;\n    } catch (error) {\n        (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logError)(\"Supabase connection test error\", {\n            error: error.message\n        });\n        return false;\n    }\n};\n/**\n * Memory-optimized database query wrapper\n */ const executeOptimizedQuery = async function(queryFn) {\n    let queryName = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"unknown\";\n    const startTime = Date.now();\n    connectionPool.activeConnections++;\n    connectionPool.totalQueries++;\n    // Track peak connections for monitoring\n    if (connectionPool.activeConnections > connectionPool.peakConnections) {\n        connectionPool.peakConnections = connectionPool.activeConnections;\n    }\n    try {\n        // Check if we need cleanup\n        if (Date.now() - connectionPool.lastCleanup > 300000) {\n            cleanupConnections();\n        }\n        const result = await queryFn();\n        const duration = Date.now() - startTime;\n        (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logInfo)(\"Optimized query executed: \".concat(queryName), {\n            duration: \"\".concat(duration, \"ms\"),\n            activeConnections: connectionPool.activeConnections,\n            peakConnections: connectionPool.peakConnections\n        });\n        return result;\n    } catch (error) {\n        (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logError)(\"Optimized query failed: \".concat(queryName), {\n            error: error.message,\n            duration: \"\".concat(Date.now() - startTime, \"ms\")\n        });\n        throw error;\n    } finally{\n        connectionPool.activeConnections--;\n    }\n};\n/**\n * Clean up connection pool\n */ const cleanupConnections = ()=>{\n    (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logInfo)(\"Cleaning up Supabase connection pool\", {\n        activeConnections: connectionPool.activeConnections,\n        queueSize: connectionPool.connectionQueue.length\n    });\n    // Reset connection tracking\n    connectionPool.activeConnections = Math.max(0, connectionPool.activeConnections);\n    connectionPool.connectionQueue = connectionPool.connectionQueue.filter((conn)=>Date.now() - conn.created < 300000 // 5 minutes\n    );\n    connectionPool.lastCleanup = Date.now();\n};\n/**\n * Get connection pool statistics\n */ const getConnectionStats = ()=>{\n    return {\n        activeConnections: connectionPool.activeConnections,\n        maxConnections: connectionPool.maxConnections,\n        peakConnections: connectionPool.peakConnections,\n        totalQueries: connectionPool.totalQueries,\n        queueSize: connectionPool.connectionQueue.length,\n        lastCleanup: new Date(connectionPool.lastCleanup).toISOString(),\n        utilizationPercent: Math.round(connectionPool.activeConnections / connectionPool.maxConnections * 100),\n        status: connectionPool.activeConnections < connectionPool.maxConnections * 0.8 ? \"healthy\" : \"high_load\"\n    };\n};\n/**\n * Graceful shutdown - cleanup all connections\n */ const shutdownConnections = ()=>{\n    (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logInfo)(\"Shutting down all Supabase connections\");\n    supabaseInstance = null;\n    supabaseServerInstance = null;\n    connectionPool.activeConnections = 0;\n    connectionPool.connectionQueue = [];\n    (0,_production_logger_js__WEBPACK_IMPORTED_MODULE_0__.logInfo)(\"All Supabase connections shut down successfully\");\n};\n// Register shutdown handler\nconst memoryOptimizer = (0,_memory_optimizer_js__WEBPACK_IMPORTED_MODULE_1__.getMemoryOptimizer)();\nmemoryOptimizer.registerCleanup(\"supabase-connections\", shutdownConnections);\n/* harmony default export */ __webpack_exports__[\"default\"] = (getSupabaseClient);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/supabase-client.js\n"));

/***/ }),

/***/ "./lib/utils/environment-validation.js":
/*!*********************************************!*\
  !*** ./lib/utils/environment-validation.js ***!
  \*********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEnvVar: function() { return /* binding */ getEnvVar; },\n/* harmony export */   getSecurityStatus: function() { return /* binding */ getSecurityStatus; },\n/* harmony export */   getSupabaseConfig: function() { return /* binding */ getSupabaseConfig; },\n/* harmony export */   isDevelopment: function() { return /* binding */ isDevelopment; },\n/* harmony export */   isProduction: function() { return /* binding */ isProduction; },\n/* harmony export */   safeLog: function() { return /* binding */ safeLog; },\n/* harmony export */   validateAPIKeysSecurity: function() { return /* binding */ validateAPIKeysSecurity; },\n/* harmony export */   validateEnvironment: function() { return /* binding */ validateEnvironment; },\n/* harmony export */   validateSecretSecurity: function() { return /* binding */ validateSecretSecurity; }\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n/**\n * Environment Variable Validation and Configuration\n * Centralized validation for production readiness\n */ // Required environment variables for production\n// Split by client/server because client can't see server-only vars\nconst CLIENT_REQUIRED_ENV_VARS = [\n    \"NEXT_PUBLIC_SUPABASE_URL\",\n    \"NEXT_PUBLIC_SUPABASE_ANON_KEY\"\n];\nconst SERVER_REQUIRED_ENV_VARS = [\n    \"NEXT_PUBLIC_SUPABASE_URL\",\n    \"NEXT_PUBLIC_SUPABASE_ANON_KEY\",\n    \"SUPABASE_SERVICE_ROLE_KEY\",\n    \"JWT_SECRET\",\n    \"NEXTAUTH_SECRET\"\n];\nconst SERVER_RECOMMENDED_ENV_VARS = [\n    \"ANTHROPIC_API_KEY\",\n    \"COMTRADE_API_KEY\",\n    \"SHIPPO_API_KEY\",\n    \"STRIPE_SECRET_KEY\"\n];\n// Optional environment variables with defaults\nconst OPTIONAL_ENV_VARS = {\n    NODE_ENV: \"development\",\n    NEXT_PUBLIC_APP_URL: \"http://localhost:3000\"\n};\n/**\n * Validate all required environment variables are present\n * @throws {Error} If any required variable is missing\n */ function validateEnvironment() {\n    // Skip validation entirely on client-side to avoid errors\n    if (true) {\n        console.log(\"✅ Environment validation skipped on client-side\");\n        return;\n    }\n    // Server-side validation\n    const missing = SERVER_REQUIRED_ENV_VARS.filter((key)=>!process.env[key]);\n    if (missing.length > 0) {\n        throw new Error(\"Missing required server-side environment variables: \".concat(missing.join(\", \")));\n    }\n    // Note: Using console.log here as this runs before logger is initialized\n    console.log(\"✅ All required environment variables are present\");\n}\n/**\n * Get environment variable with validation\n * @param {string} key - Environment variable key\n * @param {boolean} required - Whether the variable is required\n * @returns {string} Environment variable value\n */ function getEnvVar(key) {\n    let required = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;\n    const value = process.env[key];\n    if (required && !value) {\n        throw new Error(\"Missing required environment variable: \".concat(key));\n    }\n    return value || OPTIONAL_ENV_VARS[key];\n}\n/**\n * Check if running in production\n */ function isProduction() {\n    return \"development\" === \"production\";\n}\n/**\n * Check if running in development\n */ function isDevelopment() {\n    return \"development\" === \"development\";\n}\n/**\n * Safe logging that respects environment\n * Only logs in development unless force is true\n */ function safeLog(message) {\n    let data = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, force = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;\n    if (isDevelopment() || force) {\n        if (data) {\n            // Note: Using console.log here as this is used for bootstrap logging\n            console.log(message, data);\n        } else {\n            console.log(message);\n        }\n    }\n}\n/**\n * Get Supabase configuration based on environment\n */ function getSupabaseConfig() {\n    const url = getEnvVar(\"NEXT_PUBLIC_SUPABASE_URL\");\n    // Use service role key on server, anon key on client\n    const key =  true ? getEnvVar(\"NEXT_PUBLIC_SUPABASE_ANON_KEY\") : 0;\n    return {\n        url,\n        key\n    };\n}\n/**\n * Validate API keys are not exposed and check for security issues\n */ function validateAPIKeysSecurity() {\n    const sensitiveKeys = [\n        \"SUPABASE_SERVICE_ROLE_KEY\",\n        \"ANTHROPIC_API_KEY\",\n        \"STRIPE_SECRET_KEY\",\n        \"COMTRADE_API_KEY\",\n        \"SHIPPO_API_KEY\",\n        \"JWT_SECRET\",\n        \"NEXTAUTH_SECRET\",\n        \"ENTERPRISE_MASTER_KEY\"\n    ];\n    if (true) {\n        // Check if any sensitive keys are accessible on client\n        const exposedKeys = sensitiveKeys.filter((key)=>{\n            var _window_process_env, _window_process;\n            return (_window_process = window.process) === null || _window_process === void 0 ? void 0 : (_window_process_env = _window_process.env) === null || _window_process_env === void 0 ? void 0 : _window_process_env[key];\n        });\n        if (exposedKeys.length > 0) {\n            throw new Error(\"SECURITY VIOLATION: Sensitive keys exposed to client: \".concat(exposedKeys.join(\", \")));\n        }\n    }\n}\n/**\n * Check for dangerous default/template values\n */ function validateSecretSecurity() {\n    const dangerousPatterns = [\n        {\n            key: \"JWT_SECRET\",\n            patterns: [\n                \"your-super-secure\",\n                \"generate-new\",\n                \"REPLACE_WITH\"\n            ]\n        },\n        {\n            key: \"NEXTAUTH_SECRET\",\n            patterns: [\n                \"your-nextauth-secret\",\n                \"generate-new\",\n                \"REPLACE_WITH\"\n            ]\n        },\n        {\n            key: \"ENTERPRISE_MASTER_KEY\",\n            patterns: [\n                \"triangle-intelligence-enterprise\",\n                \"generate-new\",\n                \"REPLACE_WITH\"\n            ]\n        },\n        {\n            key: \"ANTHROPIC_API_KEY\",\n            patterns: [\n                \"your-key-here\",\n                \"REPLACE_WITH\"\n            ]\n        }\n    ];\n    const warnings = [];\n    dangerousPatterns.forEach((param)=>{\n        let { key, patterns } = param;\n        if (process.env[key]) {\n            patterns.forEach((pattern)=>{\n                if (process.env[key].includes(pattern)) {\n                    warnings.push(\"\".concat(key, \" appears to use default/template value\"));\n                }\n            });\n        }\n    });\n    // Check secret strength\n    if (process.env.JWT_SECRET && process.env.JWT_SECRET.length < 32) {\n        warnings.push(\"JWT_SECRET is too short (minimum 32 characters)\");\n    }\n    return warnings;\n}\n/**\n * Get comprehensive security status\n */ function getSecurityStatus() {\n    const warnings = validateSecretSecurity();\n    const requiredMissing = SERVER_REQUIRED_ENV_VARS.filter((key)=>!process.env[key]);\n    const recommendedMissing = SERVER_RECOMMENDED_ENV_VARS.filter((key)=>!process.env[key]);\n    return {\n        status: requiredMissing.length === 0 && warnings.length === 0 ? \"secure\" : \"needs_attention\",\n        requiredMissing,\n        recommendedMissing,\n        securityWarnings: warnings,\n        lastChecked: new Date().toISOString()\n    };\n}\n// Auto-validate on import in development (SERVER-SIDE ONLY)\nif (isDevelopment() && \"object\" === \"undefined\") {}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QWEsSUFBSUMsT0FBT0MsV0FBVztJQUNyQztBQUNGO0FBRUEsNERBQTREO0FBQzVELElBQUkzQixtQkFBbUIsYUFBa0IsYUFBYSxFQVFyRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9saWIvdXRpbHMvZW52aXJvbm1lbnQtdmFsaWRhdGlvbi5qcz83MTdhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRW52aXJvbm1lbnQgVmFyaWFibGUgVmFsaWRhdGlvbiBhbmQgQ29uZmlndXJhdGlvblxuICogQ2VudHJhbGl6ZWQgdmFsaWRhdGlvbiBmb3IgcHJvZHVjdGlvbiByZWFkaW5lc3NcbiAqL1xuXG4vLyBSZXF1aXJlZCBlbnZpcm9ubWVudCB2YXJpYWJsZXMgZm9yIHByb2R1Y3Rpb25cbi8vIFNwbGl0IGJ5IGNsaWVudC9zZXJ2ZXIgYmVjYXVzZSBjbGllbnQgY2FuJ3Qgc2VlIHNlcnZlci1vbmx5IHZhcnNcbmNvbnN0IENMSUVOVF9SRVFVSVJFRF9FTlZfVkFSUyA9IFtcbiAgJ05FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCcsXG4gICdORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSdcbl1cblxuY29uc3QgU0VSVkVSX1JFUVVJUkVEX0VOVl9WQVJTID0gW1xuICAnTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMJyxcbiAgJ05FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZJywgXG4gICdTVVBBQkFTRV9TRVJWSUNFX1JPTEVfS0VZJyxcbiAgJ0pXVF9TRUNSRVQnLFxuICAnTkVYVEFVVEhfU0VDUkVUJ1xuXVxuXG5jb25zdCBTRVJWRVJfUkVDT01NRU5ERURfRU5WX1ZBUlMgPSBbXG4gICdBTlRIUk9QSUNfQVBJX0tFWScsXG4gICdDT01UUkFERV9BUElfS0VZJywgXG4gICdTSElQUE9fQVBJX0tFWScsXG4gICdTVFJJUEVfU0VDUkVUX0tFWSdcbl1cblxuLy8gT3B0aW9uYWwgZW52aXJvbm1lbnQgdmFyaWFibGVzIHdpdGggZGVmYXVsdHNcbmNvbnN0IE9QVElPTkFMX0VOVl9WQVJTID0ge1xuICBOT0RFX0VOVjogJ2RldmVsb3BtZW50JyxcbiAgTkVYVF9QVUJMSUNfQVBQX1VSTDogJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMCdcbn1cblxuLyoqXG4gKiBWYWxpZGF0ZSBhbGwgcmVxdWlyZWQgZW52aXJvbm1lbnQgdmFyaWFibGVzIGFyZSBwcmVzZW50XG4gKiBAdGhyb3dzIHtFcnJvcn0gSWYgYW55IHJlcXVpcmVkIHZhcmlhYmxlIGlzIG1pc3NpbmdcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlRW52aXJvbm1lbnQoKSB7XG4gIC8vIFNraXAgdmFsaWRhdGlvbiBlbnRpcmVseSBvbiBjbGllbnQtc2lkZSB0byBhdm9pZCBlcnJvcnNcbiAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgY29uc29sZS5sb2coJ+KchSBFbnZpcm9ubWVudCB2YWxpZGF0aW9uIHNraXBwZWQgb24gY2xpZW50LXNpZGUnKVxuICAgIHJldHVyblxuICB9XG4gIFxuICAvLyBTZXJ2ZXItc2lkZSB2YWxpZGF0aW9uXG4gIGNvbnN0IG1pc3NpbmcgPSBTRVJWRVJfUkVRVUlSRURfRU5WX1ZBUlMuZmlsdGVyKGtleSA9PiAhcHJvY2Vzcy5lbnZba2V5XSlcbiAgXG4gIGlmIChtaXNzaW5nLmxlbmd0aCA+IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYE1pc3NpbmcgcmVxdWlyZWQgc2VydmVyLXNpZGUgZW52aXJvbm1lbnQgdmFyaWFibGVzOiAke21pc3Npbmcuam9pbignLCAnKX1gKVxuICB9XG4gIFxuICAvLyBOb3RlOiBVc2luZyBjb25zb2xlLmxvZyBoZXJlIGFzIHRoaXMgcnVucyBiZWZvcmUgbG9nZ2VyIGlzIGluaXRpYWxpemVkXG4gIGNvbnNvbGUubG9nKCfinIUgQWxsIHJlcXVpcmVkIGVudmlyb25tZW50IHZhcmlhYmxlcyBhcmUgcHJlc2VudCcpXG59XG5cbi8qKlxuICogR2V0IGVudmlyb25tZW50IHZhcmlhYmxlIHdpdGggdmFsaWRhdGlvblxuICogQHBhcmFtIHtzdHJpbmd9IGtleSAtIEVudmlyb25tZW50IHZhcmlhYmxlIGtleVxuICogQHBhcmFtIHtib29sZWFufSByZXF1aXJlZCAtIFdoZXRoZXIgdGhlIHZhcmlhYmxlIGlzIHJlcXVpcmVkXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBFbnZpcm9ubWVudCB2YXJpYWJsZSB2YWx1ZVxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0RW52VmFyKGtleSwgcmVxdWlyZWQgPSB0cnVlKSB7XG4gIGNvbnN0IHZhbHVlID0gcHJvY2Vzcy5lbnZba2V5XVxuICBcbiAgaWYgKHJlcXVpcmVkICYmICF2YWx1ZSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgTWlzc2luZyByZXF1aXJlZCBlbnZpcm9ubWVudCB2YXJpYWJsZTogJHtrZXl9YClcbiAgfVxuICBcbiAgcmV0dXJuIHZhbHVlIHx8IE9QVElPTkFMX0VOVl9WQVJTW2tleV1cbn1cblxuLyoqXG4gKiBDaGVjayBpZiBydW5uaW5nIGluIHByb2R1Y3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzUHJvZHVjdGlvbigpIHtcbiAgcmV0dXJuIHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbidcbn1cblxuLyoqXG4gKiBDaGVjayBpZiBydW5uaW5nIGluIGRldmVsb3BtZW50XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0RldmVsb3BtZW50KCkge1xuICByZXR1cm4gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCdcbn1cblxuLyoqXG4gKiBTYWZlIGxvZ2dpbmcgdGhhdCByZXNwZWN0cyBlbnZpcm9ubWVudFxuICogT25seSBsb2dzIGluIGRldmVsb3BtZW50IHVubGVzcyBmb3JjZSBpcyB0cnVlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzYWZlTG9nKG1lc3NhZ2UsIGRhdGEgPSBudWxsLCBmb3JjZSA9IGZhbHNlKSB7XG4gIGlmIChpc0RldmVsb3BtZW50KCkgfHwgZm9yY2UpIHtcbiAgICBpZiAoZGF0YSkge1xuICAgICAgLy8gTm90ZTogVXNpbmcgY29uc29sZS5sb2cgaGVyZSBhcyB0aGlzIGlzIHVzZWQgZm9yIGJvb3RzdHJhcCBsb2dnaW5nXG4gICAgICBjb25zb2xlLmxvZyhtZXNzYWdlLCBkYXRhKVxuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmxvZyhtZXNzYWdlKVxuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIEdldCBTdXBhYmFzZSBjb25maWd1cmF0aW9uIGJhc2VkIG9uIGVudmlyb25tZW50XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRTdXBhYmFzZUNvbmZpZygpIHtcbiAgY29uc3QgdXJsID0gZ2V0RW52VmFyKCdORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwnKVxuICBcbiAgLy8gVXNlIHNlcnZpY2Ugcm9sZSBrZXkgb24gc2VydmVyLCBhbm9uIGtleSBvbiBjbGllbnRcbiAgY29uc3Qga2V5ID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCdcbiAgICA/IGdldEVudlZhcignTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVknKVxuICAgIDogZ2V0RW52VmFyKCdTVVBBQkFTRV9TRVJWSUNFX1JPTEVfS0VZJywgZmFsc2UpIHx8IGdldEVudlZhcignTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVknKVxuICBcbiAgcmV0dXJuIHsgdXJsLCBrZXkgfVxufVxuXG4vKipcbiAqIFZhbGlkYXRlIEFQSSBrZXlzIGFyZSBub3QgZXhwb3NlZCBhbmQgY2hlY2sgZm9yIHNlY3VyaXR5IGlzc3Vlc1xuICovXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVBUElLZXlzU2VjdXJpdHkoKSB7XG4gIGNvbnN0IHNlbnNpdGl2ZUtleXMgPSBbXG4gICAgJ1NVUEFCQVNFX1NFUlZJQ0VfUk9MRV9LRVknLFxuICAgICdBTlRIUk9QSUNfQVBJX0tFWScsXG4gICAgJ1NUUklQRV9TRUNSRVRfS0VZJyxcbiAgICAnQ09NVFJBREVfQVBJX0tFWScsXG4gICAgJ1NISVBQT19BUElfS0VZJyxcbiAgICAnSldUX1NFQ1JFVCcsXG4gICAgJ05FWFRBVVRIX1NFQ1JFVCcsXG4gICAgJ0VOVEVSUFJJU0VfTUFTVEVSX0tFWSdcbiAgXVxuICBcbiAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgLy8gQ2hlY2sgaWYgYW55IHNlbnNpdGl2ZSBrZXlzIGFyZSBhY2Nlc3NpYmxlIG9uIGNsaWVudFxuICAgIGNvbnN0IGV4cG9zZWRLZXlzID0gc2Vuc2l0aXZlS2V5cy5maWx0ZXIoa2V5ID0+IHdpbmRvdy5wcm9jZXNzPy5lbnY/LltrZXldKVxuICAgIFxuICAgIGlmIChleHBvc2VkS2V5cy5sZW5ndGggPiAwKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFNFQ1VSSVRZIFZJT0xBVElPTjogU2Vuc2l0aXZlIGtleXMgZXhwb3NlZCB0byBjbGllbnQ6ICR7ZXhwb3NlZEtleXMuam9pbignLCAnKX1gKVxuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIENoZWNrIGZvciBkYW5nZXJvdXMgZGVmYXVsdC90ZW1wbGF0ZSB2YWx1ZXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlU2VjcmV0U2VjdXJpdHkoKSB7XG4gIGNvbnN0IGRhbmdlcm91c1BhdHRlcm5zID0gW1xuICAgIHsga2V5OiAnSldUX1NFQ1JFVCcsIHBhdHRlcm5zOiBbJ3lvdXItc3VwZXItc2VjdXJlJywgJ2dlbmVyYXRlLW5ldycsICdSRVBMQUNFX1dJVEgnXSB9LFxuICAgIHsga2V5OiAnTkVYVEFVVEhfU0VDUkVUJywgcGF0dGVybnM6IFsneW91ci1uZXh0YXV0aC1zZWNyZXQnLCAnZ2VuZXJhdGUtbmV3JywgJ1JFUExBQ0VfV0lUSCddIH0sXG4gICAgeyBrZXk6ICdFTlRFUlBSSVNFX01BU1RFUl9LRVknLCBwYXR0ZXJuczogWyd0cmlhbmdsZS1pbnRlbGxpZ2VuY2UtZW50ZXJwcmlzZScsICdnZW5lcmF0ZS1uZXcnLCAnUkVQTEFDRV9XSVRIJ10gfSxcbiAgICB7IGtleTogJ0FOVEhST1BJQ19BUElfS0VZJywgcGF0dGVybnM6IFsneW91ci1rZXktaGVyZScsICdSRVBMQUNFX1dJVEgnXSB9XG4gIF1cblxuICBjb25zdCB3YXJuaW5ncyA9IFtdXG4gIFxuICBkYW5nZXJvdXNQYXR0ZXJucy5mb3JFYWNoKCh7IGtleSwgcGF0dGVybnMgfSkgPT4ge1xuICAgIGlmIChwcm9jZXNzLmVudltrZXldKSB7XG4gICAgICBwYXR0ZXJucy5mb3JFYWNoKHBhdHRlcm4gPT4ge1xuICAgICAgICBpZiAocHJvY2Vzcy5lbnZba2V5XS5pbmNsdWRlcyhwYXR0ZXJuKSkge1xuICAgICAgICAgIHdhcm5pbmdzLnB1c2goYCR7a2V5fSBhcHBlYXJzIHRvIHVzZSBkZWZhdWx0L3RlbXBsYXRlIHZhbHVlYClcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9XG4gIH0pXG5cbiAgLy8gQ2hlY2sgc2VjcmV0IHN0cmVuZ3RoXG4gIGlmIChwcm9jZXNzLmVudi5KV1RfU0VDUkVUICYmIHByb2Nlc3MuZW52LkpXVF9TRUNSRVQubGVuZ3RoIDwgMzIpIHtcbiAgICB3YXJuaW5ncy5wdXNoKCdKV1RfU0VDUkVUIGlzIHRvbyBzaG9ydCAobWluaW11bSAzMiBjaGFyYWN0ZXJzKScpXG4gIH1cblxuICByZXR1cm4gd2FybmluZ3Ncbn1cblxuLyoqXG4gKiBHZXQgY29tcHJlaGVuc2l2ZSBzZWN1cml0eSBzdGF0dXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFNlY3VyaXR5U3RhdHVzKCkge1xuICBjb25zdCB3YXJuaW5ncyA9IHZhbGlkYXRlU2VjcmV0U2VjdXJpdHkoKVxuICBjb25zdCByZXF1aXJlZE1pc3NpbmcgPSBTRVJWRVJfUkVRVUlSRURfRU5WX1ZBUlMuZmlsdGVyKGtleSA9PiAhcHJvY2Vzcy5lbnZba2V5XSlcbiAgY29uc3QgcmVjb21tZW5kZWRNaXNzaW5nID0gU0VSVkVSX1JFQ09NTUVOREVEX0VOVl9WQVJTLmZpbHRlcihrZXkgPT4gIXByb2Nlc3MuZW52W2tleV0pXG4gIFxuICByZXR1cm4ge1xuICAgIHN0YXR1czogcmVxdWlyZWRNaXNzaW5nLmxlbmd0aCA9PT0gMCAmJiB3YXJuaW5ncy5sZW5ndGggPT09IDAgPyAnc2VjdXJlJyA6ICduZWVkc19hdHRlbnRpb24nLFxuICAgIHJlcXVpcmVkTWlzc2luZyxcbiAgICByZWNvbW1lbmRlZE1pc3NpbmcsXG4gICAgc2VjdXJpdHlXYXJuaW5nczogd2FybmluZ3MsXG4gICAgbGFzdENoZWNrZWQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxuICB9XG59XG5cbi8vIEF1dG8tdmFsaWRhdGUgb24gaW1wb3J0IGluIGRldmVsb3BtZW50IChTRVJWRVItU0lERSBPTkxZKVxuaWYgKGlzRGV2ZWxvcG1lbnQoKSAmJiB0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykge1xuICB0cnkge1xuICAgIHZhbGlkYXRlRW52aXJvbm1lbnQoKVxuICAgIHZhbGlkYXRlQVBJS2V5c1NlY3VyaXR5KClcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAvLyBOb3RlOiBVc2luZyBjb25zb2xlLmVycm9yIGhlcmUgYXMgdGhpcyBpcyBjcml0aWNhbCBib290c3RyYXAgZXJyb3JcbiAgICBjb25zb2xlLmVycm9yKCfinYwgRW52aXJvbm1lbnQgdmFsaWRhdGlvbiBmYWlsZWQ6JywgZXJyb3IubWVzc2FnZSlcbiAgfVxufSJdLCJuYW1lcyI6WyJDTElFTlRfUkVRVUlSRURfRU5WX1ZBUlMiLCJTRVJWRVJfUkVRVUlSRURfRU5WX1ZBUlMiLCJTRVJWRVJfUkVDT01NRU5ERURfRU5WX1ZBUlMiLCJPUFRJT05BTF9FTlZfVkFSUyIsIk5PREVfRU5WIiwiTkVYVF9QVUJMSUNfQVBQX1VSTCIsInZhbGlkYXRlRW52aXJvbm1lbnQiLCJjb25zb2xlIiwibG9nIiwibWlzc2luZyIsImZpbHRlciIsImtleSIsInByb2Nlc3MiLCJlbnYiLCJsZW5ndGgiLCJFcnJvciIsImpvaW4iLCJnZXRFbnZWYXIiLCJyZXF1aXJlZCIsInZhbHVlIiwiaXNQcm9kdWN0aW9uIiwiaXNEZXZlbG9wbWVudCIsInNhZmVMb2ciLCJtZXNzYWdlIiwiZGF0YSIsImZvcmNlIiwiZ2V0U3VwYWJhc2VDb25maWciLCJ1cmwiLCJ2YWxpZGF0ZUFQSUtleXNTZWN1cml0eSIsInNlbnNpdGl2ZUtleXMiLCJleHBvc2VkS2V5cyIsIndpbmRvdyIsInZhbGlkYXRlU2VjcmV0U2VjdXJpdHkiLCJkYW5nZXJvdXNQYXR0ZXJucyIsInBhdHRlcm5zIiwid2FybmluZ3MiLCJmb3JFYWNoIiwicGF0dGVybiIsImluY2x1ZGVzIiwicHVzaCIsIkpXVF9TRUNSRVQiLCJnZXRTZWN1cml0eVN0YXR1cyIsInJlcXVpcmVkTWlzc2luZyIsInJlY29tbWVuZGVkTWlzc2luZyIsInN0YXR1cyIsInNlY3VyaXR5V2FybmluZ3MiLCJsYXN0Q2hlY2tlZCIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsImVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/utils/environment-validation.js\n"));

/***/ }),

/***/ "./lib/utils/localStorage-validator.js":
/*!*********************************************!*\
  !*** ./lib/utils/localStorage-validator.js ***!
  \*********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearAllTriangleData: function() { return /* binding */ clearAllTriangleData; },\n/* harmony export */   getDataHealthStatus: function() { return /* binding */ getDataHealthStatus; },\n/* harmony export */   getTriangleData: function() { return /* binding */ getTriangleData; },\n/* harmony export */   hasValidTriangleData: function() { return /* binding */ hasValidTriangleData; },\n/* harmony export */   migrateTriangleData: function() { return /* binding */ migrateTriangleData; },\n/* harmony export */   removeTriangleData: function() { return /* binding */ removeTriangleData; },\n/* harmony export */   setTriangleData: function() { return /* binding */ setTriangleData; }\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n/**\n * LOCAL STORAGE DATA VALIDATION & SECURITY\n * Prevents data corruption and ensures data integrity across Triangle Intelligence pages\n * Security-focused validation with expiry timestamps and data structure validation\n */ // Data schemas for validation\nconst DATA_SCHEMAS = {\n    \"triangle-foundation\": {\n        required: [\n            \"companyName\",\n            \"businessType\",\n            \"zipCode\",\n            \"primarySupplierCountry\",\n            \"importVolume\"\n        ],\n        optional: [\n            \"timelinePriority\",\n            \"secondarySupplierCountries\",\n            \"seasonalPatterns\",\n            \"currentShippingPorts\",\n            \"specialRequirements\"\n        ],\n        types: {\n            companyName: \"string\",\n            businessType: \"string\",\n            zipCode: \"string\",\n            primarySupplierCountry: \"string\",\n            importVolume: \"string\",\n            timelinePriority: \"string\",\n            secondarySupplierCountries: \"array\",\n            seasonalPatterns: \"string\",\n            currentShippingPorts: \"array\",\n            specialRequirements: \"array\"\n        }\n    },\n    \"triangle-product\": {\n        required: [\n            \"products\"\n        ],\n        optional: [\n            \"analysisResults\",\n            \"timestamp\"\n        ],\n        types: {\n            products: \"array\",\n            analysisResults: \"object\",\n            timestamp: \"string\"\n        }\n    },\n    \"triangle-routing\": {\n        required: [\n            \"selectedRoute\"\n        ],\n        optional: [\n            \"routes\",\n            \"analysisData\",\n            \"timestamp\"\n        ],\n        types: {\n            selectedRoute: \"object\",\n            routes: \"array\",\n            analysisData: \"object\",\n            timestamp: \"string\"\n        }\n    },\n    \"triangle-partnership\": {\n        required: [\n            \"selectedStrategy\"\n        ],\n        optional: [\n            \"partnershipAnalysis\",\n            \"timestamp\"\n        ],\n        types: {\n            selectedStrategy: \"string\",\n            partnershipAnalysis: \"object\",\n            timestamp: \"string\"\n        }\n    },\n    \"triangle-signup\": {\n        required: [\n            \"email\"\n        ],\n        optional: [\n            \"companyName\",\n            \"industry\",\n            \"importVolume\",\n            \"timestamp\"\n        ],\n        types: {\n            email: \"string\",\n            companyName: \"string\",\n            industry: \"string\",\n            importVolume: \"string\",\n            timestamp: \"string\"\n        }\n    }\n};\n// Data expiry times (in milliseconds)\nconst EXPIRY_TIMES = {\n    \"triangle-foundation\": parseInt(process.env.CACHE_TTL_USER_SESSIONS) * 1000 || 24 * 60 * 60 * 1000,\n    \"triangle-product\": parseInt(process.env.CACHE_TTL_USER_SESSIONS) * 1000 || 12 * 60 * 60 * 1000,\n    \"triangle-routing\": parseInt(process.env.CACHE_TTL_USER_SESSIONS) * 1000 || 12 * 60 * 60 * 1000,\n    \"triangle-partnership\": parseInt(process.env.CACHE_TTL_USER_SESSIONS) * 1000 || 24 * 60 * 60 * 1000,\n    \"triangle-signup\": parseInt(process.env.CACHE_TTL_USER_SESSIONS) * 7 * 1000 || 7 * 24 * 60 * 60 * 1000 // Environment configurable\n};\n/**\n * Validates the type of a value against expected type\n */ function validateType(value, expectedType) {\n    switch(expectedType){\n        case \"string\":\n            return typeof value === \"string\";\n        case \"number\":\n            return typeof value === \"number\" && !isNaN(value);\n        case \"boolean\":\n            return typeof value === \"boolean\";\n        case \"array\":\n            return Array.isArray(value);\n        case \"object\":\n            return typeof value === \"object\" && value !== null && !Array.isArray(value);\n        default:\n            return false;\n    }\n}\n/**\n * Validates data structure against schema\n */ function validateDataStructure(data, schema) {\n    if (!data || typeof data !== \"object\") {\n        return {\n            valid: false,\n            errors: [\n                \"Data must be an object\"\n            ]\n        };\n    }\n    const errors = [];\n    // Check required fields\n    for (const field of schema.required){\n        if (!(field in data)) {\n            errors.push(\"Missing required field: \".concat(field));\n        } else if (!validateType(data[field], schema.types[field])) {\n            errors.push(\"Invalid type for \".concat(field, \": expected \").concat(schema.types[field], \", got \").concat(typeof data[field]));\n        }\n    }\n    // Check optional fields types if they exist\n    for (const field of schema.optional){\n        if (field in data && !validateType(data[field], schema.types[field])) {\n            errors.push(\"Invalid type for \".concat(field, \": expected \").concat(schema.types[field], \", got \").concat(typeof data[field]));\n        }\n    }\n    // Check for unexpected fields (security measure)\n    const allowedFields = [\n        ...schema.required,\n        ...schema.optional,\n        \"timestamp\",\n        \"_version\"\n    ];\n    for(const field in data){\n        if (!allowedFields.includes(field)) {\n            errors.push(\"Unexpected field: \".concat(field));\n        }\n    }\n    return {\n        valid: errors.length === 0,\n        errors\n    };\n}\n/**\n * Adds timestamp to data for expiry tracking\n */ function addTimestamp(data) {\n    return {\n        ...data,\n        timestamp: new Date().toISOString(),\n        _version: \"2.1\" // Version for future migration compatibility\n    };\n}\n/**\n * Checks if data has expired\n */ function isExpired(data, key) {\n    if (!data.timestamp) {\n        return true // No timestamp = expired\n        ;\n    }\n    const expiryTime = EXPIRY_TIMES[key] || 24 * 60 * 60 * 1000 // Default 24 hours\n    ;\n    const dataAge = Date.now() - new Date(data.timestamp).getTime();\n    return dataAge > expiryTime;\n}\n/**\n * Sanitizes data to remove potentially harmful content\n */ function sanitizeData(data) {\n    if (typeof data === \"string\") {\n        // Remove potential XSS patterns\n        return data.replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, \"\").replace(/javascript:/gi, \"\").replace(/on\\w+\\s*=/gi, \"\").trim();\n    }\n    if (Array.isArray(data)) {\n        return data.map(sanitizeData);\n    }\n    if (typeof data === \"object\" && data !== null) {\n        const sanitized = {};\n        for (const [key, value] of Object.entries(data)){\n            // Sanitize key names\n            const cleanKey = key.replace(/[^\\w\\-_]/g, \"\");\n            sanitized[cleanKey] = sanitizeData(value);\n        }\n        return sanitized;\n    }\n    return data;\n}\n/**\n * Safely stores data to localStorage with validation\n */ function setTriangleData(key, data) {\n    try {\n        if (!DATA_SCHEMAS[key]) {\n            console.warn(\"⚠️ No schema defined for key: \".concat(key));\n            return false;\n        }\n        // Sanitize input data\n        const sanitizedData = sanitizeData(data);\n        // Validate data structure\n        const validation = validateDataStructure(sanitizedData, DATA_SCHEMAS[key]);\n        if (!validation.valid) {\n            console.error(\"❌ Data validation failed for \".concat(key, \":\"), validation.errors);\n            return false;\n        }\n        // Add timestamp for expiry tracking\n        const timestampedData = addTimestamp(sanitizedData);\n        // Store to localStorage\n        localStorage.setItem(key, JSON.stringify(timestampedData));\n        console.log(\"✅ Data stored successfully: \".concat(key));\n        return true;\n    } catch (error) {\n        console.error(\"❌ Failed to store data for \".concat(key, \":\"), error);\n        return false;\n    }\n}\n/**\n * Safely retrieves data from localStorage with validation\n */ function getTriangleData(key) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    try {\n        const { allowExpired = false, returnErrors: returnErrors1 = false } = options;\n        const rawData = localStorage.getItem(key);\n        if (!rawData) {\n            return returnErrors1 ? {\n                data: null,\n                errors: [\n                    \"No data found\"\n                ]\n            } : null;\n        }\n        let parsedData;\n        try {\n            parsedData = JSON.parse(rawData);\n        } catch (parseError) {\n            console.error(\"❌ Failed to parse localStorage data for \".concat(key, \":\"), parseError);\n            // Clear corrupted data\n            localStorage.removeItem(key);\n            return returnErrors1 ? {\n                data: null,\n                errors: [\n                    \"Corrupted data removed\"\n                ]\n            } : null;\n        }\n        // Check expiry\n        if (!allowExpired && isExpired(parsedData, key)) {\n            console.log(\"⏰ Data expired for \".concat(key, \", removing...\"));\n            localStorage.removeItem(key);\n            return returnErrors1 ? {\n                data: null,\n                errors: [\n                    \"Data expired\"\n                ]\n            } : null;\n        }\n        // Validate data structure if schema exists\n        if (DATA_SCHEMAS[key]) {\n            const validation = validateDataStructure(parsedData, DATA_SCHEMAS[key]);\n            if (!validation.valid) {\n                console.error(\"❌ Retrieved data validation failed for \".concat(key, \":\"), validation.errors);\n                // Clear invalid data\n                localStorage.removeItem(key);\n                return returnErrors1 ? {\n                    data: null,\n                    errors: validation.errors\n                } : null;\n            }\n        }\n        console.log(\"✅ Data retrieved successfully: \".concat(key));\n        return returnErrors1 ? {\n            data: parsedData,\n            errors: []\n        } : parsedData;\n    } catch (error) {\n        console.error(\"❌ Failed to retrieve data for \".concat(key, \":\"), error);\n        return returnErrors ? {\n            data: null,\n            errors: [\n                error.message\n            ]\n        } : null;\n    }\n}\n/**\n * Checks if data exists and is valid\n */ function hasValidTriangleData(key) {\n    const data = getTriangleData(key);\n    return data !== null;\n}\n/**\n * Removes specific data from localStorage\n */ function removeTriangleData(key) {\n    try {\n        localStorage.removeItem(key);\n        console.log(\"\\uD83D\\uDDD1️ Data removed: \".concat(key));\n        return true;\n    } catch (error) {\n        console.error(\"❌ Failed to remove data for \".concat(key, \":\"), error);\n        return false;\n    }\n}\n/**\n * Clears all Triangle Intelligence data from localStorage\n */ function clearAllTriangleData() {\n    try {\n        const triangleKeys = Object.keys(DATA_SCHEMAS);\n        let removedCount = 0;\n        for (const key of triangleKeys){\n            if (localStorage.getItem(key)) {\n                localStorage.removeItem(key);\n                removedCount++;\n            }\n        }\n        console.log(\"\\uD83E\\uDDF9 Cleared \".concat(removedCount, \" Triangle Intelligence data items\"));\n        return true;\n    } catch (error) {\n        console.error(\"❌ Failed to clear Triangle data:\", error);\n        return false;\n    }\n}\n/**\n * Gets data health status for all stored items\n */ function getDataHealthStatus() {\n    const status = {};\n    for (const key of Object.keys(DATA_SCHEMAS)){\n        const result = getTriangleData(key, {\n            returnErrors: true,\n            allowExpired: true\n        });\n        if (result.data) {\n            status[key] = {\n                exists: true,\n                valid: result.errors.length === 0,\n                expired: isExpired(result.data, key),\n                size: JSON.stringify(result.data).length,\n                lastModified: result.data.timestamp || \"Unknown\",\n                errors: result.errors\n            };\n        } else {\n            status[key] = {\n                exists: false,\n                valid: false,\n                expired: true,\n                size: 0,\n                lastModified: null,\n                errors: result.errors\n            };\n        }\n    }\n    return status;\n}\n/**\n * Migrates data from old format to new format (version compatibility)\n */ function migrateTriangleData() {\n    console.log(\"\\uD83D\\uDD04 Checking for data migration needs...\");\n    const migrationCount = {\n        migrated: 0,\n        skipped: 0,\n        failed: 0\n    };\n    for (const key of Object.keys(DATA_SCHEMAS)){\n        try {\n            const rawData = localStorage.getItem(key);\n            if (!rawData) continue;\n            const data = JSON.parse(rawData);\n            // Check if migration needed (no version or old version)\n            if (!data._version || data._version !== \"2.1\") {\n                // Add version and timestamp if missing\n                const migratedData = addTimestamp(data);\n                localStorage.setItem(key, JSON.stringify(migratedData));\n                migrationCount.migrated++;\n                console.log(\"✅ Migrated \".concat(key, \" to version 2.1\"));\n            } else {\n                migrationCount.skipped++;\n            }\n        } catch (error) {\n            migrationCount.failed++;\n            console.error(\"❌ Migration failed for \".concat(key, \":\"), error);\n        }\n    }\n    console.log(\"\\uD83D\\uDD04 Migration complete:\", migrationCount);\n    return migrationCount;\n}\n// Auto-run migration on import (safe, only runs if needed)\nif (true) {\n    migrateTriangleData();\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QU9sQyxPQUFPO1lBQ2RnQyxlQUFlRyxNQUFNO1lBQ3JCdkMsUUFBUUksS0FBSyxDQUFDLDBCQUE4QixPQUFKbEIsS0FBSSxNQUFJa0I7UUFDbEQ7SUFDRjtJQUVBSixRQUFRVSxHQUFHLENBQUUsb0NBQXlCMEI7SUFDdEMsT0FBT0E7QUFDVDtBQUVBLDJEQUEyRDtBQUMzRCxJQUFJLElBQWtCLEVBQWE7SUFDakNEO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL3V0aWxzL2xvY2FsU3RvcmFnZS12YWxpZGF0b3IuanM/NjU3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIExPQ0FMIFNUT1JBR0UgREFUQSBWQUxJREFUSU9OICYgU0VDVVJJVFlcbiAqIFByZXZlbnRzIGRhdGEgY29ycnVwdGlvbiBhbmQgZW5zdXJlcyBkYXRhIGludGVncml0eSBhY3Jvc3MgVHJpYW5nbGUgSW50ZWxsaWdlbmNlIHBhZ2VzXG4gKiBTZWN1cml0eS1mb2N1c2VkIHZhbGlkYXRpb24gd2l0aCBleHBpcnkgdGltZXN0YW1wcyBhbmQgZGF0YSBzdHJ1Y3R1cmUgdmFsaWRhdGlvblxuICovXG5cbi8vIERhdGEgc2NoZW1hcyBmb3IgdmFsaWRhdGlvblxuY29uc3QgREFUQV9TQ0hFTUFTID0ge1xuICAndHJpYW5nbGUtZm91bmRhdGlvbic6IHtcbiAgICByZXF1aXJlZDogWydjb21wYW55TmFtZScsICdidXNpbmVzc1R5cGUnLCAnemlwQ29kZScsICdwcmltYXJ5U3VwcGxpZXJDb3VudHJ5JywgJ2ltcG9ydFZvbHVtZSddLFxuICAgIG9wdGlvbmFsOiBbJ3RpbWVsaW5lUHJpb3JpdHknLCAnc2Vjb25kYXJ5U3VwcGxpZXJDb3VudHJpZXMnLCAnc2Vhc29uYWxQYXR0ZXJucycsICdjdXJyZW50U2hpcHBpbmdQb3J0cycsICdzcGVjaWFsUmVxdWlyZW1lbnRzJ10sXG4gICAgdHlwZXM6IHtcbiAgICAgIGNvbXBhbnlOYW1lOiAnc3RyaW5nJyxcbiAgICAgIGJ1c2luZXNzVHlwZTogJ3N0cmluZycsXG4gICAgICB6aXBDb2RlOiAnc3RyaW5nJyxcbiAgICAgIHByaW1hcnlTdXBwbGllckNvdW50cnk6ICdzdHJpbmcnLFxuICAgICAgaW1wb3J0Vm9sdW1lOiAnc3RyaW5nJyxcbiAgICAgIHRpbWVsaW5lUHJpb3JpdHk6ICdzdHJpbmcnLFxuICAgICAgc2Vjb25kYXJ5U3VwcGxpZXJDb3VudHJpZXM6ICdhcnJheScsXG4gICAgICBzZWFzb25hbFBhdHRlcm5zOiAnc3RyaW5nJyxcbiAgICAgIGN1cnJlbnRTaGlwcGluZ1BvcnRzOiAnYXJyYXknLFxuICAgICAgc3BlY2lhbFJlcXVpcmVtZW50czogJ2FycmF5J1xuICAgIH1cbiAgfSxcbiAgJ3RyaWFuZ2xlLXByb2R1Y3QnOiB7XG4gICAgcmVxdWlyZWQ6IFsncHJvZHVjdHMnXSxcbiAgICBvcHRpb25hbDogWydhbmFseXNpc1Jlc3VsdHMnLCAndGltZXN0YW1wJ10sXG4gICAgdHlwZXM6IHtcbiAgICAgIHByb2R1Y3RzOiAnYXJyYXknLFxuICAgICAgYW5hbHlzaXNSZXN1bHRzOiAnb2JqZWN0JyxcbiAgICAgIHRpbWVzdGFtcDogJ3N0cmluZydcbiAgICB9XG4gIH0sXG4gICd0cmlhbmdsZS1yb3V0aW5nJzoge1xuICAgIHJlcXVpcmVkOiBbJ3NlbGVjdGVkUm91dGUnXSxcbiAgICBvcHRpb25hbDogWydyb3V0ZXMnLCAnYW5hbHlzaXNEYXRhJywgJ3RpbWVzdGFtcCddLFxuICAgIHR5cGVzOiB7XG4gICAgICBzZWxlY3RlZFJvdXRlOiAnb2JqZWN0JyxcbiAgICAgIHJvdXRlczogJ2FycmF5JyxcbiAgICAgIGFuYWx5c2lzRGF0YTogJ29iamVjdCcsXG4gICAgICB0aW1lc3RhbXA6ICdzdHJpbmcnXG4gICAgfVxuICB9LFxuICAndHJpYW5nbGUtcGFydG5lcnNoaXAnOiB7XG4gICAgcmVxdWlyZWQ6IFsnc2VsZWN0ZWRTdHJhdGVneSddLFxuICAgIG9wdGlvbmFsOiBbJ3BhcnRuZXJzaGlwQW5hbHlzaXMnLCAndGltZXN0YW1wJ10sXG4gICAgdHlwZXM6IHtcbiAgICAgIHNlbGVjdGVkU3RyYXRlZ3k6ICdzdHJpbmcnLFxuICAgICAgcGFydG5lcnNoaXBBbmFseXNpczogJ29iamVjdCcsXG4gICAgICB0aW1lc3RhbXA6ICdzdHJpbmcnXG4gICAgfVxuICB9LFxuICAndHJpYW5nbGUtc2lnbnVwJzoge1xuICAgIHJlcXVpcmVkOiBbJ2VtYWlsJ10sXG4gICAgb3B0aW9uYWw6IFsnY29tcGFueU5hbWUnLCAnaW5kdXN0cnknLCAnaW1wb3J0Vm9sdW1lJywgJ3RpbWVzdGFtcCddLFxuICAgIHR5cGVzOiB7XG4gICAgICBlbWFpbDogJ3N0cmluZycsXG4gICAgICBjb21wYW55TmFtZTogJ3N0cmluZycsXG4gICAgICBpbmR1c3RyeTogJ3N0cmluZycsXG4gICAgICBpbXBvcnRWb2x1bWU6ICdzdHJpbmcnLFxuICAgICAgdGltZXN0YW1wOiAnc3RyaW5nJ1xuICAgIH1cbiAgfVxufVxuXG4vLyBEYXRhIGV4cGlyeSB0aW1lcyAoaW4gbWlsbGlzZWNvbmRzKVxuY29uc3QgRVhQSVJZX1RJTUVTID0ge1xuICAndHJpYW5nbGUtZm91bmRhdGlvbic6IHBhcnNlSW50KHByb2Nlc3MuZW52LkNBQ0hFX1RUTF9VU0VSX1NFU1NJT05TKSAqIDEwMDAgfHwgKDI0ICogNjAgKiA2MCAqIDEwMDApLCAvLyBFbnZpcm9ubWVudCBjb25maWd1cmFibGVcbiAgJ3RyaWFuZ2xlLXByb2R1Y3QnOiBwYXJzZUludChwcm9jZXNzLmVudi5DQUNIRV9UVExfVVNFUl9TRVNTSU9OUykgKiAxMDAwIHx8ICgxMiAqIDYwICogNjAgKiAxMDAwKSwgICAgLy8gRW52aXJvbm1lbnQgY29uZmlndXJhYmxlXG4gICd0cmlhbmdsZS1yb3V0aW5nJzogcGFyc2VJbnQocHJvY2Vzcy5lbnYuQ0FDSEVfVFRMX1VTRVJfU0VTU0lPTlMpICogMTAwMCB8fCAoMTIgKiA2MCAqIDYwICogMTAwMCksICAgIC8vIEVudmlyb25tZW50IGNvbmZpZ3VyYWJsZVxuICAndHJpYW5nbGUtcGFydG5lcnNoaXAnOiBwYXJzZUludChwcm9jZXNzLmVudi5DQUNIRV9UVExfVVNFUl9TRVNTSU9OUykgKiAxMDAwIHx8ICgyNCAqIDYwICogNjAgKiAxMDAwKSwgLy8gRW52aXJvbm1lbnQgY29uZmlndXJhYmxlXG4gICd0cmlhbmdsZS1zaWdudXAnOiBwYXJzZUludChwcm9jZXNzLmVudi5DQUNIRV9UVExfVVNFUl9TRVNTSU9OUykgKiA3ICogMTAwMCB8fCAoNyAqIDI0ICogNjAgKiA2MCAqIDEwMDApICAgLy8gRW52aXJvbm1lbnQgY29uZmlndXJhYmxlXG59XG5cbi8qKlxuICogVmFsaWRhdGVzIHRoZSB0eXBlIG9mIGEgdmFsdWUgYWdhaW5zdCBleHBlY3RlZCB0eXBlXG4gKi9cbmZ1bmN0aW9uIHZhbGlkYXRlVHlwZSh2YWx1ZSwgZXhwZWN0ZWRUeXBlKSB7XG4gIHN3aXRjaCAoZXhwZWN0ZWRUeXBlKSB7XG4gICAgY2FzZSAnc3RyaW5nJzpcbiAgICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnXG4gICAgY2FzZSAnbnVtYmVyJzpcbiAgICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInICYmICFpc05hTih2YWx1ZSlcbiAgICBjYXNlICdib29sZWFuJzpcbiAgICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdib29sZWFuJ1xuICAgIGNhc2UgJ2FycmF5JzpcbiAgICAgIHJldHVybiBBcnJheS5pc0FycmF5KHZhbHVlKVxuICAgIGNhc2UgJ29iamVjdCc6XG4gICAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAhPT0gbnVsbCAmJiAhQXJyYXkuaXNBcnJheSh2YWx1ZSlcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGZhbHNlXG4gIH1cbn1cblxuLyoqXG4gKiBWYWxpZGF0ZXMgZGF0YSBzdHJ1Y3R1cmUgYWdhaW5zdCBzY2hlbWFcbiAqL1xuZnVuY3Rpb24gdmFsaWRhdGVEYXRhU3RydWN0dXJlKGRhdGEsIHNjaGVtYSkge1xuICBpZiAoIWRhdGEgfHwgdHlwZW9mIGRhdGEgIT09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIHsgdmFsaWQ6IGZhbHNlLCBlcnJvcnM6IFsnRGF0YSBtdXN0IGJlIGFuIG9iamVjdCddIH1cbiAgfVxuXG4gIGNvbnN0IGVycm9ycyA9IFtdXG5cbiAgLy8gQ2hlY2sgcmVxdWlyZWQgZmllbGRzXG4gIGZvciAoY29uc3QgZmllbGQgb2Ygc2NoZW1hLnJlcXVpcmVkKSB7XG4gICAgaWYgKCEoZmllbGQgaW4gZGF0YSkpIHtcbiAgICAgIGVycm9ycy5wdXNoKGBNaXNzaW5nIHJlcXVpcmVkIGZpZWxkOiAke2ZpZWxkfWApXG4gICAgfSBlbHNlIGlmICghdmFsaWRhdGVUeXBlKGRhdGFbZmllbGRdLCBzY2hlbWEudHlwZXNbZmllbGRdKSkge1xuICAgICAgZXJyb3JzLnB1c2goYEludmFsaWQgdHlwZSBmb3IgJHtmaWVsZH06IGV4cGVjdGVkICR7c2NoZW1hLnR5cGVzW2ZpZWxkXX0sIGdvdCAke3R5cGVvZiBkYXRhW2ZpZWxkXX1gKVxuICAgIH1cbiAgfVxuXG4gIC8vIENoZWNrIG9wdGlvbmFsIGZpZWxkcyB0eXBlcyBpZiB0aGV5IGV4aXN0XG4gIGZvciAoY29uc3QgZmllbGQgb2Ygc2NoZW1hLm9wdGlvbmFsKSB7XG4gICAgaWYgKGZpZWxkIGluIGRhdGEgJiYgIXZhbGlkYXRlVHlwZShkYXRhW2ZpZWxkXSwgc2NoZW1hLnR5cGVzW2ZpZWxkXSkpIHtcbiAgICAgIGVycm9ycy5wdXNoKGBJbnZhbGlkIHR5cGUgZm9yICR7ZmllbGR9OiBleHBlY3RlZCAke3NjaGVtYS50eXBlc1tmaWVsZF19LCBnb3QgJHt0eXBlb2YgZGF0YVtmaWVsZF19YClcbiAgICB9XG4gIH1cblxuICAvLyBDaGVjayBmb3IgdW5leHBlY3RlZCBmaWVsZHMgKHNlY3VyaXR5IG1lYXN1cmUpXG4gIGNvbnN0IGFsbG93ZWRGaWVsZHMgPSBbLi4uc2NoZW1hLnJlcXVpcmVkLCAuLi5zY2hlbWEub3B0aW9uYWwsICd0aW1lc3RhbXAnLCAnX3ZlcnNpb24nXVxuICBmb3IgKGNvbnN0IGZpZWxkIGluIGRhdGEpIHtcbiAgICBpZiAoIWFsbG93ZWRGaWVsZHMuaW5jbHVkZXMoZmllbGQpKSB7XG4gICAgICBlcnJvcnMucHVzaChgVW5leHBlY3RlZCBmaWVsZDogJHtmaWVsZH1gKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgdmFsaWQ6IGVycm9ycy5sZW5ndGggPT09IDAsXG4gICAgZXJyb3JzXG4gIH1cbn1cblxuLyoqXG4gKiBBZGRzIHRpbWVzdGFtcCB0byBkYXRhIGZvciBleHBpcnkgdHJhY2tpbmdcbiAqL1xuZnVuY3Rpb24gYWRkVGltZXN0YW1wKGRhdGEpIHtcbiAgcmV0dXJuIHtcbiAgICAuLi5kYXRhLFxuICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgIF92ZXJzaW9uOiAnMi4xJyAvLyBWZXJzaW9uIGZvciBmdXR1cmUgbWlncmF0aW9uIGNvbXBhdGliaWxpdHlcbiAgfVxufVxuXG4vKipcbiAqIENoZWNrcyBpZiBkYXRhIGhhcyBleHBpcmVkXG4gKi9cbmZ1bmN0aW9uIGlzRXhwaXJlZChkYXRhLCBrZXkpIHtcbiAgaWYgKCFkYXRhLnRpbWVzdGFtcCkge1xuICAgIHJldHVybiB0cnVlIC8vIE5vIHRpbWVzdGFtcCA9IGV4cGlyZWRcbiAgfVxuXG4gIGNvbnN0IGV4cGlyeVRpbWUgPSBFWFBJUllfVElNRVNba2V5XSB8fCAyNCAqIDYwICogNjAgKiAxMDAwIC8vIERlZmF1bHQgMjQgaG91cnNcbiAgY29uc3QgZGF0YUFnZSA9IERhdGUubm93KCkgLSBuZXcgRGF0ZShkYXRhLnRpbWVzdGFtcCkuZ2V0VGltZSgpXG4gIFxuICByZXR1cm4gZGF0YUFnZSA+IGV4cGlyeVRpbWVcbn1cblxuLyoqXG4gKiBTYW5pdGl6ZXMgZGF0YSB0byByZW1vdmUgcG90ZW50aWFsbHkgaGFybWZ1bCBjb250ZW50XG4gKi9cbmZ1bmN0aW9uIHNhbml0aXplRGF0YShkYXRhKSB7XG4gIGlmICh0eXBlb2YgZGF0YSA9PT0gJ3N0cmluZycpIHtcbiAgICAvLyBSZW1vdmUgcG90ZW50aWFsIFhTUyBwYXR0ZXJuc1xuICAgIHJldHVybiBkYXRhXG4gICAgICAucmVwbGFjZSgvPHNjcmlwdFxcYltePF0qKD86KD8hPFxcL3NjcmlwdD4pPFtePF0qKSo8XFwvc2NyaXB0Pi9naSwgJycpXG4gICAgICAucmVwbGFjZSgvamF2YXNjcmlwdDovZ2ksICcnKVxuICAgICAgLnJlcGxhY2UoL29uXFx3K1xccyo9L2dpLCAnJylcbiAgICAgIC50cmltKClcbiAgfVxuICBcbiAgaWYgKEFycmF5LmlzQXJyYXkoZGF0YSkpIHtcbiAgICByZXR1cm4gZGF0YS5tYXAoc2FuaXRpemVEYXRhKVxuICB9XG4gIFxuICBpZiAodHlwZW9mIGRhdGEgPT09ICdvYmplY3QnICYmIGRhdGEgIT09IG51bGwpIHtcbiAgICBjb25zdCBzYW5pdGl6ZWQgPSB7fVxuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKGRhdGEpKSB7XG4gICAgICAvLyBTYW5pdGl6ZSBrZXkgbmFtZXNcbiAgICAgIGNvbnN0IGNsZWFuS2V5ID0ga2V5LnJlcGxhY2UoL1teXFx3XFwtX10vZywgJycpXG4gICAgICBzYW5pdGl6ZWRbY2xlYW5LZXldID0gc2FuaXRpemVEYXRhKHZhbHVlKVxuICAgIH1cbiAgICByZXR1cm4gc2FuaXRpemVkXG4gIH1cbiAgXG4gIHJldHVybiBkYXRhXG59XG5cbi8qKlxuICogU2FmZWx5IHN0b3JlcyBkYXRhIHRvIGxvY2FsU3RvcmFnZSB3aXRoIHZhbGlkYXRpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNldFRyaWFuZ2xlRGF0YShrZXksIGRhdGEpIHtcbiAgdHJ5IHtcbiAgICBpZiAoIURBVEFfU0NIRU1BU1trZXldKSB7XG4gICAgICBjb25zb2xlLndhcm4oYOKaoO+4jyBObyBzY2hlbWEgZGVmaW5lZCBmb3Iga2V5OiAke2tleX1gKVxuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuXG4gICAgLy8gU2FuaXRpemUgaW5wdXQgZGF0YVxuICAgIGNvbnN0IHNhbml0aXplZERhdGEgPSBzYW5pdGl6ZURhdGEoZGF0YSlcblxuICAgIC8vIFZhbGlkYXRlIGRhdGEgc3RydWN0dXJlXG4gICAgY29uc3QgdmFsaWRhdGlvbiA9IHZhbGlkYXRlRGF0YVN0cnVjdHVyZShzYW5pdGl6ZWREYXRhLCBEQVRBX1NDSEVNQVNba2V5XSlcbiAgICBpZiAoIXZhbGlkYXRpb24udmFsaWQpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoYOKdjCBEYXRhIHZhbGlkYXRpb24gZmFpbGVkIGZvciAke2tleX06YCwgdmFsaWRhdGlvbi5lcnJvcnMpXG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9XG5cbiAgICAvLyBBZGQgdGltZXN0YW1wIGZvciBleHBpcnkgdHJhY2tpbmdcbiAgICBjb25zdCB0aW1lc3RhbXBlZERhdGEgPSBhZGRUaW1lc3RhbXAoc2FuaXRpemVkRGF0YSlcblxuICAgIC8vIFN0b3JlIHRvIGxvY2FsU3RvcmFnZVxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGtleSwgSlNPTi5zdHJpbmdpZnkodGltZXN0YW1wZWREYXRhKSlcbiAgICBcbiAgICBjb25zb2xlLmxvZyhg4pyFIERhdGEgc3RvcmVkIHN1Y2Nlc3NmdWxseTogJHtrZXl9YClcbiAgICByZXR1cm4gdHJ1ZVxuXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihg4p2MIEZhaWxlZCB0byBzdG9yZSBkYXRhIGZvciAke2tleX06YCwgZXJyb3IpXG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cbn1cblxuLyoqXG4gKiBTYWZlbHkgcmV0cmlldmVzIGRhdGEgZnJvbSBsb2NhbFN0b3JhZ2Ugd2l0aCB2YWxpZGF0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRUcmlhbmdsZURhdGEoa2V5LCBvcHRpb25zID0ge30pIHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IGFsbG93RXhwaXJlZCA9IGZhbHNlLCByZXR1cm5FcnJvcnMgPSBmYWxzZSB9ID0gb3B0aW9uc1xuICAgIFxuICAgIGNvbnN0IHJhd0RhdGEgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpXG4gICAgaWYgKCFyYXdEYXRhKSB7XG4gICAgICByZXR1cm4gcmV0dXJuRXJyb3JzID8geyBkYXRhOiBudWxsLCBlcnJvcnM6IFsnTm8gZGF0YSBmb3VuZCddIH0gOiBudWxsXG4gICAgfVxuXG4gICAgbGV0IHBhcnNlZERhdGFcbiAgICB0cnkge1xuICAgICAgcGFyc2VkRGF0YSA9IEpTT04ucGFyc2UocmF3RGF0YSlcbiAgICB9IGNhdGNoIChwYXJzZUVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKGDinYwgRmFpbGVkIHRvIHBhcnNlIGxvY2FsU3RvcmFnZSBkYXRhIGZvciAke2tleX06YCwgcGFyc2VFcnJvcilcbiAgICAgIC8vIENsZWFyIGNvcnJ1cHRlZCBkYXRhXG4gICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShrZXkpXG4gICAgICByZXR1cm4gcmV0dXJuRXJyb3JzID8geyBkYXRhOiBudWxsLCBlcnJvcnM6IFsnQ29ycnVwdGVkIGRhdGEgcmVtb3ZlZCddIH0gOiBudWxsXG4gICAgfVxuXG4gICAgLy8gQ2hlY2sgZXhwaXJ5XG4gICAgaWYgKCFhbGxvd0V4cGlyZWQgJiYgaXNFeHBpcmVkKHBhcnNlZERhdGEsIGtleSkpIHtcbiAgICAgIGNvbnNvbGUubG9nKGDij7AgRGF0YSBleHBpcmVkIGZvciAke2tleX0sIHJlbW92aW5nLi4uYClcbiAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKGtleSlcbiAgICAgIHJldHVybiByZXR1cm5FcnJvcnMgPyB7IGRhdGE6IG51bGwsIGVycm9yczogWydEYXRhIGV4cGlyZWQnXSB9IDogbnVsbFxuICAgIH1cblxuICAgIC8vIFZhbGlkYXRlIGRhdGEgc3RydWN0dXJlIGlmIHNjaGVtYSBleGlzdHNcbiAgICBpZiAoREFUQV9TQ0hFTUFTW2tleV0pIHtcbiAgICAgIGNvbnN0IHZhbGlkYXRpb24gPSB2YWxpZGF0ZURhdGFTdHJ1Y3R1cmUocGFyc2VkRGF0YSwgREFUQV9TQ0hFTUFTW2tleV0pXG4gICAgICBpZiAoIXZhbGlkYXRpb24udmFsaWQpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihg4p2MIFJldHJpZXZlZCBkYXRhIHZhbGlkYXRpb24gZmFpbGVkIGZvciAke2tleX06YCwgdmFsaWRhdGlvbi5lcnJvcnMpXG4gICAgICAgIC8vIENsZWFyIGludmFsaWQgZGF0YVxuICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShrZXkpXG4gICAgICAgIHJldHVybiByZXR1cm5FcnJvcnMgPyB7IGRhdGE6IG51bGwsIGVycm9yczogdmFsaWRhdGlvbi5lcnJvcnMgfSA6IG51bGxcbiAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zb2xlLmxvZyhg4pyFIERhdGEgcmV0cmlldmVkIHN1Y2Nlc3NmdWxseTogJHtrZXl9YClcbiAgICByZXR1cm4gcmV0dXJuRXJyb3JzID8geyBkYXRhOiBwYXJzZWREYXRhLCBlcnJvcnM6IFtdIH0gOiBwYXJzZWREYXRhXG5cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKGDinYwgRmFpbGVkIHRvIHJldHJpZXZlIGRhdGEgZm9yICR7a2V5fTpgLCBlcnJvcilcbiAgICByZXR1cm4gcmV0dXJuRXJyb3JzID8geyBkYXRhOiBudWxsLCBlcnJvcnM6IFtlcnJvci5tZXNzYWdlXSB9IDogbnVsbFxuICB9XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGRhdGEgZXhpc3RzIGFuZCBpcyB2YWxpZFxuICovXG5leHBvcnQgZnVuY3Rpb24gaGFzVmFsaWRUcmlhbmdsZURhdGEoa2V5KSB7XG4gIGNvbnN0IGRhdGEgPSBnZXRUcmlhbmdsZURhdGEoa2V5KVxuICByZXR1cm4gZGF0YSAhPT0gbnVsbFxufVxuXG4vKipcbiAqIFJlbW92ZXMgc3BlY2lmaWMgZGF0YSBmcm9tIGxvY2FsU3RvcmFnZVxuICovXG5leHBvcnQgZnVuY3Rpb24gcmVtb3ZlVHJpYW5nbGVEYXRhKGtleSkge1xuICB0cnkge1xuICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKGtleSlcbiAgICBjb25zb2xlLmxvZyhg8J+Xke+4jyBEYXRhIHJlbW92ZWQ6ICR7a2V5fWApXG4gICAgcmV0dXJuIHRydWVcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKGDinYwgRmFpbGVkIHRvIHJlbW92ZSBkYXRhIGZvciAke2tleX06YCwgZXJyb3IpXG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cbn1cblxuLyoqXG4gKiBDbGVhcnMgYWxsIFRyaWFuZ2xlIEludGVsbGlnZW5jZSBkYXRhIGZyb20gbG9jYWxTdG9yYWdlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjbGVhckFsbFRyaWFuZ2xlRGF0YSgpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCB0cmlhbmdsZUtleXMgPSBPYmplY3Qua2V5cyhEQVRBX1NDSEVNQVMpXG4gICAgbGV0IHJlbW92ZWRDb3VudCA9IDBcblxuICAgIGZvciAoY29uc3Qga2V5IG9mIHRyaWFuZ2xlS2V5cykge1xuICAgICAgaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKGtleSkpIHtcbiAgICAgICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oa2V5KVxuICAgICAgICByZW1vdmVkQ291bnQrK1xuICAgICAgfVxuICAgIH1cblxuICAgIGNvbnNvbGUubG9nKGDwn6e5IENsZWFyZWQgJHtyZW1vdmVkQ291bnR9IFRyaWFuZ2xlIEludGVsbGlnZW5jZSBkYXRhIGl0ZW1zYClcbiAgICByZXR1cm4gdHJ1ZVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoYOKdjCBGYWlsZWQgdG8gY2xlYXIgVHJpYW5nbGUgZGF0YTpgLCBlcnJvcilcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxufVxuXG4vKipcbiAqIEdldHMgZGF0YSBoZWFsdGggc3RhdHVzIGZvciBhbGwgc3RvcmVkIGl0ZW1zXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXREYXRhSGVhbHRoU3RhdHVzKCkge1xuICBjb25zdCBzdGF0dXMgPSB7fVxuICBcbiAgZm9yIChjb25zdCBrZXkgb2YgT2JqZWN0LmtleXMoREFUQV9TQ0hFTUFTKSkge1xuICAgIGNvbnN0IHJlc3VsdCA9IGdldFRyaWFuZ2xlRGF0YShrZXksIHsgcmV0dXJuRXJyb3JzOiB0cnVlLCBhbGxvd0V4cGlyZWQ6IHRydWUgfSlcbiAgICBcbiAgICBpZiAocmVzdWx0LmRhdGEpIHtcbiAgICAgIHN0YXR1c1trZXldID0ge1xuICAgICAgICBleGlzdHM6IHRydWUsXG4gICAgICAgIHZhbGlkOiByZXN1bHQuZXJyb3JzLmxlbmd0aCA9PT0gMCxcbiAgICAgICAgZXhwaXJlZDogaXNFeHBpcmVkKHJlc3VsdC5kYXRhLCBrZXkpLFxuICAgICAgICBzaXplOiBKU09OLnN0cmluZ2lmeShyZXN1bHQuZGF0YSkubGVuZ3RoLFxuICAgICAgICBsYXN0TW9kaWZpZWQ6IHJlc3VsdC5kYXRhLnRpbWVzdGFtcCB8fCAnVW5rbm93bicsXG4gICAgICAgIGVycm9yczogcmVzdWx0LmVycm9yc1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBzdGF0dXNba2V5XSA9IHtcbiAgICAgICAgZXhpc3RzOiBmYWxzZSxcbiAgICAgICAgdmFsaWQ6IGZhbHNlLFxuICAgICAgICBleHBpcmVkOiB0cnVlLFxuICAgICAgICBzaXplOiAwLFxuICAgICAgICBsYXN0TW9kaWZpZWQ6IG51bGwsXG4gICAgICAgIGVycm9yczogcmVzdWx0LmVycm9yc1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBcbiAgcmV0dXJuIHN0YXR1c1xufVxuXG4vKipcbiAqIE1pZ3JhdGVzIGRhdGEgZnJvbSBvbGQgZm9ybWF0IHRvIG5ldyBmb3JtYXQgKHZlcnNpb24gY29tcGF0aWJpbGl0eSlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1pZ3JhdGVUcmlhbmdsZURhdGEoKSB7XG4gIGNvbnNvbGUubG9nKCfwn5SEIENoZWNraW5nIGZvciBkYXRhIG1pZ3JhdGlvbiBuZWVkcy4uLicpXG4gIFxuICBjb25zdCBtaWdyYXRpb25Db3VudCA9IHtcbiAgICBtaWdyYXRlZDogMCxcbiAgICBza2lwcGVkOiAwLFxuICAgIGZhaWxlZDogMFxuICB9XG5cbiAgZm9yIChjb25zdCBrZXkgb2YgT2JqZWN0LmtleXMoREFUQV9TQ0hFTUFTKSkge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCByYXdEYXRhID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oa2V5KVxuICAgICAgaWYgKCFyYXdEYXRhKSBjb250aW51ZVxuXG4gICAgICBjb25zdCBkYXRhID0gSlNPTi5wYXJzZShyYXdEYXRhKVxuICAgICAgXG4gICAgICAvLyBDaGVjayBpZiBtaWdyYXRpb24gbmVlZGVkIChubyB2ZXJzaW9uIG9yIG9sZCB2ZXJzaW9uKVxuICAgICAgaWYgKCFkYXRhLl92ZXJzaW9uIHx8IGRhdGEuX3ZlcnNpb24gIT09ICcyLjEnKSB7XG4gICAgICAgIC8vIEFkZCB2ZXJzaW9uIGFuZCB0aW1lc3RhbXAgaWYgbWlzc2luZ1xuICAgICAgICBjb25zdCBtaWdyYXRlZERhdGEgPSBhZGRUaW1lc3RhbXAoZGF0YSlcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oa2V5LCBKU09OLnN0cmluZ2lmeShtaWdyYXRlZERhdGEpKVxuICAgICAgICBtaWdyYXRpb25Db3VudC5taWdyYXRlZCsrXG4gICAgICAgIGNvbnNvbGUubG9nKGDinIUgTWlncmF0ZWQgJHtrZXl9IHRvIHZlcnNpb24gMi4xYClcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG1pZ3JhdGlvbkNvdW50LnNraXBwZWQrK1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBtaWdyYXRpb25Db3VudC5mYWlsZWQrK1xuICAgICAgY29uc29sZS5lcnJvcihg4p2MIE1pZ3JhdGlvbiBmYWlsZWQgZm9yICR7a2V5fTpgLCBlcnJvcilcbiAgICB9XG4gIH1cblxuICBjb25zb2xlLmxvZyhg8J+UhCBNaWdyYXRpb24gY29tcGxldGU6YCwgbWlncmF0aW9uQ291bnQpXG4gIHJldHVybiBtaWdyYXRpb25Db3VudFxufVxuXG4vLyBBdXRvLXJ1biBtaWdyYXRpb24gb24gaW1wb3J0IChzYWZlLCBvbmx5IHJ1bnMgaWYgbmVlZGVkKVxuaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gIG1pZ3JhdGVUcmlhbmdsZURhdGEoKVxufSJdLCJuYW1lcyI6WyJEQVRBX1NDSEVNQVMiLCJyZXF1aXJlZCIsIm9wdGlvbmFsIiwidHlwZXMiLCJjb21wYW55TmFtZSIsImJ1c2luZXNzVHlwZSIsInppcENvZGUiLCJwcmltYXJ5U3VwcGxpZXJDb3VudHJ5IiwiaW1wb3J0Vm9sdW1lIiwidGltZWxpbmVQcmlvcml0eSIsInNlY29uZGFyeVN1cHBsaWVyQ291bnRyaWVzIiwic2Vhc29uYWxQYXR0ZXJucyIsImN1cnJlbnRTaGlwcGluZ1BvcnRzIiwic3BlY2lhbFJlcXVpcmVtZW50cyIsInByb2R1Y3RzIiwiYW5hbHlzaXNSZXN1bHRzIiwidGltZXN0YW1wIiwic2VsZWN0ZWRSb3V0ZSIsInJvdXRlcyIsImFuYWx5c2lzRGF0YSIsInNlbGVjdGVkU3RyYXRlZ3kiLCJwYXJ0bmVyc2hpcEFuYWx5c2lzIiwiZW1haWwiLCJpbmR1c3RyeSIsIkVYUElSWV9USU1FUyIsInBhcnNlSW50IiwicHJvY2VzcyIsImVudiIsIkNBQ0hFX1RUTF9VU0VSX1NFU1NJT05TIiwidmFsaWRhdGVUeXBlIiwidmFsdWUiLCJleHBlY3RlZFR5cGUiLCJpc05hTiIsIkFycmF5IiwiaXNBcnJheSIsInZhbGlkYXRlRGF0YVN0cnVjdHVyZSIsImRhdGEiLCJzY2hlbWEiLCJ2YWxpZCIsImVycm9ycyIsImZpZWxkIiwicHVzaCIsImFsbG93ZWRGaWVsZHMiLCJpbmNsdWRlcyIsImxlbmd0aCIsImFkZFRpbWVzdGFtcCIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsIl92ZXJzaW9uIiwiaXNFeHBpcmVkIiwia2V5IiwiZXhwaXJ5VGltZSIsImRhdGFBZ2UiLCJub3ciLCJnZXRUaW1lIiwic2FuaXRpemVEYXRhIiwicmVwbGFjZSIsInRyaW0iLCJtYXAiLCJzYW5pdGl6ZWQiLCJPYmplY3QiLCJlbnRyaWVzIiwiY2xlYW5LZXkiLCJzZXRUcmlhbmdsZURhdGEiLCJjb25zb2xlIiwid2FybiIsInNhbml0aXplZERhdGEiLCJ2YWxpZGF0aW9uIiwiZXJyb3IiLCJ0aW1lc3RhbXBlZERhdGEiLCJsb2NhbFN0b3JhZ2UiLCJzZXRJdGVtIiwiSlNPTiIsInN0cmluZ2lmeSIsImxvZyIsImdldFRyaWFuZ2xlRGF0YSIsIm9wdGlvbnMiLCJhbGxvd0V4cGlyZWQiLCJyZXR1cm5FcnJvcnMiLCJyYXdEYXRhIiwiZ2V0SXRlbSIsInBhcnNlZERhdGEiLCJwYXJzZSIsInBhcnNlRXJyb3IiLCJyZW1vdmVJdGVtIiwibWVzc2FnZSIsImhhc1ZhbGlkVHJpYW5nbGVEYXRhIiwicmVtb3ZlVHJpYW5nbGVEYXRhIiwiY2xlYXJBbGxUcmlhbmdsZURhdGEiLCJ0cmlhbmdsZUtleXMiLCJrZXlzIiwicmVtb3ZlZENvdW50IiwiZ2V0RGF0YUhlYWx0aFN0YXR1cyIsInN0YXR1cyIsInJlc3VsdCIsImV4aXN0cyIsImV4cGlyZWQiLCJzaXplIiwibGFzdE1vZGlmaWVkIiwibWlncmF0ZVRyaWFuZ2xlRGF0YSIsIm1pZ3JhdGlvbkNvdW50IiwibWlncmF0ZWQiLCJza2lwcGVkIiwiZmFpbGVkIiwibWlncmF0ZWREYXRhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/utils/localStorage-validator.js\n"));

/***/ }),

/***/ "./lib/utils/production-logger.js":
/*!****************************************!*\
  !*** ./lib/utils/production-logger.js ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logAPICall: function() { return /* binding */ logAPICall; },\n/* harmony export */   logBusiness: function() { return /* binding */ logBusiness; },\n/* harmony export */   logDBQuery: function() { return /* binding */ logDBQuery; },\n/* harmony export */   logDebug: function() { return /* binding */ logDebug; },\n/* harmony export */   logError: function() { return /* binding */ logError; },\n/* harmony export */   logInfo: function() { return /* binding */ logInfo; },\n/* harmony export */   logPerformance: function() { return /* binding */ logPerformance; },\n/* harmony export */   logSecurity: function() { return /* binding */ logSecurity; },\n/* harmony export */   logWarn: function() { return /* binding */ logWarn; },\n/* harmony export */   logger: function() { return /* binding */ logger; }\n/* harmony export */ });\n/* harmony import */ var _environment_validation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./environment-validation.js */ \"./lib/utils/environment-validation.js\");\n/**\n * Production-Safe Logging System\n * Handles logging with environment awareness and security\n */ \n// Log levels\nconst LOG_LEVELS = {\n    ERROR: 0,\n    WARN: 1,\n    INFO: 2,\n    DEBUG: 3,\n    TRACE: 4\n};\nclass ProductionLogger {\n    /**\n   * Sanitize sensitive data from logs\n   */ sanitize(data) {\n        if (typeof data === \"string\") {\n            let sanitized = data;\n            this.sensitivePatterns.forEach((pattern)=>{\n                sanitized = sanitized.replace(pattern, \"[REDACTED]\");\n            });\n            return sanitized;\n        }\n        if (typeof data === \"object\" && data !== null) {\n            const sanitized = Array.isArray(data) ? [] : {};\n            for (const [key, value] of Object.entries(data)){\n                const keyLower = key.toLowerCase();\n                if (keyLower.includes(\"password\") || keyLower.includes(\"secret\") || keyLower.includes(\"token\") || keyLower.includes(\"key\")) {\n                    sanitized[key] = \"[REDACTED]\";\n                } else {\n                    sanitized[key] = this.sanitize(value);\n                }\n            }\n            return sanitized;\n        }\n        return data;\n    }\n    /**\n   * Format log message\n   */ formatMessage(level, message, data, metadata) {\n        const timestamp = new Date().toISOString();\n        const sanitizedData = data ? this.sanitize(data) : null;\n        const logEntry = {\n            timestamp,\n            level,\n            message,\n            ...sanitizedData && {\n                data: sanitizedData\n            },\n            ...metadata && {\n                metadata\n            }\n        };\n        return (0,_environment_validation_js__WEBPACK_IMPORTED_MODULE_0__.isProduction)() ? JSON.stringify(logEntry) : logEntry;\n    }\n    /**\n   * Log error messages\n   */ error(message) {\n        let data = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, metadata = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;\n        if (this.level >= LOG_LEVELS.ERROR) {\n            const formatted = this.formatMessage(\"ERROR\", message, data, metadata);\n            console.error((0,_environment_validation_js__WEBPACK_IMPORTED_MODULE_0__.isProduction)() ? formatted : \"❌\", (0,_environment_validation_js__WEBPACK_IMPORTED_MODULE_0__.isProduction)() ? \"\" : message, (0,_environment_validation_js__WEBPACK_IMPORTED_MODULE_0__.isProduction)() ? \"\" : this.sanitize(data));\n        }\n    }\n    /**\n   * Log warning messages\n   */ warn(message) {\n        let data = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, metadata = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;\n        if (this.level >= LOG_LEVELS.WARN) {\n            const formatted = this.formatMessage(\"WARN\", message, data, metadata);\n            console.warn((0,_environment_validation_js__WEBPACK_IMPORTED_MODULE_0__.isProduction)() ? formatted : \"⚠️\", (0,_environment_validation_js__WEBPACK_IMPORTED_MODULE_0__.isProduction)() ? \"\" : message, (0,_environment_validation_js__WEBPACK_IMPORTED_MODULE_0__.isProduction)() ? \"\" : this.sanitize(data));\n        }\n    }\n    /**\n   * Log info messages\n   */ info(message) {\n        let data = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, metadata = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;\n        if (this.level >= LOG_LEVELS.INFO) {\n            const formatted = this.formatMessage(\"INFO\", message, data, metadata);\n            console.log((0,_environment_validation_js__WEBPACK_IMPORTED_MODULE_0__.isProduction)() ? formatted : \"ℹ️\", (0,_environment_validation_js__WEBPACK_IMPORTED_MODULE_0__.isProduction)() ? \"\" : message, (0,_environment_validation_js__WEBPACK_IMPORTED_MODULE_0__.isProduction)() ? \"\" : this.sanitize(data));\n        }\n    }\n    /**\n   * Log debug messages (only in development)\n   */ debug(message) {\n        let data = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, metadata = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;\n        if (this.level >= LOG_LEVELS.DEBUG && (0,_environment_validation_js__WEBPACK_IMPORTED_MODULE_0__.isDevelopment)()) {\n            const formatted = this.formatMessage(\"DEBUG\", message, data, metadata);\n            console.log((0,_environment_validation_js__WEBPACK_IMPORTED_MODULE_0__.isProduction)() ? formatted : \"\\uD83D\\uDC1B\", (0,_environment_validation_js__WEBPACK_IMPORTED_MODULE_0__.isProduction)() ? \"\" : message, (0,_environment_validation_js__WEBPACK_IMPORTED_MODULE_0__.isProduction)() ? \"\" : this.sanitize(data));\n        }\n    }\n    /**\n   * Log trace messages (only in development)\n   */ trace(message) {\n        let data = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, metadata = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;\n        if (this.level >= LOG_LEVELS.TRACE && (0,_environment_validation_js__WEBPACK_IMPORTED_MODULE_0__.isDevelopment)()) {\n            const formatted = this.formatMessage(\"TRACE\", message, data, metadata);\n            console.log((0,_environment_validation_js__WEBPACK_IMPORTED_MODULE_0__.isProduction)() ? formatted : \"\\uD83D\\uDD0D\", (0,_environment_validation_js__WEBPACK_IMPORTED_MODULE_0__.isProduction)() ? \"\" : message, (0,_environment_validation_js__WEBPACK_IMPORTED_MODULE_0__.isProduction)() ? \"\" : this.sanitize(data));\n        }\n    }\n    /**\n   * Log performance metrics\n   */ performance(operation, duration) {\n        let metadata = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;\n        this.info(\"Performance: \".concat(operation), {\n            duration: \"\".concat(duration, \"ms\")\n        }, metadata);\n    }\n    /**\n   * Log API calls\n   */ apiCall(method, endpoint, duration, status) {\n        this.info(\"API: \".concat(method, \" \").concat(endpoint), {\n            duration: \"\".concat(duration, \"ms\"),\n            status,\n            type: \"api_call\"\n        });\n    }\n    /**\n   * Log database queries\n   */ dbQuery(table, operation, duration) {\n        let recordCount = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;\n        this.debug(\"DB: \".concat(operation, \" on \").concat(table), {\n            duration: \"\".concat(duration, \"ms\"),\n            recordCount,\n            type: \"db_query\"\n        });\n    }\n    /**\n   * Log security events\n   */ security(event) {\n        let details = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;\n        this.warn(\"Security: \".concat(event), details, {\n            type: \"security_event\"\n        });\n    }\n    /**\n   * Log business events\n   */ business(event) {\n        let details = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;\n        this.info(\"Business: \".concat(event), details, {\n            type: \"business_event\"\n        });\n    }\n    constructor(){\n        this.level = (0,_environment_validation_js__WEBPACK_IMPORTED_MODULE_0__.isProduction)() ? LOG_LEVELS.WARN : LOG_LEVELS.DEBUG;\n        this.sensitivePatterns = [\n            /sk-[a-zA-Z0-9_-]+/,\n            /pk_[a-zA-Z0-9_-]+/,\n            /eyJ[a-zA-Z0-9_-]+/,\n            /password/i,\n            /secret/i,\n            /token/i,\n            /key.*=.*[a-zA-Z0-9_-]{20,}/ // Key-value pairs with long values\n        ];\n    }\n}\n// Create singleton instance\nconst logger = new ProductionLogger();\n// Convenience functions for common use cases\nconst logError = (message, data, metadata)=>logger.error(message, data, metadata);\nconst logWarn = (message, data, metadata)=>logger.warn(message, data, metadata);\nconst logInfo = (message, data, metadata)=>logger.info(message, data, metadata);\nconst logDebug = (message, data, metadata)=>logger.debug(message, data, metadata);\nconst logPerformance = (operation, duration, metadata)=>logger.performance(operation, duration, metadata);\nconst logAPICall = (method, endpoint, duration, status)=>logger.apiCall(method, endpoint, duration, status);\nconst logDBQuery = (table, operation, duration, recordCount)=>logger.dbQuery(table, operation, duration, recordCount);\nconst logSecurity = (event, details)=>logger.security(event, details);\nconst logBusiness = (event, details)=>logger.business(event, details);\n/* harmony default export */ __webpack_exports__[\"default\"] = (logger);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/utils/production-logger.js\n"));

/***/ }),

/***/ "./pages/_app.js":
/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ App; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/head */ \"./node_modules/next/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../styles/globals.css */ \"./styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _lib_i18n__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../lib/i18n */ \"./lib/i18n.js\");\n/* harmony import */ var _components_GlobalHSCodeChat__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/GlobalHSCodeChat */ \"./components/GlobalHSCodeChat.js\");\n/* harmony import */ var _components_BilingualSalesChatBot__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../components/BilingualSalesChatBot */ \"./components/BilingualSalesChatBot.js\");\n/* harmony import */ var _lib_state_TriangleStateContext__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../lib/state/TriangleStateContext */ \"./lib/state/TriangleStateContext.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n // Initialize proper i18n system\n\n\n\nfunction App(param) {\n    let { Component, pageProps } = param;\n    var _router_query;\n    _s();\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    const [showLoading, setShowLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Hide loading overlay when React hydrates\n        const timer = setTimeout(()=>{\n            setShowLoading(false);\n            // Ensure dark background is visible\n            document.documentElement.style.visibility = \"visible\";\n            document.body.style.visibility = \"visible\";\n        }, 100);\n        return ()=>clearTimeout(timer);\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_lib_state_TriangleStateContext__WEBPACK_IMPORTED_MODULE_8__.TriangleStateProvider, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_3___default()), {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"title\", {\n                        children: \"Triangle Intelligence\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\pages\\\\_app.js\",\n                        lineNumber: 29,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"description\",\n                        content: \"Tariff optimization and triangle routing intelligence\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\pages\\\\_app.js\",\n                        lineNumber: 30,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"viewport\",\n                        content: \"width=device-width, initial-scale=1\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\pages\\\\_app.js\",\n                        lineNumber: 31,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\pages\\\\_app.js\",\n                lineNumber: 28,\n                columnNumber: 7\n            }, this),\n            showLoading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"loading-overlay\",\n                children: \"Triangle Intelligence Loading...\"\n            }, void 0, false, {\n                fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\pages\\\\_app.js\",\n                lineNumber: 36,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                ...pageProps\n            }, void 0, false, {\n                fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\pages\\\\_app.js\",\n                lineNumber: 41,\n                columnNumber: 7\n            }, this),\n            (router.pathname.startsWith(\"/foundation\") || router.pathname.startsWith(\"/product\") || router.pathname.startsWith(\"/routing\") || router.pathname.startsWith(\"/hindsight\") || router.pathname.startsWith(\"/alerts\")) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_GlobalHSCodeChat__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {}, void 0, false, {\n                fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\pages\\\\_app.js\",\n                lineNumber: 49,\n                columnNumber: 9\n            }, this),\n            (router.pathname.startsWith(\"/partnership\") || router.pathname.includes(\"sales\") || router.pathname.startsWith(\"/dashboard\") && ((_router_query = router.query) === null || _router_query === void 0 ? void 0 : _router_query.view) === \"sales\") && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_BilingualSalesChatBot__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {}, void 0, false, {\n                fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\pages\\\\_app.js\",\n                lineNumber: 56,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\bacjup\\\\triangle-simple\\\\pages\\\\_app.js\",\n        lineNumber: 27,\n        columnNumber: 5\n    }, this);\n}\n_s(App, \"Z0y1HdyI5/GCaH47GJqIAghBjNk=\", false, function() {\n    return [\n        next_router__WEBPACK_IMPORTED_MODULE_2__.useRouter\n    ];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQTJDO0FBQ0o7QUFDWDtBQUNFO0FBQ1YsQ0FBQyxnQ0FBZ0M7QUFDUTtBQUNVO0FBQ0U7QUFFMUQsU0FBU08sSUFBSSxLQUF3QjtRQUF4QixFQUFFQyxTQUFTLEVBQUVDLFNBQVMsRUFBRSxHQUF4QjtRQTZDeUJDOztJQTVDbkQsTUFBTUEsU0FBU1Isc0RBQVNBO0lBQ3hCLE1BQU0sQ0FBQ1MsYUFBYUMsZUFBZSxHQUFHWCwrQ0FBUUEsQ0FBQztJQUUvQ0QsZ0RBQVNBLENBQUM7UUFDUiwyQ0FBMkM7UUFDM0MsTUFBTWEsUUFBUUMsV0FBVztZQUN2QkYsZUFBZTtZQUNmLG9DQUFvQztZQUNwQ0csU0FBU0MsZUFBZSxDQUFDQyxLQUFLLENBQUNDLFVBQVUsR0FBRztZQUM1Q0gsU0FBU0ksSUFBSSxDQUFDRixLQUFLLENBQUNDLFVBQVUsR0FBRztRQUNuQyxHQUFHO1FBRUgsT0FBTyxJQUFNRSxhQUFhUDtJQUM1QixHQUFHLEVBQUU7SUFFTCxxQkFDRSw4REFBQ1Asa0ZBQXFCQTs7MEJBQ3BCLDhEQUFDSCxrREFBSUE7O2tDQUNILDhEQUFDa0I7a0NBQU07Ozs7OztrQ0FDUCw4REFBQ0M7d0JBQUtDLE1BQUs7d0JBQWNDLFNBQVE7Ozs7OztrQ0FDakMsOERBQUNGO3dCQUFLQyxNQUFLO3dCQUFXQyxTQUFROzs7Ozs7Ozs7Ozs7WUFJL0JiLDZCQUNDLDhEQUFDYztnQkFBSUMsV0FBVTswQkFBa0I7Ozs7OzswQkFLbkMsOERBQUNsQjtnQkFBVyxHQUFHQyxTQUFTOzs7Ozs7WUFHdEJDLENBQUFBLE9BQU9pQixRQUFRLENBQUNDLFVBQVUsQ0FBQyxrQkFDM0JsQixPQUFPaUIsUUFBUSxDQUFDQyxVQUFVLENBQUMsZUFDM0JsQixPQUFPaUIsUUFBUSxDQUFDQyxVQUFVLENBQUMsZUFDM0JsQixPQUFPaUIsUUFBUSxDQUFDQyxVQUFVLENBQUMsaUJBQzNCbEIsT0FBT2lCLFFBQVEsQ0FBQ0MsVUFBVSxDQUFDLFVBQVMsbUJBQ3BDLDhEQUFDeEIsb0VBQWdCQTs7Ozs7WUFJakJNLENBQUFBLE9BQU9pQixRQUFRLENBQUNDLFVBQVUsQ0FBQyxtQkFDM0JsQixPQUFPaUIsUUFBUSxDQUFDRSxRQUFRLENBQUMsWUFDeEJuQixPQUFPaUIsUUFBUSxDQUFDQyxVQUFVLENBQUMsaUJBQWlCbEIsRUFBQUEsZ0JBQUFBLE9BQU9vQixLQUFLLGNBQVpwQixvQ0FBQUEsY0FBY3FCLElBQUksTUFBSyxPQUFPLG1CQUMzRSw4REFBQzFCLHlFQUFxQkE7Ozs7Ozs7Ozs7O0FBSTlCO0dBbER3QkU7O1FBQ1BMLGtEQUFTQTs7O0tBREZLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3BhZ2VzL19hcHAuanM/ZTBhZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgeyB1c2VSb3V0ZXIgfSBmcm9tICduZXh0L3JvdXRlcidcbmltcG9ydCBIZWFkIGZyb20gJ25leHQvaGVhZCdcbmltcG9ydCAnLi4vc3R5bGVzL2dsb2JhbHMuY3NzJ1xuaW1wb3J0ICcuLi9saWIvaTE4bicgLy8gSW5pdGlhbGl6ZSBwcm9wZXIgaTE4biBzeXN0ZW1cbmltcG9ydCBHbG9iYWxIU0NvZGVDaGF0IGZyb20gJy4uL2NvbXBvbmVudHMvR2xvYmFsSFNDb2RlQ2hhdCdcbmltcG9ydCBCaWxpbmd1YWxTYWxlc0NoYXRCb3QgZnJvbSAnLi4vY29tcG9uZW50cy9CaWxpbmd1YWxTYWxlc0NoYXRCb3QnXG5pbXBvcnQgeyBUcmlhbmdsZVN0YXRlUHJvdmlkZXIgfSBmcm9tICcuLi9saWIvc3RhdGUvVHJpYW5nbGVTdGF0ZUNvbnRleHQnXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEFwcCh7IENvbXBvbmVudCwgcGFnZVByb3BzIH0pIHtcbiAgY29uc3Qgcm91dGVyID0gdXNlUm91dGVyKClcbiAgY29uc3QgW3Nob3dMb2FkaW5nLCBzZXRTaG93TG9hZGluZ10gPSB1c2VTdGF0ZSh0cnVlKVxuICBcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAvLyBIaWRlIGxvYWRpbmcgb3ZlcmxheSB3aGVuIFJlYWN0IGh5ZHJhdGVzXG4gICAgY29uc3QgdGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHNldFNob3dMb2FkaW5nKGZhbHNlKVxuICAgICAgLy8gRW5zdXJlIGRhcmsgYmFja2dyb3VuZCBpcyB2aXNpYmxlXG4gICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUudmlzaWJpbGl0eSA9ICd2aXNpYmxlJ1xuICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS52aXNpYmlsaXR5ID0gJ3Zpc2libGUnXG4gICAgfSwgMTAwKVxuXG4gICAgcmV0dXJuICgpID0+IGNsZWFyVGltZW91dCh0aW1lcilcbiAgfSwgW10pXG5cbiAgcmV0dXJuIChcbiAgICA8VHJpYW5nbGVTdGF0ZVByb3ZpZGVyPlxuICAgICAgPEhlYWQ+XG4gICAgICAgIDx0aXRsZT5UcmlhbmdsZSBJbnRlbGxpZ2VuY2U8L3RpdGxlPlxuICAgICAgICA8bWV0YSBuYW1lPVwiZGVzY3JpcHRpb25cIiBjb250ZW50PVwiVGFyaWZmIG9wdGltaXphdGlvbiBhbmQgdHJpYW5nbGUgcm91dGluZyBpbnRlbGxpZ2VuY2VcIiAvPlxuICAgICAgICA8bWV0YSBuYW1lPVwidmlld3BvcnRcIiBjb250ZW50PVwid2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTFcIiAvPlxuICAgICAgPC9IZWFkPlxuICAgICAgXG4gICAgICB7LyogTG9hZGluZyBvdmVybGF5IC0gaGlkZGVuIHdoZW4gUmVhY3QgaHlkcmF0ZXMgKi99XG4gICAgICB7c2hvd0xvYWRpbmcgJiYgKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImxvYWRpbmctb3ZlcmxheVwiPlxuICAgICAgICAgIFRyaWFuZ2xlIEludGVsbGlnZW5jZSBMb2FkaW5nLi4uXG4gICAgICAgIDwvZGl2PlxuICAgICAgKX1cbiAgICAgIFxuICAgICAgPENvbXBvbmVudCB7Li4ucGFnZVByb3BzfSAvPlxuICAgICAgXG4gICAgICB7LyogU2hvdyBhcHByb3ByaWF0ZSBjaGF0Ym90IGJhc2VkIG9uIHBhZ2UgY29udGV4dCAqL31cbiAgICAgIHsocm91dGVyLnBhdGhuYW1lLnN0YXJ0c1dpdGgoJy9mb3VuZGF0aW9uJykgfHwgXG4gICAgICAgIHJvdXRlci5wYXRobmFtZS5zdGFydHNXaXRoKCcvcHJvZHVjdCcpIHx8XG4gICAgICAgIHJvdXRlci5wYXRobmFtZS5zdGFydHNXaXRoKCcvcm91dGluZycpIHx8XG4gICAgICAgIHJvdXRlci5wYXRobmFtZS5zdGFydHNXaXRoKCcvaGluZHNpZ2h0JykgfHxcbiAgICAgICAgcm91dGVyLnBhdGhuYW1lLnN0YXJ0c1dpdGgoJy9hbGVydHMnKSkgJiYgXG4gICAgICAgIDxHbG9iYWxIU0NvZGVDaGF0IC8+XG4gICAgICB9XG4gICAgICBcbiAgICAgIHsvKiBTaG93IHNhbGVzIGNoYXRib3Qgb24gcGFydG5lcnNoaXAgYW5kIHNhbGVzLXJlbGF0ZWQgcGFnZXMgKi99XG4gICAgICB7KHJvdXRlci5wYXRobmFtZS5zdGFydHNXaXRoKCcvcGFydG5lcnNoaXAnKSB8fFxuICAgICAgICByb3V0ZXIucGF0aG5hbWUuaW5jbHVkZXMoJ3NhbGVzJykgfHxcbiAgICAgICAgKHJvdXRlci5wYXRobmFtZS5zdGFydHNXaXRoKCcvZGFzaGJvYXJkJykgJiYgcm91dGVyLnF1ZXJ5Py52aWV3ID09PSAnc2FsZXMnKSkgJiYgXG4gICAgICAgIDxCaWxpbmd1YWxTYWxlc0NoYXRCb3QgLz5cbiAgICAgIH1cbiAgICA8L1RyaWFuZ2xlU3RhdGVQcm92aWRlcj5cbiAgKVxufSJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJ1c2VTdGF0ZSIsInVzZVJvdXRlciIsIkhlYWQiLCJHbG9iYWxIU0NvZGVDaGF0IiwiQmlsaW5ndWFsU2FsZXNDaGF0Qm90IiwiVHJpYW5nbGVTdGF0ZVByb3ZpZGVyIiwiQXBwIiwiQ29tcG9uZW50IiwicGFnZVByb3BzIiwicm91dGVyIiwic2hvd0xvYWRpbmciLCJzZXRTaG93TG9hZGluZyIsInRpbWVyIiwic2V0VGltZW91dCIsImRvY3VtZW50IiwiZG9jdW1lbnRFbGVtZW50Iiwic3R5bGUiLCJ2aXNpYmlsaXR5IiwiYm9keSIsImNsZWFyVGltZW91dCIsInRpdGxlIiwibWV0YSIsIm5hbWUiLCJjb250ZW50IiwiZGl2IiwiY2xhc3NOYW1lIiwicGF0aG5hbWUiLCJzdGFydHNXaXRoIiwiaW5jbHVkZXMiLCJxdWVyeSIsInZpZXciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/_app.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/buffer/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/compiled/buffer/index.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={675:function(e,r){\"use strict\";r.byteLength=byteLength;r.toByteArray=toByteArray;r.fromByteArray=fromByteArray;var t=[];var f=[];var n=typeof Uint8Array!==\"undefined\"?Uint8Array:Array;var i=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";for(var o=0,u=i.length;o<u;++o){t[o]=i[o];f[i.charCodeAt(o)]=o}f[\"-\".charCodeAt(0)]=62;f[\"_\".charCodeAt(0)]=63;function getLens(e){var r=e.length;if(r%4>0){throw new Error(\"Invalid string. Length must be a multiple of 4\")}var t=e.indexOf(\"=\");if(t===-1)t=r;var f=t===r?0:4-t%4;return[t,f]}function byteLength(e){var r=getLens(e);var t=r[0];var f=r[1];return(t+f)*3/4-f}function _byteLength(e,r,t){return(r+t)*3/4-t}function toByteArray(e){var r;var t=getLens(e);var i=t[0];var o=t[1];var u=new n(_byteLength(e,i,o));var a=0;var s=o>0?i-4:i;var h;for(h=0;h<s;h+=4){r=f[e.charCodeAt(h)]<<18|f[e.charCodeAt(h+1)]<<12|f[e.charCodeAt(h+2)]<<6|f[e.charCodeAt(h+3)];u[a++]=r>>16&255;u[a++]=r>>8&255;u[a++]=r&255}if(o===2){r=f[e.charCodeAt(h)]<<2|f[e.charCodeAt(h+1)]>>4;u[a++]=r&255}if(o===1){r=f[e.charCodeAt(h)]<<10|f[e.charCodeAt(h+1)]<<4|f[e.charCodeAt(h+2)]>>2;u[a++]=r>>8&255;u[a++]=r&255}return u}function tripletToBase64(e){return t[e>>18&63]+t[e>>12&63]+t[e>>6&63]+t[e&63]}function encodeChunk(e,r,t){var f;var n=[];for(var i=r;i<t;i+=3){f=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(e[i+2]&255);n.push(tripletToBase64(f))}return n.join(\"\")}function fromByteArray(e){var r;var f=e.length;var n=f%3;var i=[];var o=16383;for(var u=0,a=f-n;u<a;u+=o){i.push(encodeChunk(e,u,u+o>a?a:u+o))}if(n===1){r=e[f-1];i.push(t[r>>2]+t[r<<4&63]+\"==\")}else if(n===2){r=(e[f-2]<<8)+e[f-1];i.push(t[r>>10]+t[r>>4&63]+t[r<<2&63]+\"=\")}return i.join(\"\")}},72:function(e,r,t){\"use strict\";\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */var f=t(675);var n=t(783);var i=typeof Symbol===\"function\"&&typeof Symbol.for===\"function\"?Symbol.for(\"nodejs.util.inspect.custom\"):null;r.Buffer=Buffer;r.SlowBuffer=SlowBuffer;r.INSPECT_MAX_BYTES=50;var o=2147483647;r.kMaxLength=o;Buffer.TYPED_ARRAY_SUPPORT=typedArraySupport();if(!Buffer.TYPED_ARRAY_SUPPORT&&typeof console!==\"undefined\"&&typeof console.error===\"function\"){console.error(\"This browser lacks typed array (Uint8Array) support which is required by \"+\"`buffer` v5.x. Use `buffer` v4.x if you require old browser support.\")}function typedArraySupport(){try{var e=new Uint8Array(1);var r={foo:function(){return 42}};Object.setPrototypeOf(r,Uint8Array.prototype);Object.setPrototypeOf(e,r);return e.foo()===42}catch(e){return false}}Object.defineProperty(Buffer.prototype,\"parent\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.buffer}});Object.defineProperty(Buffer.prototype,\"offset\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.byteOffset}});function createBuffer(e){if(e>o){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}var r=new Uint8Array(e);Object.setPrototypeOf(r,Buffer.prototype);return r}function Buffer(e,r,t){if(typeof e===\"number\"){if(typeof r===\"string\"){throw new TypeError('The \"string\" argument must be of type string. Received type number')}return allocUnsafe(e)}return from(e,r,t)}Buffer.poolSize=8192;function from(e,r,t){if(typeof e===\"string\"){return fromString(e,r)}if(ArrayBuffer.isView(e)){return fromArrayLike(e)}if(e==null){throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}if(isInstance(e,ArrayBuffer)||e&&isInstance(e.buffer,ArrayBuffer)){return fromArrayBuffer(e,r,t)}if(typeof SharedArrayBuffer!==\"undefined\"&&(isInstance(e,SharedArrayBuffer)||e&&isInstance(e.buffer,SharedArrayBuffer))){return fromArrayBuffer(e,r,t)}if(typeof e===\"number\"){throw new TypeError('The \"value\" argument must not be of type number. Received type number')}var f=e.valueOf&&e.valueOf();if(f!=null&&f!==e){return Buffer.from(f,r,t)}var n=fromObject(e);if(n)return n;if(typeof Symbol!==\"undefined\"&&Symbol.toPrimitive!=null&&typeof e[Symbol.toPrimitive]===\"function\"){return Buffer.from(e[Symbol.toPrimitive](\"string\"),r,t)}throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}Buffer.from=function(e,r,t){return from(e,r,t)};Object.setPrototypeOf(Buffer.prototype,Uint8Array.prototype);Object.setPrototypeOf(Buffer,Uint8Array);function assertSize(e){if(typeof e!==\"number\"){throw new TypeError('\"size\" argument must be of type number')}else if(e<0){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}}function alloc(e,r,t){assertSize(e);if(e<=0){return createBuffer(e)}if(r!==undefined){return typeof t===\"string\"?createBuffer(e).fill(r,t):createBuffer(e).fill(r)}return createBuffer(e)}Buffer.alloc=function(e,r,t){return alloc(e,r,t)};function allocUnsafe(e){assertSize(e);return createBuffer(e<0?0:checked(e)|0)}Buffer.allocUnsafe=function(e){return allocUnsafe(e)};Buffer.allocUnsafeSlow=function(e){return allocUnsafe(e)};function fromString(e,r){if(typeof r!==\"string\"||r===\"\"){r=\"utf8\"}if(!Buffer.isEncoding(r)){throw new TypeError(\"Unknown encoding: \"+r)}var t=byteLength(e,r)|0;var f=createBuffer(t);var n=f.write(e,r);if(n!==t){f=f.slice(0,n)}return f}function fromArrayLike(e){var r=e.length<0?0:checked(e.length)|0;var t=createBuffer(r);for(var f=0;f<r;f+=1){t[f]=e[f]&255}return t}function fromArrayBuffer(e,r,t){if(r<0||e.byteLength<r){throw new RangeError('\"offset\" is outside of buffer bounds')}if(e.byteLength<r+(t||0)){throw new RangeError('\"length\" is outside of buffer bounds')}var f;if(r===undefined&&t===undefined){f=new Uint8Array(e)}else if(t===undefined){f=new Uint8Array(e,r)}else{f=new Uint8Array(e,r,t)}Object.setPrototypeOf(f,Buffer.prototype);return f}function fromObject(e){if(Buffer.isBuffer(e)){var r=checked(e.length)|0;var t=createBuffer(r);if(t.length===0){return t}e.copy(t,0,0,r);return t}if(e.length!==undefined){if(typeof e.length!==\"number\"||numberIsNaN(e.length)){return createBuffer(0)}return fromArrayLike(e)}if(e.type===\"Buffer\"&&Array.isArray(e.data)){return fromArrayLike(e.data)}}function checked(e){if(e>=o){throw new RangeError(\"Attempt to allocate Buffer larger than maximum \"+\"size: 0x\"+o.toString(16)+\" bytes\")}return e|0}function SlowBuffer(e){if(+e!=e){e=0}return Buffer.alloc(+e)}Buffer.isBuffer=function isBuffer(e){return e!=null&&e._isBuffer===true&&e!==Buffer.prototype};Buffer.compare=function compare(e,r){if(isInstance(e,Uint8Array))e=Buffer.from(e,e.offset,e.byteLength);if(isInstance(r,Uint8Array))r=Buffer.from(r,r.offset,r.byteLength);if(!Buffer.isBuffer(e)||!Buffer.isBuffer(r)){throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array')}if(e===r)return 0;var t=e.length;var f=r.length;for(var n=0,i=Math.min(t,f);n<i;++n){if(e[n]!==r[n]){t=e[n];f=r[n];break}}if(t<f)return-1;if(f<t)return 1;return 0};Buffer.isEncoding=function isEncoding(e){switch(String(e).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return true;default:return false}};Buffer.concat=function concat(e,r){if(!Array.isArray(e)){throw new TypeError('\"list\" argument must be an Array of Buffers')}if(e.length===0){return Buffer.alloc(0)}var t;if(r===undefined){r=0;for(t=0;t<e.length;++t){r+=e[t].length}}var f=Buffer.allocUnsafe(r);var n=0;for(t=0;t<e.length;++t){var i=e[t];if(isInstance(i,Uint8Array)){i=Buffer.from(i)}if(!Buffer.isBuffer(i)){throw new TypeError('\"list\" argument must be an Array of Buffers')}i.copy(f,n);n+=i.length}return f};function byteLength(e,r){if(Buffer.isBuffer(e)){return e.length}if(ArrayBuffer.isView(e)||isInstance(e,ArrayBuffer)){return e.byteLength}if(typeof e!==\"string\"){throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. '+\"Received type \"+typeof e)}var t=e.length;var f=arguments.length>2&&arguments[2]===true;if(!f&&t===0)return 0;var n=false;for(;;){switch(r){case\"ascii\":case\"latin1\":case\"binary\":return t;case\"utf8\":case\"utf-8\":return utf8ToBytes(e).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return t*2;case\"hex\":return t>>>1;case\"base64\":return base64ToBytes(e).length;default:if(n){return f?-1:utf8ToBytes(e).length}r=(\"\"+r).toLowerCase();n=true}}}Buffer.byteLength=byteLength;function slowToString(e,r,t){var f=false;if(r===undefined||r<0){r=0}if(r>this.length){return\"\"}if(t===undefined||t>this.length){t=this.length}if(t<=0){return\"\"}t>>>=0;r>>>=0;if(t<=r){return\"\"}if(!e)e=\"utf8\";while(true){switch(e){case\"hex\":return hexSlice(this,r,t);case\"utf8\":case\"utf-8\":return utf8Slice(this,r,t);case\"ascii\":return asciiSlice(this,r,t);case\"latin1\":case\"binary\":return latin1Slice(this,r,t);case\"base64\":return base64Slice(this,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return utf16leSlice(this,r,t);default:if(f)throw new TypeError(\"Unknown encoding: \"+e);e=(e+\"\").toLowerCase();f=true}}}Buffer.prototype._isBuffer=true;function swap(e,r,t){var f=e[r];e[r]=e[t];e[t]=f}Buffer.prototype.swap16=function swap16(){var e=this.length;if(e%2!==0){throw new RangeError(\"Buffer size must be a multiple of 16-bits\")}for(var r=0;r<e;r+=2){swap(this,r,r+1)}return this};Buffer.prototype.swap32=function swap32(){var e=this.length;if(e%4!==0){throw new RangeError(\"Buffer size must be a multiple of 32-bits\")}for(var r=0;r<e;r+=4){swap(this,r,r+3);swap(this,r+1,r+2)}return this};Buffer.prototype.swap64=function swap64(){var e=this.length;if(e%8!==0){throw new RangeError(\"Buffer size must be a multiple of 64-bits\")}for(var r=0;r<e;r+=8){swap(this,r,r+7);swap(this,r+1,r+6);swap(this,r+2,r+5);swap(this,r+3,r+4)}return this};Buffer.prototype.toString=function toString(){var e=this.length;if(e===0)return\"\";if(arguments.length===0)return utf8Slice(this,0,e);return slowToString.apply(this,arguments)};Buffer.prototype.toLocaleString=Buffer.prototype.toString;Buffer.prototype.equals=function equals(e){if(!Buffer.isBuffer(e))throw new TypeError(\"Argument must be a Buffer\");if(this===e)return true;return Buffer.compare(this,e)===0};Buffer.prototype.inspect=function inspect(){var e=\"\";var t=r.INSPECT_MAX_BYTES;e=this.toString(\"hex\",0,t).replace(/(.{2})/g,\"$1 \").trim();if(this.length>t)e+=\" ... \";return\"<Buffer \"+e+\">\"};if(i){Buffer.prototype[i]=Buffer.prototype.inspect}Buffer.prototype.compare=function compare(e,r,t,f,n){if(isInstance(e,Uint8Array)){e=Buffer.from(e,e.offset,e.byteLength)}if(!Buffer.isBuffer(e)){throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. '+\"Received type \"+typeof e)}if(r===undefined){r=0}if(t===undefined){t=e?e.length:0}if(f===undefined){f=0}if(n===undefined){n=this.length}if(r<0||t>e.length||f<0||n>this.length){throw new RangeError(\"out of range index\")}if(f>=n&&r>=t){return 0}if(f>=n){return-1}if(r>=t){return 1}r>>>=0;t>>>=0;f>>>=0;n>>>=0;if(this===e)return 0;var i=n-f;var o=t-r;var u=Math.min(i,o);var a=this.slice(f,n);var s=e.slice(r,t);for(var h=0;h<u;++h){if(a[h]!==s[h]){i=a[h];o=s[h];break}}if(i<o)return-1;if(o<i)return 1;return 0};function bidirectionalIndexOf(e,r,t,f,n){if(e.length===0)return-1;if(typeof t===\"string\"){f=t;t=0}else if(t>2147483647){t=2147483647}else if(t<-2147483648){t=-2147483648}t=+t;if(numberIsNaN(t)){t=n?0:e.length-1}if(t<0)t=e.length+t;if(t>=e.length){if(n)return-1;else t=e.length-1}else if(t<0){if(n)t=0;else return-1}if(typeof r===\"string\"){r=Buffer.from(r,f)}if(Buffer.isBuffer(r)){if(r.length===0){return-1}return arrayIndexOf(e,r,t,f,n)}else if(typeof r===\"number\"){r=r&255;if(typeof Uint8Array.prototype.indexOf===\"function\"){if(n){return Uint8Array.prototype.indexOf.call(e,r,t)}else{return Uint8Array.prototype.lastIndexOf.call(e,r,t)}}return arrayIndexOf(e,[r],t,f,n)}throw new TypeError(\"val must be string, number or Buffer\")}function arrayIndexOf(e,r,t,f,n){var i=1;var o=e.length;var u=r.length;if(f!==undefined){f=String(f).toLowerCase();if(f===\"ucs2\"||f===\"ucs-2\"||f===\"utf16le\"||f===\"utf-16le\"){if(e.length<2||r.length<2){return-1}i=2;o/=2;u/=2;t/=2}}function read(e,r){if(i===1){return e[r]}else{return e.readUInt16BE(r*i)}}var a;if(n){var s=-1;for(a=t;a<o;a++){if(read(e,a)===read(r,s===-1?0:a-s)){if(s===-1)s=a;if(a-s+1===u)return s*i}else{if(s!==-1)a-=a-s;s=-1}}}else{if(t+u>o)t=o-u;for(a=t;a>=0;a--){var h=true;for(var c=0;c<u;c++){if(read(e,a+c)!==read(r,c)){h=false;break}}if(h)return a}}return-1}Buffer.prototype.includes=function includes(e,r,t){return this.indexOf(e,r,t)!==-1};Buffer.prototype.indexOf=function indexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,true)};Buffer.prototype.lastIndexOf=function lastIndexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,false)};function hexWrite(e,r,t,f){t=Number(t)||0;var n=e.length-t;if(!f){f=n}else{f=Number(f);if(f>n){f=n}}var i=r.length;if(f>i/2){f=i/2}for(var o=0;o<f;++o){var u=parseInt(r.substr(o*2,2),16);if(numberIsNaN(u))return o;e[t+o]=u}return o}function utf8Write(e,r,t,f){return blitBuffer(utf8ToBytes(r,e.length-t),e,t,f)}function asciiWrite(e,r,t,f){return blitBuffer(asciiToBytes(r),e,t,f)}function latin1Write(e,r,t,f){return asciiWrite(e,r,t,f)}function base64Write(e,r,t,f){return blitBuffer(base64ToBytes(r),e,t,f)}function ucs2Write(e,r,t,f){return blitBuffer(utf16leToBytes(r,e.length-t),e,t,f)}Buffer.prototype.write=function write(e,r,t,f){if(r===undefined){f=\"utf8\";t=this.length;r=0}else if(t===undefined&&typeof r===\"string\"){f=r;t=this.length;r=0}else if(isFinite(r)){r=r>>>0;if(isFinite(t)){t=t>>>0;if(f===undefined)f=\"utf8\"}else{f=t;t=undefined}}else{throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\")}var n=this.length-r;if(t===undefined||t>n)t=n;if(e.length>0&&(t<0||r<0)||r>this.length){throw new RangeError(\"Attempt to write outside buffer bounds\")}if(!f)f=\"utf8\";var i=false;for(;;){switch(f){case\"hex\":return hexWrite(this,e,r,t);case\"utf8\":case\"utf-8\":return utf8Write(this,e,r,t);case\"ascii\":return asciiWrite(this,e,r,t);case\"latin1\":case\"binary\":return latin1Write(this,e,r,t);case\"base64\":return base64Write(this,e,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return ucs2Write(this,e,r,t);default:if(i)throw new TypeError(\"Unknown encoding: \"+f);f=(\"\"+f).toLowerCase();i=true}}};Buffer.prototype.toJSON=function toJSON(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};function base64Slice(e,r,t){if(r===0&&t===e.length){return f.fromByteArray(e)}else{return f.fromByteArray(e.slice(r,t))}}function utf8Slice(e,r,t){t=Math.min(e.length,t);var f=[];var n=r;while(n<t){var i=e[n];var o=null;var u=i>239?4:i>223?3:i>191?2:1;if(n+u<=t){var a,s,h,c;switch(u){case 1:if(i<128){o=i}break;case 2:a=e[n+1];if((a&192)===128){c=(i&31)<<6|a&63;if(c>127){o=c}}break;case 3:a=e[n+1];s=e[n+2];if((a&192)===128&&(s&192)===128){c=(i&15)<<12|(a&63)<<6|s&63;if(c>2047&&(c<55296||c>57343)){o=c}}break;case 4:a=e[n+1];s=e[n+2];h=e[n+3];if((a&192)===128&&(s&192)===128&&(h&192)===128){c=(i&15)<<18|(a&63)<<12|(s&63)<<6|h&63;if(c>65535&&c<1114112){o=c}}}}if(o===null){o=65533;u=1}else if(o>65535){o-=65536;f.push(o>>>10&1023|55296);o=56320|o&1023}f.push(o);n+=u}return decodeCodePointsArray(f)}var u=4096;function decodeCodePointsArray(e){var r=e.length;if(r<=u){return String.fromCharCode.apply(String,e)}var t=\"\";var f=0;while(f<r){t+=String.fromCharCode.apply(String,e.slice(f,f+=u))}return t}function asciiSlice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n]&127)}return f}function latin1Slice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n])}return f}function hexSlice(e,r,t){var f=e.length;if(!r||r<0)r=0;if(!t||t<0||t>f)t=f;var n=\"\";for(var i=r;i<t;++i){n+=s[e[i]]}return n}function utf16leSlice(e,r,t){var f=e.slice(r,t);var n=\"\";for(var i=0;i<f.length;i+=2){n+=String.fromCharCode(f[i]+f[i+1]*256)}return n}Buffer.prototype.slice=function slice(e,r){var t=this.length;e=~~e;r=r===undefined?t:~~r;if(e<0){e+=t;if(e<0)e=0}else if(e>t){e=t}if(r<0){r+=t;if(r<0)r=0}else if(r>t){r=t}if(r<e)r=e;var f=this.subarray(e,r);Object.setPrototypeOf(f,Buffer.prototype);return f};function checkOffset(e,r,t){if(e%1!==0||e<0)throw new RangeError(\"offset is not uint\");if(e+r>t)throw new RangeError(\"Trying to access beyond buffer length\")}Buffer.prototype.readUIntLE=function readUIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}return f};Buffer.prototype.readUIntBE=function readUIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t){checkOffset(e,r,this.length)}var f=this[e+--r];var n=1;while(r>0&&(n*=256)){f+=this[e+--r]*n}return f};Buffer.prototype.readUInt8=function readUInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);return this[e]};Buffer.prototype.readUInt16LE=function readUInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]|this[e+1]<<8};Buffer.prototype.readUInt16BE=function readUInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]<<8|this[e+1]};Buffer.prototype.readUInt32LE=function readUInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return(this[e]|this[e+1]<<8|this[e+2]<<16)+this[e+3]*16777216};Buffer.prototype.readUInt32BE=function readUInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]*16777216+(this[e+1]<<16|this[e+2]<<8|this[e+3])};Buffer.prototype.readIntLE=function readIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}n*=128;if(f>=n)f-=Math.pow(2,8*r);return f};Buffer.prototype.readIntBE=function readIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=r;var n=1;var i=this[e+--f];while(f>0&&(n*=256)){i+=this[e+--f]*n}n*=128;if(i>=n)i-=Math.pow(2,8*r);return i};Buffer.prototype.readInt8=function readInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);if(!(this[e]&128))return this[e];return(255-this[e]+1)*-1};Buffer.prototype.readInt16LE=function readInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e]|this[e+1]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt16BE=function readInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e+1]|this[e]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt32LE=function readInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24};Buffer.prototype.readInt32BE=function readInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]};Buffer.prototype.readFloatLE=function readFloatLE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,true,23,4)};Buffer.prototype.readFloatBE=function readFloatBE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,false,23,4)};Buffer.prototype.readDoubleLE=function readDoubleLE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,true,52,8)};Buffer.prototype.readDoubleBE=function readDoubleBE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,false,52,8)};function checkInt(e,r,t,f,n,i){if(!Buffer.isBuffer(e))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(r>n||r<i)throw new RangeError('\"value\" argument is out of bounds');if(t+f>e.length)throw new RangeError(\"Index out of range\")}Buffer.prototype.writeUIntLE=function writeUIntLE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=1;var o=0;this[r]=e&255;while(++o<t&&(i*=256)){this[r+o]=e/i&255}return r+t};Buffer.prototype.writeUIntBE=function writeUIntBE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=t-1;var o=1;this[r+i]=e&255;while(--i>=0&&(o*=256)){this[r+i]=e/o&255}return r+t};Buffer.prototype.writeUInt8=function writeUInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,255,0);this[r]=e&255;return r+1};Buffer.prototype.writeUInt16LE=function writeUInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeUInt16BE=function writeUInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeUInt32LE=function writeUInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r+3]=e>>>24;this[r+2]=e>>>16;this[r+1]=e>>>8;this[r]=e&255;return r+4};Buffer.prototype.writeUInt32BE=function writeUInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};Buffer.prototype.writeIntLE=function writeIntLE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=0;var o=1;var u=0;this[r]=e&255;while(++i<t&&(o*=256)){if(e<0&&u===0&&this[r+i-1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeIntBE=function writeIntBE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=t-1;var o=1;var u=0;this[r+i]=e&255;while(--i>=0&&(o*=256)){if(e<0&&u===0&&this[r+i+1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeInt8=function writeInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,127,-128);if(e<0)e=255+e+1;this[r]=e&255;return r+1};Buffer.prototype.writeInt16LE=function writeInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeInt16BE=function writeInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeInt32LE=function writeInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);this[r]=e&255;this[r+1]=e>>>8;this[r+2]=e>>>16;this[r+3]=e>>>24;return r+4};Buffer.prototype.writeInt32BE=function writeInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);if(e<0)e=4294967295+e+1;this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};function checkIEEE754(e,r,t,f,n,i){if(t+f>e.length)throw new RangeError(\"Index out of range\");if(t<0)throw new RangeError(\"Index out of range\")}function writeFloat(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,4,34028234663852886e22,-34028234663852886e22)}n.write(e,r,t,f,23,4);return t+4}Buffer.prototype.writeFloatLE=function writeFloatLE(e,r,t){return writeFloat(this,e,r,true,t)};Buffer.prototype.writeFloatBE=function writeFloatBE(e,r,t){return writeFloat(this,e,r,false,t)};function writeDouble(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,8,17976931348623157e292,-17976931348623157e292)}n.write(e,r,t,f,52,8);return t+8}Buffer.prototype.writeDoubleLE=function writeDoubleLE(e,r,t){return writeDouble(this,e,r,true,t)};Buffer.prototype.writeDoubleBE=function writeDoubleBE(e,r,t){return writeDouble(this,e,r,false,t)};Buffer.prototype.copy=function copy(e,r,t,f){if(!Buffer.isBuffer(e))throw new TypeError(\"argument should be a Buffer\");if(!t)t=0;if(!f&&f!==0)f=this.length;if(r>=e.length)r=e.length;if(!r)r=0;if(f>0&&f<t)f=t;if(f===t)return 0;if(e.length===0||this.length===0)return 0;if(r<0){throw new RangeError(\"targetStart out of bounds\")}if(t<0||t>=this.length)throw new RangeError(\"Index out of range\");if(f<0)throw new RangeError(\"sourceEnd out of bounds\");if(f>this.length)f=this.length;if(e.length-r<f-t){f=e.length-r+t}var n=f-t;if(this===e&&typeof Uint8Array.prototype.copyWithin===\"function\"){this.copyWithin(r,t,f)}else if(this===e&&t<r&&r<f){for(var i=n-1;i>=0;--i){e[i+r]=this[i+t]}}else{Uint8Array.prototype.set.call(e,this.subarray(t,f),r)}return n};Buffer.prototype.fill=function fill(e,r,t,f){if(typeof e===\"string\"){if(typeof r===\"string\"){f=r;r=0;t=this.length}else if(typeof t===\"string\"){f=t;t=this.length}if(f!==undefined&&typeof f!==\"string\"){throw new TypeError(\"encoding must be a string\")}if(typeof f===\"string\"&&!Buffer.isEncoding(f)){throw new TypeError(\"Unknown encoding: \"+f)}if(e.length===1){var n=e.charCodeAt(0);if(f===\"utf8\"&&n<128||f===\"latin1\"){e=n}}}else if(typeof e===\"number\"){e=e&255}else if(typeof e===\"boolean\"){e=Number(e)}if(r<0||this.length<r||this.length<t){throw new RangeError(\"Out of range index\")}if(t<=r){return this}r=r>>>0;t=t===undefined?this.length:t>>>0;if(!e)e=0;var i;if(typeof e===\"number\"){for(i=r;i<t;++i){this[i]=e}}else{var o=Buffer.isBuffer(e)?e:Buffer.from(e,f);var u=o.length;if(u===0){throw new TypeError('The value \"'+e+'\" is invalid for argument \"value\"')}for(i=0;i<t-r;++i){this[i+r]=o[i%u]}}return this};var a=/[^+/0-9A-Za-z-_]/g;function base64clean(e){e=e.split(\"=\")[0];e=e.trim().replace(a,\"\");if(e.length<2)return\"\";while(e.length%4!==0){e=e+\"=\"}return e}function utf8ToBytes(e,r){r=r||Infinity;var t;var f=e.length;var n=null;var i=[];for(var o=0;o<f;++o){t=e.charCodeAt(o);if(t>55295&&t<57344){if(!n){if(t>56319){if((r-=3)>-1)i.push(239,191,189);continue}else if(o+1===f){if((r-=3)>-1)i.push(239,191,189);continue}n=t;continue}if(t<56320){if((r-=3)>-1)i.push(239,191,189);n=t;continue}t=(n-55296<<10|t-56320)+65536}else if(n){if((r-=3)>-1)i.push(239,191,189)}n=null;if(t<128){if((r-=1)<0)break;i.push(t)}else if(t<2048){if((r-=2)<0)break;i.push(t>>6|192,t&63|128)}else if(t<65536){if((r-=3)<0)break;i.push(t>>12|224,t>>6&63|128,t&63|128)}else if(t<1114112){if((r-=4)<0)break;i.push(t>>18|240,t>>12&63|128,t>>6&63|128,t&63|128)}else{throw new Error(\"Invalid code point\")}}return i}function asciiToBytes(e){var r=[];for(var t=0;t<e.length;++t){r.push(e.charCodeAt(t)&255)}return r}function utf16leToBytes(e,r){var t,f,n;var i=[];for(var o=0;o<e.length;++o){if((r-=2)<0)break;t=e.charCodeAt(o);f=t>>8;n=t%256;i.push(n);i.push(f)}return i}function base64ToBytes(e){return f.toByteArray(base64clean(e))}function blitBuffer(e,r,t,f){for(var n=0;n<f;++n){if(n+t>=r.length||n>=e.length)break;r[n+t]=e[n]}return n}function isInstance(e,r){return e instanceof r||e!=null&&e.constructor!=null&&e.constructor.name!=null&&e.constructor.name===r.name}function numberIsNaN(e){return e!==e}var s=function(){var e=\"0123456789abcdef\";var r=new Array(256);for(var t=0;t<16;++t){var f=t*16;for(var n=0;n<16;++n){r[f+n]=e[t]+e[n]}}return r}()},783:function(e,r){\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nr.read=function(e,r,t,f,n){var i,o;var u=n*8-f-1;var a=(1<<u)-1;var s=a>>1;var h=-7;var c=t?n-1:0;var l=t?-1:1;var p=e[r+c];c+=l;i=p&(1<<-h)-1;p>>=-h;h+=u;for(;h>0;i=i*256+e[r+c],c+=l,h-=8){}o=i&(1<<-h)-1;i>>=-h;h+=f;for(;h>0;o=o*256+e[r+c],c+=l,h-=8){}if(i===0){i=1-s}else if(i===a){return o?NaN:(p?-1:1)*Infinity}else{o=o+Math.pow(2,f);i=i-s}return(p?-1:1)*o*Math.pow(2,i-f)};r.write=function(e,r,t,f,n,i){var o,u,a;var s=i*8-n-1;var h=(1<<s)-1;var c=h>>1;var l=n===23?Math.pow(2,-24)-Math.pow(2,-77):0;var p=f?0:i-1;var y=f?1:-1;var g=r<0||r===0&&1/r<0?1:0;r=Math.abs(r);if(isNaN(r)||r===Infinity){u=isNaN(r)?1:0;o=h}else{o=Math.floor(Math.log(r)/Math.LN2);if(r*(a=Math.pow(2,-o))<1){o--;a*=2}if(o+c>=1){r+=l/a}else{r+=l*Math.pow(2,1-c)}if(r*a>=2){o++;a/=2}if(o+c>=h){u=0;o=h}else if(o+c>=1){u=(r*a-1)*Math.pow(2,n);o=o+c}else{u=r*Math.pow(2,c-1)*Math.pow(2,n);o=0}}for(;n>=8;e[t+p]=u&255,p+=y,u/=256,n-=8){}o=o<<n|u;s+=n;for(;s>0;e[t+p]=o&255,p+=y,o/=256,s-=8){}e[t+p-y]|=g*128}}};var r={};function __nccwpck_require__(t){var f=r[t];if(f!==undefined){return f.exports}var n=r[t]={exports:{}};var i=true;try{e[t](n,n.exports,__nccwpck_require__);i=false}finally{if(i)delete r[t]}return n.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(72);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/buffer/index.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MvYnJvd3Nlci5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsWUFBWSxPQUFPLGdCQUFnQixtQkFBbUIsTUFBTSxNQUFNLDRCQUE0QixtREFBbUQsK0JBQStCLHFEQUFxRCxZQUFZLElBQUksbUNBQW1DLGFBQWEsS0FBSyxvQkFBb0IsU0FBUyxtQkFBbUIsSUFBSSxxQ0FBcUMsZUFBZSxLQUFLLHVCQUF1QixTQUFTLHVCQUF1QixJQUFJLHVCQUF1QixtQkFBbUIsdUJBQXVCLDJDQUEyQyxhQUFhLHVCQUF1QixJQUFJLGNBQWMsU0FBUyxJQUFJLHdCQUF3QixTQUFTLDBCQUEwQiw0QkFBNEIscUJBQXFCLHVCQUF1QixnREFBZ0QsZUFBZSx1QkFBdUIsSUFBSSxZQUFZLFNBQVMsSUFBSSxzQkFBc0IsU0FBUyx3QkFBd0IsU0FBUyxZQUFZLE1BQU0sU0FBUywyQkFBMkIsV0FBVyxPQUFPLFFBQVEsYUFBYSxjQUFjLEtBQUssS0FBSyxhQUFhLGNBQWMsc0JBQXNCLE1BQU0sT0FBTyxrQ0FBa0MsT0FBTyxlQUFlLFNBQVMsSUFBSSxLQUFLLGFBQWEsTUFBTSxZQUFZLEtBQUssV0FBVyxPQUFPLFFBQVEsbUJBQW1CLHVCQUF1QixvQ0FBb0MsdUJBQXVCLFlBQVksbUJBQW1CLEtBQUsscUJBQXFCLHNCQUFzQixxQkFBcUIseUJBQXlCLG1CQUFtQixXQUFXLGFBQWEsOEJBQThCLGlDQUFpQyxrQkFBa0IsZUFBZSxTQUFTLFVBQVUsYUFBYSxjQUFjLGlCQUFpQixVQUFVLG1CQUFtQixZQUFZLFdBQVcsc0JBQXNCLDBCQUEwQixZQUFZLHVCQUF1QiwyQkFBMkIsd0JBQXdCLFVBQVUsc0JBQXNCLHFEQUFxRCxpQkFBaUIsV0FBVyxvQkFBb0IsbURBQW1ELG1CQUFtQixZQUFZLFNBQVMsZ0NBQWdDLFdBQVcsa0JBQWtCLGlCQUFpQixZQUFZLFlBQVksV0FBVyxJQUFJLHNDQUFzQyxRQUFRLFFBQVEsaUJBQWlCLGlCQUFpQixtRUFBbUUsU0FBUyxLQUFLLCtCQUErQixpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9wcm9jZXNzL2Jyb3dzZXIuanM/MWIxZCJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXt2YXIgZT17MjI5OmZ1bmN0aW9uKGUpe3ZhciB0PWUuZXhwb3J0cz17fTt2YXIgcjt2YXIgbjtmdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwic2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZFwiKX1mdW5jdGlvbiBkZWZhdWx0Q2xlYXJUaW1lb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwiY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfShmdW5jdGlvbigpe3RyeXtpZih0eXBlb2Ygc2V0VGltZW91dD09PVwiZnVuY3Rpb25cIil7cj1zZXRUaW1lb3V0fWVsc2V7cj1kZWZhdWx0U2V0VGltb3V0fX1jYXRjaChlKXtyPWRlZmF1bHRTZXRUaW1vdXR9dHJ5e2lmKHR5cGVvZiBjbGVhclRpbWVvdXQ9PT1cImZ1bmN0aW9uXCIpe249Y2xlYXJUaW1lb3V0fWVsc2V7bj1kZWZhdWx0Q2xlYXJUaW1lb3V0fX1jYXRjaChlKXtuPWRlZmF1bHRDbGVhclRpbWVvdXR9fSkoKTtmdW5jdGlvbiBydW5UaW1lb3V0KGUpe2lmKHI9PT1zZXRUaW1lb3V0KXtyZXR1cm4gc2V0VGltZW91dChlLDApfWlmKChyPT09ZGVmYXVsdFNldFRpbW91dHx8IXIpJiZzZXRUaW1lb3V0KXtyPXNldFRpbWVvdXQ7cmV0dXJuIHNldFRpbWVvdXQoZSwwKX10cnl7cmV0dXJuIHIoZSwwKX1jYXRjaCh0KXt0cnl7cmV0dXJuIHIuY2FsbChudWxsLGUsMCl9Y2F0Y2godCl7cmV0dXJuIHIuY2FsbCh0aGlzLGUsMCl9fX1mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQoZSl7aWYobj09PWNsZWFyVGltZW91dCl7cmV0dXJuIGNsZWFyVGltZW91dChlKX1pZigobj09PWRlZmF1bHRDbGVhclRpbWVvdXR8fCFuKSYmY2xlYXJUaW1lb3V0KXtuPWNsZWFyVGltZW91dDtyZXR1cm4gY2xlYXJUaW1lb3V0KGUpfXRyeXtyZXR1cm4gbihlKX1jYXRjaCh0KXt0cnl7cmV0dXJuIG4uY2FsbChudWxsLGUpfWNhdGNoKHQpe3JldHVybiBuLmNhbGwodGhpcyxlKX19fXZhciBpPVtdO3ZhciBvPWZhbHNlO3ZhciB1O3ZhciBhPS0xO2Z1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpe2lmKCFvfHwhdSl7cmV0dXJufW89ZmFsc2U7aWYodS5sZW5ndGgpe2k9dS5jb25jYXQoaSl9ZWxzZXthPS0xfWlmKGkubGVuZ3RoKXtkcmFpblF1ZXVlKCl9fWZ1bmN0aW9uIGRyYWluUXVldWUoKXtpZihvKXtyZXR1cm59dmFyIGU9cnVuVGltZW91dChjbGVhblVwTmV4dFRpY2spO289dHJ1ZTt2YXIgdD1pLmxlbmd0aDt3aGlsZSh0KXt1PWk7aT1bXTt3aGlsZSgrK2E8dCl7aWYodSl7dVthXS5ydW4oKX19YT0tMTt0PWkubGVuZ3RofXU9bnVsbDtvPWZhbHNlO3J1bkNsZWFyVGltZW91dChlKX10Lm5leHRUaWNrPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoLTEpO2lmKGFyZ3VtZW50cy5sZW5ndGg+MSl7Zm9yKHZhciByPTE7cjxhcmd1bWVudHMubGVuZ3RoO3IrKyl7dFtyLTFdPWFyZ3VtZW50c1tyXX19aS5wdXNoKG5ldyBJdGVtKGUsdCkpO2lmKGkubGVuZ3RoPT09MSYmIW8pe3J1blRpbWVvdXQoZHJhaW5RdWV1ZSl9fTtmdW5jdGlvbiBJdGVtKGUsdCl7dGhpcy5mdW49ZTt0aGlzLmFycmF5PXR9SXRlbS5wcm90b3R5cGUucnVuPWZ1bmN0aW9uKCl7dGhpcy5mdW4uYXBwbHkobnVsbCx0aGlzLmFycmF5KX07dC50aXRsZT1cImJyb3dzZXJcIjt0LmJyb3dzZXI9dHJ1ZTt0LmVudj17fTt0LmFyZ3Y9W107dC52ZXJzaW9uPVwiXCI7dC52ZXJzaW9ucz17fTtmdW5jdGlvbiBub29wKCl7fXQub249bm9vcDt0LmFkZExpc3RlbmVyPW5vb3A7dC5vbmNlPW5vb3A7dC5vZmY9bm9vcDt0LnJlbW92ZUxpc3RlbmVyPW5vb3A7dC5yZW1vdmVBbGxMaXN0ZW5lcnM9bm9vcDt0LmVtaXQ9bm9vcDt0LnByZXBlbmRMaXN0ZW5lcj1ub29wO3QucHJlcGVuZE9uY2VMaXN0ZW5lcj1ub29wO3QubGlzdGVuZXJzPWZ1bmN0aW9uKGUpe3JldHVybltdfTt0LmJpbmRpbmc9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWRcIil9O3QuY3dkPWZ1bmN0aW9uKCl7cmV0dXJuXCIvXCJ9O3QuY2hkaXI9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkXCIpfTt0LnVtYXNrPWZ1bmN0aW9uKCl7cmV0dXJuIDB9fX07dmFyIHQ9e307ZnVuY3Rpb24gX19uY2N3cGNrX3JlcXVpcmVfXyhyKXt2YXIgbj10W3JdO2lmKG4hPT11bmRlZmluZWQpe3JldHVybiBuLmV4cG9ydHN9dmFyIGk9dFtyXT17ZXhwb3J0czp7fX07dmFyIG89dHJ1ZTt0cnl7ZVtyXShpLGkuZXhwb3J0cyxfX25jY3dwY2tfcmVxdWlyZV9fKTtvPWZhbHNlfWZpbmFsbHl7aWYobylkZWxldGUgdFtyXX1yZXR1cm4gaS5leHBvcnRzfWlmKHR5cGVvZiBfX25jY3dwY2tfcmVxdWlyZV9fIT09XCJ1bmRlZmluZWRcIilfX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjt2YXIgcj1fX25jY3dwY2tfcmVxdWlyZV9fKDIyOSk7bW9kdWxlLmV4cG9ydHM9cn0pKCk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/process/browser.js\n"));

/***/ }),

/***/ "./node_modules/next/head.js":
/*!***********************************!*\
  !*** ./node_modules/next/head.js ***!
  \***********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ./dist/shared/lib/head */ \"./node_modules/next/dist/shared/lib/head.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9oZWFkLmpzIiwibWFwcGluZ3MiOiJBQUFBLGlIQUFrRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9oZWFkLmpzPzg4NDkiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Rpc3Qvc2hhcmVkL2xpYi9oZWFkJylcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/head.js\n"));

/***/ }),

/***/ "./node_modules/next/router.js":
/*!*************************************!*\
  !*** ./node_modules/next/router.js ***!
  \*************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ./dist/client/router */ \"./node_modules/next/dist/client/router.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9yb3V0ZXIuanMiLCJtYXBwaW5ncyI6IkFBQUEsNkdBQWdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L3JvdXRlci5qcz8xYmI2Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kaXN0L2NsaWVudC9yb3V0ZXInKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/router.js\n"));

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV$1 =  jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV$1;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWIsSUFBSSxJQUFxQztBQUN6QztBQUNBOztBQUVBLFlBQVksbUJBQU8sQ0FBQyw0Q0FBTzs7QUFFM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxpR0FBaUcsZUFBZTtBQUNoSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNOzs7QUFHTjtBQUNBO0FBQ0EsS0FBSyxHQUFHOztBQUVSLGtEQUFrRDtBQUNsRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSw0QkFBNEI7QUFDNUI7QUFDQSxxQ0FBcUM7O0FBRXJDLGdDQUFnQztBQUNoQztBQUNBOztBQUVBLGdDQUFnQzs7QUFFaEM7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLElBQUk7OztBQUdKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsRUFBRTs7O0FBR0Y7QUFDQTtBQUNBLEVBQUU7OztBQUdGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNB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O0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsV0FBVyxHQUFHO0FBQ2QsV0FBVyxHQUFHO0FBQ2QsV0FBVyxlQUFlO0FBQzFCLFdBQVcsR0FBRztBQUNkLFdBQVcsR0FBRztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2Q7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssR0FBRzs7QUFFUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyxHQUFHO0FBQ1I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkI7O0FBRUE7QUFDQTtBQUNBLGtCQUFrQjs7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OztBQUVBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixxQkFBcUI7QUFDakQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEVBQUU7O0FBRUY7O0FBRUEsZ0JBQWdCO0FBQ2hCLGNBQWM7QUFDZCxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUuZGV2ZWxvcG1lbnQuanM/MTdlMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlIFJlYWN0XG4gKiByZWFjdC1qc3gtZGV2LXJ1bnRpbWUuZGV2ZWxvcG1lbnQuanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgKGZ1bmN0aW9uKCkge1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuXG4vLyBBVFRFTlRJT05cbi8vIFdoZW4gYWRkaW5nIG5ldyBzeW1ib2xzIHRvIHRoaXMgZmlsZSxcbi8vIFBsZWFzZSBjb25zaWRlciBhbHNvIGFkZGluZyB0byAncmVhY3QtZGV2dG9vbHMtc2hhcmVkL3NyYy9iYWNrZW5kL1JlYWN0U3ltYm9scydcbi8vIFRoZSBTeW1ib2wgdXNlZCB0byB0YWcgdGhlIFJlYWN0RWxlbWVudC1saWtlIHR5cGVzLlxudmFyIFJFQUNUX0VMRU1FTlRfVFlQRSA9IFN5bWJvbC5mb3IoJ3JlYWN0LmVsZW1lbnQnKTtcbnZhciBSRUFDVF9QT1JUQUxfVFlQRSA9IFN5bWJvbC5mb3IoJ3JlYWN0LnBvcnRhbCcpO1xudmFyIFJFQUNUX0ZSQUdNRU5UX1RZUEUgPSBTeW1ib2wuZm9yKCdyZWFjdC5mcmFnbWVudCcpO1xudmFyIFJFQUNUX1NUUklDVF9NT0RFX1RZUEUgPSBTeW1ib2wuZm9yKCdyZWFjdC5zdHJpY3RfbW9kZScpO1xudmFyIFJFQUNUX1BST0ZJTEVSX1RZUEUgPSBTeW1ib2wuZm9yKCdyZWFjdC5wcm9maWxlcicpO1xudmFyIFJFQUNUX1BST1ZJREVSX1RZUEUgPSBTeW1ib2wuZm9yKCdyZWFjdC5wcm92aWRlcicpO1xudmFyIFJFQUNUX0NPTlRFWFRfVFlQRSA9IFN5bWJvbC5mb3IoJ3JlYWN0LmNvbnRleHQnKTtcbnZhciBSRUFDVF9GT1JXQVJEX1JFRl9UWVBFID0gU3ltYm9sLmZvcigncmVhY3QuZm9yd2FyZF9yZWYnKTtcbnZhciBSRUFDVF9TVVNQRU5TRV9UWVBFID0gU3ltYm9sLmZvcigncmVhY3Quc3VzcGVuc2UnKTtcbnZhciBSRUFDVF9TVVNQRU5TRV9MSVNUX1RZUEUgPSBTeW1ib2wuZm9yKCdyZWFjdC5zdXNwZW5zZV9saXN0Jyk7XG52YXIgUkVBQ1RfTUVNT19UWVBFID0gU3ltYm9sLmZvcigncmVhY3QubWVtbycpO1xudmFyIFJFQUNUX0xBWllfVFlQRSA9IFN5bWJvbC5mb3IoJ3JlYWN0LmxhenknKTtcbnZhciBSRUFDVF9PRkZTQ1JFRU5fVFlQRSA9IFN5bWJvbC5mb3IoJ3JlYWN0Lm9mZnNjcmVlbicpO1xudmFyIE1BWUJFX0lURVJBVE9SX1NZTUJPTCA9IFN5bWJvbC5pdGVyYXRvcjtcbnZhciBGQVVYX0lURVJBVE9SX1NZTUJPTCA9ICdAQGl0ZXJhdG9yJztcbmZ1bmN0aW9uIGdldEl0ZXJhdG9yRm4obWF5YmVJdGVyYWJsZSkge1xuICBpZiAobWF5YmVJdGVyYWJsZSA9PT0gbnVsbCB8fCB0eXBlb2YgbWF5YmVJdGVyYWJsZSAhPT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHZhciBtYXliZUl0ZXJhdG9yID0gTUFZQkVfSVRFUkFUT1JfU1lNQk9MICYmIG1heWJlSXRlcmFibGVbTUFZQkVfSVRFUkFUT1JfU1lNQk9MXSB8fCBtYXliZUl0ZXJhYmxlW0ZBVVhfSVRFUkFUT1JfU1lNQk9MXTtcblxuICBpZiAodHlwZW9mIG1heWJlSXRlcmF0b3IgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gbWF5YmVJdGVyYXRvcjtcbiAgfVxuXG4gIHJldHVybiBudWxsO1xufVxuXG52YXIgUmVhY3RTaGFyZWRJbnRlcm5hbHMgPSBSZWFjdC5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDtcblxuZnVuY3Rpb24gZXJyb3IoZm9ybWF0KSB7XG4gIHtcbiAgICB7XG4gICAgICBmb3IgKHZhciBfbGVuMiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbjIgPiAxID8gX2xlbjIgLSAxIDogMCksIF9rZXkyID0gMTsgX2tleTIgPCBfbGVuMjsgX2tleTIrKykge1xuICAgICAgICBhcmdzW19rZXkyIC0gMV0gPSBhcmd1bWVudHNbX2tleTJdO1xuICAgICAgfVxuXG4gICAgICBwcmludFdhcm5pbmcoJ2Vycm9yJywgZm9ybWF0LCBhcmdzKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gcHJpbnRXYXJuaW5nKGxldmVsLCBmb3JtYXQsIGFyZ3MpIHtcbiAgLy8gV2hlbiBjaGFuZ2luZyB0aGlzIGxvZ2ljLCB5b3UgbWlnaHQgd2FudCB0byBhbHNvXG4gIC8vIHVwZGF0ZSBjb25zb2xlV2l0aFN0YWNrRGV2Lnd3dy5qcyBhcyB3ZWxsLlxuICB7XG4gICAgdmFyIFJlYWN0RGVidWdDdXJyZW50RnJhbWUgPSBSZWFjdFNoYXJlZEludGVybmFscy5SZWFjdERlYnVnQ3VycmVudEZyYW1lO1xuICAgIHZhciBzdGFjayA9IFJlYWN0RGVidWdDdXJyZW50RnJhbWUuZ2V0U3RhY2tBZGRlbmR1bSgpO1xuXG4gICAgaWYgKHN0YWNrICE9PSAnJykge1xuICAgICAgZm9ybWF0ICs9ICclcyc7XG4gICAgICBhcmdzID0gYXJncy5jb25jYXQoW3N0YWNrXSk7XG4gICAgfSAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaW50ZXJuYWwvc2FmZS1zdHJpbmctY29lcmNpb25cblxuXG4gICAgdmFyIGFyZ3NXaXRoRm9ybWF0ID0gYXJncy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHJldHVybiBTdHJpbmcoaXRlbSk7XG4gICAgfSk7IC8vIENhcmVmdWw6IFJOIGN1cnJlbnRseSBkZXBlbmRzIG9uIHRoaXMgcHJlZml4XG5cbiAgICBhcmdzV2l0aEZvcm1hdC51bnNoaWZ0KCdXYXJuaW5nOiAnICsgZm9ybWF0KTsgLy8gV2UgaW50ZW50aW9uYWxseSBkb24ndCB1c2Ugc3ByZWFkIChvciAuYXBwbHkpIGRpcmVjdGx5IGJlY2F1c2UgaXRcbiAgICAvLyBicmVha3MgSUU5OiBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvaXNzdWVzLzEzNjEwXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWludGVybmFsL25vLXByb2R1Y3Rpb24tbG9nZ2luZ1xuXG4gICAgRnVuY3Rpb24ucHJvdG90eXBlLmFwcGx5LmNhbGwoY29uc29sZVtsZXZlbF0sIGNvbnNvbGUsIGFyZ3NXaXRoRm9ybWF0KTtcbiAgfVxufVxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG52YXIgZW5hYmxlU2NvcGVBUEkgPSBmYWxzZTsgLy8gRXhwZXJpbWVudGFsIENyZWF0ZSBFdmVudCBIYW5kbGUgQVBJLlxudmFyIGVuYWJsZUNhY2hlRWxlbWVudCA9IGZhbHNlO1xudmFyIGVuYWJsZVRyYW5zaXRpb25UcmFjaW5nID0gZmFsc2U7IC8vIE5vIGtub3duIGJ1Z3MsIGJ1dCBuZWVkcyBwZXJmb3JtYW5jZSB0ZXN0aW5nXG5cbnZhciBlbmFibGVMZWdhY3lIaWRkZW4gPSBmYWxzZTsgLy8gRW5hYmxlcyB1bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjayBmZWF0dXJlIGluIEZpYmVyXG4vLyBzdHVmZi4gSW50ZW5kZWQgdG8gZW5hYmxlIFJlYWN0IGNvcmUgbWVtYmVycyB0byBtb3JlIGVhc2lseSBkZWJ1ZyBzY2hlZHVsaW5nXG4vLyBpc3N1ZXMgaW4gREVWIGJ1aWxkcy5cblxudmFyIGVuYWJsZURlYnVnVHJhY2luZyA9IGZhbHNlOyAvLyBUcmFjayB3aGljaCBGaWJlcihzKSBzY2hlZHVsZSByZW5kZXIgd29yay5cblxudmFyIFJFQUNUX01PRFVMRV9SRUZFUkVOQ0U7XG5cbntcbiAgUkVBQ1RfTU9EVUxFX1JFRkVSRU5DRSA9IFN5bWJvbC5mb3IoJ3JlYWN0Lm1vZHVsZS5yZWZlcmVuY2UnKTtcbn1cblxuZnVuY3Rpb24gaXNWYWxpZEVsZW1lbnRUeXBlKHR5cGUpIHtcbiAgaWYgKHR5cGVvZiB0eXBlID09PSAnc3RyaW5nJyB8fCB0eXBlb2YgdHlwZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiB0cnVlO1xuICB9IC8vIE5vdGU6IHR5cGVvZiBtaWdodCBiZSBvdGhlciB0aGFuICdzeW1ib2wnIG9yICdudW1iZXInIChlLmcuIGlmIGl0J3MgYSBwb2x5ZmlsbCkuXG5cblxuICBpZiAodHlwZSA9PT0gUkVBQ1RfRlJBR01FTlRfVFlQRSB8fCB0eXBlID09PSBSRUFDVF9QUk9GSUxFUl9UWVBFIHx8IGVuYWJsZURlYnVnVHJhY2luZyAgfHwgdHlwZSA9PT0gUkVBQ1RfU1RSSUNUX01PREVfVFlQRSB8fCB0eXBlID09PSBSRUFDVF9TVVNQRU5TRV9UWVBFIHx8IHR5cGUgPT09IFJFQUNUX1NVU1BFTlNFX0xJU1RfVFlQRSB8fCBlbmFibGVMZWdhY3lIaWRkZW4gIHx8IHR5cGUgPT09IFJFQUNUX09GRlNDUkVFTl9UWVBFIHx8IGVuYWJsZVNjb3BlQVBJICB8fCBlbmFibGVDYWNoZUVsZW1lbnQgIHx8IGVuYWJsZVRyYW5zaXRpb25UcmFjaW5nICkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgaWYgKHR5cGVvZiB0eXBlID09PSAnb2JqZWN0JyAmJiB0eXBlICE9PSBudWxsKSB7XG4gICAgaWYgKHR5cGUuJCR0eXBlb2YgPT09IFJFQUNUX0xBWllfVFlQRSB8fCB0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9NRU1PX1RZUEUgfHwgdHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfUFJPVklERVJfVFlQRSB8fCB0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9DT05URVhUX1RZUEUgfHwgdHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfRk9SV0FSRF9SRUZfVFlQRSB8fCAvLyBUaGlzIG5lZWRzIHRvIGluY2x1ZGUgYWxsIHBvc3NpYmxlIG1vZHVsZSByZWZlcmVuY2Ugb2JqZWN0XG4gICAgLy8gdHlwZXMgc3VwcG9ydGVkIGJ5IGFueSBGbGlnaHQgY29uZmlndXJhdGlvbiBhbnl3aGVyZSBzaW5jZVxuICAgIC8vIHdlIGRvbid0IGtub3cgd2hpY2ggRmxpZ2h0IGJ1aWxkIHRoaXMgd2lsbCBlbmQgdXAgYmVpbmcgdXNlZFxuICAgIC8vIHdpdGguXG4gICAgdHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfTU9EVUxFX1JFRkVSRU5DRSB8fCB0eXBlLmdldE1vZHVsZUlkICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuZnVuY3Rpb24gZ2V0V3JhcHBlZE5hbWUob3V0ZXJUeXBlLCBpbm5lclR5cGUsIHdyYXBwZXJOYW1lKSB7XG4gIHZhciBkaXNwbGF5TmFtZSA9IG91dGVyVHlwZS5kaXNwbGF5TmFtZTtcblxuICBpZiAoZGlzcGxheU5hbWUpIHtcbiAgICByZXR1cm4gZGlzcGxheU5hbWU7XG4gIH1cblxuICB2YXIgZnVuY3Rpb25OYW1lID0gaW5uZXJUeXBlLmRpc3BsYXlOYW1lIHx8IGlubmVyVHlwZS5uYW1lIHx8ICcnO1xuICByZXR1cm4gZnVuY3Rpb25OYW1lICE9PSAnJyA/IHdyYXBwZXJOYW1lICsgXCIoXCIgKyBmdW5jdGlvbk5hbWUgKyBcIilcIiA6IHdyYXBwZXJOYW1lO1xufSAvLyBLZWVwIGluIHN5bmMgd2l0aCByZWFjdC1yZWNvbmNpbGVyL2dldENvbXBvbmVudE5hbWVGcm9tRmliZXJcblxuXG5mdW5jdGlvbiBnZXRDb250ZXh0TmFtZSh0eXBlKSB7XG4gIHJldHVybiB0eXBlLmRpc3BsYXlOYW1lIHx8ICdDb250ZXh0Jztcbn0gLy8gTm90ZSB0aGF0IHRoZSByZWNvbmNpbGVyIHBhY2thZ2Ugc2hvdWxkIGdlbmVyYWxseSBwcmVmZXIgdG8gdXNlIGdldENvbXBvbmVudE5hbWVGcm9tRmliZXIoKSBpbnN0ZWFkLlxuXG5cbmZ1bmN0aW9uIGdldENvbXBvbmVudE5hbWVGcm9tVHlwZSh0eXBlKSB7XG4gIGlmICh0eXBlID09IG51bGwpIHtcbiAgICAvLyBIb3N0IHJvb3QsIHRleHQgbm9kZSBvciBqdXN0IGludmFsaWQgdHlwZS5cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHtcbiAgICBpZiAodHlwZW9mIHR5cGUudGFnID09PSAnbnVtYmVyJykge1xuICAgICAgZXJyb3IoJ1JlY2VpdmVkIGFuIHVuZXhwZWN0ZWQgb2JqZWN0IGluIGdldENvbXBvbmVudE5hbWVGcm9tVHlwZSgpLiAnICsgJ1RoaXMgaXMgbGlrZWx5IGEgYnVnIGluIFJlYWN0LiBQbGVhc2UgZmlsZSBhbiBpc3N1ZS4nKTtcbiAgICB9XG4gIH1cblxuICBpZiAodHlwZW9mIHR5cGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gdHlwZS5kaXNwbGF5TmFtZSB8fCB0eXBlLm5hbWUgfHwgbnVsbDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgdHlwZSA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gdHlwZTtcbiAgfVxuXG4gIHN3aXRjaCAodHlwZSkge1xuICAgIGNhc2UgUkVBQ1RfRlJBR01FTlRfVFlQRTpcbiAgICAgIHJldHVybiAnRnJhZ21lbnQnO1xuXG4gICAgY2FzZSBSRUFDVF9QT1JUQUxfVFlQRTpcbiAgICAgIHJldHVybiAnUG9ydGFsJztcblxuICAgIGNhc2UgUkVBQ1RfUFJPRklMRVJfVFlQRTpcbiAgICAgIHJldHVybiAnUHJvZmlsZXInO1xuXG4gICAgY2FzZSBSRUFDVF9TVFJJQ1RfTU9ERV9UWVBFOlxuICAgICAgcmV0dXJuICdTdHJpY3RNb2RlJztcblxuICAgIGNhc2UgUkVBQ1RfU1VTUEVOU0VfVFlQRTpcbiAgICAgIHJldHVybiAnU3VzcGVuc2UnO1xuXG4gICAgY2FzZSBSRUFDVF9TVVNQRU5TRV9MSVNUX1RZUEU6XG4gICAgICByZXR1cm4gJ1N1c3BlbnNlTGlzdCc7XG5cbiAgfVxuXG4gIGlmICh0eXBlb2YgdHlwZSA9PT0gJ29iamVjdCcpIHtcbiAgICBzd2l0Y2ggKHR5cGUuJCR0eXBlb2YpIHtcbiAgICAgIGNhc2UgUkVBQ1RfQ09OVEVYVF9UWVBFOlxuICAgICAgICB2YXIgY29udGV4dCA9IHR5cGU7XG4gICAgICAgIHJldHVybiBnZXRDb250ZXh0TmFtZShjb250ZXh0KSArICcuQ29uc3VtZXInO1xuXG4gICAgICBjYXNlIFJFQUNUX1BST1ZJREVSX1RZUEU6XG4gICAgICAgIHZhciBwcm92aWRlciA9IHR5cGU7XG4gICAgICAgIHJldHVybiBnZXRDb250ZXh0TmFtZShwcm92aWRlci5fY29udGV4dCkgKyAnLlByb3ZpZGVyJztcblxuICAgICAgY2FzZSBSRUFDVF9GT1JXQVJEX1JFRl9UWVBFOlxuICAgICAgICByZXR1cm4gZ2V0V3JhcHBlZE5hbWUodHlwZSwgdHlwZS5yZW5kZXIsICdGb3J3YXJkUmVmJyk7XG5cbiAgICAgIGNhc2UgUkVBQ1RfTUVNT19UWVBFOlxuICAgICAgICB2YXIgb3V0ZXJOYW1lID0gdHlwZS5kaXNwbGF5TmFtZSB8fCBudWxsO1xuXG4gICAgICAgIGlmIChvdXRlck5hbWUgIT09IG51bGwpIHtcbiAgICAgICAgICByZXR1cm4gb3V0ZXJOYW1lO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGdldENvbXBvbmVudE5hbWVGcm9tVHlwZSh0eXBlLnR5cGUpIHx8ICdNZW1vJztcblxuICAgICAgY2FzZSBSRUFDVF9MQVpZX1RZUEU6XG4gICAgICAgIHtcbiAgICAgICAgICB2YXIgbGF6eUNvbXBvbmVudCA9IHR5cGU7XG4gICAgICAgICAgdmFyIHBheWxvYWQgPSBsYXp5Q29tcG9uZW50Ll9wYXlsb2FkO1xuICAgICAgICAgIHZhciBpbml0ID0gbGF6eUNvbXBvbmVudC5faW5pdDtcblxuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gZ2V0Q29tcG9uZW50TmFtZUZyb21UeXBlKGluaXQocGF5bG9hZCkpO1xuICAgICAgICAgIH0gY2F0Y2ggKHgpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tZmFsbHRocm91Z2hcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn1cblxudmFyIGFzc2lnbiA9IE9iamVjdC5hc3NpZ247XG5cbi8vIEhlbHBlcnMgdG8gcGF0Y2ggY29uc29sZS5sb2dzIHRvIGF2b2lkIGxvZ2dpbmcgZHVyaW5nIHNpZGUtZWZmZWN0IGZyZWVcbi8vIHJlcGxheWluZyBvbiByZW5kZXIgZnVuY3Rpb24uIFRoaXMgY3VycmVudGx5IG9ubHkgcGF0Y2hlcyB0aGUgb2JqZWN0XG4vLyBsYXppbHkgd2hpY2ggd29uJ3QgY292ZXIgaWYgdGhlIGxvZyBmdW5jdGlvbiB3YXMgZXh0cmFjdGVkIGVhZ2VybHkuXG4vLyBXZSBjb3VsZCBhbHNvIGVhZ2VybHkgcGF0Y2ggdGhlIG1ldGhvZC5cbnZhciBkaXNhYmxlZERlcHRoID0gMDtcbnZhciBwcmV2TG9nO1xudmFyIHByZXZJbmZvO1xudmFyIHByZXZXYXJuO1xudmFyIHByZXZFcnJvcjtcbnZhciBwcmV2R3JvdXA7XG52YXIgcHJldkdyb3VwQ29sbGFwc2VkO1xudmFyIHByZXZHcm91cEVuZDtcblxuZnVuY3Rpb24gZGlzYWJsZWRMb2coKSB7fVxuXG5kaXNhYmxlZExvZy5fX3JlYWN0RGlzYWJsZWRMb2cgPSB0cnVlO1xuZnVuY3Rpb24gZGlzYWJsZUxvZ3MoKSB7XG4gIHtcbiAgICBpZiAoZGlzYWJsZWREZXB0aCA9PT0gMCkge1xuICAgICAgLyogZXNsaW50LWRpc2FibGUgcmVhY3QtaW50ZXJuYWwvbm8tcHJvZHVjdGlvbi1sb2dnaW5nICovXG4gICAgICBwcmV2TG9nID0gY29uc29sZS5sb2c7XG4gICAgICBwcmV2SW5mbyA9IGNvbnNvbGUuaW5mbztcbiAgICAgIHByZXZXYXJuID0gY29uc29sZS53YXJuO1xuICAgICAgcHJldkVycm9yID0gY29uc29sZS5lcnJvcjtcbiAgICAgIHByZXZHcm91cCA9IGNvbnNvbGUuZ3JvdXA7XG4gICAgICBwcmV2R3JvdXBDb2xsYXBzZWQgPSBjb25zb2xlLmdyb3VwQ29sbGFwc2VkO1xuICAgICAgcHJldkdyb3VwRW5kID0gY29uc29sZS5ncm91cEVuZDsgLy8gaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0L2lzc3Vlcy8xOTA5OVxuXG4gICAgICB2YXIgcHJvcHMgPSB7XG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgdmFsdWU6IGRpc2FibGVkTG9nLFxuICAgICAgICB3cml0YWJsZTogdHJ1ZVxuICAgICAgfTsgLy8gJEZsb3dGaXhNZSBGbG93IHRoaW5rcyBjb25zb2xlIGlzIGltbXV0YWJsZS5cblxuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoY29uc29sZSwge1xuICAgICAgICBpbmZvOiBwcm9wcyxcbiAgICAgICAgbG9nOiBwcm9wcyxcbiAgICAgICAgd2FybjogcHJvcHMsXG4gICAgICAgIGVycm9yOiBwcm9wcyxcbiAgICAgICAgZ3JvdXA6IHByb3BzLFxuICAgICAgICBncm91cENvbGxhcHNlZDogcHJvcHMsXG4gICAgICAgIGdyb3VwRW5kOiBwcm9wc1xuICAgICAgfSk7XG4gICAgICAvKiBlc2xpbnQtZW5hYmxlIHJlYWN0LWludGVybmFsL25vLXByb2R1Y3Rpb24tbG9nZ2luZyAqL1xuICAgIH1cblxuICAgIGRpc2FibGVkRGVwdGgrKztcbiAgfVxufVxuZnVuY3Rpb24gcmVlbmFibGVMb2dzKCkge1xuICB7XG4gICAgZGlzYWJsZWREZXB0aC0tO1xuXG4gICAgaWYgKGRpc2FibGVkRGVwdGggPT09IDApIHtcbiAgICAgIC8qIGVzbGludC1kaXNhYmxlIHJlYWN0LWludGVybmFsL25vLXByb2R1Y3Rpb24tbG9nZ2luZyAqL1xuICAgICAgdmFyIHByb3BzID0ge1xuICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgICB9OyAvLyAkRmxvd0ZpeE1lIEZsb3cgdGhpbmtzIGNvbnNvbGUgaXMgaW1tdXRhYmxlLlxuXG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhjb25zb2xlLCB7XG4gICAgICAgIGxvZzogYXNzaWduKHt9LCBwcm9wcywge1xuICAgICAgICAgIHZhbHVlOiBwcmV2TG9nXG4gICAgICAgIH0pLFxuICAgICAgICBpbmZvOiBhc3NpZ24oe30sIHByb3BzLCB7XG4gICAgICAgICAgdmFsdWU6IHByZXZJbmZvXG4gICAgICAgIH0pLFxuICAgICAgICB3YXJuOiBhc3NpZ24oe30sIHByb3BzLCB7XG4gICAgICAgICAgdmFsdWU6IHByZXZXYXJuXG4gICAgICAgIH0pLFxuICAgICAgICBlcnJvcjogYXNzaWduKHt9LCBwcm9wcywge1xuICAgICAgICAgIHZhbHVlOiBwcmV2RXJyb3JcbiAgICAgICAgfSksXG4gICAgICAgIGdyb3VwOiBhc3NpZ24oe30sIHByb3BzLCB7XG4gICAgICAgICAgdmFsdWU6IHByZXZHcm91cFxuICAgICAgICB9KSxcbiAgICAgICAgZ3JvdXBDb2xsYXBzZWQ6IGFzc2lnbih7fSwgcHJvcHMsIHtcbiAgICAgICAgICB2YWx1ZTogcHJldkdyb3VwQ29sbGFwc2VkXG4gICAgICAgIH0pLFxuICAgICAgICBncm91cEVuZDogYXNzaWduKHt9LCBwcm9wcywge1xuICAgICAgICAgIHZhbHVlOiBwcmV2R3JvdXBFbmRcbiAgICAgICAgfSlcbiAgICAgIH0pO1xuICAgICAgLyogZXNsaW50LWVuYWJsZSByZWFjdC1pbnRlcm5hbC9uby1wcm9kdWN0aW9uLWxvZ2dpbmcgKi9cbiAgICB9XG5cbiAgICBpZiAoZGlzYWJsZWREZXB0aCA8IDApIHtcbiAgICAgIGVycm9yKCdkaXNhYmxlZERlcHRoIGZlbGwgYmVsb3cgemVyby4gJyArICdUaGlzIGlzIGEgYnVnIGluIFJlYWN0LiBQbGVhc2UgZmlsZSBhbiBpc3N1ZS4nKTtcbiAgICB9XG4gIH1cbn1cblxudmFyIFJlYWN0Q3VycmVudERpc3BhdGNoZXIgPSBSZWFjdFNoYXJlZEludGVybmFscy5SZWFjdEN1cnJlbnREaXNwYXRjaGVyO1xudmFyIHByZWZpeDtcbmZ1bmN0aW9uIGRlc2NyaWJlQnVpbHRJbkNvbXBvbmVudEZyYW1lKG5hbWUsIHNvdXJjZSwgb3duZXJGbikge1xuICB7XG4gICAgaWYgKHByZWZpeCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAvLyBFeHRyYWN0IHRoZSBWTSBzcGVjaWZpYyBwcmVmaXggdXNlZCBieSBlYWNoIGxpbmUuXG4gICAgICB0cnkge1xuICAgICAgICB0aHJvdyBFcnJvcigpO1xuICAgICAgfSBjYXRjaCAoeCkge1xuICAgICAgICB2YXIgbWF0Y2ggPSB4LnN0YWNrLnRyaW0oKS5tYXRjaCgvXFxuKCAqKGF0ICk/KS8pO1xuICAgICAgICBwcmVmaXggPSBtYXRjaCAmJiBtYXRjaFsxXSB8fCAnJztcbiAgICAgIH1cbiAgICB9IC8vIFdlIHVzZSB0aGUgcHJlZml4IHRvIGVuc3VyZSBvdXIgc3RhY2tzIGxpbmUgdXAgd2l0aCBuYXRpdmUgc3RhY2sgZnJhbWVzLlxuXG5cbiAgICByZXR1cm4gJ1xcbicgKyBwcmVmaXggKyBuYW1lO1xuICB9XG59XG52YXIgcmVlbnRyeSA9IGZhbHNlO1xudmFyIGNvbXBvbmVudEZyYW1lQ2FjaGU7XG5cbntcbiAgdmFyIFBvc3NpYmx5V2Vha01hcCA9IHR5cGVvZiBXZWFrTWFwID09PSAnZnVuY3Rpb24nID8gV2Vha01hcCA6IE1hcDtcbiAgY29tcG9uZW50RnJhbWVDYWNoZSA9IG5ldyBQb3NzaWJseVdlYWtNYXAoKTtcbn1cblxuZnVuY3Rpb24gZGVzY3JpYmVOYXRpdmVDb21wb25lbnRGcmFtZShmbiwgY29uc3RydWN0KSB7XG4gIC8vIElmIHNvbWV0aGluZyBhc2tlZCBmb3IgYSBzdGFjayBpbnNpZGUgYSBmYWtlIHJlbmRlciwgaXQgc2hvdWxkIGdldCBpZ25vcmVkLlxuICBpZiAoICFmbiB8fCByZWVudHJ5KSB7XG4gICAgcmV0dXJuICcnO1xuICB9XG5cbiAge1xuICAgIHZhciBmcmFtZSA9IGNvbXBvbmVudEZyYW1lQ2FjaGUuZ2V0KGZuKTtcblxuICAgIGlmIChmcmFtZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gZnJhbWU7XG4gICAgfVxuICB9XG5cbiAgdmFyIGNvbnRyb2w7XG4gIHJlZW50cnkgPSB0cnVlO1xuICB2YXIgcHJldmlvdXNQcmVwYXJlU3RhY2tUcmFjZSA9IEVycm9yLnByZXBhcmVTdGFja1RyYWNlOyAvLyAkRmxvd0ZpeE1lIEl0IGRvZXMgYWNjZXB0IHVuZGVmaW5lZC5cblxuICBFcnJvci5wcmVwYXJlU3RhY2tUcmFjZSA9IHVuZGVmaW5lZDtcbiAgdmFyIHByZXZpb3VzRGlzcGF0Y2hlcjtcblxuICB7XG4gICAgcHJldmlvdXNEaXNwYXRjaGVyID0gUmVhY3RDdXJyZW50RGlzcGF0Y2hlci5jdXJyZW50OyAvLyBTZXQgdGhlIGRpc3BhdGNoZXIgaW4gREVWIGJlY2F1c2UgdGhpcyBtaWdodCBiZSBjYWxsIGluIHRoZSByZW5kZXIgZnVuY3Rpb25cbiAgICAvLyBmb3Igd2FybmluZ3MuXG5cbiAgICBSZWFjdEN1cnJlbnREaXNwYXRjaGVyLmN1cnJlbnQgPSBudWxsO1xuICAgIGRpc2FibGVMb2dzKCk7XG4gIH1cblxuICB0cnkge1xuICAgIC8vIFRoaXMgc2hvdWxkIHRocm93LlxuICAgIGlmIChjb25zdHJ1Y3QpIHtcbiAgICAgIC8vIFNvbWV0aGluZyBzaG91bGQgYmUgc2V0dGluZyB0aGUgcHJvcHMgaW4gdGhlIGNvbnN0cnVjdG9yLlxuICAgICAgdmFyIEZha2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRocm93IEVycm9yKCk7XG4gICAgICB9OyAvLyAkRmxvd0ZpeE1lXG5cblxuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEZha2UucHJvdG90eXBlLCAncHJvcHMnLCB7XG4gICAgICAgIHNldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgIC8vIFdlIHVzZSBhIHRocm93aW5nIHNldHRlciBpbnN0ZWFkIG9mIGZyb3plbiBvciBub24td3JpdGFibGUgcHJvcHNcbiAgICAgICAgICAvLyBiZWNhdXNlIHRoYXQgd29uJ3QgdGhyb3cgaW4gYSBub24tc3RyaWN0IG1vZGUgZnVuY3Rpb24uXG4gICAgICAgICAgdGhyb3cgRXJyb3IoKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gJ29iamVjdCcgJiYgUmVmbGVjdC5jb25zdHJ1Y3QpIHtcbiAgICAgICAgLy8gV2UgY29uc3RydWN0IGEgZGlmZmVyZW50IGNvbnRyb2wgZm9yIHRoaXMgY2FzZSB0byBpbmNsdWRlIGFueSBleHRyYVxuICAgICAgICAvLyBmcmFtZXMgYWRkZWQgYnkgdGhlIGNvbnN0cnVjdCBjYWxsLlxuICAgICAgICB0cnkge1xuICAgICAgICAgIFJlZmxlY3QuY29uc3RydWN0KEZha2UsIFtdKTtcbiAgICAgICAgfSBjYXRjaCAoeCkge1xuICAgICAgICAgIGNvbnRyb2wgPSB4O1xuICAgICAgICB9XG5cbiAgICAgICAgUmVmbGVjdC5jb25zdHJ1Y3QoZm4sIFtdLCBGYWtlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgRmFrZS5jYWxsKCk7XG4gICAgICAgIH0gY2F0Y2ggKHgpIHtcbiAgICAgICAgICBjb250cm9sID0geDtcbiAgICAgICAgfVxuXG4gICAgICAgIGZuLmNhbGwoRmFrZS5wcm90b3R5cGUpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB0cnkge1xuICAgICAgICB0aHJvdyBFcnJvcigpO1xuICAgICAgfSBjYXRjaCAoeCkge1xuICAgICAgICBjb250cm9sID0geDtcbiAgICAgIH1cblxuICAgICAgZm4oKTtcbiAgICB9XG4gIH0gY2F0Y2ggKHNhbXBsZSkge1xuICAgIC8vIFRoaXMgaXMgaW5saW5lZCBtYW51YWxseSBiZWNhdXNlIGNsb3N1cmUgZG9lc24ndCBkbyBpdCBmb3IgdXMuXG4gICAgaWYgKHNhbXBsZSAmJiBjb250cm9sICYmIHR5cGVvZiBzYW1wbGUuc3RhY2sgPT09ICdzdHJpbmcnKSB7XG4gICAgICAvLyBUaGlzIGV4dHJhY3RzIHRoZSBmaXJzdCBmcmFtZSBmcm9tIHRoZSBzYW1wbGUgdGhhdCBpc24ndCBhbHNvIGluIHRoZSBjb250cm9sLlxuICAgICAgLy8gU2tpcHBpbmcgb25lIGZyYW1lIHRoYXQgd2UgYXNzdW1lIGlzIHRoZSBmcmFtZSB0aGF0IGNhbGxzIHRoZSB0d28uXG4gICAgICB2YXIgc2FtcGxlTGluZXMgPSBzYW1wbGUuc3RhY2suc3BsaXQoJ1xcbicpO1xuICAgICAgdmFyIGNvbnRyb2xMaW5lcyA9IGNvbnRyb2wuc3RhY2suc3BsaXQoJ1xcbicpO1xuICAgICAgdmFyIHMgPSBzYW1wbGVMaW5lcy5sZW5ndGggLSAxO1xuICAgICAgdmFyIGMgPSBjb250cm9sTGluZXMubGVuZ3RoIC0gMTtcblxuICAgICAgd2hpbGUgKHMgPj0gMSAmJiBjID49IDAgJiYgc2FtcGxlTGluZXNbc10gIT09IGNvbnRyb2xMaW5lc1tjXSkge1xuICAgICAgICAvLyBXZSBleHBlY3QgYXQgbGVhc3Qgb25lIHN0YWNrIGZyYW1lIHRvIGJlIHNoYXJlZC5cbiAgICAgICAgLy8gVHlwaWNhbGx5IHRoaXMgd2lsbCBiZSB0aGUgcm9vdCBtb3N0IG9uZS4gSG93ZXZlciwgc3RhY2sgZnJhbWVzIG1heSBiZVxuICAgICAgICAvLyBjdXQgb2ZmIGR1ZSB0byBtYXhpbXVtIHN0YWNrIGxpbWl0cy4gSW4gdGhpcyBjYXNlLCBvbmUgbWF5YmUgY3V0IG9mZlxuICAgICAgICAvLyBlYXJsaWVyIHRoYW4gdGhlIG90aGVyLiBXZSBhc3N1bWUgdGhhdCB0aGUgc2FtcGxlIGlzIGxvbmdlciBvciB0aGUgc2FtZVxuICAgICAgICAvLyBhbmQgdGhlcmUgZm9yIGN1dCBvZmYgZWFybGllci4gU28gd2Ugc2hvdWxkIGZpbmQgdGhlIHJvb3QgbW9zdCBmcmFtZSBpblxuICAgICAgICAvLyB0aGUgc2FtcGxlIHNvbWV3aGVyZSBpbiB0aGUgY29udHJvbC5cbiAgICAgICAgYy0tO1xuICAgICAgfVxuXG4gICAgICBmb3IgKDsgcyA+PSAxICYmIGMgPj0gMDsgcy0tLCBjLS0pIHtcbiAgICAgICAgLy8gTmV4dCB3ZSBmaW5kIHRoZSBmaXJzdCBvbmUgdGhhdCBpc24ndCB0aGUgc2FtZSB3aGljaCBzaG91bGQgYmUgdGhlXG4gICAgICAgIC8vIGZyYW1lIHRoYXQgY2FsbGVkIG91ciBzYW1wbGUgZnVuY3Rpb24gYW5kIHRoZSBjb250cm9sLlxuICAgICAgICBpZiAoc2FtcGxlTGluZXNbc10gIT09IGNvbnRyb2xMaW5lc1tjXSkge1xuICAgICAgICAgIC8vIEluIFY4LCB0aGUgZmlyc3QgbGluZSBpcyBkZXNjcmliaW5nIHRoZSBtZXNzYWdlIGJ1dCBvdGhlciBWTXMgZG9uJ3QuXG4gICAgICAgICAgLy8gSWYgd2UncmUgYWJvdXQgdG8gcmV0dXJuIHRoZSBmaXJzdCBsaW5lLCBhbmQgdGhlIGNvbnRyb2wgaXMgYWxzbyBvbiB0aGUgc2FtZVxuICAgICAgICAgIC8vIGxpbmUsIHRoYXQncyBhIHByZXR0eSBnb29kIGluZGljYXRvciB0aGF0IG91ciBzYW1wbGUgdGhyZXcgYXQgc2FtZSBsaW5lIGFzXG4gICAgICAgICAgLy8gdGhlIGNvbnRyb2wuIEkuZS4gYmVmb3JlIHdlIGVudGVyZWQgdGhlIHNhbXBsZSBmcmFtZS4gU28gd2UgaWdub3JlIHRoaXMgcmVzdWx0LlxuICAgICAgICAgIC8vIFRoaXMgY2FuIGhhcHBlbiBpZiB5b3UgcGFzc2VkIGEgY2xhc3MgdG8gZnVuY3Rpb24gY29tcG9uZW50LCBvciBub24tZnVuY3Rpb24uXG4gICAgICAgICAgaWYgKHMgIT09IDEgfHwgYyAhPT0gMSkge1xuICAgICAgICAgICAgZG8ge1xuICAgICAgICAgICAgICBzLS07XG4gICAgICAgICAgICAgIGMtLTsgLy8gV2UgbWF5IHN0aWxsIGhhdmUgc2ltaWxhciBpbnRlcm1lZGlhdGUgZnJhbWVzIGZyb20gdGhlIGNvbnN0cnVjdCBjYWxsLlxuICAgICAgICAgICAgICAvLyBUaGUgbmV4dCBvbmUgdGhhdCBpc24ndCB0aGUgc2FtZSBzaG91bGQgYmUgb3VyIG1hdGNoIHRob3VnaC5cblxuICAgICAgICAgICAgICBpZiAoYyA8IDAgfHwgc2FtcGxlTGluZXNbc10gIT09IGNvbnRyb2xMaW5lc1tjXSkge1xuICAgICAgICAgICAgICAgIC8vIFY4IGFkZHMgYSBcIm5ld1wiIHByZWZpeCBmb3IgbmF0aXZlIGNsYXNzZXMuIExldCdzIHJlbW92ZSBpdCB0byBtYWtlIGl0IHByZXR0aWVyLlxuICAgICAgICAgICAgICAgIHZhciBfZnJhbWUgPSAnXFxuJyArIHNhbXBsZUxpbmVzW3NdLnJlcGxhY2UoJyBhdCBuZXcgJywgJyBhdCAnKTsgLy8gSWYgb3VyIGNvbXBvbmVudCBmcmFtZSBpcyBsYWJlbGVkIFwiPGFub255bW91cz5cIlxuICAgICAgICAgICAgICAgIC8vIGJ1dCB3ZSBoYXZlIGEgdXNlci1wcm92aWRlZCBcImRpc3BsYXlOYW1lXCJcbiAgICAgICAgICAgICAgICAvLyBzcGxpY2UgaXQgaW4gdG8gbWFrZSB0aGUgc3RhY2sgbW9yZSByZWFkYWJsZS5cblxuXG4gICAgICAgICAgICAgICAgaWYgKGZuLmRpc3BsYXlOYW1lICYmIF9mcmFtZS5pbmNsdWRlcygnPGFub255bW91cz4nKSkge1xuICAgICAgICAgICAgICAgICAgX2ZyYW1lID0gX2ZyYW1lLnJlcGxhY2UoJzxhbm9ueW1vdXM+JywgZm4uZGlzcGxheU5hbWUpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZm4gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgY29tcG9uZW50RnJhbWVDYWNoZS5zZXQoZm4sIF9mcmFtZSk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSAvLyBSZXR1cm4gdGhlIGxpbmUgd2UgZm91bmQuXG5cblxuICAgICAgICAgICAgICAgIHJldHVybiBfZnJhbWU7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gd2hpbGUgKHMgPj0gMSAmJiBjID49IDApO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9IGZpbmFsbHkge1xuICAgIHJlZW50cnkgPSBmYWxzZTtcblxuICAgIHtcbiAgICAgIFJlYWN0Q3VycmVudERpc3BhdGNoZXIuY3VycmVudCA9IHByZXZpb3VzRGlzcGF0Y2hlcjtcbiAgICAgIHJlZW5hYmxlTG9ncygpO1xuICAgIH1cblxuICAgIEVycm9yLnByZXBhcmVTdGFja1RyYWNlID0gcHJldmlvdXNQcmVwYXJlU3RhY2tUcmFjZTtcbiAgfSAvLyBGYWxsYmFjayB0byBqdXN0IHVzaW5nIHRoZSBuYW1lIGlmIHdlIGNvdWxkbid0IG1ha2UgaXQgdGhyb3cuXG5cblxuICB2YXIgbmFtZSA9IGZuID8gZm4uZGlzcGxheU5hbWUgfHwgZm4ubmFtZSA6ICcnO1xuICB2YXIgc3ludGhldGljRnJhbWUgPSBuYW1lID8gZGVzY3JpYmVCdWlsdEluQ29tcG9uZW50RnJhbWUobmFtZSkgOiAnJztcblxuICB7XG4gICAgaWYgKHR5cGVvZiBmbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgY29tcG9uZW50RnJhbWVDYWNoZS5zZXQoZm4sIHN5bnRoZXRpY0ZyYW1lKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gc3ludGhldGljRnJhbWU7XG59XG5mdW5jdGlvbiBkZXNjcmliZUZ1bmN0aW9uQ29tcG9uZW50RnJhbWUoZm4sIHNvdXJjZSwgb3duZXJGbikge1xuICB7XG4gICAgcmV0dXJuIGRlc2NyaWJlTmF0aXZlQ29tcG9uZW50RnJhbWUoZm4sIGZhbHNlKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBzaG91bGRDb25zdHJ1Y3QoQ29tcG9uZW50KSB7XG4gIHZhciBwcm90b3R5cGUgPSBDb21wb25lbnQucHJvdG90eXBlO1xuICByZXR1cm4gISEocHJvdG90eXBlICYmIHByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50KTtcbn1cblxuZnVuY3Rpb24gZGVzY3JpYmVVbmtub3duRWxlbWVudFR5cGVGcmFtZUluREVWKHR5cGUsIHNvdXJjZSwgb3duZXJGbikge1xuXG4gIGlmICh0eXBlID09IG51bGwpIHtcbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICBpZiAodHlwZW9mIHR5cGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICB7XG4gICAgICByZXR1cm4gZGVzY3JpYmVOYXRpdmVDb21wb25lbnRGcmFtZSh0eXBlLCBzaG91bGRDb25zdHJ1Y3QodHlwZSkpO1xuICAgIH1cbiAgfVxuXG4gIGlmICh0eXBlb2YgdHlwZSA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gZGVzY3JpYmVCdWlsdEluQ29tcG9uZW50RnJhbWUodHlwZSk7XG4gIH1cblxuICBzd2l0Y2ggKHR5cGUpIHtcbiAgICBjYXNlIFJFQUNUX1NVU1BFTlNFX1RZUEU6XG4gICAgICByZXR1cm4gZGVzY3JpYmVCdWlsdEluQ29tcG9uZW50RnJhbWUoJ1N1c3BlbnNlJyk7XG5cbiAgICBjYXNlIFJFQUNUX1NVU1BFTlNFX0xJU1RfVFlQRTpcbiAgICAgIHJldHVybiBkZXNjcmliZUJ1aWx0SW5Db21wb25lbnRGcmFtZSgnU3VzcGVuc2VMaXN0Jyk7XG4gIH1cblxuICBpZiAodHlwZW9mIHR5cGUgPT09ICdvYmplY3QnKSB7XG4gICAgc3dpdGNoICh0eXBlLiQkdHlwZW9mKSB7XG4gICAgICBjYXNlIFJFQUNUX0ZPUldBUkRfUkVGX1RZUEU6XG4gICAgICAgIHJldHVybiBkZXNjcmliZUZ1bmN0aW9uQ29tcG9uZW50RnJhbWUodHlwZS5yZW5kZXIpO1xuXG4gICAgICBjYXNlIFJFQUNUX01FTU9fVFlQRTpcbiAgICAgICAgLy8gTWVtbyBtYXkgY29udGFpbiBhbnkgY29tcG9uZW50IHR5cGUgc28gd2UgcmVjdXJzaXZlbHkgcmVzb2x2ZSBpdC5cbiAgICAgICAgcmV0dXJuIGRlc2NyaWJlVW5rbm93bkVsZW1lbnRUeXBlRnJhbWVJbkRFVih0eXBlLnR5cGUsIHNvdXJjZSwgb3duZXJGbik7XG5cbiAgICAgIGNhc2UgUkVBQ1RfTEFaWV9UWVBFOlxuICAgICAgICB7XG4gICAgICAgICAgdmFyIGxhenlDb21wb25lbnQgPSB0eXBlO1xuICAgICAgICAgIHZhciBwYXlsb2FkID0gbGF6eUNvbXBvbmVudC5fcGF5bG9hZDtcbiAgICAgICAgICB2YXIgaW5pdCA9IGxhenlDb21wb25lbnQuX2luaXQ7XG5cbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gTGF6eSBtYXkgY29udGFpbiBhbnkgY29tcG9uZW50IHR5cGUgc28gd2UgcmVjdXJzaXZlbHkgcmVzb2x2ZSBpdC5cbiAgICAgICAgICAgIHJldHVybiBkZXNjcmliZVVua25vd25FbGVtZW50VHlwZUZyYW1lSW5ERVYoaW5pdChwYXlsb2FkKSwgc291cmNlLCBvd25lckZuKTtcbiAgICAgICAgICB9IGNhdGNoICh4KSB7fVxuICAgICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuICcnO1xufVxuXG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuXG52YXIgbG9nZ2VkVHlwZUZhaWx1cmVzID0ge307XG52YXIgUmVhY3REZWJ1Z0N1cnJlbnRGcmFtZSA9IFJlYWN0U2hhcmVkSW50ZXJuYWxzLlJlYWN0RGVidWdDdXJyZW50RnJhbWU7XG5cbmZ1bmN0aW9uIHNldEN1cnJlbnRseVZhbGlkYXRpbmdFbGVtZW50KGVsZW1lbnQpIHtcbiAge1xuICAgIGlmIChlbGVtZW50KSB7XG4gICAgICB2YXIgb3duZXIgPSBlbGVtZW50Ll9vd25lcjtcbiAgICAgIHZhciBzdGFjayA9IGRlc2NyaWJlVW5rbm93bkVsZW1lbnRUeXBlRnJhbWVJbkRFVihlbGVtZW50LnR5cGUsIGVsZW1lbnQuX3NvdXJjZSwgb3duZXIgPyBvd25lci50eXBlIDogbnVsbCk7XG4gICAgICBSZWFjdERlYnVnQ3VycmVudEZyYW1lLnNldEV4dHJhU3RhY2tGcmFtZShzdGFjayk7XG4gICAgfSBlbHNlIHtcbiAgICAgIFJlYWN0RGVidWdDdXJyZW50RnJhbWUuc2V0RXh0cmFTdGFja0ZyYW1lKG51bGwpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBjaGVja1Byb3BUeXBlcyh0eXBlU3BlY3MsIHZhbHVlcywgbG9jYXRpb24sIGNvbXBvbmVudE5hbWUsIGVsZW1lbnQpIHtcbiAge1xuICAgIC8vICRGbG93Rml4TWUgVGhpcyBpcyBva2F5IGJ1dCBGbG93IGRvZXNuJ3Qga25vdyBpdC5cbiAgICB2YXIgaGFzID0gRnVuY3Rpb24uY2FsbC5iaW5kKGhhc093blByb3BlcnR5KTtcblxuICAgIGZvciAodmFyIHR5cGVTcGVjTmFtZSBpbiB0eXBlU3BlY3MpIHtcbiAgICAgIGlmIChoYXModHlwZVNwZWNzLCB0eXBlU3BlY05hbWUpKSB7XG4gICAgICAgIHZhciBlcnJvciQxID0gdm9pZCAwOyAvLyBQcm9wIHR5cGUgdmFsaWRhdGlvbiBtYXkgdGhyb3cuIEluIGNhc2UgdGhleSBkbywgd2UgZG9uJ3Qgd2FudCB0b1xuICAgICAgICAvLyBmYWlsIHRoZSByZW5kZXIgcGhhc2Ugd2hlcmUgaXQgZGlkbid0IGZhaWwgYmVmb3JlLiBTbyB3ZSBsb2cgaXQuXG4gICAgICAgIC8vIEFmdGVyIHRoZXNlIGhhdmUgYmVlbiBjbGVhbmVkIHVwLCB3ZSdsbCBsZXQgdGhlbSB0aHJvdy5cblxuICAgICAgICB0cnkge1xuICAgICAgICAgIC8vIFRoaXMgaXMgaW50ZW50aW9uYWxseSBhbiBpbnZhcmlhbnQgdGhhdCBnZXRzIGNhdWdodC4gSXQncyB0aGUgc2FtZVxuICAgICAgICAgIC8vIGJlaGF2aW9yIGFzIHdpdGhvdXQgdGhpcyBzdGF0ZW1lbnQgZXhjZXB0IHdpdGggYSBiZXR0ZXIgbWVzc2FnZS5cbiAgICAgICAgICBpZiAodHlwZW9mIHR5cGVTcGVjc1t0eXBlU3BlY05hbWVdICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaW50ZXJuYWwvcHJvZC1lcnJvci1jb2Rlc1xuICAgICAgICAgICAgdmFyIGVyciA9IEVycm9yKChjb21wb25lbnROYW1lIHx8ICdSZWFjdCBjbGFzcycpICsgJzogJyArIGxvY2F0aW9uICsgJyB0eXBlIGAnICsgdHlwZVNwZWNOYW1lICsgJ2AgaXMgaW52YWxpZDsgJyArICdpdCBtdXN0IGJlIGEgZnVuY3Rpb24sIHVzdWFsbHkgZnJvbSB0aGUgYHByb3AtdHlwZXNgIHBhY2thZ2UsIGJ1dCByZWNlaXZlZCBgJyArIHR5cGVvZiB0eXBlU3BlY3NbdHlwZVNwZWNOYW1lXSArICdgLicgKyAnVGhpcyBvZnRlbiBoYXBwZW5zIGJlY2F1c2Ugb2YgdHlwb3Mgc3VjaCBhcyBgUHJvcFR5cGVzLmZ1bmN0aW9uYCBpbnN0ZWFkIG9mIGBQcm9wVHlwZXMuZnVuY2AuJyk7XG4gICAgICAgICAgICBlcnIubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBlcnJvciQxID0gdHlwZVNwZWNzW3R5cGVTcGVjTmFtZV0odmFsdWVzLCB0eXBlU3BlY05hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBudWxsLCAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnKTtcbiAgICAgICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgICAgICBlcnJvciQxID0gZXg7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZXJyb3IkMSAmJiAhKGVycm9yJDEgaW5zdGFuY2VvZiBFcnJvcikpIHtcbiAgICAgICAgICBzZXRDdXJyZW50bHlWYWxpZGF0aW5nRWxlbWVudChlbGVtZW50KTtcblxuICAgICAgICAgIGVycm9yKCclczogdHlwZSBzcGVjaWZpY2F0aW9uIG9mICVzJyArICcgYCVzYCBpcyBpbnZhbGlkOyB0aGUgdHlwZSBjaGVja2VyICcgKyAnZnVuY3Rpb24gbXVzdCByZXR1cm4gYG51bGxgIG9yIGFuIGBFcnJvcmAgYnV0IHJldHVybmVkIGEgJXMuICcgKyAnWW91IG1heSBoYXZlIGZvcmdvdHRlbiB0byBwYXNzIGFuIGFyZ3VtZW50IHRvIHRoZSB0eXBlIGNoZWNrZXIgJyArICdjcmVhdG9yIChhcnJheU9mLCBpbnN0YW5jZU9mLCBvYmplY3RPZiwgb25lT2YsIG9uZU9mVHlwZSwgYW5kICcgKyAnc2hhcGUgYWxsIHJlcXVpcmUgYW4gYXJndW1lbnQpLicsIGNvbXBvbmVudE5hbWUgfHwgJ1JlYWN0IGNsYXNzJywgbG9jYXRpb24sIHR5cGVTcGVjTmFtZSwgdHlwZW9mIGVycm9yJDEpO1xuXG4gICAgICAgICAgc2V0Q3VycmVudGx5VmFsaWRhdGluZ0VsZW1lbnQobnVsbCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZXJyb3IkMSBpbnN0YW5jZW9mIEVycm9yICYmICEoZXJyb3IkMS5tZXNzYWdlIGluIGxvZ2dlZFR5cGVGYWlsdXJlcykpIHtcbiAgICAgICAgICAvLyBPbmx5IG1vbml0b3IgdGhpcyBmYWlsdXJlIG9uY2UgYmVjYXVzZSB0aGVyZSB0ZW5kcyB0byBiZSBhIGxvdCBvZiB0aGVcbiAgICAgICAgICAvLyBzYW1lIGVycm9yLlxuICAgICAgICAgIGxvZ2dlZFR5cGVGYWlsdXJlc1tlcnJvciQxLm1lc3NhZ2VdID0gdHJ1ZTtcbiAgICAgICAgICBzZXRDdXJyZW50bHlWYWxpZGF0aW5nRWxlbWVudChlbGVtZW50KTtcblxuICAgICAgICAgIGVycm9yKCdGYWlsZWQgJXMgdHlwZTogJXMnLCBsb2NhdGlvbiwgZXJyb3IkMS5tZXNzYWdlKTtcblxuICAgICAgICAgIHNldEN1cnJlbnRseVZhbGlkYXRpbmdFbGVtZW50KG51bGwpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbnZhciBpc0FycmF5SW1wbCA9IEFycmF5LmlzQXJyYXk7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1yZWRlY2xhcmVcblxuZnVuY3Rpb24gaXNBcnJheShhKSB7XG4gIHJldHVybiBpc0FycmF5SW1wbChhKTtcbn1cblxuLypcbiAqIFRoZSBgJycgKyB2YWx1ZWAgcGF0dGVybiAodXNlZCBpbiBpbiBwZXJmLXNlbnNpdGl2ZSBjb2RlKSB0aHJvd3MgZm9yIFN5bWJvbFxuICogYW5kIFRlbXBvcmFsLiogdHlwZXMuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvcHVsbC8yMjA2NC5cbiAqXG4gKiBUaGUgZnVuY3Rpb25zIGluIHRoaXMgbW9kdWxlIHdpbGwgdGhyb3cgYW4gZWFzaWVyLXRvLXVuZGVyc3RhbmQsXG4gKiBlYXNpZXItdG8tZGVidWcgZXhjZXB0aW9uIHdpdGggYSBjbGVhciBlcnJvcnMgbWVzc2FnZSBtZXNzYWdlIGV4cGxhaW5pbmcgdGhlXG4gKiBwcm9ibGVtLiAoSW5zdGVhZCBvZiBhIGNvbmZ1c2luZyBleGNlcHRpb24gdGhyb3duIGluc2lkZSB0aGUgaW1wbGVtZW50YXRpb25cbiAqIG9mIHRoZSBgdmFsdWVgIG9iamVjdCkuXG4gKi9cbi8vICRGbG93Rml4TWUgb25seSBjYWxsZWQgaW4gREVWLCBzbyB2b2lkIHJldHVybiBpcyBub3QgcG9zc2libGUuXG5mdW5jdGlvbiB0eXBlTmFtZSh2YWx1ZSkge1xuICB7XG4gICAgLy8gdG9TdHJpbmdUYWcgaXMgbmVlZGVkIGZvciBuYW1lc3BhY2VkIHR5cGVzIGxpa2UgVGVtcG9yYWwuSW5zdGFudFxuICAgIHZhciBoYXNUb1N0cmluZ1RhZyA9IHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiYgU3ltYm9sLnRvU3RyaW5nVGFnO1xuICAgIHZhciB0eXBlID0gaGFzVG9TdHJpbmdUYWcgJiYgdmFsdWVbU3ltYm9sLnRvU3RyaW5nVGFnXSB8fCB2YWx1ZS5jb25zdHJ1Y3Rvci5uYW1lIHx8ICdPYmplY3QnO1xuICAgIHJldHVybiB0eXBlO1xuICB9XG59IC8vICRGbG93Rml4TWUgb25seSBjYWxsZWQgaW4gREVWLCBzbyB2b2lkIHJldHVybiBpcyBub3QgcG9zc2libGUuXG5cblxuZnVuY3Rpb24gd2lsbENvZXJjaW9uVGhyb3codmFsdWUpIHtcbiAge1xuICAgIHRyeSB7XG4gICAgICB0ZXN0U3RyaW5nQ29lcmNpb24odmFsdWUpO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiB0ZXN0U3RyaW5nQ29lcmNpb24odmFsdWUpIHtcbiAgLy8gSWYgeW91IGVuZGVkIHVwIGhlcmUgYnkgZm9sbG93aW5nIGFuIGV4Y2VwdGlvbiBjYWxsIHN0YWNrLCBoZXJlJ3Mgd2hhdCdzXG4gIC8vIGhhcHBlbmVkOiB5b3Ugc3VwcGxpZWQgYW4gb2JqZWN0IG9yIHN5bWJvbCB2YWx1ZSB0byBSZWFjdCAoYXMgYSBwcm9wLCBrZXksXG4gIC8vIERPTSBhdHRyaWJ1dGUsIENTUyBwcm9wZXJ0eSwgc3RyaW5nIHJlZiwgZXRjLikgYW5kIHdoZW4gUmVhY3QgdHJpZWQgdG9cbiAgLy8gY29lcmNlIGl0IHRvIGEgc3RyaW5nIHVzaW5nIGAnJyArIHZhbHVlYCwgYW4gZXhjZXB0aW9uIHdhcyB0aHJvd24uXG4gIC8vXG4gIC8vIFRoZSBtb3N0IGNvbW1vbiB0eXBlcyB0aGF0IHdpbGwgY2F1c2UgdGhpcyBleGNlcHRpb24gYXJlIGBTeW1ib2xgIGluc3RhbmNlc1xuICAvLyBhbmQgVGVtcG9yYWwgb2JqZWN0cyBsaWtlIGBUZW1wb3JhbC5JbnN0YW50YC4gQnV0IGFueSBvYmplY3QgdGhhdCBoYXMgYVxuICAvLyBgdmFsdWVPZmAgb3IgYFtTeW1ib2wudG9QcmltaXRpdmVdYCBtZXRob2QgdGhhdCB0aHJvd3Mgd2lsbCBhbHNvIGNhdXNlIHRoaXNcbiAgLy8gZXhjZXB0aW9uLiAoTGlicmFyeSBhdXRob3JzIGRvIHRoaXMgdG8gcHJldmVudCB1c2VycyBmcm9tIHVzaW5nIGJ1aWx0LWluXG4gIC8vIG51bWVyaWMgb3BlcmF0b3JzIGxpa2UgYCtgIG9yIGNvbXBhcmlzb24gb3BlcmF0b3JzIGxpa2UgYD49YCBiZWNhdXNlIGN1c3RvbVxuICAvLyBtZXRob2RzIGFyZSBuZWVkZWQgdG8gcGVyZm9ybSBhY2N1cmF0ZSBhcml0aG1ldGljIG9yIGNvbXBhcmlzb24uKVxuICAvL1xuICAvLyBUbyBmaXggdGhlIHByb2JsZW0sIGNvZXJjZSB0aGlzIG9iamVjdCBvciBzeW1ib2wgdmFsdWUgdG8gYSBzdHJpbmcgYmVmb3JlXG4gIC8vIHBhc3NpbmcgaXQgdG8gUmVhY3QuIFRoZSBtb3N0IHJlbGlhYmxlIHdheSBpcyB1c3VhbGx5IGBTdHJpbmcodmFsdWUpYC5cbiAgLy9cbiAgLy8gVG8gZmluZCB3aGljaCB2YWx1ZSBpcyB0aHJvd2luZywgY2hlY2sgdGhlIGJyb3dzZXIgb3IgZGVidWdnZXIgY29uc29sZS5cbiAgLy8gQmVmb3JlIHRoaXMgZXhjZXB0aW9uIHdhcyB0aHJvd24sIHRoZXJlIHNob3VsZCBiZSBgY29uc29sZS5lcnJvcmAgb3V0cHV0XG4gIC8vIHRoYXQgc2hvd3MgdGhlIHR5cGUgKFN5bWJvbCwgVGVtcG9yYWwuUGxhaW5EYXRlLCBldGMuKSB0aGF0IGNhdXNlZCB0aGVcbiAgLy8gcHJvYmxlbSBhbmQgaG93IHRoYXQgdHlwZSB3YXMgdXNlZDoga2V5LCBhdHJyaWJ1dGUsIGlucHV0IHZhbHVlIHByb3AsIGV0Yy5cbiAgLy8gSW4gbW9zdCBjYXNlcywgdGhpcyBjb25zb2xlIG91dHB1dCBhbHNvIHNob3dzIHRoZSBjb21wb25lbnQgYW5kIGl0c1xuICAvLyBhbmNlc3RvciBjb21wb25lbnRzIHdoZXJlIHRoZSBleGNlcHRpb24gaGFwcGVuZWQuXG4gIC8vXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC1pbnRlcm5hbC9zYWZlLXN0cmluZy1jb2VyY2lvblxuICByZXR1cm4gJycgKyB2YWx1ZTtcbn1cbmZ1bmN0aW9uIGNoZWNrS2V5U3RyaW5nQ29lcmNpb24odmFsdWUpIHtcbiAge1xuICAgIGlmICh3aWxsQ29lcmNpb25UaHJvdyh2YWx1ZSkpIHtcbiAgICAgIGVycm9yKCdUaGUgcHJvdmlkZWQga2V5IGlzIGFuIHVuc3VwcG9ydGVkIHR5cGUgJXMuJyArICcgVGhpcyB2YWx1ZSBtdXN0IGJlIGNvZXJjZWQgdG8gYSBzdHJpbmcgYmVmb3JlIGJlZm9yZSB1c2luZyBpdCBoZXJlLicsIHR5cGVOYW1lKHZhbHVlKSk7XG5cbiAgICAgIHJldHVybiB0ZXN0U3RyaW5nQ29lcmNpb24odmFsdWUpOyAvLyB0aHJvdyAodG8gaGVscCBjYWxsZXJzIGZpbmQgdHJvdWJsZXNob290aW5nIGNvbW1lbnRzKVxuICAgIH1cbiAgfVxufVxuXG52YXIgUmVhY3RDdXJyZW50T3duZXIgPSBSZWFjdFNoYXJlZEludGVybmFscy5SZWFjdEN1cnJlbnRPd25lcjtcbnZhciBSRVNFUlZFRF9QUk9QUyA9IHtcbiAga2V5OiB0cnVlLFxuICByZWY6IHRydWUsXG4gIF9fc2VsZjogdHJ1ZSxcbiAgX19zb3VyY2U6IHRydWVcbn07XG52YXIgc3BlY2lhbFByb3BLZXlXYXJuaW5nU2hvd247XG52YXIgc3BlY2lhbFByb3BSZWZXYXJuaW5nU2hvd247XG52YXIgZGlkV2FybkFib3V0U3RyaW5nUmVmcztcblxue1xuICBkaWRXYXJuQWJvdXRTdHJpbmdSZWZzID0ge307XG59XG5cbmZ1bmN0aW9uIGhhc1ZhbGlkUmVmKGNvbmZpZykge1xuICB7XG4gICAgaWYgKGhhc093blByb3BlcnR5LmNhbGwoY29uZmlnLCAncmVmJykpIHtcbiAgICAgIHZhciBnZXR0ZXIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGNvbmZpZywgJ3JlZicpLmdldDtcblxuICAgICAgaWYgKGdldHRlciAmJiBnZXR0ZXIuaXNSZWFjdFdhcm5pbmcpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBjb25maWcucmVmICE9PSB1bmRlZmluZWQ7XG59XG5cbmZ1bmN0aW9uIGhhc1ZhbGlkS2V5KGNvbmZpZykge1xuICB7XG4gICAgaWYgKGhhc093blByb3BlcnR5LmNhbGwoY29uZmlnLCAna2V5JykpIHtcbiAgICAgIHZhciBnZXR0ZXIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGNvbmZpZywgJ2tleScpLmdldDtcblxuICAgICAgaWYgKGdldHRlciAmJiBnZXR0ZXIuaXNSZWFjdFdhcm5pbmcpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBjb25maWcua2V5ICE9PSB1bmRlZmluZWQ7XG59XG5cbmZ1bmN0aW9uIHdhcm5JZlN0cmluZ1JlZkNhbm5vdEJlQXV0b0NvbnZlcnRlZChjb25maWcsIHNlbGYpIHtcbiAge1xuICAgIGlmICh0eXBlb2YgY29uZmlnLnJlZiA9PT0gJ3N0cmluZycgJiYgUmVhY3RDdXJyZW50T3duZXIuY3VycmVudCAmJiBzZWxmICYmIFJlYWN0Q3VycmVudE93bmVyLmN1cnJlbnQuc3RhdGVOb2RlICE9PSBzZWxmKSB7XG4gICAgICB2YXIgY29tcG9uZW50TmFtZSA9IGdldENvbXBvbmVudE5hbWVGcm9tVHlwZShSZWFjdEN1cnJlbnRPd25lci5jdXJyZW50LnR5cGUpO1xuXG4gICAgICBpZiAoIWRpZFdhcm5BYm91dFN0cmluZ1JlZnNbY29tcG9uZW50TmFtZV0pIHtcbiAgICAgICAgZXJyb3IoJ0NvbXBvbmVudCBcIiVzXCIgY29udGFpbnMgdGhlIHN0cmluZyByZWYgXCIlc1wiLiAnICsgJ1N1cHBvcnQgZm9yIHN0cmluZyByZWZzIHdpbGwgYmUgcmVtb3ZlZCBpbiBhIGZ1dHVyZSBtYWpvciByZWxlYXNlLiAnICsgJ1RoaXMgY2FzZSBjYW5ub3QgYmUgYXV0b21hdGljYWxseSBjb252ZXJ0ZWQgdG8gYW4gYXJyb3cgZnVuY3Rpb24uICcgKyAnV2UgYXNrIHlvdSB0byBtYW51YWxseSBmaXggdGhpcyBjYXNlIGJ5IHVzaW5nIHVzZVJlZigpIG9yIGNyZWF0ZVJlZigpIGluc3RlYWQuICcgKyAnTGVhcm4gbW9yZSBhYm91dCB1c2luZyByZWZzIHNhZmVseSBoZXJlOiAnICsgJ2h0dHBzOi8vcmVhY3Rqcy5vcmcvbGluay9zdHJpY3QtbW9kZS1zdHJpbmctcmVmJywgZ2V0Q29tcG9uZW50TmFtZUZyb21UeXBlKFJlYWN0Q3VycmVudE93bmVyLmN1cnJlbnQudHlwZSksIGNvbmZpZy5yZWYpO1xuXG4gICAgICAgIGRpZFdhcm5BYm91dFN0cmluZ1JlZnNbY29tcG9uZW50TmFtZV0gPSB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBkZWZpbmVLZXlQcm9wV2FybmluZ0dldHRlcihwcm9wcywgZGlzcGxheU5hbWUpIHtcbiAge1xuICAgIHZhciB3YXJuQWJvdXRBY2Nlc3NpbmdLZXkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoIXNwZWNpYWxQcm9wS2V5V2FybmluZ1Nob3duKSB7XG4gICAgICAgIHNwZWNpYWxQcm9wS2V5V2FybmluZ1Nob3duID0gdHJ1ZTtcblxuICAgICAgICBlcnJvcignJXM6IGBrZXlgIGlzIG5vdCBhIHByb3AuIFRyeWluZyB0byBhY2Nlc3MgaXQgd2lsbCByZXN1bHQgJyArICdpbiBgdW5kZWZpbmVkYCBiZWluZyByZXR1cm5lZC4gSWYgeW91IG5lZWQgdG8gYWNjZXNzIHRoZSBzYW1lICcgKyAndmFsdWUgd2l0aGluIHRoZSBjaGlsZCBjb21wb25lbnQsIHlvdSBzaG91bGQgcGFzcyBpdCBhcyBhIGRpZmZlcmVudCAnICsgJ3Byb3AuIChodHRwczovL3JlYWN0anMub3JnL2xpbmsvc3BlY2lhbC1wcm9wcyknLCBkaXNwbGF5TmFtZSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIHdhcm5BYm91dEFjY2Vzc2luZ0tleS5pc1JlYWN0V2FybmluZyA9IHRydWU7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHByb3BzLCAna2V5Jywge1xuICAgICAgZ2V0OiB3YXJuQWJvdXRBY2Nlc3NpbmdLZXksXG4gICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgfVxufVxuXG5mdW5jdGlvbiBkZWZpbmVSZWZQcm9wV2FybmluZ0dldHRlcihwcm9wcywgZGlzcGxheU5hbWUpIHtcbiAge1xuICAgIHZhciB3YXJuQWJvdXRBY2Nlc3NpbmdSZWYgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoIXNwZWNpYWxQcm9wUmVmV2FybmluZ1Nob3duKSB7XG4gICAgICAgIHNwZWNpYWxQcm9wUmVmV2FybmluZ1Nob3duID0gdHJ1ZTtcblxuICAgICAgICBlcnJvcignJXM6IGByZWZgIGlzIG5vdCBhIHByb3AuIFRyeWluZyB0byBhY2Nlc3MgaXQgd2lsbCByZXN1bHQgJyArICdpbiBgdW5kZWZpbmVkYCBiZWluZyByZXR1cm5lZC4gSWYgeW91IG5lZWQgdG8gYWNjZXNzIHRoZSBzYW1lICcgKyAndmFsdWUgd2l0aGluIHRoZSBjaGlsZCBjb21wb25lbnQsIHlvdSBzaG91bGQgcGFzcyBpdCBhcyBhIGRpZmZlcmVudCAnICsgJ3Byb3AuIChodHRwczovL3JlYWN0anMub3JnL2xpbmsvc3BlY2lhbC1wcm9wcyknLCBkaXNwbGF5TmFtZSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIHdhcm5BYm91dEFjY2Vzc2luZ1JlZi5pc1JlYWN0V2FybmluZyA9IHRydWU7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHByb3BzLCAncmVmJywge1xuICAgICAgZ2V0OiB3YXJuQWJvdXRBY2Nlc3NpbmdSZWYsXG4gICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgfVxufVxuLyoqXG4gKiBGYWN0b3J5IG1ldGhvZCB0byBjcmVhdGUgYSBuZXcgUmVhY3QgZWxlbWVudC4gVGhpcyBubyBsb25nZXIgYWRoZXJlcyB0b1xuICogdGhlIGNsYXNzIHBhdHRlcm4sIHNvIGRvIG5vdCB1c2UgbmV3IHRvIGNhbGwgaXQuIEFsc28sIGluc3RhbmNlb2YgY2hlY2tcbiAqIHdpbGwgbm90IHdvcmsuIEluc3RlYWQgdGVzdCAkJHR5cGVvZiBmaWVsZCBhZ2FpbnN0IFN5bWJvbC5mb3IoJ3JlYWN0LmVsZW1lbnQnKSB0byBjaGVja1xuICogaWYgc29tZXRoaW5nIGlzIGEgUmVhY3QgRWxlbWVudC5cbiAqXG4gKiBAcGFyYW0geyp9IHR5cGVcbiAqIEBwYXJhbSB7Kn0gcHJvcHNcbiAqIEBwYXJhbSB7Kn0ga2V5XG4gKiBAcGFyYW0ge3N0cmluZ3xvYmplY3R9IHJlZlxuICogQHBhcmFtIHsqfSBvd25lclxuICogQHBhcmFtIHsqfSBzZWxmIEEgKnRlbXBvcmFyeSogaGVscGVyIHRvIGRldGVjdCBwbGFjZXMgd2hlcmUgYHRoaXNgIGlzXG4gKiBkaWZmZXJlbnQgZnJvbSB0aGUgYG93bmVyYCB3aGVuIFJlYWN0LmNyZWF0ZUVsZW1lbnQgaXMgY2FsbGVkLCBzbyB0aGF0IHdlXG4gKiBjYW4gd2Fybi4gV2Ugd2FudCB0byBnZXQgcmlkIG9mIG93bmVyIGFuZCByZXBsYWNlIHN0cmluZyBgcmVmYHMgd2l0aCBhcnJvd1xuICogZnVuY3Rpb25zLCBhbmQgYXMgbG9uZyBhcyBgdGhpc2AgYW5kIG93bmVyIGFyZSB0aGUgc2FtZSwgdGhlcmUgd2lsbCBiZSBub1xuICogY2hhbmdlIGluIGJlaGF2aW9yLlxuICogQHBhcmFtIHsqfSBzb3VyY2UgQW4gYW5ub3RhdGlvbiBvYmplY3QgKGFkZGVkIGJ5IGEgdHJhbnNwaWxlciBvciBvdGhlcndpc2UpXG4gKiBpbmRpY2F0aW5nIGZpbGVuYW1lLCBsaW5lIG51bWJlciwgYW5kL29yIG90aGVyIGluZm9ybWF0aW9uLlxuICogQGludGVybmFsXG4gKi9cblxuXG52YXIgUmVhY3RFbGVtZW50ID0gZnVuY3Rpb24gKHR5cGUsIGtleSwgcmVmLCBzZWxmLCBzb3VyY2UsIG93bmVyLCBwcm9wcykge1xuICB2YXIgZWxlbWVudCA9IHtcbiAgICAvLyBUaGlzIHRhZyBhbGxvd3MgdXMgdG8gdW5pcXVlbHkgaWRlbnRpZnkgdGhpcyBhcyBhIFJlYWN0IEVsZW1lbnRcbiAgICAkJHR5cGVvZjogUkVBQ1RfRUxFTUVOVF9UWVBFLFxuICAgIC8vIEJ1aWx0LWluIHByb3BlcnRpZXMgdGhhdCBiZWxvbmcgb24gdGhlIGVsZW1lbnRcbiAgICB0eXBlOiB0eXBlLFxuICAgIGtleToga2V5LFxuICAgIHJlZjogcmVmLFxuICAgIHByb3BzOiBwcm9wcyxcbiAgICAvLyBSZWNvcmQgdGhlIGNvbXBvbmVudCByZXNwb25zaWJsZSBmb3IgY3JlYXRpbmcgdGhpcyBlbGVtZW50LlxuICAgIF9vd25lcjogb3duZXJcbiAgfTtcblxuICB7XG4gICAgLy8gVGhlIHZhbGlkYXRpb24gZmxhZyBpcyBjdXJyZW50bHkgbXV0YXRpdmUuIFdlIHB1dCBpdCBvblxuICAgIC8vIGFuIGV4dGVybmFsIGJhY2tpbmcgc3RvcmUgc28gdGhhdCB3ZSBjYW4gZnJlZXplIHRoZSB3aG9sZSBvYmplY3QuXG4gICAgLy8gVGhpcyBjYW4gYmUgcmVwbGFjZWQgd2l0aCBhIFdlYWtNYXAgb25jZSB0aGV5IGFyZSBpbXBsZW1lbnRlZCBpblxuICAgIC8vIGNvbW1vbmx5IHVzZWQgZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnRzLlxuICAgIGVsZW1lbnQuX3N0b3JlID0ge307IC8vIFRvIG1ha2UgY29tcGFyaW5nIFJlYWN0RWxlbWVudHMgZWFzaWVyIGZvciB0ZXN0aW5nIHB1cnBvc2VzLCB3ZSBtYWtlXG4gICAgLy8gdGhlIHZhbGlkYXRpb24gZmxhZyBub24tZW51bWVyYWJsZSAod2hlcmUgcG9zc2libGUsIHdoaWNoIHNob3VsZFxuICAgIC8vIGluY2x1ZGUgZXZlcnkgZW52aXJvbm1lbnQgd2UgcnVuIHRlc3RzIGluKSwgc28gdGhlIHRlc3QgZnJhbWV3b3JrXG4gICAgLy8gaWdub3JlcyBpdC5cblxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlbGVtZW50Ll9zdG9yZSwgJ3ZhbGlkYXRlZCcsIHtcbiAgICAgIGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgdmFsdWU6IGZhbHNlXG4gICAgfSk7IC8vIHNlbGYgYW5kIHNvdXJjZSBhcmUgREVWIG9ubHkgcHJvcGVydGllcy5cblxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlbGVtZW50LCAnX3NlbGYnLCB7XG4gICAgICBjb25maWd1cmFibGU6IGZhbHNlLFxuICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICB3cml0YWJsZTogZmFsc2UsXG4gICAgICB2YWx1ZTogc2VsZlxuICAgIH0pOyAvLyBUd28gZWxlbWVudHMgY3JlYXRlZCBpbiB0d28gZGlmZmVyZW50IHBsYWNlcyBzaG91bGQgYmUgY29uc2lkZXJlZFxuICAgIC8vIGVxdWFsIGZvciB0ZXN0aW5nIHB1cnBvc2VzIGFuZCB0aGVyZWZvcmUgd2UgaGlkZSBpdCBmcm9tIGVudW1lcmF0aW9uLlxuXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGVsZW1lbnQsICdfc291cmNlJywge1xuICAgICAgY29uZmlndXJhYmxlOiBmYWxzZSxcbiAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgd3JpdGFibGU6IGZhbHNlLFxuICAgICAgdmFsdWU6IHNvdXJjZVxuICAgIH0pO1xuXG4gICAgaWYgKE9iamVjdC5mcmVlemUpIHtcbiAgICAgIE9iamVjdC5mcmVlemUoZWxlbWVudC5wcm9wcyk7XG4gICAgICBPYmplY3QuZnJlZXplKGVsZW1lbnQpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBlbGVtZW50O1xufTtcbi8qKlxuICogaHR0cHM6Ly9naXRodWIuY29tL3JlYWN0anMvcmZjcy9wdWxsLzEwN1xuICogQHBhcmFtIHsqfSB0eXBlXG4gKiBAcGFyYW0ge29iamVjdH0gcHJvcHNcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXlcbiAqL1xuXG5mdW5jdGlvbiBqc3hERVYodHlwZSwgY29uZmlnLCBtYXliZUtleSwgc291cmNlLCBzZWxmKSB7XG4gIHtcbiAgICB2YXIgcHJvcE5hbWU7IC8vIFJlc2VydmVkIG5hbWVzIGFyZSBleHRyYWN0ZWRcblxuICAgIHZhciBwcm9wcyA9IHt9O1xuICAgIHZhciBrZXkgPSBudWxsO1xuICAgIHZhciByZWYgPSBudWxsOyAvLyBDdXJyZW50bHksIGtleSBjYW4gYmUgc3ByZWFkIGluIGFzIGEgcHJvcC4gVGhpcyBjYXVzZXMgYSBwb3RlbnRpYWxcbiAgICAvLyBpc3N1ZSBpZiBrZXkgaXMgYWxzbyBleHBsaWNpdGx5IGRlY2xhcmVkIChpZS4gPGRpdiB7Li4ucHJvcHN9IGtleT1cIkhpXCIgLz5cbiAgICAvLyBvciA8ZGl2IGtleT1cIkhpXCIgey4uLnByb3BzfSAvPiApLiBXZSB3YW50IHRvIGRlcHJlY2F0ZSBrZXkgc3ByZWFkLFxuICAgIC8vIGJ1dCBhcyBhbiBpbnRlcm1lZGlhcnkgc3RlcCwgd2Ugd2lsbCB1c2UganN4REVWIGZvciBldmVyeXRoaW5nIGV4Y2VwdFxuICAgIC8vIDxkaXYgey4uLnByb3BzfSBrZXk9XCJIaVwiIC8+LCBiZWNhdXNlIHdlIGFyZW4ndCBjdXJyZW50bHkgYWJsZSB0byB0ZWxsIGlmXG4gICAgLy8ga2V5IGlzIGV4cGxpY2l0bHkgZGVjbGFyZWQgdG8gYmUgdW5kZWZpbmVkIG9yIG5vdC5cblxuICAgIGlmIChtYXliZUtleSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICB7XG4gICAgICAgIGNoZWNrS2V5U3RyaW5nQ29lcmNpb24obWF5YmVLZXkpO1xuICAgICAgfVxuXG4gICAgICBrZXkgPSAnJyArIG1heWJlS2V5O1xuICAgIH1cblxuICAgIGlmIChoYXNWYWxpZEtleShjb25maWcpKSB7XG4gICAgICB7XG4gICAgICAgIGNoZWNrS2V5U3RyaW5nQ29lcmNpb24oY29uZmlnLmtleSk7XG4gICAgICB9XG5cbiAgICAgIGtleSA9ICcnICsgY29uZmlnLmtleTtcbiAgICB9XG5cbiAgICBpZiAoaGFzVmFsaWRSZWYoY29uZmlnKSkge1xuICAgICAgcmVmID0gY29uZmlnLnJlZjtcbiAgICAgIHdhcm5JZlN0cmluZ1JlZkNhbm5vdEJlQXV0b0NvbnZlcnRlZChjb25maWcsIHNlbGYpO1xuICAgIH0gLy8gUmVtYWluaW5nIHByb3BlcnRpZXMgYXJlIGFkZGVkIHRvIGEgbmV3IHByb3BzIG9iamVjdFxuXG5cbiAgICBmb3IgKHByb3BOYW1lIGluIGNvbmZpZykge1xuICAgICAgaWYgKGhhc093blByb3BlcnR5LmNhbGwoY29uZmlnLCBwcm9wTmFtZSkgJiYgIVJFU0VSVkVEX1BST1BTLmhhc093blByb3BlcnR5KHByb3BOYW1lKSkge1xuICAgICAgICBwcm9wc1twcm9wTmFtZV0gPSBjb25maWdbcHJvcE5hbWVdO1xuICAgICAgfVxuICAgIH0gLy8gUmVzb2x2ZSBkZWZhdWx0IHByb3BzXG5cblxuICAgIGlmICh0eXBlICYmIHR5cGUuZGVmYXVsdFByb3BzKSB7XG4gICAgICB2YXIgZGVmYXVsdFByb3BzID0gdHlwZS5kZWZhdWx0UHJvcHM7XG5cbiAgICAgIGZvciAocHJvcE5hbWUgaW4gZGVmYXVsdFByb3BzKSB7XG4gICAgICAgIGlmIChwcm9wc1twcm9wTmFtZV0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIHByb3BzW3Byb3BOYW1lXSA9IGRlZmF1bHRQcm9wc1twcm9wTmFtZV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoa2V5IHx8IHJlZikge1xuICAgICAgdmFyIGRpc3BsYXlOYW1lID0gdHlwZW9mIHR5cGUgPT09ICdmdW5jdGlvbicgPyB0eXBlLmRpc3BsYXlOYW1lIHx8IHR5cGUubmFtZSB8fCAnVW5rbm93bicgOiB0eXBlO1xuXG4gICAgICBpZiAoa2V5KSB7XG4gICAgICAgIGRlZmluZUtleVByb3BXYXJuaW5nR2V0dGVyKHByb3BzLCBkaXNwbGF5TmFtZSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChyZWYpIHtcbiAgICAgICAgZGVmaW5lUmVmUHJvcFdhcm5pbmdHZXR0ZXIocHJvcHMsIGRpc3BsYXlOYW1lKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gUmVhY3RFbGVtZW50KHR5cGUsIGtleSwgcmVmLCBzZWxmLCBzb3VyY2UsIFJlYWN0Q3VycmVudE93bmVyLmN1cnJlbnQsIHByb3BzKTtcbiAgfVxufVxuXG52YXIgUmVhY3RDdXJyZW50T3duZXIkMSA9IFJlYWN0U2hhcmVkSW50ZXJuYWxzLlJlYWN0Q3VycmVudE93bmVyO1xudmFyIFJlYWN0RGVidWdDdXJyZW50RnJhbWUkMSA9IFJlYWN0U2hhcmVkSW50ZXJuYWxzLlJlYWN0RGVidWdDdXJyZW50RnJhbWU7XG5cbmZ1bmN0aW9uIHNldEN1cnJlbnRseVZhbGlkYXRpbmdFbGVtZW50JDEoZWxlbWVudCkge1xuICB7XG4gICAgaWYgKGVsZW1lbnQpIHtcbiAgICAgIHZhciBvd25lciA9IGVsZW1lbnQuX293bmVyO1xuICAgICAgdmFyIHN0YWNrID0gZGVzY3JpYmVVbmtub3duRWxlbWVudFR5cGVGcmFtZUluREVWKGVsZW1lbnQudHlwZSwgZWxlbWVudC5fc291cmNlLCBvd25lciA/IG93bmVyLnR5cGUgOiBudWxsKTtcbiAgICAgIFJlYWN0RGVidWdDdXJyZW50RnJhbWUkMS5zZXRFeHRyYVN0YWNrRnJhbWUoc3RhY2spO1xuICAgIH0gZWxzZSB7XG4gICAgICBSZWFjdERlYnVnQ3VycmVudEZyYW1lJDEuc2V0RXh0cmFTdGFja0ZyYW1lKG51bGwpO1xuICAgIH1cbiAgfVxufVxuXG52YXIgcHJvcFR5cGVzTWlzc3BlbGxXYXJuaW5nU2hvd247XG5cbntcbiAgcHJvcFR5cGVzTWlzc3BlbGxXYXJuaW5nU2hvd24gPSBmYWxzZTtcbn1cbi8qKlxuICogVmVyaWZpZXMgdGhlIG9iamVjdCBpcyBhIFJlYWN0RWxlbWVudC5cbiAqIFNlZSBodHRwczovL3JlYWN0anMub3JnL2RvY3MvcmVhY3QtYXBpLmh0bWwjaXN2YWxpZGVsZW1lbnRcbiAqIEBwYXJhbSB7P29iamVjdH0gb2JqZWN0XG4gKiBAcmV0dXJuIHtib29sZWFufSBUcnVlIGlmIGBvYmplY3RgIGlzIGEgUmVhY3RFbGVtZW50LlxuICogQGZpbmFsXG4gKi9cblxuXG5mdW5jdGlvbiBpc1ZhbGlkRWxlbWVudChvYmplY3QpIHtcbiAge1xuICAgIHJldHVybiB0eXBlb2Ygb2JqZWN0ID09PSAnb2JqZWN0JyAmJiBvYmplY3QgIT09IG51bGwgJiYgb2JqZWN0LiQkdHlwZW9mID09PSBSRUFDVF9FTEVNRU5UX1RZUEU7XG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0RGVjbGFyYXRpb25FcnJvckFkZGVuZHVtKCkge1xuICB7XG4gICAgaWYgKFJlYWN0Q3VycmVudE93bmVyJDEuY3VycmVudCkge1xuICAgICAgdmFyIG5hbWUgPSBnZXRDb21wb25lbnROYW1lRnJvbVR5cGUoUmVhY3RDdXJyZW50T3duZXIkMS5jdXJyZW50LnR5cGUpO1xuXG4gICAgICBpZiAobmFtZSkge1xuICAgICAgICByZXR1cm4gJ1xcblxcbkNoZWNrIHRoZSByZW5kZXIgbWV0aG9kIG9mIGAnICsgbmFtZSArICdgLic7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuICcnO1xuICB9XG59XG5cbmZ1bmN0aW9uIGdldFNvdXJjZUluZm9FcnJvckFkZGVuZHVtKHNvdXJjZSkge1xuICB7XG4gICAgaWYgKHNvdXJjZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICB2YXIgZmlsZU5hbWUgPSBzb3VyY2UuZmlsZU5hbWUucmVwbGFjZSgvXi4qW1xcXFxcXC9dLywgJycpO1xuICAgICAgdmFyIGxpbmVOdW1iZXIgPSBzb3VyY2UubGluZU51bWJlcjtcbiAgICAgIHJldHVybiAnXFxuXFxuQ2hlY2sgeW91ciBjb2RlIGF0ICcgKyBmaWxlTmFtZSArICc6JyArIGxpbmVOdW1iZXIgKyAnLic7XG4gICAgfVxuXG4gICAgcmV0dXJuICcnO1xuICB9XG59XG4vKipcbiAqIFdhcm4gaWYgdGhlcmUncyBubyBrZXkgZXhwbGljaXRseSBzZXQgb24gZHluYW1pYyBhcnJheXMgb2YgY2hpbGRyZW4gb3JcbiAqIG9iamVjdCBrZXlzIGFyZSBub3QgdmFsaWQuIFRoaXMgYWxsb3dzIHVzIHRvIGtlZXAgdHJhY2sgb2YgY2hpbGRyZW4gYmV0d2VlblxuICogdXBkYXRlcy5cbiAqL1xuXG5cbnZhciBvd25lckhhc0tleVVzZVdhcm5pbmcgPSB7fTtcblxuZnVuY3Rpb24gZ2V0Q3VycmVudENvbXBvbmVudEVycm9ySW5mbyhwYXJlbnRUeXBlKSB7XG4gIHtcbiAgICB2YXIgaW5mbyA9IGdldERlY2xhcmF0aW9uRXJyb3JBZGRlbmR1bSgpO1xuXG4gICAgaWYgKCFpbmZvKSB7XG4gICAgICB2YXIgcGFyZW50TmFtZSA9IHR5cGVvZiBwYXJlbnRUeXBlID09PSAnc3RyaW5nJyA/IHBhcmVudFR5cGUgOiBwYXJlbnRUeXBlLmRpc3BsYXlOYW1lIHx8IHBhcmVudFR5cGUubmFtZTtcblxuICAgICAgaWYgKHBhcmVudE5hbWUpIHtcbiAgICAgICAgaW5mbyA9IFwiXFxuXFxuQ2hlY2sgdGhlIHRvcC1sZXZlbCByZW5kZXIgY2FsbCB1c2luZyA8XCIgKyBwYXJlbnROYW1lICsgXCI+LlwiO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBpbmZvO1xuICB9XG59XG4vKipcbiAqIFdhcm4gaWYgdGhlIGVsZW1lbnQgZG9lc24ndCBoYXZlIGFuIGV4cGxpY2l0IGtleSBhc3NpZ25lZCB0byBpdC5cbiAqIFRoaXMgZWxlbWVudCBpcyBpbiBhbiBhcnJheS4gVGhlIGFycmF5IGNvdWxkIGdyb3cgYW5kIHNocmluayBvciBiZVxuICogcmVvcmRlcmVkLiBBbGwgY2hpbGRyZW4gdGhhdCBoYXZlbid0IGFscmVhZHkgYmVlbiB2YWxpZGF0ZWQgYXJlIHJlcXVpcmVkIHRvXG4gKiBoYXZlIGEgXCJrZXlcIiBwcm9wZXJ0eSBhc3NpZ25lZCB0byBpdC4gRXJyb3Igc3RhdHVzZXMgYXJlIGNhY2hlZCBzbyBhIHdhcm5pbmdcbiAqIHdpbGwgb25seSBiZSBzaG93biBvbmNlLlxuICpcbiAqIEBpbnRlcm5hbFxuICogQHBhcmFtIHtSZWFjdEVsZW1lbnR9IGVsZW1lbnQgRWxlbWVudCB0aGF0IHJlcXVpcmVzIGEga2V5LlxuICogQHBhcmFtIHsqfSBwYXJlbnRUeXBlIGVsZW1lbnQncyBwYXJlbnQncyB0eXBlLlxuICovXG5cblxuZnVuY3Rpb24gdmFsaWRhdGVFeHBsaWNpdEtleShlbGVtZW50LCBwYXJlbnRUeXBlKSB7XG4gIHtcbiAgICBpZiAoIWVsZW1lbnQuX3N0b3JlIHx8IGVsZW1lbnQuX3N0b3JlLnZhbGlkYXRlZCB8fCBlbGVtZW50LmtleSAhPSBudWxsKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZWxlbWVudC5fc3RvcmUudmFsaWRhdGVkID0gdHJ1ZTtcbiAgICB2YXIgY3VycmVudENvbXBvbmVudEVycm9ySW5mbyA9IGdldEN1cnJlbnRDb21wb25lbnRFcnJvckluZm8ocGFyZW50VHlwZSk7XG5cbiAgICBpZiAob3duZXJIYXNLZXlVc2VXYXJuaW5nW2N1cnJlbnRDb21wb25lbnRFcnJvckluZm9dKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgb3duZXJIYXNLZXlVc2VXYXJuaW5nW2N1cnJlbnRDb21wb25lbnRFcnJvckluZm9dID0gdHJ1ZTsgLy8gVXN1YWxseSB0aGUgY3VycmVudCBvd25lciBpcyB0aGUgb2ZmZW5kZXIsIGJ1dCBpZiBpdCBhY2NlcHRzIGNoaWxkcmVuIGFzIGFcbiAgICAvLyBwcm9wZXJ0eSwgaXQgbWF5IGJlIHRoZSBjcmVhdG9yIG9mIHRoZSBjaGlsZCB0aGF0J3MgcmVzcG9uc2libGUgZm9yXG4gICAgLy8gYXNzaWduaW5nIGl0IGEga2V5LlxuXG4gICAgdmFyIGNoaWxkT3duZXIgPSAnJztcblxuICAgIGlmIChlbGVtZW50ICYmIGVsZW1lbnQuX293bmVyICYmIGVsZW1lbnQuX293bmVyICE9PSBSZWFjdEN1cnJlbnRPd25lciQxLmN1cnJlbnQpIHtcbiAgICAgIC8vIEdpdmUgdGhlIGNvbXBvbmVudCB0aGF0IG9yaWdpbmFsbHkgY3JlYXRlZCB0aGlzIGNoaWxkLlxuICAgICAgY2hpbGRPd25lciA9IFwiIEl0IHdhcyBwYXNzZWQgYSBjaGlsZCBmcm9tIFwiICsgZ2V0Q29tcG9uZW50TmFtZUZyb21UeXBlKGVsZW1lbnQuX293bmVyLnR5cGUpICsgXCIuXCI7XG4gICAgfVxuXG4gICAgc2V0Q3VycmVudGx5VmFsaWRhdGluZ0VsZW1lbnQkMShlbGVtZW50KTtcblxuICAgIGVycm9yKCdFYWNoIGNoaWxkIGluIGEgbGlzdCBzaG91bGQgaGF2ZSBhIHVuaXF1ZSBcImtleVwiIHByb3AuJyArICclcyVzIFNlZSBodHRwczovL3JlYWN0anMub3JnL2xpbmsvd2FybmluZy1rZXlzIGZvciBtb3JlIGluZm9ybWF0aW9uLicsIGN1cnJlbnRDb21wb25lbnRFcnJvckluZm8sIGNoaWxkT3duZXIpO1xuXG4gICAgc2V0Q3VycmVudGx5VmFsaWRhdGluZ0VsZW1lbnQkMShudWxsKTtcbiAgfVxufVxuLyoqXG4gKiBFbnN1cmUgdGhhdCBldmVyeSBlbGVtZW50IGVpdGhlciBpcyBwYXNzZWQgaW4gYSBzdGF0aWMgbG9jYXRpb24sIGluIGFuXG4gKiBhcnJheSB3aXRoIGFuIGV4cGxpY2l0IGtleXMgcHJvcGVydHkgZGVmaW5lZCwgb3IgaW4gYW4gb2JqZWN0IGxpdGVyYWxcbiAqIHdpdGggdmFsaWQga2V5IHByb3BlcnR5LlxuICpcbiAqIEBpbnRlcm5hbFxuICogQHBhcmFtIHtSZWFjdE5vZGV9IG5vZGUgU3RhdGljYWxseSBwYXNzZWQgY2hpbGQgb2YgYW55IHR5cGUuXG4gKiBAcGFyYW0geyp9IHBhcmVudFR5cGUgbm9kZSdzIHBhcmVudCdzIHR5cGUuXG4gKi9cblxuXG5mdW5jdGlvbiB2YWxpZGF0ZUNoaWxkS2V5cyhub2RlLCBwYXJlbnRUeXBlKSB7XG4gIHtcbiAgICBpZiAodHlwZW9mIG5vZGUgIT09ICdvYmplY3QnKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKGlzQXJyYXkobm9kZSkpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbm9kZS5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgY2hpbGQgPSBub2RlW2ldO1xuXG4gICAgICAgIGlmIChpc1ZhbGlkRWxlbWVudChjaGlsZCkpIHtcbiAgICAgICAgICB2YWxpZGF0ZUV4cGxpY2l0S2V5KGNoaWxkLCBwYXJlbnRUeXBlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoaXNWYWxpZEVsZW1lbnQobm9kZSkpIHtcbiAgICAgIC8vIFRoaXMgZWxlbWVudCB3YXMgcGFzc2VkIGluIGEgdmFsaWQgbG9jYXRpb24uXG4gICAgICBpZiAobm9kZS5fc3RvcmUpIHtcbiAgICAgICAgbm9kZS5fc3RvcmUudmFsaWRhdGVkID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKG5vZGUpIHtcbiAgICAgIHZhciBpdGVyYXRvckZuID0gZ2V0SXRlcmF0b3JGbihub2RlKTtcblxuICAgICAgaWYgKHR5cGVvZiBpdGVyYXRvckZuID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIC8vIEVudHJ5IGl0ZXJhdG9ycyB1c2VkIHRvIHByb3ZpZGUgaW1wbGljaXQga2V5cyxcbiAgICAgICAgLy8gYnV0IG5vdyB3ZSBwcmludCBhIHNlcGFyYXRlIHdhcm5pbmcgZm9yIHRoZW0gbGF0ZXIuXG4gICAgICAgIGlmIChpdGVyYXRvckZuICE9PSBub2RlLmVudHJpZXMpIHtcbiAgICAgICAgICB2YXIgaXRlcmF0b3IgPSBpdGVyYXRvckZuLmNhbGwobm9kZSk7XG4gICAgICAgICAgdmFyIHN0ZXA7XG5cbiAgICAgICAgICB3aGlsZSAoIShzdGVwID0gaXRlcmF0b3IubmV4dCgpKS5kb25lKSB7XG4gICAgICAgICAgICBpZiAoaXNWYWxpZEVsZW1lbnQoc3RlcC52YWx1ZSkpIHtcbiAgICAgICAgICAgICAgdmFsaWRhdGVFeHBsaWNpdEtleShzdGVwLnZhbHVlLCBwYXJlbnRUeXBlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbi8qKlxuICogR2l2ZW4gYW4gZWxlbWVudCwgdmFsaWRhdGUgdGhhdCBpdHMgcHJvcHMgZm9sbG93IHRoZSBwcm9wVHlwZXMgZGVmaW5pdGlvbixcbiAqIHByb3ZpZGVkIGJ5IHRoZSB0eXBlLlxuICpcbiAqIEBwYXJhbSB7UmVhY3RFbGVtZW50fSBlbGVtZW50XG4gKi9cblxuXG5mdW5jdGlvbiB2YWxpZGF0ZVByb3BUeXBlcyhlbGVtZW50KSB7XG4gIHtcbiAgICB2YXIgdHlwZSA9IGVsZW1lbnQudHlwZTtcblxuICAgIGlmICh0eXBlID09PSBudWxsIHx8IHR5cGUgPT09IHVuZGVmaW5lZCB8fCB0eXBlb2YgdHlwZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB2YXIgcHJvcFR5cGVzO1xuXG4gICAgaWYgKHR5cGVvZiB0eXBlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBwcm9wVHlwZXMgPSB0eXBlLnByb3BUeXBlcztcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiB0eXBlID09PSAnb2JqZWN0JyAmJiAodHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfRk9SV0FSRF9SRUZfVFlQRSB8fCAvLyBOb3RlOiBNZW1vIG9ubHkgY2hlY2tzIG91dGVyIHByb3BzIGhlcmUuXG4gICAgLy8gSW5uZXIgcHJvcHMgYXJlIGNoZWNrZWQgaW4gdGhlIHJlY29uY2lsZXIuXG4gICAgdHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfTUVNT19UWVBFKSkge1xuICAgICAgcHJvcFR5cGVzID0gdHlwZS5wcm9wVHlwZXM7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAocHJvcFR5cGVzKSB7XG4gICAgICAvLyBJbnRlbnRpb25hbGx5IGluc2lkZSB0byBhdm9pZCB0cmlnZ2VyaW5nIGxhenkgaW5pdGlhbGl6ZXJzOlxuICAgICAgdmFyIG5hbWUgPSBnZXRDb21wb25lbnROYW1lRnJvbVR5cGUodHlwZSk7XG4gICAgICBjaGVja1Byb3BUeXBlcyhwcm9wVHlwZXMsIGVsZW1lbnQucHJvcHMsICdwcm9wJywgbmFtZSwgZWxlbWVudCk7XG4gICAgfSBlbHNlIGlmICh0eXBlLlByb3BUeXBlcyAhPT0gdW5kZWZpbmVkICYmICFwcm9wVHlwZXNNaXNzcGVsbFdhcm5pbmdTaG93bikge1xuICAgICAgcHJvcFR5cGVzTWlzc3BlbGxXYXJuaW5nU2hvd24gPSB0cnVlOyAvLyBJbnRlbnRpb25hbGx5IGluc2lkZSB0byBhdm9pZCB0cmlnZ2VyaW5nIGxhenkgaW5pdGlhbGl6ZXJzOlxuXG4gICAgICB2YXIgX25hbWUgPSBnZXRDb21wb25lbnROYW1lRnJvbVR5cGUodHlwZSk7XG5cbiAgICAgIGVycm9yKCdDb21wb25lbnQgJXMgZGVjbGFyZWQgYFByb3BUeXBlc2AgaW5zdGVhZCBvZiBgcHJvcFR5cGVzYC4gRGlkIHlvdSBtaXNzcGVsbCB0aGUgcHJvcGVydHkgYXNzaWdubWVudD8nLCBfbmFtZSB8fCAnVW5rbm93bicpO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgdHlwZS5nZXREZWZhdWx0UHJvcHMgPT09ICdmdW5jdGlvbicgJiYgIXR5cGUuZ2V0RGVmYXVsdFByb3BzLmlzUmVhY3RDbGFzc0FwcHJvdmVkKSB7XG4gICAgICBlcnJvcignZ2V0RGVmYXVsdFByb3BzIGlzIG9ubHkgdXNlZCBvbiBjbGFzc2ljIFJlYWN0LmNyZWF0ZUNsYXNzICcgKyAnZGVmaW5pdGlvbnMuIFVzZSBhIHN0YXRpYyBwcm9wZXJ0eSBuYW1lZCBgZGVmYXVsdFByb3BzYCBpbnN0ZWFkLicpO1xuICAgIH1cbiAgfVxufVxuLyoqXG4gKiBHaXZlbiBhIGZyYWdtZW50LCB2YWxpZGF0ZSB0aGF0IGl0IGNhbiBvbmx5IGJlIHByb3ZpZGVkIHdpdGggZnJhZ21lbnQgcHJvcHNcbiAqIEBwYXJhbSB7UmVhY3RFbGVtZW50fSBmcmFnbWVudFxuICovXG5cblxuZnVuY3Rpb24gdmFsaWRhdGVGcmFnbWVudFByb3BzKGZyYWdtZW50KSB7XG4gIHtcbiAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKGZyYWdtZW50LnByb3BzKTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGtleSA9IGtleXNbaV07XG5cbiAgICAgIGlmIChrZXkgIT09ICdjaGlsZHJlbicgJiYga2V5ICE9PSAna2V5Jykge1xuICAgICAgICBzZXRDdXJyZW50bHlWYWxpZGF0aW5nRWxlbWVudCQxKGZyYWdtZW50KTtcblxuICAgICAgICBlcnJvcignSW52YWxpZCBwcm9wIGAlc2Agc3VwcGxpZWQgdG8gYFJlYWN0LkZyYWdtZW50YC4gJyArICdSZWFjdC5GcmFnbWVudCBjYW4gb25seSBoYXZlIGBrZXlgIGFuZCBgY2hpbGRyZW5gIHByb3BzLicsIGtleSk7XG5cbiAgICAgICAgc2V0Q3VycmVudGx5VmFsaWRhdGluZ0VsZW1lbnQkMShudWxsKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGZyYWdtZW50LnJlZiAhPT0gbnVsbCkge1xuICAgICAgc2V0Q3VycmVudGx5VmFsaWRhdGluZ0VsZW1lbnQkMShmcmFnbWVudCk7XG5cbiAgICAgIGVycm9yKCdJbnZhbGlkIGF0dHJpYnV0ZSBgcmVmYCBzdXBwbGllZCB0byBgUmVhY3QuRnJhZ21lbnRgLicpO1xuXG4gICAgICBzZXRDdXJyZW50bHlWYWxpZGF0aW5nRWxlbWVudCQxKG51bGwpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBqc3hXaXRoVmFsaWRhdGlvbih0eXBlLCBwcm9wcywga2V5LCBpc1N0YXRpY0NoaWxkcmVuLCBzb3VyY2UsIHNlbGYpIHtcbiAge1xuICAgIHZhciB2YWxpZFR5cGUgPSBpc1ZhbGlkRWxlbWVudFR5cGUodHlwZSk7IC8vIFdlIHdhcm4gaW4gdGhpcyBjYXNlIGJ1dCBkb24ndCB0aHJvdy4gV2UgZXhwZWN0IHRoZSBlbGVtZW50IGNyZWF0aW9uIHRvXG4gICAgLy8gc3VjY2VlZCBhbmQgdGhlcmUgd2lsbCBsaWtlbHkgYmUgZXJyb3JzIGluIHJlbmRlci5cblxuICAgIGlmICghdmFsaWRUeXBlKSB7XG4gICAgICB2YXIgaW5mbyA9ICcnO1xuXG4gICAgICBpZiAodHlwZSA9PT0gdW5kZWZpbmVkIHx8IHR5cGVvZiB0eXBlID09PSAnb2JqZWN0JyAmJiB0eXBlICE9PSBudWxsICYmIE9iamVjdC5rZXlzKHR5cGUpLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBpbmZvICs9ICcgWW91IGxpa2VseSBmb3Jnb3QgdG8gZXhwb3J0IHlvdXIgY29tcG9uZW50IGZyb20gdGhlIGZpbGUgJyArIFwiaXQncyBkZWZpbmVkIGluLCBvciB5b3UgbWlnaHQgaGF2ZSBtaXhlZCB1cCBkZWZhdWx0IGFuZCBuYW1lZCBpbXBvcnRzLlwiO1xuICAgICAgfVxuXG4gICAgICB2YXIgc291cmNlSW5mbyA9IGdldFNvdXJjZUluZm9FcnJvckFkZGVuZHVtKHNvdXJjZSk7XG5cbiAgICAgIGlmIChzb3VyY2VJbmZvKSB7XG4gICAgICAgIGluZm8gKz0gc291cmNlSW5mbztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGluZm8gKz0gZ2V0RGVjbGFyYXRpb25FcnJvckFkZGVuZHVtKCk7XG4gICAgICB9XG5cbiAgICAgIHZhciB0eXBlU3RyaW5nO1xuXG4gICAgICBpZiAodHlwZSA9PT0gbnVsbCkge1xuICAgICAgICB0eXBlU3RyaW5nID0gJ251bGwnO1xuICAgICAgfSBlbHNlIGlmIChpc0FycmF5KHR5cGUpKSB7XG4gICAgICAgIHR5cGVTdHJpbmcgPSAnYXJyYXknO1xuICAgICAgfSBlbHNlIGlmICh0eXBlICE9PSB1bmRlZmluZWQgJiYgdHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfRUxFTUVOVF9UWVBFKSB7XG4gICAgICAgIHR5cGVTdHJpbmcgPSBcIjxcIiArIChnZXRDb21wb25lbnROYW1lRnJvbVR5cGUodHlwZS50eXBlKSB8fCAnVW5rbm93bicpICsgXCIgLz5cIjtcbiAgICAgICAgaW5mbyA9ICcgRGlkIHlvdSBhY2NpZGVudGFsbHkgZXhwb3J0IGEgSlNYIGxpdGVyYWwgaW5zdGVhZCBvZiBhIGNvbXBvbmVudD8nO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdHlwZVN0cmluZyA9IHR5cGVvZiB0eXBlO1xuICAgICAgfVxuXG4gICAgICBlcnJvcignUmVhY3QuanN4OiB0eXBlIGlzIGludmFsaWQgLS0gZXhwZWN0ZWQgYSBzdHJpbmcgKGZvciAnICsgJ2J1aWx0LWluIGNvbXBvbmVudHMpIG9yIGEgY2xhc3MvZnVuY3Rpb24gKGZvciBjb21wb3NpdGUgJyArICdjb21wb25lbnRzKSBidXQgZ290OiAlcy4lcycsIHR5cGVTdHJpbmcsIGluZm8pO1xuICAgIH1cblxuICAgIHZhciBlbGVtZW50ID0ganN4REVWKHR5cGUsIHByb3BzLCBrZXksIHNvdXJjZSwgc2VsZik7IC8vIFRoZSByZXN1bHQgY2FuIGJlIG51bGxpc2ggaWYgYSBtb2NrIG9yIGEgY3VzdG9tIGZ1bmN0aW9uIGlzIHVzZWQuXG4gICAgLy8gVE9ETzogRHJvcCB0aGlzIHdoZW4gdGhlc2UgYXJlIG5vIGxvbmdlciBhbGxvd2VkIGFzIHRoZSB0eXBlIGFyZ3VtZW50LlxuXG4gICAgaWYgKGVsZW1lbnQgPT0gbnVsbCkge1xuICAgICAgcmV0dXJuIGVsZW1lbnQ7XG4gICAgfSAvLyBTa2lwIGtleSB3YXJuaW5nIGlmIHRoZSB0eXBlIGlzbid0IHZhbGlkIHNpbmNlIG91ciBrZXkgdmFsaWRhdGlvbiBsb2dpY1xuICAgIC8vIGRvZXNuJ3QgZXhwZWN0IGEgbm9uLXN0cmluZy9mdW5jdGlvbiB0eXBlIGFuZCBjYW4gdGhyb3cgY29uZnVzaW5nIGVycm9ycy5cbiAgICAvLyBXZSBkb24ndCB3YW50IGV4Y2VwdGlvbiBiZWhhdmlvciB0byBkaWZmZXIgYmV0d2VlbiBkZXYgYW5kIHByb2QuXG4gICAgLy8gKFJlbmRlcmluZyB3aWxsIHRocm93IHdpdGggYSBoZWxwZnVsIG1lc3NhZ2UgYW5kIGFzIHNvb24gYXMgdGhlIHR5cGUgaXNcbiAgICAvLyBmaXhlZCwgdGhlIGtleSB3YXJuaW5ncyB3aWxsIGFwcGVhci4pXG5cblxuICAgIGlmICh2YWxpZFR5cGUpIHtcbiAgICAgIHZhciBjaGlsZHJlbiA9IHByb3BzLmNoaWxkcmVuO1xuXG4gICAgICBpZiAoY2hpbGRyZW4gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBpZiAoaXNTdGF0aWNDaGlsZHJlbikge1xuICAgICAgICAgIGlmIChpc0FycmF5KGNoaWxkcmVuKSkge1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjaGlsZHJlbi5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICB2YWxpZGF0ZUNoaWxkS2V5cyhjaGlsZHJlbltpXSwgdHlwZSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChPYmplY3QuZnJlZXplKSB7XG4gICAgICAgICAgICAgIE9iamVjdC5mcmVlemUoY2hpbGRyZW4pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBlcnJvcignUmVhY3QuanN4OiBTdGF0aWMgY2hpbGRyZW4gc2hvdWxkIGFsd2F5cyBiZSBhbiBhcnJheS4gJyArICdZb3UgYXJlIGxpa2VseSBleHBsaWNpdGx5IGNhbGxpbmcgUmVhY3QuanN4cyBvciBSZWFjdC5qc3hERVYuICcgKyAnVXNlIHRoZSBCYWJlbCB0cmFuc2Zvcm0gaW5zdGVhZC4nKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFsaWRhdGVDaGlsZEtleXMoY2hpbGRyZW4sIHR5cGUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHR5cGUgPT09IFJFQUNUX0ZSQUdNRU5UX1RZUEUpIHtcbiAgICAgIHZhbGlkYXRlRnJhZ21lbnRQcm9wcyhlbGVtZW50KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFsaWRhdGVQcm9wVHlwZXMoZWxlbWVudCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGVsZW1lbnQ7XG4gIH1cbn0gLy8gVGhlc2UgdHdvIGZ1bmN0aW9ucyBleGlzdCB0byBzdGlsbCBnZXQgY2hpbGQgd2FybmluZ3MgaW4gZGV2XG5cbnZhciBqc3hERVYkMSA9ICBqc3hXaXRoVmFsaWRhdGlvbiA7XG5cbmV4cG9ydHMuRnJhZ21lbnQgPSBSRUFDVF9GUkFHTUVOVF9UWVBFO1xuZXhwb3J0cy5qc3hERVYgPSBqc3hERVYkMTtcbiAgfSkoKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSx1SkFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz81Nzc3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "./node_modules/void-elements/index.js":
/*!*********************************************!*\
  !*** ./node_modules/void-elements/index.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/**\n * This file automatically generated from `pre-publish.js`.\n * Do not manually edit.\n */\n\nmodule.exports = {\n  \"area\": true,\n  \"base\": true,\n  \"br\": true,\n  \"col\": true,\n  \"embed\": true,\n  \"hr\": true,\n  \"img\": true,\n  \"input\": true,\n  \"link\": true,\n  \"meta\": true,\n  \"param\": true,\n  \"source\": true,\n  \"track\": true,\n  \"wbr\": true\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdm9pZC1lbGVtZW50cy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdm9pZC1lbGVtZW50cy9pbmRleC5qcz84MTJiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhpcyBmaWxlIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkIGZyb20gYHByZS1wdWJsaXNoLmpzYC5cbiAqIERvIG5vdCBtYW51YWxseSBlZGl0LlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBcImFyZWFcIjogdHJ1ZSxcbiAgXCJiYXNlXCI6IHRydWUsXG4gIFwiYnJcIjogdHJ1ZSxcbiAgXCJjb2xcIjogdHJ1ZSxcbiAgXCJlbWJlZFwiOiB0cnVlLFxuICBcImhyXCI6IHRydWUsXG4gIFwiaW1nXCI6IHRydWUsXG4gIFwiaW5wdXRcIjogdHJ1ZSxcbiAgXCJsaW5rXCI6IHRydWUsXG4gIFwibWV0YVwiOiB0cnVlLFxuICBcInBhcmFtXCI6IHRydWUsXG4gIFwic291cmNlXCI6IHRydWUsXG4gIFwidHJhY2tcIjogdHJ1ZSxcbiAgXCJ3YnJcIjogdHJ1ZVxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/void-elements/index.js\n"));

/***/ }),

/***/ "./node_modules/@supabase/postgrest-js/dist/esm/wrapper.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/esm/wrapper.mjs ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PostgrestBuilder: function() { return /* binding */ PostgrestBuilder; },\n/* harmony export */   PostgrestClient: function() { return /* binding */ PostgrestClient; },\n/* harmony export */   PostgrestError: function() { return /* binding */ PostgrestError; },\n/* harmony export */   PostgrestFilterBuilder: function() { return /* binding */ PostgrestFilterBuilder; },\n/* harmony export */   PostgrestQueryBuilder: function() { return /* binding */ PostgrestQueryBuilder; },\n/* harmony export */   PostgrestTransformBuilder: function() { return /* binding */ PostgrestTransformBuilder; }\n/* harmony export */ });\n/* harmony import */ var _cjs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cjs/index.js */ \"./node_modules/@supabase/postgrest-js/dist/cjs/index.js\");\n\nconst {\n  PostgrestClient,\n  PostgrestQueryBuilder,\n  PostgrestFilterBuilder,\n  PostgrestTransformBuilder,\n  PostgrestBuilder,\n  PostgrestError,\n} = _cjs_index_js__WEBPACK_IMPORTED_MODULE_0__\n\n\n\n// compatibility with CJS output\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  PostgrestClient,\n  PostgrestQueryBuilder,\n  PostgrestFilterBuilder,\n  PostgrestTransformBuilder,\n  PostgrestBuilder,\n  PostgrestError,\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3Bvc3RncmVzdC1qcy9kaXN0L2VzbS93cmFwcGVyLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQW1DO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSxFQUFFLDBDQUFLOztBQVNSOztBQUVEO0FBQ0EsK0RBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcG9zdGdyZXN0LWpzL2Rpc3QvZXNtL3dyYXBwZXIubWpzPzYxODAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGluZGV4IGZyb20gJy4uL2Nqcy9pbmRleC5qcydcbmNvbnN0IHtcbiAgUG9zdGdyZXN0Q2xpZW50LFxuICBQb3N0Z3Jlc3RRdWVyeUJ1aWxkZXIsXG4gIFBvc3RncmVzdEZpbHRlckJ1aWxkZXIsXG4gIFBvc3RncmVzdFRyYW5zZm9ybUJ1aWxkZXIsXG4gIFBvc3RncmVzdEJ1aWxkZXIsXG4gIFBvc3RncmVzdEVycm9yLFxufSA9IGluZGV4XG5cbmV4cG9ydCB7XG4gIFBvc3RncmVzdEJ1aWxkZXIsXG4gIFBvc3RncmVzdENsaWVudCxcbiAgUG9zdGdyZXN0RmlsdGVyQnVpbGRlcixcbiAgUG9zdGdyZXN0UXVlcnlCdWlsZGVyLFxuICBQb3N0Z3Jlc3RUcmFuc2Zvcm1CdWlsZGVyLFxuICBQb3N0Z3Jlc3RFcnJvcixcbn1cblxuLy8gY29tcGF0aWJpbGl0eSB3aXRoIENKUyBvdXRwdXRcbmV4cG9ydCBkZWZhdWx0IHtcbiAgUG9zdGdyZXN0Q2xpZW50LFxuICBQb3N0Z3Jlc3RRdWVyeUJ1aWxkZXIsXG4gIFBvc3RncmVzdEZpbHRlckJ1aWxkZXIsXG4gIFBvc3RncmVzdFRyYW5zZm9ybUJ1aWxkZXIsXG4gIFBvc3RncmVzdEJ1aWxkZXIsXG4gIFBvc3RncmVzdEVycm9yLFxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@supabase/postgrest-js/dist/esm/wrapper.mjs\n"));

/***/ }),

/***/ "./node_modules/i18next-browser-languagedetector/dist/esm/i18nextBrowserLanguageDetector.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/i18next-browser-languagedetector/dist/esm/i18nextBrowserLanguageDetector.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Browser; }\n/* harmony export */ });\nconst {\n  slice,\n  forEach\n} = [];\nfunction defaults(obj) {\n  forEach.call(slice.call(arguments, 1), source => {\n    if (source) {\n      for (const prop in source) {\n        if (obj[prop] === undefined) obj[prop] = source[prop];\n      }\n    }\n  });\n  return obj;\n}\nfunction hasXSS(input) {\n  if (typeof input !== 'string') return false;\n\n  // Common XSS attack patterns\n  const xssPatterns = [/<\\s*script.*?>/i, /<\\s*\\/\\s*script\\s*>/i, /<\\s*img.*?on\\w+\\s*=/i, /<\\s*\\w+\\s*on\\w+\\s*=.*?>/i, /javascript\\s*:/i, /vbscript\\s*:/i, /expression\\s*\\(/i, /eval\\s*\\(/i, /alert\\s*\\(/i, /document\\.cookie/i, /document\\.write\\s*\\(/i, /window\\.location/i, /innerHTML/i];\n  return xssPatterns.some(pattern => pattern.test(input));\n}\n\n// eslint-disable-next-line no-control-regex\nconst fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\nconst serializeCookie = function (name, val) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    path: '/'\n  };\n  const opt = options;\n  const value = encodeURIComponent(val);\n  let str = `${name}=${value}`;\n  if (opt.maxAge > 0) {\n    const maxAge = opt.maxAge - 0;\n    if (Number.isNaN(maxAge)) throw new Error('maxAge should be a Number');\n    str += `; Max-Age=${Math.floor(maxAge)}`;\n  }\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n    str += `; Domain=${opt.domain}`;\n  }\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n    str += `; Path=${opt.path}`;\n  }\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n    str += `; Expires=${opt.expires.toUTCString()}`;\n  }\n  if (opt.httpOnly) str += '; HttpOnly';\n  if (opt.secure) str += '; Secure';\n  if (opt.sameSite) {\n    const sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite;\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n  if (opt.partitioned) str += '; Partitioned';\n  return str;\n};\nconst cookie = {\n  create(name, value, minutes, domain) {\n    let cookieOptions = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n      path: '/',\n      sameSite: 'strict'\n    };\n    if (minutes) {\n      cookieOptions.expires = new Date();\n      cookieOptions.expires.setTime(cookieOptions.expires.getTime() + minutes * 60 * 1000);\n    }\n    if (domain) cookieOptions.domain = domain;\n    document.cookie = serializeCookie(name, value, cookieOptions);\n  },\n  read(name) {\n    const nameEQ = `${name}=`;\n    const ca = document.cookie.split(';');\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) === ' ') c = c.substring(1, c.length);\n      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n    }\n    return null;\n  },\n  remove(name, domain) {\n    this.create(name, '', -1, domain);\n  }\n};\nvar cookie$1 = {\n  name: 'cookie',\n  // Deconstruct the options object and extract the lookupCookie property\n  lookup(_ref) {\n    let {\n      lookupCookie\n    } = _ref;\n    if (lookupCookie && typeof document !== 'undefined') {\n      return cookie.read(lookupCookie) || undefined;\n    }\n    return undefined;\n  },\n  // Deconstruct the options object and extract the lookupCookie, cookieMinutes, cookieDomain, and cookieOptions properties\n  cacheUserLanguage(lng, _ref2) {\n    let {\n      lookupCookie,\n      cookieMinutes,\n      cookieDomain,\n      cookieOptions\n    } = _ref2;\n    if (lookupCookie && typeof document !== 'undefined') {\n      cookie.create(lookupCookie, lng, cookieMinutes, cookieDomain, cookieOptions);\n    }\n  }\n};\n\nvar querystring = {\n  name: 'querystring',\n  // Deconstruct the options object and extract the lookupQuerystring property\n  lookup(_ref) {\n    let {\n      lookupQuerystring\n    } = _ref;\n    let found;\n    if (typeof window !== 'undefined') {\n      let {\n        search\n      } = window.location;\n      if (!window.location.search && window.location.hash?.indexOf('?') > -1) {\n        search = window.location.hash.substring(window.location.hash.indexOf('?'));\n      }\n      const query = search.substring(1);\n      const params = query.split('&');\n      for (let i = 0; i < params.length; i++) {\n        const pos = params[i].indexOf('=');\n        if (pos > 0) {\n          const key = params[i].substring(0, pos);\n          if (key === lookupQuerystring) {\n            found = params[i].substring(pos + 1);\n          }\n        }\n      }\n    }\n    return found;\n  }\n};\n\nvar hash = {\n  name: 'hash',\n  // Deconstruct the options object and extract the lookupHash property and the lookupFromHashIndex property\n  lookup(_ref) {\n    let {\n      lookupHash,\n      lookupFromHashIndex\n    } = _ref;\n    let found;\n    if (typeof window !== 'undefined') {\n      const {\n        hash\n      } = window.location;\n      if (hash && hash.length > 2) {\n        const query = hash.substring(1);\n        if (lookupHash) {\n          const params = query.split('&');\n          for (let i = 0; i < params.length; i++) {\n            const pos = params[i].indexOf('=');\n            if (pos > 0) {\n              const key = params[i].substring(0, pos);\n              if (key === lookupHash) {\n                found = params[i].substring(pos + 1);\n              }\n            }\n          }\n        }\n        if (found) return found;\n        if (!found && lookupFromHashIndex > -1) {\n          const language = hash.match(/\\/([a-zA-Z-]*)/g);\n          if (!Array.isArray(language)) return undefined;\n          const index = typeof lookupFromHashIndex === 'number' ? lookupFromHashIndex : 0;\n          return language[index]?.replace('/', '');\n        }\n      }\n    }\n    return found;\n  }\n};\n\nlet hasLocalStorageSupport = null;\nconst localStorageAvailable = () => {\n  if (hasLocalStorageSupport !== null) return hasLocalStorageSupport;\n  try {\n    hasLocalStorageSupport = typeof window !== 'undefined' && window.localStorage !== null;\n    if (!hasLocalStorageSupport) {\n      return false;\n    }\n    const testKey = 'i18next.translate.boo';\n    window.localStorage.setItem(testKey, 'foo');\n    window.localStorage.removeItem(testKey);\n  } catch (e) {\n    hasLocalStorageSupport = false;\n  }\n  return hasLocalStorageSupport;\n};\nvar localStorage = {\n  name: 'localStorage',\n  // Deconstruct the options object and extract the lookupLocalStorage property\n  lookup(_ref) {\n    let {\n      lookupLocalStorage\n    } = _ref;\n    if (lookupLocalStorage && localStorageAvailable()) {\n      return window.localStorage.getItem(lookupLocalStorage) || undefined; // Undefined ensures type consistency with the previous version of this function\n    }\n    return undefined;\n  },\n  // Deconstruct the options object and extract the lookupLocalStorage property\n  cacheUserLanguage(lng, _ref2) {\n    let {\n      lookupLocalStorage\n    } = _ref2;\n    if (lookupLocalStorage && localStorageAvailable()) {\n      window.localStorage.setItem(lookupLocalStorage, lng);\n    }\n  }\n};\n\nlet hasSessionStorageSupport = null;\nconst sessionStorageAvailable = () => {\n  if (hasSessionStorageSupport !== null) return hasSessionStorageSupport;\n  try {\n    hasSessionStorageSupport = typeof window !== 'undefined' && window.sessionStorage !== null;\n    if (!hasSessionStorageSupport) {\n      return false;\n    }\n    const testKey = 'i18next.translate.boo';\n    window.sessionStorage.setItem(testKey, 'foo');\n    window.sessionStorage.removeItem(testKey);\n  } catch (e) {\n    hasSessionStorageSupport = false;\n  }\n  return hasSessionStorageSupport;\n};\nvar sessionStorage = {\n  name: 'sessionStorage',\n  lookup(_ref) {\n    let {\n      lookupSessionStorage\n    } = _ref;\n    if (lookupSessionStorage && sessionStorageAvailable()) {\n      return window.sessionStorage.getItem(lookupSessionStorage) || undefined;\n    }\n    return undefined;\n  },\n  cacheUserLanguage(lng, _ref2) {\n    let {\n      lookupSessionStorage\n    } = _ref2;\n    if (lookupSessionStorage && sessionStorageAvailable()) {\n      window.sessionStorage.setItem(lookupSessionStorage, lng);\n    }\n  }\n};\n\nvar navigator$1 = {\n  name: 'navigator',\n  lookup(options) {\n    const found = [];\n    if (typeof navigator !== 'undefined') {\n      const {\n        languages,\n        userLanguage,\n        language\n      } = navigator;\n      if (languages) {\n        // chrome only; not an array, so can't use .push.apply instead of iterating\n        for (let i = 0; i < languages.length; i++) {\n          found.push(languages[i]);\n        }\n      }\n      if (userLanguage) {\n        found.push(userLanguage);\n      }\n      if (language) {\n        found.push(language);\n      }\n    }\n    return found.length > 0 ? found : undefined;\n  }\n};\n\nvar htmlTag = {\n  name: 'htmlTag',\n  // Deconstruct the options object and extract the htmlTag property\n  lookup(_ref) {\n    let {\n      htmlTag\n    } = _ref;\n    let found;\n    const internalHtmlTag = htmlTag || (typeof document !== 'undefined' ? document.documentElement : null);\n    if (internalHtmlTag && typeof internalHtmlTag.getAttribute === 'function') {\n      found = internalHtmlTag.getAttribute('lang');\n    }\n    return found;\n  }\n};\n\nvar path = {\n  name: 'path',\n  // Deconstruct the options object and extract the lookupFromPathIndex property\n  lookup(_ref) {\n    let {\n      lookupFromPathIndex\n    } = _ref;\n    if (typeof window === 'undefined') return undefined;\n    const language = window.location.pathname.match(/\\/([a-zA-Z-]*)/g);\n    if (!Array.isArray(language)) return undefined;\n    const index = typeof lookupFromPathIndex === 'number' ? lookupFromPathIndex : 0;\n    return language[index]?.replace('/', '');\n  }\n};\n\nvar subdomain = {\n  name: 'subdomain',\n  lookup(_ref) {\n    let {\n      lookupFromSubdomainIndex\n    } = _ref;\n    // If given get the subdomain index else 1\n    const internalLookupFromSubdomainIndex = typeof lookupFromSubdomainIndex === 'number' ? lookupFromSubdomainIndex + 1 : 1;\n    // get all matches if window.location. is existing\n    // first item of match is the match itself and the second is the first group match which should be the first subdomain match\n    // is the hostname no public domain get the or option of localhost\n    const language = typeof window !== 'undefined' && window.location?.hostname?.match(/^(\\w{2,5})\\.(([a-z0-9-]{1,63}\\.[a-z]{2,6})|localhost)/i);\n\n    // if there is no match (null) return undefined\n    if (!language) return undefined;\n    // return the given group match\n    return language[internalLookupFromSubdomainIndex];\n  }\n};\n\n// some environments, throws when accessing document.cookie\nlet canCookies = false;\ntry {\n  // eslint-disable-next-line no-unused-expressions\n  document.cookie;\n  canCookies = true;\n  // eslint-disable-next-line no-empty\n} catch (e) {}\nconst order = ['querystring', 'cookie', 'localStorage', 'sessionStorage', 'navigator', 'htmlTag'];\nif (!canCookies) order.splice(1, 1);\nconst getDefaults = () => ({\n  order,\n  lookupQuerystring: 'lng',\n  lookupCookie: 'i18next',\n  lookupLocalStorage: 'i18nextLng',\n  lookupSessionStorage: 'i18nextLng',\n  // cache user language\n  caches: ['localStorage'],\n  excludeCacheFor: ['cimode'],\n  // cookieMinutes: 10,\n  // cookieDomain: 'myDomain'\n\n  convertDetectedLanguage: l => l\n});\nclass Browser {\n  constructor(services) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.type = 'languageDetector';\n    this.detectors = {};\n    this.init(services, options);\n  }\n  init() {\n    let services = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      languageUtils: {}\n    };\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let i18nOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    this.services = services;\n    this.options = defaults(options, this.options || {}, getDefaults());\n    if (typeof this.options.convertDetectedLanguage === 'string' && this.options.convertDetectedLanguage.indexOf('15897') > -1) {\n      this.options.convertDetectedLanguage = l => l.replace('-', '_');\n    }\n\n    // backwards compatibility\n    if (this.options.lookupFromUrlIndex) this.options.lookupFromPathIndex = this.options.lookupFromUrlIndex;\n    this.i18nOptions = i18nOptions;\n    this.addDetector(cookie$1);\n    this.addDetector(querystring);\n    this.addDetector(localStorage);\n    this.addDetector(sessionStorage);\n    this.addDetector(navigator$1);\n    this.addDetector(htmlTag);\n    this.addDetector(path);\n    this.addDetector(subdomain);\n    this.addDetector(hash);\n  }\n  addDetector(detector) {\n    this.detectors[detector.name] = detector;\n    return this;\n  }\n  detect() {\n    let detectionOrder = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.options.order;\n    let detected = [];\n    detectionOrder.forEach(detectorName => {\n      if (this.detectors[detectorName]) {\n        let lookup = this.detectors[detectorName].lookup(this.options);\n        if (lookup && typeof lookup === 'string') lookup = [lookup];\n        if (lookup) detected = detected.concat(lookup);\n      }\n    });\n    detected = detected.filter(d => d !== undefined && d !== null && !hasXSS(d)).map(d => this.options.convertDetectedLanguage(d));\n    if (this.services && this.services.languageUtils && this.services.languageUtils.getBestMatchFromCodes) return detected; // new i18next v19.5.0\n    return detected.length > 0 ? detected[0] : null; // a little backward compatibility\n  }\n  cacheUserLanguage(lng) {\n    let caches = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.options.caches;\n    if (!caches) return;\n    if (this.options.excludeCacheFor && this.options.excludeCacheFor.indexOf(lng) > -1) return;\n    caches.forEach(cacheName => {\n      if (this.detectors[cacheName]) this.detectors[cacheName].cacheUserLanguage(lng, this.options);\n    });\n  }\n}\nBrowser.type = 'languageDetector';\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/i18next-browser-languagedetector/dist/esm/i18nextBrowserLanguageDetector.js\n"));

/***/ }),

/***/ "./node_modules/i18next/dist/esm/i18next.js":
/*!**************************************************!*\
  !*** ./node_modules/i18next/dist/esm/i18next.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   changeLanguage: function() { return /* binding */ changeLanguage; },\n/* harmony export */   createInstance: function() { return /* binding */ createInstance; },\n/* harmony export */   \"default\": function() { return /* binding */ instance; },\n/* harmony export */   dir: function() { return /* binding */ dir; },\n/* harmony export */   exists: function() { return /* binding */ exists; },\n/* harmony export */   getFixedT: function() { return /* binding */ getFixedT; },\n/* harmony export */   hasLoadedNamespace: function() { return /* binding */ hasLoadedNamespace; },\n/* harmony export */   init: function() { return /* binding */ init; },\n/* harmony export */   loadLanguages: function() { return /* binding */ loadLanguages; },\n/* harmony export */   loadNamespaces: function() { return /* binding */ loadNamespaces; },\n/* harmony export */   loadResources: function() { return /* binding */ loadResources; },\n/* harmony export */   reloadResources: function() { return /* binding */ reloadResources; },\n/* harmony export */   setDefaultNamespace: function() { return /* binding */ setDefaultNamespace; },\n/* harmony export */   t: function() { return /* binding */ t; },\n/* harmony export */   use: function() { return /* binding */ use; }\n/* harmony export */ });\nconst isString = obj => typeof obj === 'string';\nconst defer = () => {\n  let res;\n  let rej;\n  const promise = new Promise((resolve, reject) => {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n};\nconst makeString = object => {\n  if (object == null) return '';\n  return '' + object;\n};\nconst copy = (a, s, t) => {\n  a.forEach(m => {\n    if (s[m]) t[m] = s[m];\n  });\n};\nconst lastOfPathSeparatorRegExp = /###/g;\nconst cleanKey = key => key && key.indexOf('###') > -1 ? key.replace(lastOfPathSeparatorRegExp, '.') : key;\nconst canNotTraverseDeeper = object => !object || isString(object);\nconst getLastOfPath = (object, path, Empty) => {\n  const stack = !isString(path) ? path : path.split('.');\n  let stackIndex = 0;\n  while (stackIndex < stack.length - 1) {\n    if (canNotTraverseDeeper(object)) return {};\n    const key = cleanKey(stack[stackIndex]);\n    if (!object[key] && Empty) object[key] = new Empty();\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n    ++stackIndex;\n  }\n  if (canNotTraverseDeeper(object)) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack[stackIndex])\n  };\n};\nconst setPath = (object, path, newValue) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  if (obj !== undefined || path.length === 1) {\n    obj[k] = newValue;\n    return;\n  }\n  let e = path[path.length - 1];\n  let p = path.slice(0, path.length - 1);\n  let last = getLastOfPath(object, p, Object);\n  while (last.obj === undefined && p.length) {\n    e = `${p[p.length - 1]}.${e}`;\n    p = p.slice(0, p.length - 1);\n    last = getLastOfPath(object, p, Object);\n    if (last?.obj && typeof last.obj[`${last.k}.${e}`] !== 'undefined') {\n      last.obj = undefined;\n    }\n  }\n  last.obj[`${last.k}.${e}`] = newValue;\n};\nconst pushPath = (object, path, newValue, concat) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  obj[k] = obj[k] || [];\n  obj[k].push(newValue);\n};\nconst getPath = (object, path) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path);\n  if (!obj) return undefined;\n  if (!Object.prototype.hasOwnProperty.call(obj, k)) return undefined;\n  return obj[k];\n};\nconst getPathWithDefaults = (data, defaultData, key) => {\n  const value = getPath(data, key);\n  if (value !== undefined) {\n    return value;\n  }\n  return getPath(defaultData, key);\n};\nconst deepExtend = (target, source, overwrite) => {\n  for (const prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        if (isString(target[prop]) || target[prop] instanceof String || isString(source[prop]) || source[prop] instanceof String) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n  return target;\n};\nconst regexEscape = str => str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\nconst escape = data => {\n  if (isString(data)) {\n    return data.replace(/[&<>\"'\\/]/g, s => _entityMap[s]);\n  }\n  return data;\n};\nclass RegExpCache {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.regExpMap = new Map();\n    this.regExpQueue = [];\n  }\n  getRegExp(pattern) {\n    const regExpFromCache = this.regExpMap.get(pattern);\n    if (regExpFromCache !== undefined) {\n      return regExpFromCache;\n    }\n    const regExpNew = new RegExp(pattern);\n    if (this.regExpQueue.length === this.capacity) {\n      this.regExpMap.delete(this.regExpQueue.shift());\n    }\n    this.regExpMap.set(pattern, regExpNew);\n    this.regExpQueue.push(pattern);\n    return regExpNew;\n  }\n}\nconst chars = [' ', ',', '?', '!', ';'];\nconst looksLikeObjectPathRegExpCache = new RegExpCache(20);\nconst looksLikeObjectPath = (key, nsSeparator, keySeparator) => {\n  nsSeparator = nsSeparator || '';\n  keySeparator = keySeparator || '';\n  const possibleChars = chars.filter(c => nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0);\n  if (possibleChars.length === 0) return true;\n  const r = looksLikeObjectPathRegExpCache.getRegExp(`(${possibleChars.map(c => c === '?' ? '\\\\?' : c).join('|')})`);\n  let matched = !r.test(key);\n  if (!matched) {\n    const ki = key.indexOf(keySeparator);\n    if (ki > 0 && !r.test(key.substring(0, ki))) {\n      matched = true;\n    }\n  }\n  return matched;\n};\nconst deepFind = (obj, path, keySeparator = '.') => {\n  if (!obj) return undefined;\n  if (obj[path]) {\n    if (!Object.prototype.hasOwnProperty.call(obj, path)) return undefined;\n    return obj[path];\n  }\n  const tokens = path.split(keySeparator);\n  let current = obj;\n  for (let i = 0; i < tokens.length;) {\n    if (!current || typeof current !== 'object') {\n      return undefined;\n    }\n    let next;\n    let nextPath = '';\n    for (let j = i; j < tokens.length; ++j) {\n      if (j !== i) {\n        nextPath += keySeparator;\n      }\n      nextPath += tokens[j];\n      next = current[nextPath];\n      if (next !== undefined) {\n        if (['string', 'number', 'boolean'].indexOf(typeof next) > -1 && j < tokens.length - 1) {\n          continue;\n        }\n        i += j - i + 1;\n        break;\n      }\n    }\n    current = next;\n  }\n  return current;\n};\nconst getCleanedCode = code => code?.replace('_', '-');\n\nconst consoleLogger = {\n  type: 'logger',\n  log(args) {\n    this.output('log', args);\n  },\n  warn(args) {\n    this.output('warn', args);\n  },\n  error(args) {\n    this.output('error', args);\n  },\n  output(type, args) {\n    console?.[type]?.apply?.(console, args);\n  }\n};\nclass Logger {\n  constructor(concreteLogger, options = {}) {\n    this.init(concreteLogger, options);\n  }\n  init(concreteLogger, options = {}) {\n    this.prefix = options.prefix || 'i18next:';\n    this.logger = concreteLogger || consoleLogger;\n    this.options = options;\n    this.debug = options.debug;\n  }\n  log(...args) {\n    return this.forward(args, 'log', '', true);\n  }\n  warn(...args) {\n    return this.forward(args, 'warn', '', true);\n  }\n  error(...args) {\n    return this.forward(args, 'error', '');\n  }\n  deprecate(...args) {\n    return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n  }\n  forward(args, lvl, prefix, debugOnly) {\n    if (debugOnly && !this.debug) return null;\n    if (isString(args[0])) args[0] = `${prefix}${this.prefix} ${args[0]}`;\n    return this.logger[lvl](args);\n  }\n  create(moduleName) {\n    return new Logger(this.logger, {\n      ...{\n        prefix: `${this.prefix}:${moduleName}:`\n      },\n      ...this.options\n    });\n  }\n  clone(options) {\n    options = options || this.options;\n    options.prefix = options.prefix || this.prefix;\n    return new Logger(this.logger, options);\n  }\n}\nvar baseLogger = new Logger();\n\nclass EventEmitter {\n  constructor() {\n    this.observers = {};\n  }\n  on(events, listener) {\n    events.split(' ').forEach(event => {\n      if (!this.observers[event]) this.observers[event] = new Map();\n      const numListeners = this.observers[event].get(listener) || 0;\n      this.observers[event].set(listener, numListeners + 1);\n    });\n    return this;\n  }\n  off(event, listener) {\n    if (!this.observers[event]) return;\n    if (!listener) {\n      delete this.observers[event];\n      return;\n    }\n    this.observers[event].delete(listener);\n  }\n  emit(event, ...args) {\n    if (this.observers[event]) {\n      const cloned = Array.from(this.observers[event].entries());\n      cloned.forEach(([observer, numTimesAdded]) => {\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer(...args);\n        }\n      });\n    }\n    if (this.observers['*']) {\n      const cloned = Array.from(this.observers['*'].entries());\n      cloned.forEach(([observer, numTimesAdded]) => {\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer.apply(observer, [event, ...args]);\n        }\n      });\n    }\n  }\n}\n\nclass ResourceStore extends EventEmitter {\n  constructor(data, options = {\n    ns: ['translation'],\n    defaultNS: 'translation'\n  }) {\n    super();\n    this.data = data || {};\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    if (this.options.ignoreJSONStructure === undefined) {\n      this.options.ignoreJSONStructure = true;\n    }\n  }\n  addNamespaces(ns) {\n    if (this.options.ns.indexOf(ns) < 0) {\n      this.options.ns.push(ns);\n    }\n  }\n  removeNamespaces(ns) {\n    const index = this.options.ns.indexOf(ns);\n    if (index > -1) {\n      this.options.ns.splice(index, 1);\n    }\n  }\n  getResource(lng, ns, key, options = {}) {\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n    let path;\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n    } else {\n      path = [lng, ns];\n      if (key) {\n        if (Array.isArray(key)) {\n          path.push(...key);\n        } else if (isString(key) && keySeparator) {\n          path.push(...key.split(keySeparator));\n        } else {\n          path.push(key);\n        }\n      }\n    }\n    const result = getPath(this.data, path);\n    if (!result && !ns && !key && lng.indexOf('.') > -1) {\n      lng = path[0];\n      ns = path[1];\n      key = path.slice(2).join('.');\n    }\n    if (result || !ignoreJSONStructure || !isString(key)) return result;\n    return deepFind(this.data?.[lng]?.[ns], key, keySeparator);\n  }\n  addResource(lng, ns, key, value, options = {\n    silent: false\n  }) {\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let path = [lng, ns];\n    if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      value = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    setPath(this.data, path, value);\n    if (!options.silent) this.emit('added', lng, ns, key, value);\n  }\n  addResources(lng, ns, resources, options = {\n    silent: false\n  }) {\n    for (const m in resources) {\n      if (isString(resources[m]) || Array.isArray(resources[m])) this.addResource(lng, ns, m, resources[m], {\n        silent: true\n      });\n    }\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  addResourceBundle(lng, ns, resources, deep, overwrite, options = {\n    silent: false,\n    skipCopy: false\n  }) {\n    let path = [lng, ns];\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      deep = resources;\n      resources = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    let pack = getPath(this.data, path) || {};\n    if (!options.skipCopy) resources = JSON.parse(JSON.stringify(resources));\n    if (deep) {\n      deepExtend(pack, resources, overwrite);\n    } else {\n      pack = {\n        ...pack,\n        ...resources\n      };\n    }\n    setPath(this.data, path, pack);\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  removeResourceBundle(lng, ns) {\n    if (this.hasResourceBundle(lng, ns)) {\n      delete this.data[lng][ns];\n    }\n    this.removeNamespaces(ns);\n    this.emit('removed', lng, ns);\n  }\n  hasResourceBundle(lng, ns) {\n    return this.getResource(lng, ns) !== undefined;\n  }\n  getResourceBundle(lng, ns) {\n    if (!ns) ns = this.options.defaultNS;\n    return this.getResource(lng, ns);\n  }\n  getDataByLanguage(lng) {\n    return this.data[lng];\n  }\n  hasLanguageSomeTranslations(lng) {\n    const data = this.getDataByLanguage(lng);\n    const n = data && Object.keys(data) || [];\n    return !!n.find(v => data[v] && Object.keys(data[v]).length > 0);\n  }\n  toJSON() {\n    return this.data;\n  }\n}\n\nvar postProcessor = {\n  processors: {},\n  addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle(processors, value, key, options, translator) {\n    processors.forEach(processor => {\n      value = this.processors[processor]?.process(value, key, options, translator) ?? value;\n    });\n    return value;\n  }\n};\n\nconst checkedLoadedFor = {};\nconst shouldHandleAsObject = res => !isString(res) && typeof res !== 'boolean' && typeof res !== 'number';\nclass Translator extends EventEmitter {\n  constructor(services, options = {}) {\n    super();\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, this);\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    this.logger = baseLogger.create('translator');\n  }\n  changeLanguage(lng) {\n    if (lng) this.language = lng;\n  }\n  exists(key, o = {\n    interpolation: {}\n  }) {\n    const opt = {\n      ...o\n    };\n    if (key == null) return false;\n    const resolved = this.resolve(key, opt);\n    return resolved?.res !== undefined;\n  }\n  extractFromKey(key, opt) {\n    let nsSeparator = opt.nsSeparator !== undefined ? opt.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const keySeparator = opt.keySeparator !== undefined ? opt.keySeparator : this.options.keySeparator;\n    let namespaces = opt.ns || this.options.defaultNS || [];\n    const wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n    const seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !opt.keySeparator && !this.options.userDefinedNsSeparator && !opt.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);\n    if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n      const m = key.match(this.interpolator.nestingRegexp);\n      if (m && m.length > 0) {\n        return {\n          key,\n          namespaces: isString(namespaces) ? [namespaces] : namespaces\n        };\n      }\n      const parts = key.split(nsSeparator);\n      if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n      key = parts.join(keySeparator);\n    }\n    return {\n      key,\n      namespaces: isString(namespaces) ? [namespaces] : namespaces\n    };\n  }\n  translate(keys, o, lastKey) {\n    let opt = typeof o === 'object' ? {\n      ...o\n    } : o;\n    if (typeof opt !== 'object' && this.options.overloadTranslationOptionHandler) {\n      opt = this.options.overloadTranslationOptionHandler(arguments);\n    }\n    if (typeof options === 'object') opt = {\n      ...opt\n    };\n    if (!opt) opt = {};\n    if (keys == null) return '';\n    if (!Array.isArray(keys)) keys = [String(keys)];\n    const returnDetails = opt.returnDetails !== undefined ? opt.returnDetails : this.options.returnDetails;\n    const keySeparator = opt.keySeparator !== undefined ? opt.keySeparator : this.options.keySeparator;\n    const {\n      key,\n      namespaces\n    } = this.extractFromKey(keys[keys.length - 1], opt);\n    const namespace = namespaces[namespaces.length - 1];\n    let nsSeparator = opt.nsSeparator !== undefined ? opt.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const lng = opt.lng || this.language;\n    const appendNamespaceToCIMode = opt.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n    if (lng?.toLowerCase() === 'cimode') {\n      if (appendNamespaceToCIMode) {\n        if (returnDetails) {\n          return {\n            res: `${namespace}${nsSeparator}${key}`,\n            usedKey: key,\n            exactUsedKey: key,\n            usedLng: lng,\n            usedNS: namespace,\n            usedParams: this.getUsedParamsDetails(opt)\n          };\n        }\n        return `${namespace}${nsSeparator}${key}`;\n      }\n      if (returnDetails) {\n        return {\n          res: key,\n          usedKey: key,\n          exactUsedKey: key,\n          usedLng: lng,\n          usedNS: namespace,\n          usedParams: this.getUsedParamsDetails(opt)\n        };\n      }\n      return key;\n    }\n    const resolved = this.resolve(keys, opt);\n    let res = resolved?.res;\n    const resUsedKey = resolved?.usedKey || key;\n    const resExactUsedKey = resolved?.exactUsedKey || key;\n    const noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n    const joinArrays = opt.joinArrays !== undefined ? opt.joinArrays : this.options.joinArrays;\n    const handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n    const needsPluralHandling = opt.count !== undefined && !isString(opt.count);\n    const hasDefaultValue = Translator.hasDefaultValue(opt);\n    const defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, opt.count, opt) : '';\n    const defaultValueSuffixOrdinalFallback = opt.ordinal && needsPluralHandling ? this.pluralResolver.getSuffix(lng, opt.count, {\n      ordinal: false\n    }) : '';\n    const needsZeroSuffixLookup = needsPluralHandling && !opt.ordinal && opt.count === 0;\n    const defaultValue = needsZeroSuffixLookup && opt[`defaultValue${this.options.pluralSeparator}zero`] || opt[`defaultValue${defaultValueSuffix}`] || opt[`defaultValue${defaultValueSuffixOrdinalFallback}`] || opt.defaultValue;\n    let resForObjHndl = res;\n    if (handleAsObjectInI18nFormat && !res && hasDefaultValue) {\n      resForObjHndl = defaultValue;\n    }\n    const handleAsObject = shouldHandleAsObject(resForObjHndl);\n    const resType = Object.prototype.toString.apply(resForObjHndl);\n    if (handleAsObjectInI18nFormat && resForObjHndl && handleAsObject && noObject.indexOf(resType) < 0 && !(isString(joinArrays) && Array.isArray(resForObjHndl))) {\n      if (!opt.returnObjects && !this.options.returnObjects) {\n        if (!this.options.returnedObjectHandler) {\n          this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n        }\n        const r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, resForObjHndl, {\n          ...opt,\n          ns: namespaces\n        }) : `key '${key} (${this.language})' returned an object instead of string.`;\n        if (returnDetails) {\n          resolved.res = r;\n          resolved.usedParams = this.getUsedParamsDetails(opt);\n          return resolved;\n        }\n        return r;\n      }\n      if (keySeparator) {\n        const resTypeIsArray = Array.isArray(resForObjHndl);\n        const copy = resTypeIsArray ? [] : {};\n        const newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n        for (const m in resForObjHndl) {\n          if (Object.prototype.hasOwnProperty.call(resForObjHndl, m)) {\n            const deepKey = `${newKeyToUse}${keySeparator}${m}`;\n            if (hasDefaultValue && !res) {\n              copy[m] = this.translate(deepKey, {\n                ...opt,\n                defaultValue: shouldHandleAsObject(defaultValue) ? defaultValue[m] : undefined,\n                ...{\n                  joinArrays: false,\n                  ns: namespaces\n                }\n              });\n            } else {\n              copy[m] = this.translate(deepKey, {\n                ...opt,\n                ...{\n                  joinArrays: false,\n                  ns: namespaces\n                }\n              });\n            }\n            if (copy[m] === deepKey) copy[m] = resForObjHndl[m];\n          }\n        }\n        res = copy;\n      }\n    } else if (handleAsObjectInI18nFormat && isString(joinArrays) && Array.isArray(res)) {\n      res = res.join(joinArrays);\n      if (res) res = this.extendTranslation(res, keys, opt, lastKey);\n    } else {\n      let usedDefault = false;\n      let usedKey = false;\n      if (!this.isValidLookup(res) && hasDefaultValue) {\n        usedDefault = true;\n        res = defaultValue;\n      }\n      if (!this.isValidLookup(res)) {\n        usedKey = true;\n        res = key;\n      }\n      const missingKeyNoValueFallbackToKey = opt.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n      const resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n      const updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n      if (usedKey || usedDefault || updateMissing) {\n        this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n        if (keySeparator) {\n          const fk = this.resolve(key, {\n            ...opt,\n            keySeparator: false\n          });\n          if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n        }\n        let lngs = [];\n        const fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, opt.lng || this.language);\n        if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n          for (let i = 0; i < fallbackLngs.length; i++) {\n            lngs.push(fallbackLngs[i]);\n          }\n        } else if (this.options.saveMissingTo === 'all') {\n          lngs = this.languageUtils.toResolveHierarchy(opt.lng || this.language);\n        } else {\n          lngs.push(opt.lng || this.language);\n        }\n        const send = (l, k, specificDefaultValue) => {\n          const defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n          if (this.options.missingKeyHandler) {\n            this.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, opt);\n          } else if (this.backendConnector?.saveMissing) {\n            this.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, opt);\n          }\n          this.emit('missingKey', l, namespace, k, res);\n        };\n        if (this.options.saveMissing) {\n          if (this.options.saveMissingPlurals && needsPluralHandling) {\n            lngs.forEach(language => {\n              const suffixes = this.pluralResolver.getSuffixes(language, opt);\n              if (needsZeroSuffixLookup && opt[`defaultValue${this.options.pluralSeparator}zero`] && suffixes.indexOf(`${this.options.pluralSeparator}zero`) < 0) {\n                suffixes.push(`${this.options.pluralSeparator}zero`);\n              }\n              suffixes.forEach(suffix => {\n                send([language], key + suffix, opt[`defaultValue${suffix}`] || defaultValue);\n              });\n            });\n          } else {\n            send(lngs, key, defaultValue);\n          }\n        }\n      }\n      res = this.extendTranslation(res, keys, opt, resolved, lastKey);\n      if (usedKey && res === key && this.options.appendNamespaceToMissingKey) {\n        res = `${namespace}${nsSeparator}${key}`;\n      }\n      if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {\n        res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${namespace}${nsSeparator}${key}` : key, usedDefault ? res : undefined, opt);\n      }\n    }\n    if (returnDetails) {\n      resolved.res = res;\n      resolved.usedParams = this.getUsedParamsDetails(opt);\n      return resolved;\n    }\n    return res;\n  }\n  extendTranslation(res, key, opt, resolved, lastKey) {\n    if (this.i18nFormat?.parse) {\n      res = this.i18nFormat.parse(res, {\n        ...this.options.interpolation.defaultVariables,\n        ...opt\n      }, opt.lng || this.language || resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n        resolved\n      });\n    } else if (!opt.skipInterpolation) {\n      if (opt.interpolation) this.interpolator.init({\n        ...opt,\n        ...{\n          interpolation: {\n            ...this.options.interpolation,\n            ...opt.interpolation\n          }\n        }\n      });\n      const skipOnVariables = isString(res) && (opt?.interpolation?.skipOnVariables !== undefined ? opt.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);\n      let nestBef;\n      if (skipOnVariables) {\n        const nb = res.match(this.interpolator.nestingRegexp);\n        nestBef = nb && nb.length;\n      }\n      let data = opt.replace && !isString(opt.replace) ? opt.replace : opt;\n      if (this.options.interpolation.defaultVariables) data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n      res = this.interpolator.interpolate(res, data, opt.lng || this.language || resolved.usedLng, opt);\n      if (skipOnVariables) {\n        const na = res.match(this.interpolator.nestingRegexp);\n        const nestAft = na && na.length;\n        if (nestBef < nestAft) opt.nest = false;\n      }\n      if (!opt.lng && resolved && resolved.res) opt.lng = this.language || resolved.usedLng;\n      if (opt.nest !== false) res = this.interpolator.nest(res, (...args) => {\n        if (lastKey?.[0] === args[0] && !opt.context) {\n          this.logger.warn(`It seems you are nesting recursively key: ${args[0]} in key: ${key[0]}`);\n          return null;\n        }\n        return this.translate(...args, key);\n      }, opt);\n      if (opt.interpolation) this.interpolator.reset();\n    }\n    const postProcess = opt.postProcess || this.options.postProcess;\n    const postProcessorNames = isString(postProcess) ? [postProcess] : postProcess;\n    if (res != null && postProcessorNames?.length && opt.applyPostProcessor !== false) {\n      res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? {\n        i18nResolved: {\n          ...resolved,\n          usedParams: this.getUsedParamsDetails(opt)\n        },\n        ...opt\n      } : opt, this);\n    }\n    return res;\n  }\n  resolve(keys, opt = {}) {\n    let found;\n    let usedKey;\n    let exactUsedKey;\n    let usedLng;\n    let usedNS;\n    if (isString(keys)) keys = [keys];\n    keys.forEach(k => {\n      if (this.isValidLookup(found)) return;\n      const extracted = this.extractFromKey(k, opt);\n      const key = extracted.key;\n      usedKey = key;\n      let namespaces = extracted.namespaces;\n      if (this.options.fallbackNS) namespaces = namespaces.concat(this.options.fallbackNS);\n      const needsPluralHandling = opt.count !== undefined && !isString(opt.count);\n      const needsZeroSuffixLookup = needsPluralHandling && !opt.ordinal && opt.count === 0;\n      const needsContextHandling = opt.context !== undefined && (isString(opt.context) || typeof opt.context === 'number') && opt.context !== '';\n      const codes = opt.lngs ? opt.lngs : this.languageUtils.toResolveHierarchy(opt.lng || this.language, opt.fallbackLng);\n      namespaces.forEach(ns => {\n        if (this.isValidLookup(found)) return;\n        usedNS = ns;\n        if (!checkedLoadedFor[`${codes[0]}-${ns}`] && this.utils?.hasLoadedNamespace && !this.utils?.hasLoadedNamespace(usedNS)) {\n          checkedLoadedFor[`${codes[0]}-${ns}`] = true;\n          this.logger.warn(`key \"${usedKey}\" for languages \"${codes.join(', ')}\" won't get resolved as namespace \"${usedNS}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        }\n        codes.forEach(code => {\n          if (this.isValidLookup(found)) return;\n          usedLng = code;\n          const finalKeys = [key];\n          if (this.i18nFormat?.addLookupKeys) {\n            this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, opt);\n          } else {\n            let pluralSuffix;\n            if (needsPluralHandling) pluralSuffix = this.pluralResolver.getSuffix(code, opt.count, opt);\n            const zeroSuffix = `${this.options.pluralSeparator}zero`;\n            const ordinalPrefix = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;\n            if (needsPluralHandling) {\n              finalKeys.push(key + pluralSuffix);\n              if (opt.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                finalKeys.push(key + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n              }\n              if (needsZeroSuffixLookup) {\n                finalKeys.push(key + zeroSuffix);\n              }\n            }\n            if (needsContextHandling) {\n              const contextKey = `${key}${this.options.contextSeparator}${opt.context}`;\n              finalKeys.push(contextKey);\n              if (needsPluralHandling) {\n                finalKeys.push(contextKey + pluralSuffix);\n                if (opt.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                  finalKeys.push(contextKey + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n                }\n                if (needsZeroSuffixLookup) {\n                  finalKeys.push(contextKey + zeroSuffix);\n                }\n              }\n            }\n          }\n          let possibleKey;\n          while (possibleKey = finalKeys.pop()) {\n            if (!this.isValidLookup(found)) {\n              exactUsedKey = possibleKey;\n              found = this.getResource(code, ns, possibleKey, opt);\n            }\n          }\n        });\n      });\n    });\n    return {\n      res: found,\n      usedKey,\n      exactUsedKey,\n      usedLng,\n      usedNS\n    };\n  }\n  isValidLookup(res) {\n    return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n  }\n  getResource(code, ns, key, options = {}) {\n    if (this.i18nFormat?.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n    return this.resourceStore.getResource(code, ns, key, options);\n  }\n  getUsedParamsDetails(options = {}) {\n    const optionsKeys = ['defaultValue', 'ordinal', 'context', 'replace', 'lng', 'lngs', 'fallbackLng', 'ns', 'keySeparator', 'nsSeparator', 'returnObjects', 'returnDetails', 'joinArrays', 'postProcess', 'interpolation'];\n    const useOptionsReplaceForData = options.replace && !isString(options.replace);\n    let data = useOptionsReplaceForData ? options.replace : options;\n    if (useOptionsReplaceForData && typeof options.count !== 'undefined') {\n      data.count = options.count;\n    }\n    if (this.options.interpolation.defaultVariables) {\n      data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n    }\n    if (!useOptionsReplaceForData) {\n      data = {\n        ...data\n      };\n      for (const key of optionsKeys) {\n        delete data[key];\n      }\n    }\n    return data;\n  }\n  static hasDefaultValue(options) {\n    const prefix = 'defaultValue';\n    for (const option in options) {\n      if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nclass LanguageUtil {\n  constructor(options) {\n    this.options = options;\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n  getScriptPartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return null;\n    const p = code.split('-');\n    if (p.length === 2) return null;\n    p.pop();\n    if (p[p.length - 1].toLowerCase() === 'x') return null;\n    return this.formatLanguageCode(p.join('-'));\n  }\n  getLanguagePartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return code;\n    const p = code.split('-');\n    return this.formatLanguageCode(p[0]);\n  }\n  formatLanguageCode(code) {\n    if (isString(code) && code.indexOf('-') > -1) {\n      let formattedCode;\n      try {\n        formattedCode = Intl.getCanonicalLocales(code)[0];\n      } catch (e) {}\n      if (formattedCode && this.options.lowerCaseLng) {\n        formattedCode = formattedCode.toLowerCase();\n      }\n      if (formattedCode) return formattedCode;\n      if (this.options.lowerCaseLng) {\n        return code.toLowerCase();\n      }\n      return code;\n    }\n    return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n  }\n  isSupportedCode(code) {\n    if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n      code = this.getLanguagePartFromCode(code);\n    }\n    return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n  }\n  getBestMatchFromCodes(codes) {\n    if (!codes) return null;\n    let found;\n    codes.forEach(code => {\n      if (found) return;\n      const cleanedLng = this.formatLanguageCode(code);\n      if (!this.options.supportedLngs || this.isSupportedCode(cleanedLng)) found = cleanedLng;\n    });\n    if (!found && this.options.supportedLngs) {\n      codes.forEach(code => {\n        if (found) return;\n        const lngScOnly = this.getScriptPartFromCode(code);\n        if (this.isSupportedCode(lngScOnly)) return found = lngScOnly;\n        const lngOnly = this.getLanguagePartFromCode(code);\n        if (this.isSupportedCode(lngOnly)) return found = lngOnly;\n        found = this.options.supportedLngs.find(supportedLng => {\n          if (supportedLng === lngOnly) return supportedLng;\n          if (supportedLng.indexOf('-') < 0 && lngOnly.indexOf('-') < 0) return;\n          if (supportedLng.indexOf('-') > 0 && lngOnly.indexOf('-') < 0 && supportedLng.substring(0, supportedLng.indexOf('-')) === lngOnly) return supportedLng;\n          if (supportedLng.indexOf(lngOnly) === 0 && lngOnly.length > 1) return supportedLng;\n        });\n      });\n    }\n    if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n    return found;\n  }\n  getFallbackCodes(fallbacks, code) {\n    if (!fallbacks) return [];\n    if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n    if (isString(fallbacks)) fallbacks = [fallbacks];\n    if (Array.isArray(fallbacks)) return fallbacks;\n    if (!code) return fallbacks.default || [];\n    let found = fallbacks[code];\n    if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n    if (!found) found = fallbacks[this.formatLanguageCode(code)];\n    if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n    if (!found) found = fallbacks.default;\n    return found || [];\n  }\n  toResolveHierarchy(code, fallbackCode) {\n    const fallbackCodes = this.getFallbackCodes((fallbackCode === false ? [] : fallbackCode) || this.options.fallbackLng || [], code);\n    const codes = [];\n    const addCode = c => {\n      if (!c) return;\n      if (this.isSupportedCode(c)) {\n        codes.push(c);\n      } else {\n        this.logger.warn(`rejecting language code not found in supportedLngs: ${c}`);\n      }\n    };\n    if (isString(code) && (code.indexOf('-') > -1 || code.indexOf('_') > -1)) {\n      if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n      if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n      if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n    } else if (isString(code)) {\n      addCode(this.formatLanguageCode(code));\n    }\n    fallbackCodes.forEach(fc => {\n      if (codes.indexOf(fc) < 0) addCode(this.formatLanguageCode(fc));\n    });\n    return codes;\n  }\n}\n\nconst suffixesOrder = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  few: 3,\n  many: 4,\n  other: 5\n};\nconst dummyRule = {\n  select: count => count === 1 ? 'one' : 'other',\n  resolvedOptions: () => ({\n    pluralCategories: ['one', 'other']\n  })\n};\nclass PluralResolver {\n  constructor(languageUtils, options = {}) {\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    this.pluralRulesCache = {};\n  }\n  addRule(lng, obj) {\n    this.rules[lng] = obj;\n  }\n  clearCache() {\n    this.pluralRulesCache = {};\n  }\n  getRule(code, options = {}) {\n    const cleanedCode = getCleanedCode(code === 'dev' ? 'en' : code);\n    const type = options.ordinal ? 'ordinal' : 'cardinal';\n    const cacheKey = JSON.stringify({\n      cleanedCode,\n      type\n    });\n    if (cacheKey in this.pluralRulesCache) {\n      return this.pluralRulesCache[cacheKey];\n    }\n    let rule;\n    try {\n      rule = new Intl.PluralRules(cleanedCode, {\n        type\n      });\n    } catch (err) {\n      if (!Intl) {\n        this.logger.error('No Intl support, please use an Intl polyfill!');\n        return dummyRule;\n      }\n      if (!code.match(/-|_/)) return dummyRule;\n      const lngPart = this.languageUtils.getLanguagePartFromCode(code);\n      rule = this.getRule(lngPart, options);\n    }\n    this.pluralRulesCache[cacheKey] = rule;\n    return rule;\n  }\n  needsPlural(code, options = {}) {\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    return rule?.resolvedOptions().pluralCategories.length > 1;\n  }\n  getPluralFormsOfKey(code, key, options = {}) {\n    return this.getSuffixes(code, options).map(suffix => `${key}${suffix}`);\n  }\n  getSuffixes(code, options = {}) {\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    if (!rule) return [];\n    return rule.resolvedOptions().pluralCategories.sort((pluralCategory1, pluralCategory2) => suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2]).map(pluralCategory => `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${pluralCategory}`);\n  }\n  getSuffix(code, count, options = {}) {\n    const rule = this.getRule(code, options);\n    if (rule) {\n      return `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${rule.select(count)}`;\n    }\n    this.logger.warn(`no plural rule found for: ${code}`);\n    return this.getSuffix('dev', count, options);\n  }\n}\n\nconst deepFindWithDefaults = (data, defaultData, key, keySeparator = '.', ignoreJSONStructure = true) => {\n  let path = getPathWithDefaults(data, defaultData, key);\n  if (!path && ignoreJSONStructure && isString(key)) {\n    path = deepFind(data, key, keySeparator);\n    if (path === undefined) path = deepFind(defaultData, key, keySeparator);\n  }\n  return path;\n};\nconst regexSafe = val => val.replace(/\\$/g, '$$$$');\nclass Interpolator {\n  constructor(options = {}) {\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n    this.format = options?.interpolation?.format || (value => value);\n    this.init(options);\n  }\n  init(options = {}) {\n    if (!options.interpolation) options.interpolation = {\n      escapeValue: true\n    };\n    const {\n      escape: escape$1,\n      escapeValue,\n      useRawValueToEscape,\n      prefix,\n      prefixEscaped,\n      suffix,\n      suffixEscaped,\n      formatSeparator,\n      unescapeSuffix,\n      unescapePrefix,\n      nestingPrefix,\n      nestingPrefixEscaped,\n      nestingSuffix,\n      nestingSuffixEscaped,\n      nestingOptionsSeparator,\n      maxReplaces,\n      alwaysFormat\n    } = options.interpolation;\n    this.escape = escape$1 !== undefined ? escape$1 : escape;\n    this.escapeValue = escapeValue !== undefined ? escapeValue : true;\n    this.useRawValueToEscape = useRawValueToEscape !== undefined ? useRawValueToEscape : false;\n    this.prefix = prefix ? regexEscape(prefix) : prefixEscaped || '{{';\n    this.suffix = suffix ? regexEscape(suffix) : suffixEscaped || '}}';\n    this.formatSeparator = formatSeparator || ',';\n    this.unescapePrefix = unescapeSuffix ? '' : unescapePrefix || '-';\n    this.unescapeSuffix = this.unescapePrefix ? '' : unescapeSuffix || '';\n    this.nestingPrefix = nestingPrefix ? regexEscape(nestingPrefix) : nestingPrefixEscaped || regexEscape('$t(');\n    this.nestingSuffix = nestingSuffix ? regexEscape(nestingSuffix) : nestingSuffixEscaped || regexEscape(')');\n    this.nestingOptionsSeparator = nestingOptionsSeparator || ',';\n    this.maxReplaces = maxReplaces || 1000;\n    this.alwaysFormat = alwaysFormat !== undefined ? alwaysFormat : false;\n    this.resetRegExp();\n  }\n  reset() {\n    if (this.options) this.init(this.options);\n  }\n  resetRegExp() {\n    const getOrResetRegExp = (existingRegExp, pattern) => {\n      if (existingRegExp?.source === pattern) {\n        existingRegExp.lastIndex = 0;\n        return existingRegExp;\n      }\n      return new RegExp(pattern, 'g');\n    };\n    this.regexp = getOrResetRegExp(this.regexp, `${this.prefix}(.+?)${this.suffix}`);\n    this.regexpUnescape = getOrResetRegExp(this.regexpUnescape, `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`);\n    this.nestingRegexp = getOrResetRegExp(this.nestingRegexp, `${this.nestingPrefix}((?:[^()\"']+|\"[^\"]*\"|'[^']*'|\\\\((?:[^()]|\"[^\"]*\"|'[^']*')*\\\\))*?)${this.nestingSuffix}`);\n  }\n  interpolate(str, data, lng, options) {\n    let match;\n    let value;\n    let replaces;\n    const defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n    const handleFormat = key => {\n      if (key.indexOf(this.formatSeparator) < 0) {\n        const path = deepFindWithDefaults(data, defaultData, key, this.options.keySeparator, this.options.ignoreJSONStructure);\n        return this.alwaysFormat ? this.format(path, undefined, lng, {\n          ...options,\n          ...data,\n          interpolationkey: key\n        }) : path;\n      }\n      const p = key.split(this.formatSeparator);\n      const k = p.shift().trim();\n      const f = p.join(this.formatSeparator).trim();\n      return this.format(deepFindWithDefaults(data, defaultData, k, this.options.keySeparator, this.options.ignoreJSONStructure), f, lng, {\n        ...options,\n        ...data,\n        interpolationkey: k\n      });\n    };\n    this.resetRegExp();\n    const missingInterpolationHandler = options?.missingInterpolationHandler || this.options.missingInterpolationHandler;\n    const skipOnVariables = options?.interpolation?.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;\n    const todos = [{\n      regex: this.regexpUnescape,\n      safeValue: val => regexSafe(val)\n    }, {\n      regex: this.regexp,\n      safeValue: val => this.escapeValue ? regexSafe(this.escape(val)) : regexSafe(val)\n    }];\n    todos.forEach(todo => {\n      replaces = 0;\n      while (match = todo.regex.exec(str)) {\n        const matchedVar = match[1].trim();\n        value = handleFormat(matchedVar);\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            const temp = missingInterpolationHandler(str, match, options);\n            value = isString(temp) ? temp : '';\n          } else if (options && Object.prototype.hasOwnProperty.call(options, matchedVar)) {\n            value = '';\n          } else if (skipOnVariables) {\n            value = match[0];\n            continue;\n          } else {\n            this.logger.warn(`missed to pass in variable ${matchedVar} for interpolating ${str}`);\n            value = '';\n          }\n        } else if (!isString(value) && !this.useRawValueToEscape) {\n          value = makeString(value);\n        }\n        const safeValue = todo.safeValue(value);\n        str = str.replace(match[0], safeValue);\n        if (skipOnVariables) {\n          todo.regex.lastIndex += value.length;\n          todo.regex.lastIndex -= match[0].length;\n        } else {\n          todo.regex.lastIndex = 0;\n        }\n        replaces++;\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n    });\n    return str;\n  }\n  nest(str, fc, options = {}) {\n    let match;\n    let value;\n    let clonedOptions;\n    const handleHasOptions = (key, inheritedOptions) => {\n      const sep = this.nestingOptionsSeparator;\n      if (key.indexOf(sep) < 0) return key;\n      const c = key.split(new RegExp(`${sep}[ ]*{`));\n      let optionsString = `{${c[1]}`;\n      key = c[0];\n      optionsString = this.interpolate(optionsString, clonedOptions);\n      const matchedSingleQuotes = optionsString.match(/'/g);\n      const matchedDoubleQuotes = optionsString.match(/\"/g);\n      if ((matchedSingleQuotes?.length ?? 0) % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {\n        optionsString = optionsString.replace(/'/g, '\"');\n      }\n      try {\n        clonedOptions = JSON.parse(optionsString);\n        if (inheritedOptions) clonedOptions = {\n          ...inheritedOptions,\n          ...clonedOptions\n        };\n      } catch (e) {\n        this.logger.warn(`failed parsing options string in nesting for key ${key}`, e);\n        return `${key}${sep}${optionsString}`;\n      }\n      if (clonedOptions.defaultValue && clonedOptions.defaultValue.indexOf(this.prefix) > -1) delete clonedOptions.defaultValue;\n      return key;\n    };\n    while (match = this.nestingRegexp.exec(str)) {\n      let formatters = [];\n      clonedOptions = {\n        ...options\n      };\n      clonedOptions = clonedOptions.replace && !isString(clonedOptions.replace) ? clonedOptions.replace : clonedOptions;\n      clonedOptions.applyPostProcessor = false;\n      delete clonedOptions.defaultValue;\n      const keyEndIndex = /{.*}/.test(match[1]) ? match[1].lastIndexOf('}') + 1 : match[1].indexOf(this.formatSeparator);\n      if (keyEndIndex !== -1) {\n        formatters = match[1].slice(keyEndIndex).split(this.formatSeparator).map(elem => elem.trim()).filter(Boolean);\n        match[1] = match[1].slice(0, keyEndIndex);\n      }\n      value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n      if (value && match[0] === str && !isString(value)) return value;\n      if (!isString(value)) value = makeString(value);\n      if (!value) {\n        this.logger.warn(`missed to resolve ${match[1]} for nesting ${str}`);\n        value = '';\n      }\n      if (formatters.length) {\n        value = formatters.reduce((v, f) => this.format(v, f, options.lng, {\n          ...options,\n          interpolationkey: match[1].trim()\n        }), value.trim());\n      }\n      str = str.replace(match[0], value);\n      this.regexp.lastIndex = 0;\n    }\n    return str;\n  }\n}\n\nconst parseFormatStr = formatStr => {\n  let formatName = formatStr.toLowerCase().trim();\n  const formatOptions = {};\n  if (formatStr.indexOf('(') > -1) {\n    const p = formatStr.split('(');\n    formatName = p[0].toLowerCase().trim();\n    const optStr = p[1].substring(0, p[1].length - 1);\n    if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n    } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.range) formatOptions.range = optStr.trim();\n    } else {\n      const opts = optStr.split(';');\n      opts.forEach(opt => {\n        if (opt) {\n          const [key, ...rest] = opt.split(':');\n          const val = rest.join(':').trim().replace(/^'+|'+$/g, '');\n          const trimmedKey = key.trim();\n          if (!formatOptions[trimmedKey]) formatOptions[trimmedKey] = val;\n          if (val === 'false') formatOptions[trimmedKey] = false;\n          if (val === 'true') formatOptions[trimmedKey] = true;\n          if (!isNaN(val)) formatOptions[trimmedKey] = parseInt(val, 10);\n        }\n      });\n    }\n  }\n  return {\n    formatName,\n    formatOptions\n  };\n};\nconst createCachedFormatter = fn => {\n  const cache = {};\n  return (v, l, o) => {\n    let optForCache = o;\n    if (o && o.interpolationkey && o.formatParams && o.formatParams[o.interpolationkey] && o[o.interpolationkey]) {\n      optForCache = {\n        ...optForCache,\n        [o.interpolationkey]: undefined\n      };\n    }\n    const key = l + JSON.stringify(optForCache);\n    let frm = cache[key];\n    if (!frm) {\n      frm = fn(getCleanedCode(l), o);\n      cache[key] = frm;\n    }\n    return frm(v);\n  };\n};\nconst createNonCachedFormatter = fn => (v, l, o) => fn(getCleanedCode(l), o)(v);\nclass Formatter {\n  constructor(options = {}) {\n    this.logger = baseLogger.create('formatter');\n    this.options = options;\n    this.init(options);\n  }\n  init(services, options = {\n    interpolation: {}\n  }) {\n    this.formatSeparator = options.interpolation.formatSeparator || ',';\n    const cf = options.cacheInBuiltFormats ? createCachedFormatter : createNonCachedFormatter;\n    this.formats = {\n      number: cf((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      currency: cf((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt,\n          style: 'currency'\n        });\n        return val => formatter.format(val);\n      }),\n      datetime: cf((lng, opt) => {\n        const formatter = new Intl.DateTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      relativetime: cf((lng, opt) => {\n        const formatter = new Intl.RelativeTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val, opt.range || 'day');\n      }),\n      list: cf((lng, opt) => {\n        const formatter = new Intl.ListFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      })\n    };\n  }\n  add(name, fc) {\n    this.formats[name.toLowerCase().trim()] = fc;\n  }\n  addCached(name, fc) {\n    this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);\n  }\n  format(value, format, lng, options = {}) {\n    const formats = format.split(this.formatSeparator);\n    if (formats.length > 1 && formats[0].indexOf('(') > 1 && formats[0].indexOf(')') < 0 && formats.find(f => f.indexOf(')') > -1)) {\n      const lastIndex = formats.findIndex(f => f.indexOf(')') > -1);\n      formats[0] = [formats[0], ...formats.splice(1, lastIndex)].join(this.formatSeparator);\n    }\n    const result = formats.reduce((mem, f) => {\n      const {\n        formatName,\n        formatOptions\n      } = parseFormatStr(f);\n      if (this.formats[formatName]) {\n        let formatted = mem;\n        try {\n          const valOptions = options?.formatParams?.[options.interpolationkey] || {};\n          const l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n          formatted = this.formats[formatName](mem, l, {\n            ...formatOptions,\n            ...options,\n            ...valOptions\n          });\n        } catch (error) {\n          this.logger.warn(error);\n        }\n        return formatted;\n      } else {\n        this.logger.warn(`there was no format function for ${formatName}`);\n      }\n      return mem;\n    }, value);\n    return result;\n  }\n}\n\nconst removePending = (q, name) => {\n  if (q.pending[name] !== undefined) {\n    delete q.pending[name];\n    q.pendingCount--;\n  }\n};\nclass Connector extends EventEmitter {\n  constructor(backend, store, services, options = {}) {\n    super();\n    this.backend = backend;\n    this.store = store;\n    this.services = services;\n    this.languageUtils = services.languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('backendConnector');\n    this.waitingReads = [];\n    this.maxParallelReads = options.maxParallelReads || 10;\n    this.readingCalls = 0;\n    this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n    this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n    this.state = {};\n    this.queue = [];\n    this.backend?.init?.(services, options.backend, options);\n  }\n  queueLoad(languages, namespaces, options, callback) {\n    const toLoad = {};\n    const pending = {};\n    const toLoadLanguages = {};\n    const toLoadNamespaces = {};\n    languages.forEach(lng => {\n      let hasAllNamespaces = true;\n      namespaces.forEach(ns => {\n        const name = `${lng}|${ns}`;\n        if (!options.reload && this.store.hasResourceBundle(lng, ns)) {\n          this.state[name] = 2;\n        } else if (this.state[name] < 0) ; else if (this.state[name] === 1) {\n          if (pending[name] === undefined) pending[name] = true;\n        } else {\n          this.state[name] = 1;\n          hasAllNamespaces = false;\n          if (pending[name] === undefined) pending[name] = true;\n          if (toLoad[name] === undefined) toLoad[name] = true;\n          if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n        }\n      });\n      if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n    });\n    if (Object.keys(toLoad).length || Object.keys(pending).length) {\n      this.queue.push({\n        pending,\n        pendingCount: Object.keys(pending).length,\n        loaded: {},\n        errors: [],\n        callback\n      });\n    }\n    return {\n      toLoad: Object.keys(toLoad),\n      pending: Object.keys(pending),\n      toLoadLanguages: Object.keys(toLoadLanguages),\n      toLoadNamespaces: Object.keys(toLoadNamespaces)\n    };\n  }\n  loaded(name, err, data) {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    if (err) this.emit('failedLoading', lng, ns, err);\n    if (!err && data) {\n      this.store.addResourceBundle(lng, ns, data, undefined, undefined, {\n        skipCopy: true\n      });\n    }\n    this.state[name] = err ? -1 : 2;\n    if (err && data) this.state[name] = 0;\n    const loaded = {};\n    this.queue.forEach(q => {\n      pushPath(q.loaded, [lng], ns);\n      removePending(q, name);\n      if (err) q.errors.push(err);\n      if (q.pendingCount === 0 && !q.done) {\n        Object.keys(q.loaded).forEach(l => {\n          if (!loaded[l]) loaded[l] = {};\n          const loadedKeys = q.loaded[l];\n          if (loadedKeys.length) {\n            loadedKeys.forEach(n => {\n              if (loaded[l][n] === undefined) loaded[l][n] = true;\n            });\n          }\n        });\n        q.done = true;\n        if (q.errors.length) {\n          q.callback(q.errors);\n        } else {\n          q.callback();\n        }\n      }\n    });\n    this.emit('loaded', loaded);\n    this.queue = this.queue.filter(q => !q.done);\n  }\n  read(lng, ns, fcName, tried = 0, wait = this.retryTimeout, callback) {\n    if (!lng.length) return callback(null, {});\n    if (this.readingCalls >= this.maxParallelReads) {\n      this.waitingReads.push({\n        lng,\n        ns,\n        fcName,\n        tried,\n        wait,\n        callback\n      });\n      return;\n    }\n    this.readingCalls++;\n    const resolver = (err, data) => {\n      this.readingCalls--;\n      if (this.waitingReads.length > 0) {\n        const next = this.waitingReads.shift();\n        this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n      }\n      if (err && data && tried < this.maxRetries) {\n        setTimeout(() => {\n          this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);\n        }, wait);\n        return;\n      }\n      callback(err, data);\n    };\n    const fc = this.backend[fcName].bind(this.backend);\n    if (fc.length === 2) {\n      try {\n        const r = fc(lng, ns);\n        if (r && typeof r.then === 'function') {\n          r.then(data => resolver(null, data)).catch(resolver);\n        } else {\n          resolver(null, r);\n        }\n      } catch (err) {\n        resolver(err);\n      }\n      return;\n    }\n    return fc(lng, ns, resolver);\n  }\n  prepareLoading(languages, namespaces, options = {}, callback) {\n    if (!this.backend) {\n      this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n      return callback && callback();\n    }\n    if (isString(languages)) languages = this.languageUtils.toResolveHierarchy(languages);\n    if (isString(namespaces)) namespaces = [namespaces];\n    const toLoad = this.queueLoad(languages, namespaces, options, callback);\n    if (!toLoad.toLoad.length) {\n      if (!toLoad.pending.length) callback();\n      return null;\n    }\n    toLoad.toLoad.forEach(name => {\n      this.loadOne(name);\n    });\n  }\n  load(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {}, callback);\n  }\n  reload(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {\n      reload: true\n    }, callback);\n  }\n  loadOne(name, prefix = '') {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    this.read(lng, ns, 'read', undefined, undefined, (err, data) => {\n      if (err) this.logger.warn(`${prefix}loading namespace ${ns} for language ${lng} failed`, err);\n      if (!err && data) this.logger.log(`${prefix}loaded namespace ${ns} for language ${lng}`, data);\n      this.loaded(name, err, data);\n    });\n  }\n  saveMissing(languages, namespace, key, fallbackValue, isUpdate, options = {}, clb = () => {}) {\n    if (this.services?.utils?.hasLoadedNamespace && !this.services?.utils?.hasLoadedNamespace(namespace)) {\n      this.logger.warn(`did not save key \"${key}\" as the namespace \"${namespace}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n      return;\n    }\n    if (key === undefined || key === null || key === '') return;\n    if (this.backend?.create) {\n      const opts = {\n        ...options,\n        isUpdate\n      };\n      const fc = this.backend.create.bind(this.backend);\n      if (fc.length < 6) {\n        try {\n          let r;\n          if (fc.length === 5) {\n            r = fc(languages, namespace, key, fallbackValue, opts);\n          } else {\n            r = fc(languages, namespace, key, fallbackValue);\n          }\n          if (r && typeof r.then === 'function') {\n            r.then(data => clb(null, data)).catch(clb);\n          } else {\n            clb(null, r);\n          }\n        } catch (err) {\n          clb(err);\n        }\n      } else {\n        fc(languages, namespace, key, fallbackValue, clb, opts);\n      }\n    }\n    if (!languages || !languages[0]) return;\n    this.store.addResource(languages[0], namespace, key, fallbackValue);\n  }\n}\n\nconst get = () => ({\n  debug: false,\n  initAsync: true,\n  ns: ['translation'],\n  defaultNS: ['translation'],\n  fallbackLng: ['dev'],\n  fallbackNS: false,\n  supportedLngs: false,\n  nonExplicitSupportedLngs: false,\n  load: 'all',\n  preload: false,\n  simplifyPluralSuffix: true,\n  keySeparator: '.',\n  nsSeparator: ':',\n  pluralSeparator: '_',\n  contextSeparator: '_',\n  partialBundledLanguages: false,\n  saveMissing: false,\n  updateMissing: false,\n  saveMissingTo: 'fallback',\n  saveMissingPlurals: true,\n  missingKeyHandler: false,\n  missingInterpolationHandler: false,\n  postProcess: false,\n  postProcessPassResolved: false,\n  returnNull: false,\n  returnEmptyString: true,\n  returnObjects: false,\n  joinArrays: false,\n  returnedObjectHandler: false,\n  parseMissingKeyHandler: false,\n  appendNamespaceToMissingKey: false,\n  appendNamespaceToCIMode: false,\n  overloadTranslationOptionHandler: args => {\n    let ret = {};\n    if (typeof args[1] === 'object') ret = args[1];\n    if (isString(args[1])) ret.defaultValue = args[1];\n    if (isString(args[2])) ret.tDescription = args[2];\n    if (typeof args[2] === 'object' || typeof args[3] === 'object') {\n      const options = args[3] || args[2];\n      Object.keys(options).forEach(key => {\n        ret[key] = options[key];\n      });\n    }\n    return ret;\n  },\n  interpolation: {\n    escapeValue: true,\n    format: value => value,\n    prefix: '{{',\n    suffix: '}}',\n    formatSeparator: ',',\n    unescapePrefix: '-',\n    nestingPrefix: '$t(',\n    nestingSuffix: ')',\n    nestingOptionsSeparator: ',',\n    maxReplaces: 1000,\n    skipOnVariables: true\n  },\n  cacheInBuiltFormats: true\n});\nconst transformOptions = options => {\n  if (isString(options.ns)) options.ns = [options.ns];\n  if (isString(options.fallbackLng)) options.fallbackLng = [options.fallbackLng];\n  if (isString(options.fallbackNS)) options.fallbackNS = [options.fallbackNS];\n  if (options.supportedLngs?.indexOf?.('cimode') < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n  if (typeof options.initImmediate === 'boolean') options.initAsync = options.initImmediate;\n  return options;\n};\n\nconst noop = () => {};\nconst bindMemberFunctions = inst => {\n  const mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));\n  mems.forEach(mem => {\n    if (typeof inst[mem] === 'function') {\n      inst[mem] = inst[mem].bind(inst);\n    }\n  });\n};\nclass I18n extends EventEmitter {\n  constructor(options = {}, callback) {\n    super();\n    this.options = transformOptions(options);\n    this.services = {};\n    this.logger = baseLogger;\n    this.modules = {\n      external: []\n    };\n    bindMemberFunctions(this);\n    if (callback && !this.isInitialized && !options.isClone) {\n      if (!this.options.initAsync) {\n        this.init(options, callback);\n        return this;\n      }\n      setTimeout(() => {\n        this.init(options, callback);\n      }, 0);\n    }\n  }\n  init(options = {}, callback) {\n    this.isInitializing = true;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (options.defaultNS == null && options.ns) {\n      if (isString(options.ns)) {\n        options.defaultNS = options.ns;\n      } else if (options.ns.indexOf('translation') < 0) {\n        options.defaultNS = options.ns[0];\n      }\n    }\n    const defOpts = get();\n    this.options = {\n      ...defOpts,\n      ...this.options,\n      ...transformOptions(options)\n    };\n    this.options.interpolation = {\n      ...defOpts.interpolation,\n      ...this.options.interpolation\n    };\n    if (options.keySeparator !== undefined) {\n      this.options.userDefinedKeySeparator = options.keySeparator;\n    }\n    if (options.nsSeparator !== undefined) {\n      this.options.userDefinedNsSeparator = options.nsSeparator;\n    }\n    const createClassOnDemand = ClassOrObject => {\n      if (!ClassOrObject) return null;\n      if (typeof ClassOrObject === 'function') return new ClassOrObject();\n      return ClassOrObject;\n    };\n    if (!this.options.isClone) {\n      if (this.modules.logger) {\n        baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n      } else {\n        baseLogger.init(null, this.options);\n      }\n      let formatter;\n      if (this.modules.formatter) {\n        formatter = this.modules.formatter;\n      } else {\n        formatter = Formatter;\n      }\n      const lu = new LanguageUtil(this.options);\n      this.store = new ResourceStore(this.options.resources, this.options);\n      const s = this.services;\n      s.logger = baseLogger;\n      s.resourceStore = this.store;\n      s.languageUtils = lu;\n      s.pluralResolver = new PluralResolver(lu, {\n        prepend: this.options.pluralSeparator,\n        simplifyPluralSuffix: this.options.simplifyPluralSuffix\n      });\n      const usingLegacyFormatFunction = this.options.interpolation.format && this.options.interpolation.format !== defOpts.interpolation.format;\n      if (usingLegacyFormatFunction) {\n        this.logger.warn(`init: you are still using the legacy format function, please use the new approach: https://www.i18next.com/translation-function/formatting`);\n      }\n      if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n        s.formatter = createClassOnDemand(formatter);\n        if (s.formatter.init) s.formatter.init(s, this.options);\n        this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n      }\n      s.interpolator = new Interpolator(this.options);\n      s.utils = {\n        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n      };\n      s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n      s.backendConnector.on('*', (event, ...args) => {\n        this.emit(event, ...args);\n      });\n      if (this.modules.languageDetector) {\n        s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n        if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);\n      }\n      if (this.modules.i18nFormat) {\n        s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n        if (s.i18nFormat.init) s.i18nFormat.init(this);\n      }\n      this.translator = new Translator(this.services, this.options);\n      this.translator.on('*', (event, ...args) => {\n        this.emit(event, ...args);\n      });\n      this.modules.external.forEach(m => {\n        if (m.init) m.init(this);\n      });\n    }\n    this.format = this.options.interpolation.format;\n    if (!callback) callback = noop;\n    if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n      const codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n      if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n    }\n    if (!this.services.languageDetector && !this.options.lng) {\n      this.logger.warn('init: no languageDetector is used and no lng is defined');\n    }\n    const storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n    storeApi.forEach(fcName => {\n      this[fcName] = (...args) => this.store[fcName](...args);\n    });\n    const storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n    storeApiChained.forEach(fcName => {\n      this[fcName] = (...args) => {\n        this.store[fcName](...args);\n        return this;\n      };\n    });\n    const deferred = defer();\n    const load = () => {\n      const finish = (err, t) => {\n        this.isInitializing = false;\n        if (this.isInitialized && !this.initializedStoreOnce) this.logger.warn('init: i18next is already initialized. You should call init just once!');\n        this.isInitialized = true;\n        if (!this.options.isClone) this.logger.log('initialized', this.options);\n        this.emit('initialized', this.options);\n        deferred.resolve(t);\n        callback(err, t);\n      };\n      if (this.languages && !this.isInitialized) return finish(null, this.t.bind(this));\n      this.changeLanguage(this.options.lng, finish);\n    };\n    if (this.options.resources || !this.options.initAsync) {\n      load();\n    } else {\n      setTimeout(load, 0);\n    }\n    return deferred;\n  }\n  loadResources(language, callback = noop) {\n    let usedCallback = callback;\n    const usedLng = isString(language) ? language : this.language;\n    if (typeof language === 'function') usedCallback = language;\n    if (!this.options.resources || this.options.partialBundledLanguages) {\n      if (usedLng?.toLowerCase() === 'cimode' && (!this.options.preload || this.options.preload.length === 0)) return usedCallback();\n      const toLoad = [];\n      const append = lng => {\n        if (!lng) return;\n        if (lng === 'cimode') return;\n        const lngs = this.services.languageUtils.toResolveHierarchy(lng);\n        lngs.forEach(l => {\n          if (l === 'cimode') return;\n          if (toLoad.indexOf(l) < 0) toLoad.push(l);\n        });\n      };\n      if (!usedLng) {\n        const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        fallbacks.forEach(l => append(l));\n      } else {\n        append(usedLng);\n      }\n      this.options.preload?.forEach?.(l => append(l));\n      this.services.backendConnector.load(toLoad, this.options.ns, e => {\n        if (!e && !this.resolvedLanguage && this.language) this.setResolvedLanguage(this.language);\n        usedCallback(e);\n      });\n    } else {\n      usedCallback(null);\n    }\n  }\n  reloadResources(lngs, ns, callback) {\n    const deferred = defer();\n    if (typeof lngs === 'function') {\n      callback = lngs;\n      lngs = undefined;\n    }\n    if (typeof ns === 'function') {\n      callback = ns;\n      ns = undefined;\n    }\n    if (!lngs) lngs = this.languages;\n    if (!ns) ns = this.options.ns;\n    if (!callback) callback = noop;\n    this.services.backendConnector.reload(lngs, ns, err => {\n      deferred.resolve();\n      callback(err);\n    });\n    return deferred;\n  }\n  use(module) {\n    if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n    if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n    if (module.type === 'backend') {\n      this.modules.backend = module;\n    }\n    if (module.type === 'logger' || module.log && module.warn && module.error) {\n      this.modules.logger = module;\n    }\n    if (module.type === 'languageDetector') {\n      this.modules.languageDetector = module;\n    }\n    if (module.type === 'i18nFormat') {\n      this.modules.i18nFormat = module;\n    }\n    if (module.type === 'postProcessor') {\n      postProcessor.addPostProcessor(module);\n    }\n    if (module.type === 'formatter') {\n      this.modules.formatter = module;\n    }\n    if (module.type === '3rdParty') {\n      this.modules.external.push(module);\n    }\n    return this;\n  }\n  setResolvedLanguage(l) {\n    if (!l || !this.languages) return;\n    if (['cimode', 'dev'].indexOf(l) > -1) return;\n    for (let li = 0; li < this.languages.length; li++) {\n      const lngInLngs = this.languages[li];\n      if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;\n      if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n        this.resolvedLanguage = lngInLngs;\n        break;\n      }\n    }\n    if (!this.resolvedLanguage && this.languages.indexOf(l) < 0 && this.store.hasLanguageSomeTranslations(l)) {\n      this.resolvedLanguage = l;\n      this.languages.unshift(l);\n    }\n  }\n  changeLanguage(lng, callback) {\n    this.isLanguageChangingTo = lng;\n    const deferred = defer();\n    this.emit('languageChanging', lng);\n    const setLngProps = l => {\n      this.language = l;\n      this.languages = this.services.languageUtils.toResolveHierarchy(l);\n      this.resolvedLanguage = undefined;\n      this.setResolvedLanguage(l);\n    };\n    const done = (err, l) => {\n      if (l) {\n        if (this.isLanguageChangingTo === lng) {\n          setLngProps(l);\n          this.translator.changeLanguage(l);\n          this.isLanguageChangingTo = undefined;\n          this.emit('languageChanged', l);\n          this.logger.log('languageChanged', l);\n        }\n      } else {\n        this.isLanguageChangingTo = undefined;\n      }\n      deferred.resolve((...args) => this.t(...args));\n      if (callback) callback(err, (...args) => this.t(...args));\n    };\n    const setLng = lngs => {\n      if (!lng && !lngs && this.services.languageDetector) lngs = [];\n      const fl = isString(lngs) ? lngs : lngs && lngs[0];\n      const l = this.store.hasLanguageSomeTranslations(fl) ? fl : this.services.languageUtils.getBestMatchFromCodes(isString(lngs) ? [lngs] : lngs);\n      if (l) {\n        if (!this.language) {\n          setLngProps(l);\n        }\n        if (!this.translator.language) this.translator.changeLanguage(l);\n        this.services.languageDetector?.cacheUserLanguage?.(l);\n      }\n      this.loadResources(l, err => {\n        done(err, l);\n      });\n    };\n    if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n      setLng(this.services.languageDetector.detect());\n    } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n      if (this.services.languageDetector.detect.length === 0) {\n        this.services.languageDetector.detect().then(setLng);\n      } else {\n        this.services.languageDetector.detect(setLng);\n      }\n    } else {\n      setLng(lng);\n    }\n    return deferred;\n  }\n  getFixedT(lng, ns, keyPrefix) {\n    const fixedT = (key, opts, ...rest) => {\n      let o;\n      if (typeof opts !== 'object') {\n        o = this.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n      } else {\n        o = {\n          ...opts\n        };\n      }\n      o.lng = o.lng || fixedT.lng;\n      o.lngs = o.lngs || fixedT.lngs;\n      o.ns = o.ns || fixedT.ns;\n      if (o.keyPrefix !== '') o.keyPrefix = o.keyPrefix || keyPrefix || fixedT.keyPrefix;\n      const keySeparator = this.options.keySeparator || '.';\n      let resultKey;\n      if (o.keyPrefix && Array.isArray(key)) {\n        resultKey = key.map(k => `${o.keyPrefix}${keySeparator}${k}`);\n      } else {\n        resultKey = o.keyPrefix ? `${o.keyPrefix}${keySeparator}${key}` : key;\n      }\n      return this.t(resultKey, o);\n    };\n    if (isString(lng)) {\n      fixedT.lng = lng;\n    } else {\n      fixedT.lngs = lng;\n    }\n    fixedT.ns = ns;\n    fixedT.keyPrefix = keyPrefix;\n    return fixedT;\n  }\n  t(...args) {\n    return this.translator?.translate(...args);\n  }\n  exists(...args) {\n    return this.translator?.exists(...args);\n  }\n  setDefaultNamespace(ns) {\n    this.options.defaultNS = ns;\n  }\n  hasLoadedNamespace(ns, options = {}) {\n    if (!this.isInitialized) {\n      this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n      return false;\n    }\n    if (!this.languages || !this.languages.length) {\n      this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n      return false;\n    }\n    const lng = options.lng || this.resolvedLanguage || this.languages[0];\n    const fallbackLng = this.options ? this.options.fallbackLng : false;\n    const lastLng = this.languages[this.languages.length - 1];\n    if (lng.toLowerCase() === 'cimode') return true;\n    const loadNotPending = (l, n) => {\n      const loadState = this.services.backendConnector.state[`${l}|${n}`];\n      return loadState === -1 || loadState === 0 || loadState === 2;\n    };\n    if (options.precheck) {\n      const preResult = options.precheck(this, loadNotPending);\n      if (preResult !== undefined) return preResult;\n    }\n    if (this.hasResourceBundle(lng, ns)) return true;\n    if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;\n    if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n    return false;\n  }\n  loadNamespaces(ns, callback) {\n    const deferred = defer();\n    if (!this.options.ns) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    if (isString(ns)) ns = [ns];\n    ns.forEach(n => {\n      if (this.options.ns.indexOf(n) < 0) this.options.ns.push(n);\n    });\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  loadLanguages(lngs, callback) {\n    const deferred = defer();\n    if (isString(lngs)) lngs = [lngs];\n    const preloaded = this.options.preload || [];\n    const newLngs = lngs.filter(lng => preloaded.indexOf(lng) < 0 && this.services.languageUtils.isSupportedCode(lng));\n    if (!newLngs.length) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    this.options.preload = preloaded.concat(newLngs);\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  dir(lng) {\n    if (!lng) lng = this.resolvedLanguage || (this.languages?.length > 0 ? this.languages[0] : this.language);\n    if (!lng) return 'rtl';\n    try {\n      const l = new Intl.Locale(lng);\n      if (l && l.getTextInfo) {\n        const ti = l.getTextInfo();\n        if (ti && ti.direction) return ti.direction;\n      }\n    } catch (e) {}\n    const rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam', 'ckb'];\n    const languageUtils = this.services?.languageUtils || new LanguageUtil(get());\n    if (lng.toLowerCase().indexOf('-latn') > 1) return 'ltr';\n    return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1 ? 'rtl' : 'ltr';\n  }\n  static createInstance(options = {}, callback) {\n    return new I18n(options, callback);\n  }\n  cloneInstance(options = {}, callback = noop) {\n    const forkResourceStore = options.forkResourceStore;\n    if (forkResourceStore) delete options.forkResourceStore;\n    const mergedOptions = {\n      ...this.options,\n      ...options,\n      ...{\n        isClone: true\n      }\n    };\n    const clone = new I18n(mergedOptions);\n    if (options.debug !== undefined || options.prefix !== undefined) {\n      clone.logger = clone.logger.clone(options);\n    }\n    const membersToCopy = ['store', 'services', 'language'];\n    membersToCopy.forEach(m => {\n      clone[m] = this[m];\n    });\n    clone.services = {\n      ...this.services\n    };\n    clone.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    if (forkResourceStore) {\n      const clonedData = Object.keys(this.store.data).reduce((prev, l) => {\n        prev[l] = {\n          ...this.store.data[l]\n        };\n        prev[l] = Object.keys(prev[l]).reduce((acc, n) => {\n          acc[n] = {\n            ...prev[l][n]\n          };\n          return acc;\n        }, prev[l]);\n        return prev;\n      }, {});\n      clone.store = new ResourceStore(clonedData, mergedOptions);\n      clone.services.resourceStore = clone.store;\n    }\n    clone.translator = new Translator(clone.services, mergedOptions);\n    clone.translator.on('*', (event, ...args) => {\n      clone.emit(event, ...args);\n    });\n    clone.init(mergedOptions, callback);\n    clone.translator.options = mergedOptions;\n    clone.translator.backendConnector.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    return clone;\n  }\n  toJSON() {\n    return {\n      options: this.options,\n      store: this.store,\n      language: this.language,\n      languages: this.languages,\n      resolvedLanguage: this.resolvedLanguage\n    };\n  }\n}\nconst instance = I18n.createInstance();\ninstance.createInstance = I18n.createInstance;\n\nconst createInstance = instance.createInstance;\nconst dir = instance.dir;\nconst init = instance.init;\nconst loadResources = instance.loadResources;\nconst reloadResources = instance.reloadResources;\nconst use = instance.use;\nconst changeLanguage = instance.changeLanguage;\nconst getFixedT = instance.getFixedT;\nconst t = instance.t;\nconst exists = instance.exists;\nconst setDefaultNamespace = instance.setDefaultNamespace;\nconst hasLoadedNamespace = instance.hasLoadedNamespace;\nconst loadNamespaces = instance.loadNamespaces;\nconst loadLanguages = instance.loadLanguages;\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/i18next/dist/esm/i18next.js\n"));

/***/ }),

/***/ "./node_modules/react-i18next/dist/es/I18nextProvider.js":
/*!***************************************************************!*\
  !*** ./node_modules/react-i18next/dist/es/I18nextProvider.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   I18nextProvider: function() { return /* binding */ I18nextProvider; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./context.js */ \"./node_modules/react-i18next/dist/es/context.js\");\n\n\nfunction I18nextProvider({\n  i18n,\n  defaultNS,\n  children\n}) {\n  const value = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => ({\n    i18n,\n    defaultNS\n  }), [i18n, defaultNS]);\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_context_js__WEBPACK_IMPORTED_MODULE_1__.I18nContext.Provider, {\n    value\n  }, children);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtaTE4bmV4dC9kaXN0L2VzL0kxOG5leHRQcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBK0M7QUFDSjtBQUNwQztBQUNQO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxnQkFBZ0IsOENBQU87QUFDdkI7QUFDQTtBQUNBLEdBQUc7QUFDSCxTQUFTLG9EQUFhLENBQUMsb0RBQVc7QUFDbEM7QUFDQSxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWkxOG5leHQvZGlzdC9lcy9JMThuZXh0UHJvdmlkZXIuanM/M2Q0ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVFbGVtZW50LCB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgSTE4bkNvbnRleHQgfSBmcm9tICcuL2NvbnRleHQuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIEkxOG5leHRQcm92aWRlcih7XG4gIGkxOG4sXG4gIGRlZmF1bHROUyxcbiAgY2hpbGRyZW5cbn0pIHtcbiAgY29uc3QgdmFsdWUgPSB1c2VNZW1vKCgpID0+ICh7XG4gICAgaTE4bixcbiAgICBkZWZhdWx0TlNcbiAgfSksIFtpMThuLCBkZWZhdWx0TlNdKTtcbiAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQoSTE4bkNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICB2YWx1ZVxuICB9LCBjaGlsZHJlbik7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/react-i18next/dist/es/I18nextProvider.js\n"));

/***/ }),

/***/ "./node_modules/react-i18next/dist/es/Trans.js":
/*!*****************************************************!*\
  !*** ./node_modules/react-i18next/dist/es/Trans.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Trans: function() { return /* binding */ Trans; },\n/* harmony export */   nodesToString: function() { return /* reexport safe */ _TransWithoutContext_js__WEBPACK_IMPORTED_MODULE_1__.nodesToString; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _TransWithoutContext_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TransWithoutContext.js */ \"./node_modules/react-i18next/dist/es/TransWithoutContext.js\");\n/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./context.js */ \"./node_modules/react-i18next/dist/es/context.js\");\n\n\n\n\nfunction Trans({\n  children,\n  count,\n  parent,\n  i18nKey,\n  context,\n  tOptions = {},\n  values,\n  defaults,\n  components,\n  ns,\n  i18n: i18nFromProps,\n  t: tFromProps,\n  shouldUnescape,\n  ...additionalProps\n}) {\n  const {\n    i18n: i18nFromContext,\n    defaultNS: defaultNSFromContext\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_context_js__WEBPACK_IMPORTED_MODULE_2__.I18nContext) || {};\n  const i18n = i18nFromProps || i18nFromContext || (0,_context_js__WEBPACK_IMPORTED_MODULE_2__.getI18n)();\n  const t = tFromProps || i18n?.t.bind(i18n);\n  return (0,_TransWithoutContext_js__WEBPACK_IMPORTED_MODULE_1__.Trans)({\n    children,\n    count,\n    parent,\n    i18nKey,\n    context,\n    tOptions,\n    values,\n    defaults,\n    components,\n    ns: ns || t?.ns || defaultNSFromContext || i18n?.options?.defaultNS,\n    i18n,\n    t: tFromProps,\n    shouldUnescape,\n    ...additionalProps\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtaTE4bmV4dC9kaXN0L2VzL1RyYW5zLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQW1DO0FBQ29EO0FBQ25DO0FBQzNCO0FBQ2xCO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLElBQUksRUFBRSxpREFBVSxDQUFDLG9EQUFXO0FBQzVCLG1EQUFtRCxvREFBTztBQUMxRDtBQUNBLFNBQVMsOERBQW1CO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWkxOG5leHQvZGlzdC9lcy9UcmFucy5qcz9kNDBkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUNvbnRleHQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBub2Rlc1RvU3RyaW5nLCBUcmFucyBhcyBUcmFuc1dpdGhvdXRDb250ZXh0IH0gZnJvbSAnLi9UcmFuc1dpdGhvdXRDb250ZXh0LmpzJztcbmltcG9ydCB7IGdldEkxOG4sIEkxOG5Db250ZXh0IH0gZnJvbSAnLi9jb250ZXh0LmpzJztcbmV4cG9ydCB7IG5vZGVzVG9TdHJpbmcgfTtcbmV4cG9ydCBmdW5jdGlvbiBUcmFucyh7XG4gIGNoaWxkcmVuLFxuICBjb3VudCxcbiAgcGFyZW50LFxuICBpMThuS2V5LFxuICBjb250ZXh0LFxuICB0T3B0aW9ucyA9IHt9LFxuICB2YWx1ZXMsXG4gIGRlZmF1bHRzLFxuICBjb21wb25lbnRzLFxuICBucyxcbiAgaTE4bjogaTE4bkZyb21Qcm9wcyxcbiAgdDogdEZyb21Qcm9wcyxcbiAgc2hvdWxkVW5lc2NhcGUsXG4gIC4uLmFkZGl0aW9uYWxQcm9wc1xufSkge1xuICBjb25zdCB7XG4gICAgaTE4bjogaTE4bkZyb21Db250ZXh0LFxuICAgIGRlZmF1bHROUzogZGVmYXVsdE5TRnJvbUNvbnRleHRcbiAgfSA9IHVzZUNvbnRleHQoSTE4bkNvbnRleHQpIHx8IHt9O1xuICBjb25zdCBpMThuID0gaTE4bkZyb21Qcm9wcyB8fCBpMThuRnJvbUNvbnRleHQgfHwgZ2V0STE4bigpO1xuICBjb25zdCB0ID0gdEZyb21Qcm9wcyB8fCBpMThuPy50LmJpbmQoaTE4bik7XG4gIHJldHVybiBUcmFuc1dpdGhvdXRDb250ZXh0KHtcbiAgICBjaGlsZHJlbixcbiAgICBjb3VudCxcbiAgICBwYXJlbnQsXG4gICAgaTE4bktleSxcbiAgICBjb250ZXh0LFxuICAgIHRPcHRpb25zLFxuICAgIHZhbHVlcyxcbiAgICBkZWZhdWx0cyxcbiAgICBjb21wb25lbnRzLFxuICAgIG5zOiBucyB8fCB0Py5ucyB8fCBkZWZhdWx0TlNGcm9tQ29udGV4dCB8fCBpMThuPy5vcHRpb25zPy5kZWZhdWx0TlMsXG4gICAgaTE4bixcbiAgICB0OiB0RnJvbVByb3BzLFxuICAgIHNob3VsZFVuZXNjYXBlLFxuICAgIC4uLmFkZGl0aW9uYWxQcm9wc1xuICB9KTtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-i18next/dist/es/Trans.js\n"));

/***/ }),

/***/ "./node_modules/react-i18next/dist/es/TransWithoutContext.js":
/*!*******************************************************************!*\
  !*** ./node_modules/react-i18next/dist/es/TransWithoutContext.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Trans: function() { return /* binding */ Trans; },\n/* harmony export */   nodesToString: function() { return /* binding */ nodesToString; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var html_parse_stringify__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! html-parse-stringify */ \"./node_modules/html-parse-stringify/dist/html-parse-stringify.module.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/react-i18next/dist/es/utils.js\");\n/* harmony import */ var _defaults_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./defaults.js */ \"./node_modules/react-i18next/dist/es/defaults.js\");\n/* harmony import */ var _i18nInstance_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./i18nInstance.js */ \"./node_modules/react-i18next/dist/es/i18nInstance.js\");\n\n\n\n\n\nconst hasChildren = (node, checkLength) => {\n  if (!node) return false;\n  const base = node.props?.children ?? node.children;\n  if (checkLength) return base.length > 0;\n  return !!base;\n};\nconst getChildren = node => {\n  if (!node) return [];\n  const children = node.props?.children ?? node.children;\n  return node.props?.i18nIsDynamicList ? getAsArray(children) : children;\n};\nconst hasValidReactChildren = children => Array.isArray(children) && children.every(react__WEBPACK_IMPORTED_MODULE_0__.isValidElement);\nconst getAsArray = data => Array.isArray(data) ? data : [data];\nconst mergeProps = (source, target) => {\n  const newTarget = {\n    ...target\n  };\n  newTarget.props = Object.assign(source.props, target.props);\n  return newTarget;\n};\nconst nodesToString = (children, i18nOptions, i18n, i18nKey) => {\n  if (!children) return '';\n  let stringNode = '';\n  const childrenArray = getAsArray(children);\n  const keepArray = i18nOptions?.transSupportBasicHtmlNodes ? i18nOptions.transKeepBasicHtmlNodesFor ?? [] : [];\n  childrenArray.forEach((child, childIndex) => {\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isString)(child)) {\n      stringNode += `${child}`;\n      return;\n    }\n    if ((0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(child)) {\n      const {\n        props,\n        type\n      } = child;\n      const childPropsCount = Object.keys(props).length;\n      const shouldKeepChild = keepArray.indexOf(type) > -1;\n      const childChildren = props.children;\n      if (!childChildren && shouldKeepChild && !childPropsCount) {\n        stringNode += `<${type}/>`;\n        return;\n      }\n      if (!childChildren && (!shouldKeepChild || childPropsCount) || props.i18nIsDynamicList) {\n        stringNode += `<${childIndex}></${childIndex}>`;\n        return;\n      }\n      if (shouldKeepChild && childPropsCount === 1 && (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isString)(childChildren)) {\n        stringNode += `<${type}>${childChildren}</${type}>`;\n        return;\n      }\n      const content = nodesToString(childChildren, i18nOptions, i18n, i18nKey);\n      stringNode += `<${childIndex}>${content}</${childIndex}>`;\n      return;\n    }\n    if (child === null) {\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.warn)(i18n, 'TRANS_NULL_VALUE', `Passed in a null value as child`, {\n        i18nKey\n      });\n      return;\n    }\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isObject)(child)) {\n      const {\n        format,\n        ...clone\n      } = child;\n      const keys = Object.keys(clone);\n      if (keys.length === 1) {\n        const value = format ? `${keys[0]}, ${format}` : keys[0];\n        stringNode += `{{${value}}}`;\n        return;\n      }\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.warn)(i18n, 'TRANS_INVALID_OBJ', `Invalid child - Object should only have keys {{ value, format }} (format is optional).`, {\n        i18nKey,\n        child\n      });\n      return;\n    }\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.warn)(i18n, 'TRANS_INVALID_VAR', `Passed in a variable like {number} - pass variables for interpolation as full objects like {{number}}.`, {\n      i18nKey,\n      child\n    });\n  });\n  return stringNode;\n};\nconst renderNodes = (children, knownComponentsMap, targetString, i18n, i18nOptions, combinedTOpts, shouldUnescape) => {\n  if (targetString === '') return [];\n  const keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];\n  const emptyChildrenButNeedsHandling = targetString && new RegExp(keepArray.map(keep => `<${keep}`).join('|')).test(targetString);\n  if (!children && !knownComponentsMap && !emptyChildrenButNeedsHandling && !shouldUnescape) return [targetString];\n  const data = knownComponentsMap ?? {};\n  const getData = childs => {\n    const childrenArray = getAsArray(childs);\n    childrenArray.forEach(child => {\n      if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isString)(child)) return;\n      if (hasChildren(child)) getData(getChildren(child));else if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isObject)(child) && !(0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(child)) Object.assign(data, child);\n    });\n  };\n  getData(children);\n  const ast = html_parse_stringify__WEBPACK_IMPORTED_MODULE_1__[\"default\"].parse(`<0>${targetString}</0>`);\n  const opts = {\n    ...data,\n    ...combinedTOpts\n  };\n  const renderInner = (child, node, rootReactNode) => {\n    const childs = getChildren(child);\n    const mappedChildren = mapAST(childs, node.children, rootReactNode);\n    return hasValidReactChildren(childs) && mappedChildren.length === 0 || child.props?.i18nIsDynamicList ? childs : mappedChildren;\n  };\n  const pushTranslatedJSX = (child, inner, mem, i, isVoid) => {\n    if (child.dummy) {\n      child.children = inner;\n      mem.push((0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(child, {\n        key: i\n      }, isVoid ? undefined : inner));\n    } else {\n      mem.push(...react__WEBPACK_IMPORTED_MODULE_0__.Children.map([child], c => {\n        const props = {\n          ...c.props\n        };\n        delete props.i18nIsDynamicList;\n        return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(c.type, {\n          ...props,\n          key: i,\n          ref: c.props.ref ?? c.ref\n        }, isVoid ? null : inner);\n      }));\n    }\n  };\n  const mapAST = (reactNode, astNode, rootReactNode) => {\n    const reactNodes = getAsArray(reactNode);\n    const astNodes = getAsArray(astNode);\n    return astNodes.reduce((mem, node, i) => {\n      const translationContent = node.children?.[0]?.content && i18n.services.interpolator.interpolate(node.children[0].content, opts, i18n.language);\n      if (node.type === 'tag') {\n        let tmp = reactNodes[parseInt(node.name, 10)];\n        if (!tmp && knownComponentsMap) tmp = knownComponentsMap[node.name];\n        if (rootReactNode.length === 1 && !tmp) tmp = rootReactNode[0][node.name];\n        if (!tmp) tmp = {};\n        const child = Object.keys(node.attrs).length !== 0 ? mergeProps({\n          props: node.attrs\n        }, tmp) : tmp;\n        const isElement = (0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(child);\n        const isValidTranslationWithChildren = isElement && hasChildren(node, true) && !node.voidElement;\n        const isEmptyTransWithHTML = emptyChildrenButNeedsHandling && (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isObject)(child) && child.dummy && !isElement;\n        const isKnownComponent = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isObject)(knownComponentsMap) && Object.hasOwnProperty.call(knownComponentsMap, node.name);\n        if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isString)(child)) {\n          const value = i18n.services.interpolator.interpolate(child, opts, i18n.language);\n          mem.push(value);\n        } else if (hasChildren(child) || isValidTranslationWithChildren) {\n          const inner = renderInner(child, node, rootReactNode);\n          pushTranslatedJSX(child, inner, mem, i);\n        } else if (isEmptyTransWithHTML) {\n          const inner = mapAST(reactNodes, node.children, rootReactNode);\n          pushTranslatedJSX(child, inner, mem, i);\n        } else if (Number.isNaN(parseFloat(node.name))) {\n          if (isKnownComponent) {\n            const inner = renderInner(child, node, rootReactNode);\n            pushTranslatedJSX(child, inner, mem, i, node.voidElement);\n          } else if (i18nOptions.transSupportBasicHtmlNodes && keepArray.indexOf(node.name) > -1) {\n            if (node.voidElement) {\n              mem.push((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(node.name, {\n                key: `${node.name}-${i}`\n              }));\n            } else {\n              const inner = mapAST(reactNodes, node.children, rootReactNode);\n              mem.push((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(node.name, {\n                key: `${node.name}-${i}`\n              }, inner));\n            }\n          } else if (node.voidElement) {\n            mem.push(`<${node.name} />`);\n          } else {\n            const inner = mapAST(reactNodes, node.children, rootReactNode);\n            mem.push(`<${node.name}>${inner}</${node.name}>`);\n          }\n        } else if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isObject)(child) && !isElement) {\n          const content = node.children[0] ? translationContent : null;\n          if (content) mem.push(content);\n        } else {\n          pushTranslatedJSX(child, translationContent, mem, i, node.children.length !== 1 || !translationContent);\n        }\n      } else if (node.type === 'text') {\n        const wrapTextNodes = i18nOptions.transWrapTextNodes;\n        const content = shouldUnescape ? i18nOptions.unescape(i18n.services.interpolator.interpolate(node.content, opts, i18n.language)) : i18n.services.interpolator.interpolate(node.content, opts, i18n.language);\n        if (wrapTextNodes) {\n          mem.push((0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(wrapTextNodes, {\n            key: `${node.name}-${i}`\n          }, content));\n        } else {\n          mem.push(content);\n        }\n      }\n      return mem;\n    }, []);\n  };\n  const result = mapAST([{\n    dummy: true,\n    children: children || []\n  }], ast, getAsArray(children || []));\n  return getChildren(result[0]);\n};\nconst fixComponentProps = (component, index, translation) => {\n  const componentKey = component.key || index;\n  const comp = (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(component, {\n    key: componentKey\n  });\n  if (!comp.props || !comp.props.children || translation.indexOf(`${index}/>`) < 0 && translation.indexOf(`${index} />`) < 0) {\n    return comp;\n  }\n  function Componentized() {\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, comp);\n  }\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Componentized, {\n    key: componentKey\n  });\n};\nconst generateArrayComponents = (components, translation) => components.map((c, index) => fixComponentProps(c, index, translation));\nconst generateObjectComponents = (components, translation) => {\n  const componentMap = {};\n  Object.keys(components).forEach(c => {\n    Object.assign(componentMap, {\n      [c]: fixComponentProps(components[c], c, translation)\n    });\n  });\n  return componentMap;\n};\nconst generateComponents = (components, translation, i18n, i18nKey) => {\n  if (!components) return null;\n  if (Array.isArray(components)) {\n    return generateArrayComponents(components, translation);\n  }\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isObject)(components)) {\n    return generateObjectComponents(components, translation);\n  }\n  (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.warnOnce)(i18n, 'TRANS_INVALID_COMPONENTS', `<Trans /> \"components\" prop expects an object or array`, {\n    i18nKey\n  });\n  return null;\n};\nconst isComponentsMap = object => {\n  if (!(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isObject)(object)) return false;\n  if (Array.isArray(object)) return false;\n  return Object.keys(object).reduce((acc, key) => acc && Number.isNaN(Number.parseFloat(key)), true);\n};\nfunction Trans({\n  children,\n  count,\n  parent,\n  i18nKey,\n  context,\n  tOptions = {},\n  values,\n  defaults,\n  components,\n  ns,\n  i18n: i18nFromProps,\n  t: tFromProps,\n  shouldUnescape,\n  ...additionalProps\n}) {\n  const i18n = i18nFromProps || (0,_i18nInstance_js__WEBPACK_IMPORTED_MODULE_4__.getI18n)();\n  if (!i18n) {\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.warnOnce)(i18n, 'NO_I18NEXT_INSTANCE', `Trans: You need to pass in an i18next instance using i18nextReactModule`, {\n      i18nKey\n    });\n    return children;\n  }\n  const t = tFromProps || i18n.t.bind(i18n) || (k => k);\n  const reactI18nextOptions = {\n    ...(0,_defaults_js__WEBPACK_IMPORTED_MODULE_3__.getDefaults)(),\n    ...i18n.options?.react\n  };\n  let namespaces = ns || t.ns || i18n.options?.defaultNS;\n  namespaces = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isString)(namespaces) ? [namespaces] : namespaces || ['translation'];\n  const nodeAsString = nodesToString(children, reactI18nextOptions, i18n, i18nKey);\n  const defaultValue = defaults || nodeAsString || reactI18nextOptions.transEmptyNodeValue || i18nKey;\n  const {\n    hashTransKey\n  } = reactI18nextOptions;\n  const key = i18nKey || (hashTransKey ? hashTransKey(nodeAsString || defaultValue) : nodeAsString || defaultValue);\n  if (i18n.options?.interpolation?.defaultVariables) {\n    values = values && Object.keys(values).length > 0 ? {\n      ...values,\n      ...i18n.options.interpolation.defaultVariables\n    } : {\n      ...i18n.options.interpolation.defaultVariables\n    };\n  }\n  const interpolationOverride = values || count !== undefined && !i18n.options?.interpolation?.alwaysFormat || !children ? tOptions.interpolation : {\n    interpolation: {\n      ...tOptions.interpolation,\n      prefix: '#$?',\n      suffix: '?$#'\n    }\n  };\n  const combinedTOpts = {\n    ...tOptions,\n    context: context || tOptions.context,\n    count,\n    ...values,\n    ...interpolationOverride,\n    defaultValue,\n    ns: namespaces\n  };\n  const translation = key ? t(key, combinedTOpts) : defaultValue;\n  const generatedComponents = generateComponents(components, translation, i18n, i18nKey);\n  let indexedChildren = generatedComponents || children;\n  let componentsMap = null;\n  if (isComponentsMap(generatedComponents)) {\n    componentsMap = generatedComponents;\n    indexedChildren = children;\n  }\n  const content = renderNodes(indexedChildren, componentsMap, translation, i18n, reactI18nextOptions, combinedTOpts, shouldUnescape);\n  const useAsParent = parent ?? reactI18nextOptions.defaultTransParent;\n  return useAsParent ? (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(useAsParent, additionalProps, content) : content;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-i18next/dist/es/TransWithoutContext.js\n"));

/***/ }),

/***/ "./node_modules/react-i18next/dist/es/Translation.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-i18next/dist/es/Translation.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Translation: function() { return /* binding */ Translation; }\n/* harmony export */ });\n/* harmony import */ var _useTranslation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./useTranslation.js */ \"./node_modules/react-i18next/dist/es/useTranslation.js\");\n\nconst Translation = ({\n  ns,\n  children,\n  ...options\n}) => {\n  const [t, i18n, ready] = (0,_useTranslation_js__WEBPACK_IMPORTED_MODULE_0__.useTranslation)(ns, options);\n  return children(t, {\n    i18n,\n    lng: i18n.language\n  }, ready);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtaTE4bmV4dC9kaXN0L2VzL1RyYW5zbGF0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXFEO0FBQzlDO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELDJCQUEyQixrRUFBYztBQUN6QztBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWkxOG5leHQvZGlzdC9lcy9UcmFuc2xhdGlvbi5qcz85MjhmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVRyYW5zbGF0aW9uIH0gZnJvbSAnLi91c2VUcmFuc2xhdGlvbi5qcyc7XG5leHBvcnQgY29uc3QgVHJhbnNsYXRpb24gPSAoe1xuICBucyxcbiAgY2hpbGRyZW4sXG4gIC4uLm9wdGlvbnNcbn0pID0+IHtcbiAgY29uc3QgW3QsIGkxOG4sIHJlYWR5XSA9IHVzZVRyYW5zbGF0aW9uKG5zLCBvcHRpb25zKTtcbiAgcmV0dXJuIGNoaWxkcmVuKHQsIHtcbiAgICBpMThuLFxuICAgIGxuZzogaTE4bi5sYW5ndWFnZVxuICB9LCByZWFkeSk7XG59OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react-i18next/dist/es/Translation.js\n"));

/***/ }),

/***/ "./node_modules/react-i18next/dist/es/context.js":
/*!*******************************************************!*\
  !*** ./node_modules/react-i18next/dist/es/context.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   I18nContext: function() { return /* binding */ I18nContext; },\n/* harmony export */   ReportNamespaces: function() { return /* binding */ ReportNamespaces; },\n/* harmony export */   composeInitialProps: function() { return /* binding */ composeInitialProps; },\n/* harmony export */   getDefaults: function() { return /* reexport safe */ _defaults_js__WEBPACK_IMPORTED_MODULE_1__.getDefaults; },\n/* harmony export */   getI18n: function() { return /* reexport safe */ _i18nInstance_js__WEBPACK_IMPORTED_MODULE_2__.getI18n; },\n/* harmony export */   getInitialProps: function() { return /* binding */ getInitialProps; },\n/* harmony export */   initReactI18next: function() { return /* reexport safe */ _initReactI18next_js__WEBPACK_IMPORTED_MODULE_3__.initReactI18next; },\n/* harmony export */   setDefaults: function() { return /* reexport safe */ _defaults_js__WEBPACK_IMPORTED_MODULE_1__.setDefaults; },\n/* harmony export */   setI18n: function() { return /* reexport safe */ _i18nInstance_js__WEBPACK_IMPORTED_MODULE_2__.setI18n; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _defaults_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaults.js */ \"./node_modules/react-i18next/dist/es/defaults.js\");\n/* harmony import */ var _i18nInstance_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./i18nInstance.js */ \"./node_modules/react-i18next/dist/es/i18nInstance.js\");\n/* harmony import */ var _initReactI18next_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./initReactI18next.js */ \"./node_modules/react-i18next/dist/es/initReactI18next.js\");\n\n\n\n\n\nconst I18nContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)();\nclass ReportNamespaces {\n  constructor() {\n    this.usedNamespaces = {};\n  }\n  addUsedNamespaces(namespaces) {\n    namespaces.forEach(ns => {\n      if (!this.usedNamespaces[ns]) this.usedNamespaces[ns] = true;\n    });\n  }\n  getUsedNamespaces() {\n    return Object.keys(this.usedNamespaces);\n  }\n}\nconst composeInitialProps = ForComponent => async ctx => {\n  const componentsInitialProps = (await ForComponent.getInitialProps?.(ctx)) ?? {};\n  const i18nInitialProps = getInitialProps();\n  return {\n    ...componentsInitialProps,\n    ...i18nInitialProps\n  };\n};\nconst getInitialProps = () => {\n  const i18n = (0,_i18nInstance_js__WEBPACK_IMPORTED_MODULE_2__.getI18n)();\n  const namespaces = i18n.reportNamespaces?.getUsedNamespaces() ?? [];\n  const ret = {};\n  const initialI18nStore = {};\n  i18n.languages.forEach(l => {\n    initialI18nStore[l] = {};\n    namespaces.forEach(ns => {\n      initialI18nStore[l][ns] = i18n.getResourceBundle(l, ns) || {};\n    });\n  });\n  ret.initialI18nStore = initialI18nStore;\n  ret.initialLanguage = i18n.language;\n  return ret;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtaTE4bmV4dC9kaXN0L2VzL2NvbnRleHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFzQztBQUNtQjtBQUNKO0FBQ0k7QUFDZTtBQUNqRSxvQkFBb0Isb0RBQWE7QUFDakM7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGVBQWUseURBQU87QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1pMThuZXh0L2Rpc3QvZXMvY29udGV4dC5qcz81YWU1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNvbnRleHQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBnZXREZWZhdWx0cywgc2V0RGVmYXVsdHMgfSBmcm9tICcuL2RlZmF1bHRzLmpzJztcbmltcG9ydCB7IGdldEkxOG4sIHNldEkxOG4gfSBmcm9tICcuL2kxOG5JbnN0YW5jZS5qcyc7XG5pbXBvcnQgeyBpbml0UmVhY3RJMThuZXh0IH0gZnJvbSAnLi9pbml0UmVhY3RJMThuZXh0LmpzJztcbmV4cG9ydCB7IGdldERlZmF1bHRzLCBzZXREZWZhdWx0cywgZ2V0STE4biwgc2V0STE4biwgaW5pdFJlYWN0STE4bmV4dCB9O1xuZXhwb3J0IGNvbnN0IEkxOG5Db250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xuZXhwb3J0IGNsYXNzIFJlcG9ydE5hbWVzcGFjZXMge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLnVzZWROYW1lc3BhY2VzID0ge307XG4gIH1cbiAgYWRkVXNlZE5hbWVzcGFjZXMobmFtZXNwYWNlcykge1xuICAgIG5hbWVzcGFjZXMuZm9yRWFjaChucyA9PiB7XG4gICAgICBpZiAoIXRoaXMudXNlZE5hbWVzcGFjZXNbbnNdKSB0aGlzLnVzZWROYW1lc3BhY2VzW25zXSA9IHRydWU7XG4gICAgfSk7XG4gIH1cbiAgZ2V0VXNlZE5hbWVzcGFjZXMoKSB7XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKHRoaXMudXNlZE5hbWVzcGFjZXMpO1xuICB9XG59XG5leHBvcnQgY29uc3QgY29tcG9zZUluaXRpYWxQcm9wcyA9IEZvckNvbXBvbmVudCA9PiBhc3luYyBjdHggPT4ge1xuICBjb25zdCBjb21wb25lbnRzSW5pdGlhbFByb3BzID0gKGF3YWl0IEZvckNvbXBvbmVudC5nZXRJbml0aWFsUHJvcHM/LihjdHgpKSA/PyB7fTtcbiAgY29uc3QgaTE4bkluaXRpYWxQcm9wcyA9IGdldEluaXRpYWxQcm9wcygpO1xuICByZXR1cm4ge1xuICAgIC4uLmNvbXBvbmVudHNJbml0aWFsUHJvcHMsXG4gICAgLi4uaTE4bkluaXRpYWxQcm9wc1xuICB9O1xufTtcbmV4cG9ydCBjb25zdCBnZXRJbml0aWFsUHJvcHMgPSAoKSA9PiB7XG4gIGNvbnN0IGkxOG4gPSBnZXRJMThuKCk7XG4gIGNvbnN0IG5hbWVzcGFjZXMgPSBpMThuLnJlcG9ydE5hbWVzcGFjZXM/LmdldFVzZWROYW1lc3BhY2VzKCkgPz8gW107XG4gIGNvbnN0IHJldCA9IHt9O1xuICBjb25zdCBpbml0aWFsSTE4blN0b3JlID0ge307XG4gIGkxOG4ubGFuZ3VhZ2VzLmZvckVhY2gobCA9PiB7XG4gICAgaW5pdGlhbEkxOG5TdG9yZVtsXSA9IHt9O1xuICAgIG5hbWVzcGFjZXMuZm9yRWFjaChucyA9PiB7XG4gICAgICBpbml0aWFsSTE4blN0b3JlW2xdW25zXSA9IGkxOG4uZ2V0UmVzb3VyY2VCdW5kbGUobCwgbnMpIHx8IHt9O1xuICAgIH0pO1xuICB9KTtcbiAgcmV0LmluaXRpYWxJMThuU3RvcmUgPSBpbml0aWFsSTE4blN0b3JlO1xuICByZXQuaW5pdGlhbExhbmd1YWdlID0gaTE4bi5sYW5ndWFnZTtcbiAgcmV0dXJuIHJldDtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/react-i18next/dist/es/context.js\n"));

/***/ }),

/***/ "./node_modules/react-i18next/dist/es/defaults.js":
/*!********************************************************!*\
  !*** ./node_modules/react-i18next/dist/es/defaults.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDefaults: function() { return /* binding */ getDefaults; },\n/* harmony export */   setDefaults: function() { return /* binding */ setDefaults; }\n/* harmony export */ });\n/* harmony import */ var _unescape_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./unescape.js */ \"./node_modules/react-i18next/dist/es/unescape.js\");\n\nlet defaultOptions = {\n  bindI18n: 'languageChanged',\n  bindI18nStore: '',\n  transEmptyNodeValue: '',\n  transSupportBasicHtmlNodes: true,\n  transWrapTextNodes: '',\n  transKeepBasicHtmlNodesFor: ['br', 'strong', 'i', 'p'],\n  useSuspense: true,\n  unescape: _unescape_js__WEBPACK_IMPORTED_MODULE_0__.unescape\n};\nconst setDefaults = (options = {}) => {\n  defaultOptions = {\n    ...defaultOptions,\n    ...options\n  };\n};\nconst getDefaults = () => defaultOptions;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtaTE4bmV4dC9kaXN0L2VzL2RlZmF1bHRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF5QztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ08saUNBQWlDO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtaTE4bmV4dC9kaXN0L2VzL2RlZmF1bHRzLmpzPzQ5ZDUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdW5lc2NhcGUgfSBmcm9tICcuL3VuZXNjYXBlLmpzJztcbmxldCBkZWZhdWx0T3B0aW9ucyA9IHtcbiAgYmluZEkxOG46ICdsYW5ndWFnZUNoYW5nZWQnLFxuICBiaW5kSTE4blN0b3JlOiAnJyxcbiAgdHJhbnNFbXB0eU5vZGVWYWx1ZTogJycsXG4gIHRyYW5zU3VwcG9ydEJhc2ljSHRtbE5vZGVzOiB0cnVlLFxuICB0cmFuc1dyYXBUZXh0Tm9kZXM6ICcnLFxuICB0cmFuc0tlZXBCYXNpY0h0bWxOb2Rlc0ZvcjogWydicicsICdzdHJvbmcnLCAnaScsICdwJ10sXG4gIHVzZVN1c3BlbnNlOiB0cnVlLFxuICB1bmVzY2FwZVxufTtcbmV4cG9ydCBjb25zdCBzZXREZWZhdWx0cyA9IChvcHRpb25zID0ge30pID0+IHtcbiAgZGVmYXVsdE9wdGlvbnMgPSB7XG4gICAgLi4uZGVmYXVsdE9wdGlvbnMsXG4gICAgLi4ub3B0aW9uc1xuICB9O1xufTtcbmV4cG9ydCBjb25zdCBnZXREZWZhdWx0cyA9ICgpID0+IGRlZmF1bHRPcHRpb25zOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react-i18next/dist/es/defaults.js\n"));

/***/ }),

/***/ "./node_modules/react-i18next/dist/es/i18nInstance.js":
/*!************************************************************!*\
  !*** ./node_modules/react-i18next/dist/es/i18nInstance.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getI18n: function() { return /* binding */ getI18n; },\n/* harmony export */   setI18n: function() { return /* binding */ setI18n; }\n/* harmony export */ });\nlet i18nInstance;\nconst setI18n = instance => {\n  i18nInstance = instance;\n};\nconst getI18n = () => i18nInstance;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtaTE4bmV4dC9kaXN0L2VzL2kxOG5JbnN0YW5jZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ087QUFDUDtBQUNBO0FBQ08iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWkxOG5leHQvZGlzdC9lcy9pMThuSW5zdGFuY2UuanM/ODk0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgaTE4bkluc3RhbmNlO1xuZXhwb3J0IGNvbnN0IHNldEkxOG4gPSBpbnN0YW5jZSA9PiB7XG4gIGkxOG5JbnN0YW5jZSA9IGluc3RhbmNlO1xufTtcbmV4cG9ydCBjb25zdCBnZXRJMThuID0gKCkgPT4gaTE4bkluc3RhbmNlOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react-i18next/dist/es/i18nInstance.js\n"));

/***/ }),

/***/ "./node_modules/react-i18next/dist/es/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/react-i18next/dist/es/index.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   I18nContext: function() { return /* reexport safe */ _context_js__WEBPACK_IMPORTED_MODULE_11__.I18nContext; },\n/* harmony export */   I18nextProvider: function() { return /* reexport safe */ _I18nextProvider_js__WEBPACK_IMPORTED_MODULE_5__.I18nextProvider; },\n/* harmony export */   Trans: function() { return /* reexport safe */ _Trans_js__WEBPACK_IMPORTED_MODULE_0__.Trans; },\n/* harmony export */   TransWithoutContext: function() { return /* reexport safe */ _TransWithoutContext_js__WEBPACK_IMPORTED_MODULE_1__.Trans; },\n/* harmony export */   Translation: function() { return /* reexport safe */ _Translation_js__WEBPACK_IMPORTED_MODULE_4__.Translation; },\n/* harmony export */   composeInitialProps: function() { return /* reexport safe */ _context_js__WEBPACK_IMPORTED_MODULE_11__.composeInitialProps; },\n/* harmony export */   date: function() { return /* binding */ date; },\n/* harmony export */   getDefaults: function() { return /* reexport safe */ _defaults_js__WEBPACK_IMPORTED_MODULE_9__.getDefaults; },\n/* harmony export */   getI18n: function() { return /* reexport safe */ _i18nInstance_js__WEBPACK_IMPORTED_MODULE_10__.getI18n; },\n/* harmony export */   getInitialProps: function() { return /* reexport safe */ _context_js__WEBPACK_IMPORTED_MODULE_11__.getInitialProps; },\n/* harmony export */   initReactI18next: function() { return /* reexport safe */ _initReactI18next_js__WEBPACK_IMPORTED_MODULE_8__.initReactI18next; },\n/* harmony export */   number: function() { return /* binding */ number; },\n/* harmony export */   plural: function() { return /* binding */ plural; },\n/* harmony export */   select: function() { return /* binding */ select; },\n/* harmony export */   selectOrdinal: function() { return /* binding */ selectOrdinal; },\n/* harmony export */   setDefaults: function() { return /* reexport safe */ _defaults_js__WEBPACK_IMPORTED_MODULE_9__.setDefaults; },\n/* harmony export */   setI18n: function() { return /* reexport safe */ _i18nInstance_js__WEBPACK_IMPORTED_MODULE_10__.setI18n; },\n/* harmony export */   time: function() { return /* binding */ time; },\n/* harmony export */   useSSR: function() { return /* reexport safe */ _useSSR_js__WEBPACK_IMPORTED_MODULE_7__.useSSR; },\n/* harmony export */   useTranslation: function() { return /* reexport safe */ _useTranslation_js__WEBPACK_IMPORTED_MODULE_2__.useTranslation; },\n/* harmony export */   withSSR: function() { return /* reexport safe */ _withSSR_js__WEBPACK_IMPORTED_MODULE_6__.withSSR; },\n/* harmony export */   withTranslation: function() { return /* reexport safe */ _withTranslation_js__WEBPACK_IMPORTED_MODULE_3__.withTranslation; }\n/* harmony export */ });\n/* harmony import */ var _Trans_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Trans.js */ \"./node_modules/react-i18next/dist/es/Trans.js\");\n/* harmony import */ var _TransWithoutContext_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TransWithoutContext.js */ \"./node_modules/react-i18next/dist/es/TransWithoutContext.js\");\n/* harmony import */ var _useTranslation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./useTranslation.js */ \"./node_modules/react-i18next/dist/es/useTranslation.js\");\n/* harmony import */ var _withTranslation_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./withTranslation.js */ \"./node_modules/react-i18next/dist/es/withTranslation.js\");\n/* harmony import */ var _Translation_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Translation.js */ \"./node_modules/react-i18next/dist/es/Translation.js\");\n/* harmony import */ var _I18nextProvider_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./I18nextProvider.js */ \"./node_modules/react-i18next/dist/es/I18nextProvider.js\");\n/* harmony import */ var _withSSR_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./withSSR.js */ \"./node_modules/react-i18next/dist/es/withSSR.js\");\n/* harmony import */ var _useSSR_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./useSSR.js */ \"./node_modules/react-i18next/dist/es/useSSR.js\");\n/* harmony import */ var _initReactI18next_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./initReactI18next.js */ \"./node_modules/react-i18next/dist/es/initReactI18next.js\");\n/* harmony import */ var _defaults_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./defaults.js */ \"./node_modules/react-i18next/dist/es/defaults.js\");\n/* harmony import */ var _i18nInstance_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./i18nInstance.js */ \"./node_modules/react-i18next/dist/es/i18nInstance.js\");\n/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./context.js */ \"./node_modules/react-i18next/dist/es/context.js\");\n\n\n\n\n\n\n\n\n\n\n\n\nconst date = () => '';\nconst time = () => '';\nconst number = () => '';\nconst select = () => '';\nconst plural = () => '';\nconst selectOrdinal = () => '';//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtaTE4bmV4dC9kaXN0L2VzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBbUM7QUFDcUM7QUFDbkI7QUFDRTtBQUNSO0FBQ1E7QUFDaEI7QUFDRjtBQUNvQjtBQUNBO0FBQ0o7QUFDNEI7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1pMThuZXh0L2Rpc3QvZXMvaW5kZXguanM/MzRiMSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBUcmFucyB9IGZyb20gJy4vVHJhbnMuanMnO1xuZXhwb3J0IHsgVHJhbnMgYXMgVHJhbnNXaXRob3V0Q29udGV4dCB9IGZyb20gJy4vVHJhbnNXaXRob3V0Q29udGV4dC5qcyc7XG5leHBvcnQgeyB1c2VUcmFuc2xhdGlvbiB9IGZyb20gJy4vdXNlVHJhbnNsYXRpb24uanMnO1xuZXhwb3J0IHsgd2l0aFRyYW5zbGF0aW9uIH0gZnJvbSAnLi93aXRoVHJhbnNsYXRpb24uanMnO1xuZXhwb3J0IHsgVHJhbnNsYXRpb24gfSBmcm9tICcuL1RyYW5zbGF0aW9uLmpzJztcbmV4cG9ydCB7IEkxOG5leHRQcm92aWRlciB9IGZyb20gJy4vSTE4bmV4dFByb3ZpZGVyLmpzJztcbmV4cG9ydCB7IHdpdGhTU1IgfSBmcm9tICcuL3dpdGhTU1IuanMnO1xuZXhwb3J0IHsgdXNlU1NSIH0gZnJvbSAnLi91c2VTU1IuanMnO1xuZXhwb3J0IHsgaW5pdFJlYWN0STE4bmV4dCB9IGZyb20gJy4vaW5pdFJlYWN0STE4bmV4dC5qcyc7XG5leHBvcnQgeyBzZXREZWZhdWx0cywgZ2V0RGVmYXVsdHMgfSBmcm9tICcuL2RlZmF1bHRzLmpzJztcbmV4cG9ydCB7IHNldEkxOG4sIGdldEkxOG4gfSBmcm9tICcuL2kxOG5JbnN0YW5jZS5qcyc7XG5leHBvcnQgeyBJMThuQ29udGV4dCwgY29tcG9zZUluaXRpYWxQcm9wcywgZ2V0SW5pdGlhbFByb3BzIH0gZnJvbSAnLi9jb250ZXh0LmpzJztcbmV4cG9ydCBjb25zdCBkYXRlID0gKCkgPT4gJyc7XG5leHBvcnQgY29uc3QgdGltZSA9ICgpID0+ICcnO1xuZXhwb3J0IGNvbnN0IG51bWJlciA9ICgpID0+ICcnO1xuZXhwb3J0IGNvbnN0IHNlbGVjdCA9ICgpID0+ICcnO1xuZXhwb3J0IGNvbnN0IHBsdXJhbCA9ICgpID0+ICcnO1xuZXhwb3J0IGNvbnN0IHNlbGVjdE9yZGluYWwgPSAoKSA9PiAnJzsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-i18next/dist/es/index.js\n"));

/***/ }),

/***/ "./node_modules/react-i18next/dist/es/initReactI18next.js":
/*!****************************************************************!*\
  !*** ./node_modules/react-i18next/dist/es/initReactI18next.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initReactI18next: function() { return /* binding */ initReactI18next; }\n/* harmony export */ });\n/* harmony import */ var _defaults_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaults.js */ \"./node_modules/react-i18next/dist/es/defaults.js\");\n/* harmony import */ var _i18nInstance_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./i18nInstance.js */ \"./node_modules/react-i18next/dist/es/i18nInstance.js\");\n\n\nconst initReactI18next = {\n  type: '3rdParty',\n  init(instance) {\n    (0,_defaults_js__WEBPACK_IMPORTED_MODULE_0__.setDefaults)(instance.options.react);\n    (0,_i18nInstance_js__WEBPACK_IMPORTED_MODULE_1__.setI18n)(instance);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtaTE4bmV4dC9kaXN0L2VzL2luaXRSZWFjdEkxOG5leHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTRDO0FBQ0E7QUFDckM7QUFDUDtBQUNBO0FBQ0EsSUFBSSx5REFBVztBQUNmLElBQUkseURBQU87QUFDWDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1pMThuZXh0L2Rpc3QvZXMvaW5pdFJlYWN0STE4bmV4dC5qcz8wNzYxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNldERlZmF1bHRzIH0gZnJvbSAnLi9kZWZhdWx0cy5qcyc7XG5pbXBvcnQgeyBzZXRJMThuIH0gZnJvbSAnLi9pMThuSW5zdGFuY2UuanMnO1xuZXhwb3J0IGNvbnN0IGluaXRSZWFjdEkxOG5leHQgPSB7XG4gIHR5cGU6ICczcmRQYXJ0eScsXG4gIGluaXQoaW5zdGFuY2UpIHtcbiAgICBzZXREZWZhdWx0cyhpbnN0YW5jZS5vcHRpb25zLnJlYWN0KTtcbiAgICBzZXRJMThuKGluc3RhbmNlKTtcbiAgfVxufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-i18next/dist/es/initReactI18next.js\n"));

/***/ }),

/***/ "./node_modules/react-i18next/dist/es/unescape.js":
/*!********************************************************!*\
  !*** ./node_modules/react-i18next/dist/es/unescape.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   unescape: function() { return /* binding */ unescape; }\n/* harmony export */ });\nconst matchHtmlEntity = /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34|nbsp|#160|copy|#169|reg|#174|hellip|#8230|#x2F|#47);/g;\nconst htmlEntities = {\n  '&amp;': '&',\n  '&#38;': '&',\n  '&lt;': '<',\n  '&#60;': '<',\n  '&gt;': '>',\n  '&#62;': '>',\n  '&apos;': \"'\",\n  '&#39;': \"'\",\n  '&quot;': '\"',\n  '&#34;': '\"',\n  '&nbsp;': ' ',\n  '&#160;': ' ',\n  '&copy;': '©',\n  '&#169;': '©',\n  '&reg;': '®',\n  '&#174;': '®',\n  '&hellip;': '…',\n  '&#8230;': '…',\n  '&#x2F;': '/',\n  '&#47;': '/'\n};\nconst unescapeHtmlEntity = m => htmlEntities[m];\nconst unescape = text => text.replace(matchHtmlEntity, unescapeHtmlEntity);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtaTE4bmV4dC9kaXN0L2VzL3VuZXNjYXBlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSx5SEFBeUg7QUFDekg7QUFDQSxRQUFRO0FBQ1IsUUFBUTtBQUNSLE9BQU87QUFDUCxRQUFRO0FBQ1IsT0FBTztBQUNQLFFBQVE7QUFDUixTQUFTO0FBQ1QsUUFBUTtBQUNSLFNBQVM7QUFDVCxRQUFRO0FBQ1IsU0FBUztBQUNULFNBQVM7QUFDVCxTQUFTO0FBQ1QsU0FBUztBQUNULFFBQVE7QUFDUixTQUFTO0FBQ1QsV0FBVztBQUNYLFVBQVU7QUFDVixTQUFTO0FBQ1QsUUFBUTtBQUNSO0FBQ0E7QUFDTyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtaTE4bmV4dC9kaXN0L2VzL3VuZXNjYXBlLmpzPzdjN2MiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbWF0Y2hIdG1sRW50aXR5ID0gLyYoPzphbXB8IzM4fGx0fCM2MHxndHwjNjJ8YXBvc3wjMzl8cXVvdHwjMzR8bmJzcHwjMTYwfGNvcHl8IzE2OXxyZWd8IzE3NHxoZWxsaXB8IzgyMzB8I3gyRnwjNDcpOy9nO1xuY29uc3QgaHRtbEVudGl0aWVzID0ge1xuICAnJmFtcDsnOiAnJicsXG4gICcmIzM4Oyc6ICcmJyxcbiAgJyZsdDsnOiAnPCcsXG4gICcmIzYwOyc6ICc8JyxcbiAgJyZndDsnOiAnPicsXG4gICcmIzYyOyc6ICc+JyxcbiAgJyZhcG9zOyc6IFwiJ1wiLFxuICAnJiMzOTsnOiBcIidcIixcbiAgJyZxdW90Oyc6ICdcIicsXG4gICcmIzM0Oyc6ICdcIicsXG4gICcmbmJzcDsnOiAnICcsXG4gICcmIzE2MDsnOiAnICcsXG4gICcmY29weTsnOiAnwqknLFxuICAnJiMxNjk7JzogJ8KpJyxcbiAgJyZyZWc7JzogJ8KuJyxcbiAgJyYjMTc0Oyc6ICfCricsXG4gICcmaGVsbGlwOyc6ICfigKYnLFxuICAnJiM4MjMwOyc6ICfigKYnLFxuICAnJiN4MkY7JzogJy8nLFxuICAnJiM0NzsnOiAnLydcbn07XG5jb25zdCB1bmVzY2FwZUh0bWxFbnRpdHkgPSBtID0+IGh0bWxFbnRpdGllc1ttXTtcbmV4cG9ydCBjb25zdCB1bmVzY2FwZSA9IHRleHQgPT4gdGV4dC5yZXBsYWNlKG1hdGNoSHRtbEVudGl0eSwgdW5lc2NhcGVIdG1sRW50aXR5KTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-i18next/dist/es/unescape.js\n"));

/***/ }),

/***/ "./node_modules/react-i18next/dist/es/useSSR.js":
/*!******************************************************!*\
  !*** ./node_modules/react-i18next/dist/es/useSSR.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useSSR: function() { return /* binding */ useSSR; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./context.js */ \"./node_modules/react-i18next/dist/es/context.js\");\n\n\nconst useSSR = (initialI18nStore, initialLanguage, props = {}) => {\n  const {\n    i18n: i18nFromProps\n  } = props;\n  const {\n    i18n: i18nFromContext\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_context_js__WEBPACK_IMPORTED_MODULE_1__.I18nContext) || {};\n  const i18n = i18nFromProps || i18nFromContext || (0,_context_js__WEBPACK_IMPORTED_MODULE_1__.getI18n)();\n  if (i18n.options?.isClone) return;\n  if (initialI18nStore && !i18n.initializedStoreOnce) {\n    i18n.services.resourceStore.data = initialI18nStore;\n    i18n.options.ns = Object.values(initialI18nStore).reduce((mem, lngResources) => {\n      Object.keys(lngResources).forEach(ns => {\n        if (mem.indexOf(ns) < 0) mem.push(ns);\n      });\n      return mem;\n    }, i18n.options.ns);\n    i18n.initializedStoreOnce = true;\n    i18n.isInitialized = true;\n  }\n  if (initialLanguage && !i18n.initializedLanguageOnce) {\n    i18n.changeLanguage(initialLanguage);\n    i18n.initializedLanguageOnce = true;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtaTE4bmV4dC9kaXN0L2VzL3VzZVNTUi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBbUM7QUFDaUI7QUFDN0MsNkRBQTZEO0FBQ3BFO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLElBQUksRUFBRSxpREFBVSxDQUFDLG9EQUFXO0FBQzVCLG1EQUFtRCxvREFBTztBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtaTE4bmV4dC9kaXN0L2VzL3VzZVNTUi5qcz83NWRkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUNvbnRleHQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBnZXRJMThuLCBJMThuQ29udGV4dCB9IGZyb20gJy4vY29udGV4dC5qcyc7XG5leHBvcnQgY29uc3QgdXNlU1NSID0gKGluaXRpYWxJMThuU3RvcmUsIGluaXRpYWxMYW5ndWFnZSwgcHJvcHMgPSB7fSkgPT4ge1xuICBjb25zdCB7XG4gICAgaTE4bjogaTE4bkZyb21Qcm9wc1xuICB9ID0gcHJvcHM7XG4gIGNvbnN0IHtcbiAgICBpMThuOiBpMThuRnJvbUNvbnRleHRcbiAgfSA9IHVzZUNvbnRleHQoSTE4bkNvbnRleHQpIHx8IHt9O1xuICBjb25zdCBpMThuID0gaTE4bkZyb21Qcm9wcyB8fCBpMThuRnJvbUNvbnRleHQgfHwgZ2V0STE4bigpO1xuICBpZiAoaTE4bi5vcHRpb25zPy5pc0Nsb25lKSByZXR1cm47XG4gIGlmIChpbml0aWFsSTE4blN0b3JlICYmICFpMThuLmluaXRpYWxpemVkU3RvcmVPbmNlKSB7XG4gICAgaTE4bi5zZXJ2aWNlcy5yZXNvdXJjZVN0b3JlLmRhdGEgPSBpbml0aWFsSTE4blN0b3JlO1xuICAgIGkxOG4ub3B0aW9ucy5ucyA9IE9iamVjdC52YWx1ZXMoaW5pdGlhbEkxOG5TdG9yZSkucmVkdWNlKChtZW0sIGxuZ1Jlc291cmNlcykgPT4ge1xuICAgICAgT2JqZWN0LmtleXMobG5nUmVzb3VyY2VzKS5mb3JFYWNoKG5zID0+IHtcbiAgICAgICAgaWYgKG1lbS5pbmRleE9mKG5zKSA8IDApIG1lbS5wdXNoKG5zKTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIG1lbTtcbiAgICB9LCBpMThuLm9wdGlvbnMubnMpO1xuICAgIGkxOG4uaW5pdGlhbGl6ZWRTdG9yZU9uY2UgPSB0cnVlO1xuICAgIGkxOG4uaXNJbml0aWFsaXplZCA9IHRydWU7XG4gIH1cbiAgaWYgKGluaXRpYWxMYW5ndWFnZSAmJiAhaTE4bi5pbml0aWFsaXplZExhbmd1YWdlT25jZSkge1xuICAgIGkxOG4uY2hhbmdlTGFuZ3VhZ2UoaW5pdGlhbExhbmd1YWdlKTtcbiAgICBpMThuLmluaXRpYWxpemVkTGFuZ3VhZ2VPbmNlID0gdHJ1ZTtcbiAgfVxufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-i18next/dist/es/useSSR.js\n"));

/***/ }),

/***/ "./node_modules/react-i18next/dist/es/useTranslation.js":
/*!**************************************************************!*\
  !*** ./node_modules/react-i18next/dist/es/useTranslation.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useTranslation: function() { return /* binding */ useTranslation; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./context.js */ \"./node_modules/react-i18next/dist/es/context.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/react-i18next/dist/es/utils.js\");\n\n\n\nconst usePrevious = (value, ignore) => {\n  const ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    ref.current = ignore ? ref.current : value;\n  }, [value, ignore]);\n  return ref.current;\n};\nconst alwaysNewT = (i18n, language, namespace, keyPrefix) => i18n.getFixedT(language, namespace, keyPrefix);\nconst useMemoizedT = (i18n, language, namespace, keyPrefix) => (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(alwaysNewT(i18n, language, namespace, keyPrefix), [i18n, language, namespace, keyPrefix]);\nconst useTranslation = (ns, props = {}) => {\n  const {\n    i18n: i18nFromProps\n  } = props;\n  const {\n    i18n: i18nFromContext,\n    defaultNS: defaultNSFromContext\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_context_js__WEBPACK_IMPORTED_MODULE_1__.I18nContext) || {};\n  const i18n = i18nFromProps || i18nFromContext || (0,_context_js__WEBPACK_IMPORTED_MODULE_1__.getI18n)();\n  if (i18n && !i18n.reportNamespaces) i18n.reportNamespaces = new _context_js__WEBPACK_IMPORTED_MODULE_1__.ReportNamespaces();\n  if (!i18n) {\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.warnOnce)(i18n, 'NO_I18NEXT_INSTANCE', 'useTranslation: You will need to pass in an i18next instance by using initReactI18next');\n    const notReadyT = (k, optsOrDefaultValue) => {\n      if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isString)(optsOrDefaultValue)) return optsOrDefaultValue;\n      if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isObject)(optsOrDefaultValue) && (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isString)(optsOrDefaultValue.defaultValue)) return optsOrDefaultValue.defaultValue;\n      return Array.isArray(k) ? k[k.length - 1] : k;\n    };\n    const retNotReady = [notReadyT, {}, false];\n    retNotReady.t = notReadyT;\n    retNotReady.i18n = {};\n    retNotReady.ready = false;\n    return retNotReady;\n  }\n  if (i18n.options.react?.wait) (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.warnOnce)(i18n, 'DEPRECATED_OPTION', 'useTranslation: It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.');\n  const i18nOptions = {\n    ...(0,_context_js__WEBPACK_IMPORTED_MODULE_1__.getDefaults)(),\n    ...i18n.options.react,\n    ...props\n  };\n  const {\n    useSuspense,\n    keyPrefix\n  } = i18nOptions;\n  let namespaces = ns || defaultNSFromContext || i18n.options?.defaultNS;\n  namespaces = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isString)(namespaces) ? [namespaces] : namespaces || ['translation'];\n  i18n.reportNamespaces.addUsedNamespaces?.(namespaces);\n  const ready = (i18n.isInitialized || i18n.initializedStoreOnce) && namespaces.every(n => (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.hasLoadedNamespace)(n, i18n, i18nOptions));\n  const memoGetT = useMemoizedT(i18n, props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n  const getT = () => memoGetT;\n  const getNewT = () => alwaysNewT(i18n, props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n  const [t, setT] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(getT);\n  let joinedNS = namespaces.join();\n  if (props.lng) joinedNS = `${props.lng}${joinedNS}`;\n  const previousJoinedNS = usePrevious(joinedNS);\n  const isMounted = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(true);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const {\n      bindI18n,\n      bindI18nStore\n    } = i18nOptions;\n    isMounted.current = true;\n    if (!ready && !useSuspense) {\n      if (props.lng) {\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.loadLanguages)(i18n, props.lng, namespaces, () => {\n          if (isMounted.current) setT(getNewT);\n        });\n      } else {\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.loadNamespaces)(i18n, namespaces, () => {\n          if (isMounted.current) setT(getNewT);\n        });\n      }\n    }\n    if (ready && previousJoinedNS && previousJoinedNS !== joinedNS && isMounted.current) {\n      setT(getNewT);\n    }\n    const boundReset = () => {\n      if (isMounted.current) setT(getNewT);\n    };\n    if (bindI18n) i18n?.on(bindI18n, boundReset);\n    if (bindI18nStore) i18n?.store.on(bindI18nStore, boundReset);\n    return () => {\n      isMounted.current = false;\n      if (i18n && bindI18n) bindI18n?.split(' ').forEach(e => i18n.off(e, boundReset));\n      if (bindI18nStore && i18n) bindI18nStore.split(' ').forEach(e => i18n.store.off(e, boundReset));\n    };\n  }, [i18n, joinedNS]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (isMounted.current && ready) {\n      setT(getT);\n    }\n  }, [i18n, keyPrefix, ready]);\n  const ret = [t, i18n, ready];\n  ret.t = t;\n  ret.i18n = i18n;\n  ret.ready = ready;\n  if (ready) return ret;\n  if (!ready && !useSuspense) return ret;\n  throw new Promise(resolve => {\n    if (props.lng) {\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.loadLanguages)(i18n, props.lng, namespaces, () => resolve());\n    } else {\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.loadNamespaces)(i18n, namespaces, () => resolve());\n    }\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtaTE4bmV4dC9kaXN0L2VzL3VzZVRyYW5zbGF0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBNkU7QUFDTTtBQUMwQjtBQUM3RztBQUNBLGNBQWMsNkNBQU07QUFDcEIsRUFBRSxnREFBUztBQUNYO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLCtEQUErRCxrREFBVztBQUNuRSxzQ0FBc0M7QUFDN0M7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxJQUFJLEVBQUUsaURBQVUsQ0FBQyxvREFBVztBQUM1QixtREFBbUQsb0RBQU87QUFDMUQsa0VBQWtFLHlEQUFnQjtBQUNsRjtBQUNBLElBQUksbURBQVE7QUFDWjtBQUNBLFVBQVUsbURBQVE7QUFDbEIsVUFBVSxtREFBUSx3QkFBd0IsbURBQVE7QUFDbEQ7QUFDQTtBQUNBLHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLG1EQUFRO0FBQ3hDO0FBQ0EsT0FBTyx3REFBVztBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxlQUFlLG1EQUFRO0FBQ3ZCO0FBQ0EsMkZBQTJGLDZEQUFrQjtBQUM3RztBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsK0NBQVE7QUFDNUI7QUFDQSwrQkFBK0IsVUFBVSxFQUFFLFNBQVM7QUFDcEQ7QUFDQSxvQkFBb0IsNkNBQU07QUFDMUIsRUFBRSxnREFBUztBQUNYO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxRQUFRLHdEQUFhO0FBQ3JCO0FBQ0EsU0FBUztBQUNULFFBQVE7QUFDUixRQUFRLHlEQUFjO0FBQ3RCO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxFQUFFLGdEQUFTO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLHdEQUFhO0FBQ25CLE1BQU07QUFDTixNQUFNLHlEQUFjO0FBQ3BCO0FBQ0EsR0FBRztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1pMThuZXh0L2Rpc3QvZXMvdXNlVHJhbnNsYXRpb24uanM/NjE1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0LCB1c2VDb250ZXh0LCB1c2VSZWYsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgZ2V0STE4biwgZ2V0RGVmYXVsdHMsIFJlcG9ydE5hbWVzcGFjZXMsIEkxOG5Db250ZXh0IH0gZnJvbSAnLi9jb250ZXh0LmpzJztcbmltcG9ydCB7IHdhcm5PbmNlLCBsb2FkTmFtZXNwYWNlcywgbG9hZExhbmd1YWdlcywgaGFzTG9hZGVkTmFtZXNwYWNlLCBpc1N0cmluZywgaXNPYmplY3QgfSBmcm9tICcuL3V0aWxzLmpzJztcbmNvbnN0IHVzZVByZXZpb3VzID0gKHZhbHVlLCBpZ25vcmUpID0+IHtcbiAgY29uc3QgcmVmID0gdXNlUmVmKCk7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgcmVmLmN1cnJlbnQgPSBpZ25vcmUgPyByZWYuY3VycmVudCA6IHZhbHVlO1xuICB9LCBbdmFsdWUsIGlnbm9yZV0pO1xuICByZXR1cm4gcmVmLmN1cnJlbnQ7XG59O1xuY29uc3QgYWx3YXlzTmV3VCA9IChpMThuLCBsYW5ndWFnZSwgbmFtZXNwYWNlLCBrZXlQcmVmaXgpID0+IGkxOG4uZ2V0Rml4ZWRUKGxhbmd1YWdlLCBuYW1lc3BhY2UsIGtleVByZWZpeCk7XG5jb25zdCB1c2VNZW1vaXplZFQgPSAoaTE4biwgbGFuZ3VhZ2UsIG5hbWVzcGFjZSwga2V5UHJlZml4KSA9PiB1c2VDYWxsYmFjayhhbHdheXNOZXdUKGkxOG4sIGxhbmd1YWdlLCBuYW1lc3BhY2UsIGtleVByZWZpeCksIFtpMThuLCBsYW5ndWFnZSwgbmFtZXNwYWNlLCBrZXlQcmVmaXhdKTtcbmV4cG9ydCBjb25zdCB1c2VUcmFuc2xhdGlvbiA9IChucywgcHJvcHMgPSB7fSkgPT4ge1xuICBjb25zdCB7XG4gICAgaTE4bjogaTE4bkZyb21Qcm9wc1xuICB9ID0gcHJvcHM7XG4gIGNvbnN0IHtcbiAgICBpMThuOiBpMThuRnJvbUNvbnRleHQsXG4gICAgZGVmYXVsdE5TOiBkZWZhdWx0TlNGcm9tQ29udGV4dFxuICB9ID0gdXNlQ29udGV4dChJMThuQ29udGV4dCkgfHwge307XG4gIGNvbnN0IGkxOG4gPSBpMThuRnJvbVByb3BzIHx8IGkxOG5Gcm9tQ29udGV4dCB8fCBnZXRJMThuKCk7XG4gIGlmIChpMThuICYmICFpMThuLnJlcG9ydE5hbWVzcGFjZXMpIGkxOG4ucmVwb3J0TmFtZXNwYWNlcyA9IG5ldyBSZXBvcnROYW1lc3BhY2VzKCk7XG4gIGlmICghaTE4bikge1xuICAgIHdhcm5PbmNlKGkxOG4sICdOT19JMThORVhUX0lOU1RBTkNFJywgJ3VzZVRyYW5zbGF0aW9uOiBZb3Ugd2lsbCBuZWVkIHRvIHBhc3MgaW4gYW4gaTE4bmV4dCBpbnN0YW5jZSBieSB1c2luZyBpbml0UmVhY3RJMThuZXh0Jyk7XG4gICAgY29uc3Qgbm90UmVhZHlUID0gKGssIG9wdHNPckRlZmF1bHRWYWx1ZSkgPT4ge1xuICAgICAgaWYgKGlzU3RyaW5nKG9wdHNPckRlZmF1bHRWYWx1ZSkpIHJldHVybiBvcHRzT3JEZWZhdWx0VmFsdWU7XG4gICAgICBpZiAoaXNPYmplY3Qob3B0c09yRGVmYXVsdFZhbHVlKSAmJiBpc1N0cmluZyhvcHRzT3JEZWZhdWx0VmFsdWUuZGVmYXVsdFZhbHVlKSkgcmV0dXJuIG9wdHNPckRlZmF1bHRWYWx1ZS5kZWZhdWx0VmFsdWU7XG4gICAgICByZXR1cm4gQXJyYXkuaXNBcnJheShrKSA/IGtbay5sZW5ndGggLSAxXSA6IGs7XG4gICAgfTtcbiAgICBjb25zdCByZXROb3RSZWFkeSA9IFtub3RSZWFkeVQsIHt9LCBmYWxzZV07XG4gICAgcmV0Tm90UmVhZHkudCA9IG5vdFJlYWR5VDtcbiAgICByZXROb3RSZWFkeS5pMThuID0ge307XG4gICAgcmV0Tm90UmVhZHkucmVhZHkgPSBmYWxzZTtcbiAgICByZXR1cm4gcmV0Tm90UmVhZHk7XG4gIH1cbiAgaWYgKGkxOG4ub3B0aW9ucy5yZWFjdD8ud2FpdCkgd2Fybk9uY2UoaTE4biwgJ0RFUFJFQ0FURURfT1BUSU9OJywgJ3VzZVRyYW5zbGF0aW9uOiBJdCBzZWVtcyB5b3UgYXJlIHN0aWxsIHVzaW5nIHRoZSBvbGQgd2FpdCBvcHRpb24sIHlvdSBtYXkgbWlncmF0ZSB0byB0aGUgbmV3IHVzZVN1c3BlbnNlIGJlaGF2aW91ci4nKTtcbiAgY29uc3QgaTE4bk9wdGlvbnMgPSB7XG4gICAgLi4uZ2V0RGVmYXVsdHMoKSxcbiAgICAuLi5pMThuLm9wdGlvbnMucmVhY3QsXG4gICAgLi4ucHJvcHNcbiAgfTtcbiAgY29uc3Qge1xuICAgIHVzZVN1c3BlbnNlLFxuICAgIGtleVByZWZpeFxuICB9ID0gaTE4bk9wdGlvbnM7XG4gIGxldCBuYW1lc3BhY2VzID0gbnMgfHwgZGVmYXVsdE5TRnJvbUNvbnRleHQgfHwgaTE4bi5vcHRpb25zPy5kZWZhdWx0TlM7XG4gIG5hbWVzcGFjZXMgPSBpc1N0cmluZyhuYW1lc3BhY2VzKSA/IFtuYW1lc3BhY2VzXSA6IG5hbWVzcGFjZXMgfHwgWyd0cmFuc2xhdGlvbiddO1xuICBpMThuLnJlcG9ydE5hbWVzcGFjZXMuYWRkVXNlZE5hbWVzcGFjZXM/LihuYW1lc3BhY2VzKTtcbiAgY29uc3QgcmVhZHkgPSAoaTE4bi5pc0luaXRpYWxpemVkIHx8IGkxOG4uaW5pdGlhbGl6ZWRTdG9yZU9uY2UpICYmIG5hbWVzcGFjZXMuZXZlcnkobiA9PiBoYXNMb2FkZWROYW1lc3BhY2UobiwgaTE4biwgaTE4bk9wdGlvbnMpKTtcbiAgY29uc3QgbWVtb0dldFQgPSB1c2VNZW1vaXplZFQoaTE4biwgcHJvcHMubG5nIHx8IG51bGwsIGkxOG5PcHRpb25zLm5zTW9kZSA9PT0gJ2ZhbGxiYWNrJyA/IG5hbWVzcGFjZXMgOiBuYW1lc3BhY2VzWzBdLCBrZXlQcmVmaXgpO1xuICBjb25zdCBnZXRUID0gKCkgPT4gbWVtb0dldFQ7XG4gIGNvbnN0IGdldE5ld1QgPSAoKSA9PiBhbHdheXNOZXdUKGkxOG4sIHByb3BzLmxuZyB8fCBudWxsLCBpMThuT3B0aW9ucy5uc01vZGUgPT09ICdmYWxsYmFjaycgPyBuYW1lc3BhY2VzIDogbmFtZXNwYWNlc1swXSwga2V5UHJlZml4KTtcbiAgY29uc3QgW3QsIHNldFRdID0gdXNlU3RhdGUoZ2V0VCk7XG4gIGxldCBqb2luZWROUyA9IG5hbWVzcGFjZXMuam9pbigpO1xuICBpZiAocHJvcHMubG5nKSBqb2luZWROUyA9IGAke3Byb3BzLmxuZ30ke2pvaW5lZE5TfWA7XG4gIGNvbnN0IHByZXZpb3VzSm9pbmVkTlMgPSB1c2VQcmV2aW91cyhqb2luZWROUyk7XG4gIGNvbnN0IGlzTW91bnRlZCA9IHVzZVJlZih0cnVlKTtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCB7XG4gICAgICBiaW5kSTE4bixcbiAgICAgIGJpbmRJMThuU3RvcmVcbiAgICB9ID0gaTE4bk9wdGlvbnM7XG4gICAgaXNNb3VudGVkLmN1cnJlbnQgPSB0cnVlO1xuICAgIGlmICghcmVhZHkgJiYgIXVzZVN1c3BlbnNlKSB7XG4gICAgICBpZiAocHJvcHMubG5nKSB7XG4gICAgICAgIGxvYWRMYW5ndWFnZXMoaTE4biwgcHJvcHMubG5nLCBuYW1lc3BhY2VzLCAoKSA9PiB7XG4gICAgICAgICAgaWYgKGlzTW91bnRlZC5jdXJyZW50KSBzZXRUKGdldE5ld1QpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxvYWROYW1lc3BhY2VzKGkxOG4sIG5hbWVzcGFjZXMsICgpID0+IHtcbiAgICAgICAgICBpZiAoaXNNb3VudGVkLmN1cnJlbnQpIHNldFQoZ2V0TmV3VCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAocmVhZHkgJiYgcHJldmlvdXNKb2luZWROUyAmJiBwcmV2aW91c0pvaW5lZE5TICE9PSBqb2luZWROUyAmJiBpc01vdW50ZWQuY3VycmVudCkge1xuICAgICAgc2V0VChnZXROZXdUKTtcbiAgICB9XG4gICAgY29uc3QgYm91bmRSZXNldCA9ICgpID0+IHtcbiAgICAgIGlmIChpc01vdW50ZWQuY3VycmVudCkgc2V0VChnZXROZXdUKTtcbiAgICB9O1xuICAgIGlmIChiaW5kSTE4bikgaTE4bj8ub24oYmluZEkxOG4sIGJvdW5kUmVzZXQpO1xuICAgIGlmIChiaW5kSTE4blN0b3JlKSBpMThuPy5zdG9yZS5vbihiaW5kSTE4blN0b3JlLCBib3VuZFJlc2V0KTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgaXNNb3VudGVkLmN1cnJlbnQgPSBmYWxzZTtcbiAgICAgIGlmIChpMThuICYmIGJpbmRJMThuKSBiaW5kSTE4bj8uc3BsaXQoJyAnKS5mb3JFYWNoKGUgPT4gaTE4bi5vZmYoZSwgYm91bmRSZXNldCkpO1xuICAgICAgaWYgKGJpbmRJMThuU3RvcmUgJiYgaTE4bikgYmluZEkxOG5TdG9yZS5zcGxpdCgnICcpLmZvckVhY2goZSA9PiBpMThuLnN0b3JlLm9mZihlLCBib3VuZFJlc2V0KSk7XG4gICAgfTtcbiAgfSwgW2kxOG4sIGpvaW5lZE5TXSk7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGlzTW91bnRlZC5jdXJyZW50ICYmIHJlYWR5KSB7XG4gICAgICBzZXRUKGdldFQpO1xuICAgIH1cbiAgfSwgW2kxOG4sIGtleVByZWZpeCwgcmVhZHldKTtcbiAgY29uc3QgcmV0ID0gW3QsIGkxOG4sIHJlYWR5XTtcbiAgcmV0LnQgPSB0O1xuICByZXQuaTE4biA9IGkxOG47XG4gIHJldC5yZWFkeSA9IHJlYWR5O1xuICBpZiAocmVhZHkpIHJldHVybiByZXQ7XG4gIGlmICghcmVhZHkgJiYgIXVzZVN1c3BlbnNlKSByZXR1cm4gcmV0O1xuICB0aHJvdyBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICBpZiAocHJvcHMubG5nKSB7XG4gICAgICBsb2FkTGFuZ3VhZ2VzKGkxOG4sIHByb3BzLmxuZywgbmFtZXNwYWNlcywgKCkgPT4gcmVzb2x2ZSgpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9hZE5hbWVzcGFjZXMoaTE4biwgbmFtZXNwYWNlcywgKCkgPT4gcmVzb2x2ZSgpKTtcbiAgICB9XG4gIH0pO1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-i18next/dist/es/useTranslation.js\n"));

/***/ }),

/***/ "./node_modules/react-i18next/dist/es/utils.js":
/*!*****************************************************!*\
  !*** ./node_modules/react-i18next/dist/es/utils.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDisplayName: function() { return /* binding */ getDisplayName; },\n/* harmony export */   hasLoadedNamespace: function() { return /* binding */ hasLoadedNamespace; },\n/* harmony export */   isObject: function() { return /* binding */ isObject; },\n/* harmony export */   isString: function() { return /* binding */ isString; },\n/* harmony export */   loadLanguages: function() { return /* binding */ loadLanguages; },\n/* harmony export */   loadNamespaces: function() { return /* binding */ loadNamespaces; },\n/* harmony export */   warn: function() { return /* binding */ warn; },\n/* harmony export */   warnOnce: function() { return /* binding */ warnOnce; }\n/* harmony export */ });\nconst warn = (i18n, code, msg, rest) => {\n  const args = [msg, {\n    code,\n    ...(rest || {})\n  }];\n  if (i18n?.services?.logger?.forward) {\n    return i18n.services.logger.forward(args, 'warn', 'react-i18next::', true);\n  }\n  if (isString(args[0])) args[0] = `react-i18next:: ${args[0]}`;\n  if (i18n?.services?.logger?.warn) {\n    i18n.services.logger.warn(...args);\n  } else if (console?.warn) {\n    console.warn(...args);\n  }\n};\nconst alreadyWarned = {};\nconst warnOnce = (i18n, code, msg, rest) => {\n  if (isString(msg) && alreadyWarned[msg]) return;\n  if (isString(msg)) alreadyWarned[msg] = new Date();\n  warn(i18n, code, msg, rest);\n};\nconst loadedClb = (i18n, cb) => () => {\n  if (i18n.isInitialized) {\n    cb();\n  } else {\n    const initialized = () => {\n      setTimeout(() => {\n        i18n.off('initialized', initialized);\n      }, 0);\n      cb();\n    };\n    i18n.on('initialized', initialized);\n  }\n};\nconst loadNamespaces = (i18n, ns, cb) => {\n  i18n.loadNamespaces(ns, loadedClb(i18n, cb));\n};\nconst loadLanguages = (i18n, lng, ns, cb) => {\n  if (isString(ns)) ns = [ns];\n  if (i18n.options.preload && i18n.options.preload.indexOf(lng) > -1) return loadNamespaces(i18n, ns, cb);\n  ns.forEach(n => {\n    if (i18n.options.ns.indexOf(n) < 0) i18n.options.ns.push(n);\n  });\n  i18n.loadLanguages(lng, loadedClb(i18n, cb));\n};\nconst hasLoadedNamespace = (ns, i18n, options = {}) => {\n  if (!i18n.languages || !i18n.languages.length) {\n    warnOnce(i18n, 'NO_LANGUAGES', 'i18n.languages were undefined or empty', {\n      languages: i18n.languages\n    });\n    return true;\n  }\n  return i18n.hasLoadedNamespace(ns, {\n    lng: options.lng,\n    precheck: (i18nInstance, loadNotPending) => {\n      if (options.bindI18n && options.bindI18n.indexOf('languageChanging') > -1 && i18nInstance.services.backendConnector.backend && i18nInstance.isLanguageChangingTo && !loadNotPending(i18nInstance.isLanguageChangingTo, ns)) return false;\n    }\n  });\n};\nconst getDisplayName = Component => Component.displayName || Component.name || (isString(Component) && Component.length > 0 ? Component : 'Unknown');\nconst isString = obj => typeof obj === 'string';\nconst isObject = obj => typeof obj === 'object' && obj !== null;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtaTE4bmV4dC9kaXN0L2VzL3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxzREFBc0QsUUFBUTtBQUM5RDtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNPLGtEQUFrRDtBQUN6RDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDTztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWkxOG5leHQvZGlzdC9lcy91dGlscy5qcz8wZjc2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCB3YXJuID0gKGkxOG4sIGNvZGUsIG1zZywgcmVzdCkgPT4ge1xuICBjb25zdCBhcmdzID0gW21zZywge1xuICAgIGNvZGUsXG4gICAgLi4uKHJlc3QgfHwge30pXG4gIH1dO1xuICBpZiAoaTE4bj8uc2VydmljZXM/LmxvZ2dlcj8uZm9yd2FyZCkge1xuICAgIHJldHVybiBpMThuLnNlcnZpY2VzLmxvZ2dlci5mb3J3YXJkKGFyZ3MsICd3YXJuJywgJ3JlYWN0LWkxOG5leHQ6OicsIHRydWUpO1xuICB9XG4gIGlmIChpc1N0cmluZyhhcmdzWzBdKSkgYXJnc1swXSA9IGByZWFjdC1pMThuZXh0OjogJHthcmdzWzBdfWA7XG4gIGlmIChpMThuPy5zZXJ2aWNlcz8ubG9nZ2VyPy53YXJuKSB7XG4gICAgaTE4bi5zZXJ2aWNlcy5sb2dnZXIud2FybiguLi5hcmdzKTtcbiAgfSBlbHNlIGlmIChjb25zb2xlPy53YXJuKSB7XG4gICAgY29uc29sZS53YXJuKC4uLmFyZ3MpO1xuICB9XG59O1xuY29uc3QgYWxyZWFkeVdhcm5lZCA9IHt9O1xuZXhwb3J0IGNvbnN0IHdhcm5PbmNlID0gKGkxOG4sIGNvZGUsIG1zZywgcmVzdCkgPT4ge1xuICBpZiAoaXNTdHJpbmcobXNnKSAmJiBhbHJlYWR5V2FybmVkW21zZ10pIHJldHVybjtcbiAgaWYgKGlzU3RyaW5nKG1zZykpIGFscmVhZHlXYXJuZWRbbXNnXSA9IG5ldyBEYXRlKCk7XG4gIHdhcm4oaTE4biwgY29kZSwgbXNnLCByZXN0KTtcbn07XG5jb25zdCBsb2FkZWRDbGIgPSAoaTE4biwgY2IpID0+ICgpID0+IHtcbiAgaWYgKGkxOG4uaXNJbml0aWFsaXplZCkge1xuICAgIGNiKCk7XG4gIH0gZWxzZSB7XG4gICAgY29uc3QgaW5pdGlhbGl6ZWQgPSAoKSA9PiB7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgaTE4bi5vZmYoJ2luaXRpYWxpemVkJywgaW5pdGlhbGl6ZWQpO1xuICAgICAgfSwgMCk7XG4gICAgICBjYigpO1xuICAgIH07XG4gICAgaTE4bi5vbignaW5pdGlhbGl6ZWQnLCBpbml0aWFsaXplZCk7XG4gIH1cbn07XG5leHBvcnQgY29uc3QgbG9hZE5hbWVzcGFjZXMgPSAoaTE4biwgbnMsIGNiKSA9PiB7XG4gIGkxOG4ubG9hZE5hbWVzcGFjZXMobnMsIGxvYWRlZENsYihpMThuLCBjYikpO1xufTtcbmV4cG9ydCBjb25zdCBsb2FkTGFuZ3VhZ2VzID0gKGkxOG4sIGxuZywgbnMsIGNiKSA9PiB7XG4gIGlmIChpc1N0cmluZyhucykpIG5zID0gW25zXTtcbiAgaWYgKGkxOG4ub3B0aW9ucy5wcmVsb2FkICYmIGkxOG4ub3B0aW9ucy5wcmVsb2FkLmluZGV4T2YobG5nKSA+IC0xKSByZXR1cm4gbG9hZE5hbWVzcGFjZXMoaTE4biwgbnMsIGNiKTtcbiAgbnMuZm9yRWFjaChuID0+IHtcbiAgICBpZiAoaTE4bi5vcHRpb25zLm5zLmluZGV4T2YobikgPCAwKSBpMThuLm9wdGlvbnMubnMucHVzaChuKTtcbiAgfSk7XG4gIGkxOG4ubG9hZExhbmd1YWdlcyhsbmcsIGxvYWRlZENsYihpMThuLCBjYikpO1xufTtcbmV4cG9ydCBjb25zdCBoYXNMb2FkZWROYW1lc3BhY2UgPSAobnMsIGkxOG4sIG9wdGlvbnMgPSB7fSkgPT4ge1xuICBpZiAoIWkxOG4ubGFuZ3VhZ2VzIHx8ICFpMThuLmxhbmd1YWdlcy5sZW5ndGgpIHtcbiAgICB3YXJuT25jZShpMThuLCAnTk9fTEFOR1VBR0VTJywgJ2kxOG4ubGFuZ3VhZ2VzIHdlcmUgdW5kZWZpbmVkIG9yIGVtcHR5Jywge1xuICAgICAgbGFuZ3VhZ2VzOiBpMThuLmxhbmd1YWdlc1xuICAgIH0pO1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHJldHVybiBpMThuLmhhc0xvYWRlZE5hbWVzcGFjZShucywge1xuICAgIGxuZzogb3B0aW9ucy5sbmcsXG4gICAgcHJlY2hlY2s6IChpMThuSW5zdGFuY2UsIGxvYWROb3RQZW5kaW5nKSA9PiB7XG4gICAgICBpZiAob3B0aW9ucy5iaW5kSTE4biAmJiBvcHRpb25zLmJpbmRJMThuLmluZGV4T2YoJ2xhbmd1YWdlQ2hhbmdpbmcnKSA+IC0xICYmIGkxOG5JbnN0YW5jZS5zZXJ2aWNlcy5iYWNrZW5kQ29ubmVjdG9yLmJhY2tlbmQgJiYgaTE4bkluc3RhbmNlLmlzTGFuZ3VhZ2VDaGFuZ2luZ1RvICYmICFsb2FkTm90UGVuZGluZyhpMThuSW5zdGFuY2UuaXNMYW5ndWFnZUNoYW5naW5nVG8sIG5zKSkgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfSk7XG59O1xuZXhwb3J0IGNvbnN0IGdldERpc3BsYXlOYW1lID0gQ29tcG9uZW50ID0+IENvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBDb21wb25lbnQubmFtZSB8fCAoaXNTdHJpbmcoQ29tcG9uZW50KSAmJiBDb21wb25lbnQubGVuZ3RoID4gMCA/IENvbXBvbmVudCA6ICdVbmtub3duJyk7XG5leHBvcnQgY29uc3QgaXNTdHJpbmcgPSBvYmogPT4gdHlwZW9mIG9iaiA9PT0gJ3N0cmluZyc7XG5leHBvcnQgY29uc3QgaXNPYmplY3QgPSBvYmogPT4gdHlwZW9mIG9iaiA9PT0gJ29iamVjdCcgJiYgb2JqICE9PSBudWxsOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react-i18next/dist/es/utils.js\n"));

/***/ }),

/***/ "./node_modules/react-i18next/dist/es/withSSR.js":
/*!*******************************************************!*\
  !*** ./node_modules/react-i18next/dist/es/withSSR.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   withSSR: function() { return /* binding */ withSSR; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _useSSR_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useSSR.js */ \"./node_modules/react-i18next/dist/es/useSSR.js\");\n/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./context.js */ \"./node_modules/react-i18next/dist/es/context.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/react-i18next/dist/es/utils.js\");\n\n\n\n\nconst withSSR = () => function Extend(WrappedComponent) {\n  function I18nextWithSSR({\n    initialI18nStore,\n    initialLanguage,\n    ...rest\n  }) {\n    (0,_useSSR_js__WEBPACK_IMPORTED_MODULE_1__.useSSR)(initialI18nStore, initialLanguage);\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(WrappedComponent, {\n      ...rest\n    });\n  }\n  I18nextWithSSR.getInitialProps = (0,_context_js__WEBPACK_IMPORTED_MODULE_2__.composeInitialProps)(WrappedComponent);\n  I18nextWithSSR.displayName = `withI18nextSSR(${(0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.getDisplayName)(WrappedComponent)})`;\n  I18nextWithSSR.WrappedComponent = WrappedComponent;\n  return I18nextWithSSR;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtaTE4bmV4dC9kaXN0L2VzL3dpdGhTU1IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBc0M7QUFDRDtBQUNjO0FBQ1A7QUFDckM7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxJQUFJLGtEQUFNO0FBQ1YsV0FBVyxvREFBYTtBQUN4QjtBQUNBLEtBQUs7QUFDTDtBQUNBLG1DQUFtQyxnRUFBbUI7QUFDdEQsaURBQWlELHlEQUFjLG1CQUFtQjtBQUNsRjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWkxOG5leHQvZGlzdC9lcy93aXRoU1NSLmpzP2ViZTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlRWxlbWVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZVNTUiB9IGZyb20gJy4vdXNlU1NSLmpzJztcbmltcG9ydCB7IGNvbXBvc2VJbml0aWFsUHJvcHMgfSBmcm9tICcuL2NvbnRleHQuanMnO1xuaW1wb3J0IHsgZ2V0RGlzcGxheU5hbWUgfSBmcm9tICcuL3V0aWxzLmpzJztcbmV4cG9ydCBjb25zdCB3aXRoU1NSID0gKCkgPT4gZnVuY3Rpb24gRXh0ZW5kKFdyYXBwZWRDb21wb25lbnQpIHtcbiAgZnVuY3Rpb24gSTE4bmV4dFdpdGhTU1Ioe1xuICAgIGluaXRpYWxJMThuU3RvcmUsXG4gICAgaW5pdGlhbExhbmd1YWdlLFxuICAgIC4uLnJlc3RcbiAgfSkge1xuICAgIHVzZVNTUihpbml0aWFsSTE4blN0b3JlLCBpbml0aWFsTGFuZ3VhZ2UpO1xuICAgIHJldHVybiBjcmVhdGVFbGVtZW50KFdyYXBwZWRDb21wb25lbnQsIHtcbiAgICAgIC4uLnJlc3RcbiAgICB9KTtcbiAgfVxuICBJMThuZXh0V2l0aFNTUi5nZXRJbml0aWFsUHJvcHMgPSBjb21wb3NlSW5pdGlhbFByb3BzKFdyYXBwZWRDb21wb25lbnQpO1xuICBJMThuZXh0V2l0aFNTUi5kaXNwbGF5TmFtZSA9IGB3aXRoSTE4bmV4dFNTUigke2dldERpc3BsYXlOYW1lKFdyYXBwZWRDb21wb25lbnQpfSlgO1xuICBJMThuZXh0V2l0aFNTUi5XcmFwcGVkQ29tcG9uZW50ID0gV3JhcHBlZENvbXBvbmVudDtcbiAgcmV0dXJuIEkxOG5leHRXaXRoU1NSO1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-i18next/dist/es/withSSR.js\n"));

/***/ }),

/***/ "./node_modules/react-i18next/dist/es/withTranslation.js":
/*!***************************************************************!*\
  !*** ./node_modules/react-i18next/dist/es/withTranslation.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   withTranslation: function() { return /* binding */ withTranslation; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _useTranslation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useTranslation.js */ \"./node_modules/react-i18next/dist/es/useTranslation.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/react-i18next/dist/es/utils.js\");\n\n\n\nconst withTranslation = (ns, options = {}) => function Extend(WrappedComponent) {\n  function I18nextWithTranslation({\n    forwardedRef,\n    ...rest\n  }) {\n    const [t, i18n, ready] = (0,_useTranslation_js__WEBPACK_IMPORTED_MODULE_1__.useTranslation)(ns, {\n      ...rest,\n      keyPrefix: options.keyPrefix\n    });\n    const passDownProps = {\n      ...rest,\n      t,\n      i18n,\n      tReady: ready\n    };\n    if (options.withRef && forwardedRef) {\n      passDownProps.ref = forwardedRef;\n    } else if (!options.withRef && forwardedRef) {\n      passDownProps.forwardedRef = forwardedRef;\n    }\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(WrappedComponent, passDownProps);\n  }\n  I18nextWithTranslation.displayName = `withI18nextTranslation(${(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.getDisplayName)(WrappedComponent)})`;\n  I18nextWithTranslation.WrappedComponent = WrappedComponent;\n  const forwardRef = (props, ref) => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(I18nextWithTranslation, Object.assign({}, props, {\n    forwardedRef: ref\n  }));\n  return options.withRef ? (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(forwardRef) : I18nextWithTranslation;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtaTE4bmV4dC9kaXN0L2VzL3dpdGhUcmFuc2xhdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXFFO0FBQ2hCO0FBQ1Q7QUFDckMseUNBQXlDO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCw2QkFBNkIsa0VBQWM7QUFDM0M7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxXQUFXLG9EQUFhO0FBQ3hCO0FBQ0EsaUVBQWlFLHlEQUFjLG1CQUFtQjtBQUNsRztBQUNBLHFDQUFxQyxvREFBYSx5Q0FBeUM7QUFDM0Y7QUFDQSxHQUFHO0FBQ0gsMkJBQTJCLGlEQUFlO0FBQzFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1pMThuZXh0L2Rpc3QvZXMvd2l0aFRyYW5zbGF0aW9uLmpzPzlkNTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlRWxlbWVudCwgZm9yd2FyZFJlZiBhcyBmb3J3YXJkUmVmUmVhY3QgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VUcmFuc2xhdGlvbiB9IGZyb20gJy4vdXNlVHJhbnNsYXRpb24uanMnO1xuaW1wb3J0IHsgZ2V0RGlzcGxheU5hbWUgfSBmcm9tICcuL3V0aWxzLmpzJztcbmV4cG9ydCBjb25zdCB3aXRoVHJhbnNsYXRpb24gPSAobnMsIG9wdGlvbnMgPSB7fSkgPT4gZnVuY3Rpb24gRXh0ZW5kKFdyYXBwZWRDb21wb25lbnQpIHtcbiAgZnVuY3Rpb24gSTE4bmV4dFdpdGhUcmFuc2xhdGlvbih7XG4gICAgZm9yd2FyZGVkUmVmLFxuICAgIC4uLnJlc3RcbiAgfSkge1xuICAgIGNvbnN0IFt0LCBpMThuLCByZWFkeV0gPSB1c2VUcmFuc2xhdGlvbihucywge1xuICAgICAgLi4ucmVzdCxcbiAgICAgIGtleVByZWZpeDogb3B0aW9ucy5rZXlQcmVmaXhcbiAgICB9KTtcbiAgICBjb25zdCBwYXNzRG93blByb3BzID0ge1xuICAgICAgLi4ucmVzdCxcbiAgICAgIHQsXG4gICAgICBpMThuLFxuICAgICAgdFJlYWR5OiByZWFkeVxuICAgIH07XG4gICAgaWYgKG9wdGlvbnMud2l0aFJlZiAmJiBmb3J3YXJkZWRSZWYpIHtcbiAgICAgIHBhc3NEb3duUHJvcHMucmVmID0gZm9yd2FyZGVkUmVmO1xuICAgIH0gZWxzZSBpZiAoIW9wdGlvbnMud2l0aFJlZiAmJiBmb3J3YXJkZWRSZWYpIHtcbiAgICAgIHBhc3NEb3duUHJvcHMuZm9yd2FyZGVkUmVmID0gZm9yd2FyZGVkUmVmO1xuICAgIH1cbiAgICByZXR1cm4gY3JlYXRlRWxlbWVudChXcmFwcGVkQ29tcG9uZW50LCBwYXNzRG93blByb3BzKTtcbiAgfVxuICBJMThuZXh0V2l0aFRyYW5zbGF0aW9uLmRpc3BsYXlOYW1lID0gYHdpdGhJMThuZXh0VHJhbnNsYXRpb24oJHtnZXREaXNwbGF5TmFtZShXcmFwcGVkQ29tcG9uZW50KX0pYDtcbiAgSTE4bmV4dFdpdGhUcmFuc2xhdGlvbi5XcmFwcGVkQ29tcG9uZW50ID0gV3JhcHBlZENvbXBvbmVudDtcbiAgY29uc3QgZm9yd2FyZFJlZiA9IChwcm9wcywgcmVmKSA9PiBjcmVhdGVFbGVtZW50KEkxOG5leHRXaXRoVHJhbnNsYXRpb24sIE9iamVjdC5hc3NpZ24oe30sIHByb3BzLCB7XG4gICAgZm9yd2FyZGVkUmVmOiByZWZcbiAgfSkpO1xuICByZXR1cm4gb3B0aW9ucy53aXRoUmVmID8gZm9yd2FyZFJlZlJlYWN0KGZvcndhcmRSZWYpIDogSTE4bmV4dFdpdGhUcmFuc2xhdGlvbjtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/react-i18next/dist/es/withTranslation.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!"), __webpack_exec__("./node_modules/next/dist/client/router.js"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);